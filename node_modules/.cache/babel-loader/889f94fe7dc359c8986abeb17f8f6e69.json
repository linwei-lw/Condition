{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Tree\\SearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Tree\\SearchBox.vue","mtime":1662449411103},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { domLeftTop } from '@/components/util/Dom.js';\nimport { treeSearch } from '@/common/util/Trees.js';\nexport default {\n  props: {\n    placeholder: String,\n    hasOwnField: String,\n    // 如果指定该属性，查询对象必须有该属性，否则不查询该对象\n    searchFun: Function,\n    // 查询回调函数 参数(node, searchText) 返回true(符合条件)|false(不符合条件)\n    onItemSelected: Function,\n    // 选择某个查询的结果 参数(node)\n    border: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示边框\n    borderColor: {\n      type: String,\n      default: $_theme.border_color_light\n    },\n    // 边框颜色\n    radius: {\n      type: String,\n      default: $_theme.input_radius\n    },\n    // 边框圆角\n    treeBorder: {\n      type: Boolean,\n      default: false\n    },\n    // 树是否显示边框\n    showSearchIcon: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示搜索图标\n    height: {\n      type: Number,\n      default: $_theme.inputHeight\n    },\n    // 高度数值，单位是px\n    searchMax: {\n      type: Number,\n      default: 200\n    } // 搜索栏显示的最多数量\n\n  },\n  _timeout: null,\n  _tree: null,\n  _options: null,\n  _selectedInfo: null,\n  // {dom:xxx, index:yyy}\n  data: function data() {\n    return {\n      value: null,\n      showDropDown: false,\n      tip: null,\n      mytitle: null\n    };\n  },\n  watch: {\n    showDropDown: function showDropDown(v) {\n      var _this = this;\n\n      this.hideDropDown = this.hideDropDown || function (e) {\n        return _this.showDropDown = false;\n      };\n\n      v ? setTimeout(function () {\n        return document.addEventListener('click', _this.hideDropDown);\n      }, 10) : document.removeEventListener('click', this.hideDropDown);\n    },\n    tip: function tip(v) {\n      var _this2 = this;\n\n      this.hideTip = this.hideTip || function (e) {\n        return _this2.tip = null;\n      };\n\n      v ? setTimeout(function () {\n        return document.addEventListener('click', _this2.hideTip);\n      }, 10) : document.removeEventListener('click', this.hideTip);\n    }\n  },\n  methods: {\n    setTree: function setTree(tree) {\n      this._tree = tree;\n      if (!tree) return;\n      this._check = tree.setting.check && tree.setting.check.enable;\n      if (this._check) this.mytitle = $_L.get('用空格、逗号或分号隔开可精确查询多个') + '\\n' + $_L.get('按回车键勾选上所有查询结果');\n    },\n    showOrHideClearBtn: function showOrHideClearBtn(show) {\n      this.$refs.clearBtn.style.display = show && this.value ? '' : 'none';\n    },\n    handleClick: function handleClick() {\n      if (!this.value) {\n        return this.$emit('blankclick', this);\n      }\n\n      if (this._options && this._options.length > 0 && !this.showDropDown) {\n        this.styleDropDown();\n        this.showDropDown = true;\n      }\n    },\n    handleInput: function handleInput(event) {\n      this.value = event.target.value;\n      this.$emit('input', event.target.value);\n\n      if (!this.value) {\n        this.clear();\n        this.$emit('blankinput', this);\n        return;\n      }\n\n      this.showOrHideClearBtn(true);\n      this._timeout && clearTimeout(this._timeout);\n      this._timeout = setTimeout(this.onSearch, 500);\n    },\n    openOptions: function openOptions(options) {\n      this._options = options;\n      this.openDropDown();\n    },\n    onSearch: function onSearch() {\n      this._timeout = null;\n      if (!this._tree) return;\n\n      var _this$getSearchText = this.getSearchText(this.value),\n          _this$getSearchText2 = _slicedToArray(_this$getSearchText, 2),\n          text = _this$getSearchText2[0],\n          array = _this$getSearchText2[1];\n\n      this._options = treeSearch(this._tree, text, array, this.hasOwnField, this.searchFun, array ? array.length : this.searchMax);\n      this._selectedInfo = null;\n\n      if (this._options.length == 0) {\n        return this.showTip($_L.get('无结果'), '#f00');\n      }\n\n      this.tip = null;\n      this.openDropDown();\n    },\n    getSearchText: function getSearchText(text) {\n      text = (text || '').trim();\n      if (!text) return [null, null];\n      if (!this._check) return [text, null];\n      var array = text.split(/[ |,|;|；|，|　]/);\n      if (array.length == 1) return [text.toLowerCase(), null];\n      return [null, new Set(array)];\n    },\n    showTip: function showTip(tip, color) {\n      var _this3 = this;\n\n      this.showDropDown = false;\n      this.tip = tip;\n      this.$nextTick(function () {\n        var treeDom = _this3._tree.setting.treeObj.get(0).parentNode;\n\n        var treeHide = treeDom.offsetWidth == 0;\n\n        var _ref = treeHide ? domLeftTop(_this3.$el.parentNode) : domLeftTop(treeDom),\n            left = _ref.left,\n            top = _ref.top;\n\n        treeHide && (top = _this3.$el.offsetHeight + top);\n        !treeHide && left--;\n        var style = _this3.$refs.tip.style;\n        style.color = color;\n        style['z-index'] = $_theme.zindex();\n        style.top = top + 'px';\n        style.left = left + 'px';\n        style.width = (treeHide ? _this3.$el.parentNode.offsetWidth : treeDom.offsetWidth + 2) + 'px';\n      });\n    },\n    handleKeypress: function handleKeypress(event) {\n      var _this4 = this;\n\n      if ((event.keyCode || event.which) == 13) {\n        var setting = this._tree.setting;\n\n        if (setting.check && setting.check.enable && setting.check.hasChecked && this._options && this._options.length) {\n          //hasChecked:是否需要勾选上\n          setting = setting.treeId;\n          var n;\n\n          this._options.forEach(function (node) {\n            return (!node[setting] || node[setting].value != 1) && _this4._tree.checkNode(n = node, true, true, true);\n          });\n\n          n && this._tree.selectNode(n, false);\n          this.showDropDown = false;\n        }\n      }\n    },\n    openDropDown: function openDropDown() {\n      var _this5 = this;\n\n      // 显示或隐藏选项列表\n      this.showDropDown = true;\n      this.styleDropDown();\n      var dom = this.$refs.dropdown;\n      dom.innerHTML = '';\n      var span = [];\n\n      var _loop = function _loop(i, len, _node, _icon_url, _icon_css, _li, _name) {\n        _node = _this5._options[i];\n        span.push(\"<span style='width:30px;height:30px;background-position:center;\");\n        _icon_url = _this5.iconUrl(_node);\n        _icon_url && span.push(_icon_url);\n        span.push(\"' class='button\");\n        _icon_css = _this5.iconCss(_node);\n        _icon_css && span.push(\" \", _icon_css);\n        span.push(\"'></span>\");\n        span.push(_name = _this5.nameFunction(_node) || '');\n        _li = document.createElement(\"li\");\n        _li.className = _this5.$style.option_item;\n        _li.style['background-color'] = _this5.theme.alternate_colors[i % 2];\n        _li.innerHTML = span.join('');\n\n        _li.onclick = function (event) {\n          return _this5.onItemClick(event, i, _name);\n        };\n\n        span.length = 0;\n        dom.appendChild(_li);\n        node = _node;\n        icon_url = _icon_url;\n        icon_css = _icon_css;\n        li = _li;\n        name = _name;\n      };\n\n      for (var i = 0, len = this._options.length, node, icon_url, icon_css, li, name; i < len; i++) {\n        _loop(i, len, node, icon_url, icon_css, li, name);\n      }\n    },\n    styleDropDown: function styleDropDown() {\n      var treeDom = this._tree.setting.treeObj.get(0).parentNode;\n\n      var treeHide = treeDom.offsetWidth == 0;\n\n      var _ref2 = treeHide ? domLeftTop(this.$el.parentNode) : domLeftTop(treeDom),\n          left = _ref2.left,\n          top = _ref2.top;\n\n      treeHide && (top = this.$el.offsetHeight + top);\n      !treeHide && left--;\n      var style = this.$refs.dropdown.style;\n      style.color = '';\n      style['z-index'] = $_theme.zindex();\n      style.top = top + 'px';\n      style.left = left + 'px';\n      style.height = Math.min(treeHide ? document.documentElement.clientHeight - top - 21 : treeDom.offsetHeight - 1, this._options.length * 30) + 'px';\n      style.width = (treeHide ? this.$el.parentNode.offsetWidth - 2 : treeDom.offsetWidth) + 'px';\n    },\n    iconUrl: function iconUrl(node) {\n      if (!this._tree.setting.view.iconUrlFunction) return null;\n\n      var iconUrl = this._tree.setting.view.iconUrlFunction(node);\n\n      return iconUrl ? \"background-size:16px 16px;background-image:url(\" + iconUrl + \");\" : null;\n    },\n    iconCss: function iconCss(node) {\n      if (this._tree.setting.view.iconCssFunction) {\n        return this._tree.setting.view.iconCssFunction(node) || null;\n      }\n\n      return node[this._tree.setting.treeId].isParent ? 'ico_close' : 'ico_docu';\n    },\n    nameFunction: function nameFunction(node) {\n      return this._tree.setting.view.nameFunction ? this._tree.setting.view.nameFunction(node) : node[this._tree.setting.data.key.name];\n    },\n    onItemClick: function onItemClick(event, index, name) {\n      this.value = name.split(' ')[0];\n\n      if (this._selectedInfo) {\n        this._selectedInfo.dom.style.cssText = 'background-color:' + this.theme.alternate_colors[this._selectedInfo.index % 2];\n      }\n\n      this._selectedInfo = {\n        dom: event.target,\n        index: index\n      };\n      this._selectedInfo.dom.style.cssText = 'background-color:' + this.theme.selected_color + '!important';\n      var node = this._options[index];\n\n      this._tree.selectNode(node, false);\n\n      var setting = this._tree.setting,\n          tools = setting.treeObj.zTree._z.tools;\n\n      if (!setting.callback.beforeClick || tools.apply(setting.callback.beforeClick, [node], true) !== false) {\n        setting.treeObj.trigger(setting.treeObj.zTree.consts.event.CLICK, [null, node]);\n      }\n\n      if (setting.check && setting.check.enable && setting.check.hasChecked) {\n        //hasChecked:是否需要勾选上\n        this._tree.checkNode(node, true, true, true);\n      }\n\n      this.onItemSelected && this.onItemSelected(node);\n    },\n    clear: function clear() {\n      this._timeout && clearTimeout(this._timeout);\n      this._timeout = null;\n      this.showDropDown = false;\n      this.$refs.dropdown.innerHTML = '';\n      this.value = this.tip = null;\n      this._options = null;\n      this._selectedInfo = null;\n      this.showOrHideClearBtn(false);\n    }\n  }\n};",{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  <div\r\n    :class=\"[$style.container, border && $style.border]\" \r\n    :style=\"{height:`${height}px`, borderColor:borderColor, borderRadius:radius}\" \r\n    tabindex=\"0\"\r\n    @mouseenter=\"showOrHideClearBtn(true)\"\r\n    @mouseleave=\"showOrHideClearBtn(false)\">\r\n    \r\n    <!--搜索图标显示-->\r\n    <i :class=\"$style.search_icon\" class=\"el-icon-search\" v-if=\"showSearchIcon\"></i>\r\n\r\n    <slot></slot>\r\n\r\n    <!--clear按钮显示-->\r\n    <div :class=\"$style.clear\" style=\"display:none;\" ref=\"clearBtn\">\r\n      <i></i> <i @click=\"clear\" class=\"el-icon-close\"></i>\r\n    </div>\r\n\r\n    <!--input显示-->\r\n    <div style=\"overflow:hidden;\">\r\n      <input\r\n        type=\"text\"\r\n        :class=\"$style.input\"\r\n        :placeholder=\"placeholder || $_L.get('输入进行查询')\"\r\n        :value=\"value\"\r\n        :title=\"mytitle\"\r\n        @focus=\"$el.style['border-color'] = theme.color;$el.style['z-index'] = theme.zindex()\"\r\n        @blur=\"$el.style['border-color'] = borderColor;$el.style['z-index'] = ''\"\r\n        @click=\"handleClick\"\r\n        @input=\"handleInput\"\r\n        @keypress=\"handleKeypress($event)\">\r\n    </div>\r\n\r\n    <!--弹出搜索结果显示-->\r\n    <ul ref=\"dropdown\" v-show=\"showDropDown\" :class=\"$style.dropdown\" class=\"ztree\" style=\"padding:0; min-width:0;\" :style=\"[{borderColor:theme.border_color_dark}, theme.popup, {'overflowY':'auto'}]\"></ul>\r\n\r\n    <!--弹出提示-->\r\n    <ul ref=\"tip\" v-if=\"tip\" :class=\"$style.dropdown\" style=\"text-align:center; height:32px; line-height:31px;\" :style=\"[{borderColor:theme.border_color_dark}, theme.popup]\">\r\n        {{tip}}\r\n    </ul>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { domLeftTop } from '@/components/util/Dom.js';\r\n  import { treeSearch } from '@/common/util/Trees.js';\r\n  \r\n  export default {\r\n    props: {\r\n      placeholder: String,\r\n      hasOwnField: String,                                    // 如果指定该属性，查询对象必须有该属性，否则不查询该对象\r\n      searchFun: Function,                                    // 查询回调函数 参数(node, searchText) 返回true(符合条件)|false(不符合条件)\r\n      onItemSelected: Function,                               // 选择某个查询的结果 参数(node)\r\n      border: { type: Boolean, default: false },              // 是否显示边框\r\n      borderColor: { type: String, default: $_theme.border_color_light},            // 边框颜色\r\n      radius: { type: String,  default: $_theme.input_radius},// 边框圆角\r\n      treeBorder: { type: Boolean, default: false },          // 树是否显示边框\r\n      showSearchIcon: { type: Boolean, default: true },       // 是否显示搜索图标\r\n      height: { type: Number,  default: $_theme.inputHeight },// 高度数值，单位是px\r\n      searchMax:{ type: Number, default: 200  },              // 搜索栏显示的最多数量\r\n    },\r\n\r\n    _timeout: null,\r\n    _tree: null,\r\n    _options: null,\r\n    _selectedInfo: null,// {dom:xxx, index:yyy}\r\n\r\n    data() {\r\n      return {\r\n        value: null,\r\n        showDropDown: false,\r\n        tip: null,\r\n        mytitle: null,\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      showDropDown: function(v) {\r\n        this.hideDropDown = this.hideDropDown || (e => this.showDropDown = false);\r\n        v ? setTimeout(()=>document.addEventListener('click', this.hideDropDown), 10) : document.removeEventListener('click', this.hideDropDown);\r\n      },\r\n      tip: function(v) {\r\n        this.hideTip = this.hideTip || (e => this.tip = null);\r\n        v ? setTimeout(()=>document.addEventListener('click', this.hideTip), 10) : document.removeEventListener('click', this.hideTip);\r\n      }\r\n    },\r\n    methods: {\r\n      setTree(tree) {\r\n        this._tree = tree;\r\n        if(!tree) return;\r\n        this._check = tree.setting.check && tree.setting.check.enable;\r\n        if (this._check) this.mytitle = $_L.get('用空格、逗号或分号隔开可精确查询多个') +'\\n' + $_L.get('按回车键勾选上所有查询结果');\r\n      },\r\n      showOrHideClearBtn(show) {\r\n        this.$refs.clearBtn.style.display = (show && this.value) ? '' : 'none';\r\n      },\r\n      handleClick() {\r\n        if (!this.value) {\r\n          return this.$emit('blankclick', this);\r\n        }\r\n        if (this._options && this._options.length > 0 && !this.showDropDown) {\r\n          this.styleDropDown();\r\n          this.showDropDown = true;\r\n        }\r\n      },\r\n      handleInput(event) {\r\n        this.value = event.target.value;\r\n        this.$emit('input', event.target.value);\r\n        if (!this.value) {\r\n          this.clear();\r\n          this.$emit('blankinput', this);\r\n          return;\r\n        }\r\n        this.showOrHideClearBtn(true);\r\n        this._timeout && clearTimeout(this._timeout);\r\n        this._timeout = setTimeout(this.onSearch, 500);\r\n      },\r\n      openOptions(options) {\r\n        this._options = options;\r\n        this.openDropDown();\r\n      },\r\n      onSearch() {\r\n        this._timeout = null;\r\n        if (!this._tree) return;\r\n        let [text, array] = this.getSearchText(this.value);\r\n        this._options = treeSearch(this._tree, text, array, this.hasOwnField, this.searchFun, array ? array.length : this.searchMax);\r\n        this._selectedInfo = null;\r\n        if (this._options.length == 0) {\r\n          return this.showTip($_L.get('无结果'), '#f00');\r\n        }\r\n        this.tip = null;\r\n        this.openDropDown();\r\n      },\r\n      getSearchText(text) {\r\n        text = (text||'').trim();\r\n        if (!text) return [null, null];\r\n        if (!this._check) return [text, null];\r\n        let array = text.split(/[ |,|;|；|，|　]/);\r\n        if (array.length == 1) return [text.toLowerCase(), null];\r\n        return [null, new Set(array)];\r\n      },\r\n      showTip(tip, color) {\r\n        this.showDropDown = false;\r\n        this.tip = tip;\r\n        this.$nextTick(() => {\r\n          let treeDom = this._tree.setting.treeObj.get(0).parentNode;\r\n          let treeHide = treeDom.offsetWidth == 0;\r\n          let {left, top} = treeHide ? domLeftTop(this.$el.parentNode) : domLeftTop(treeDom);\r\n          treeHide && (top = this.$el.offsetHeight + top);\r\n          !treeHide && left--;\r\n          let style = this.$refs.tip.style;\r\n          style.color = color;\r\n          style['z-index'] = $_theme.zindex();\r\n          style.top = top + 'px';\r\n          style.left = left + 'px';\r\n          style.width = (treeHide ? this.$el.parentNode.offsetWidth : treeDom.offsetWidth + 2) + 'px';\r\n        });\r\n      },\r\n      handleKeypress(event) {\r\n        if ((event.keyCode || event.which) == 13) {\r\n          let setting = this._tree.setting;\r\n          if (setting.check && setting.check.enable && setting.check.hasChecked && this._options && this._options.length) {//hasChecked:是否需要勾选上\r\n            setting = setting.treeId;\r\n            let n;\r\n            this._options.forEach(node=>(!node[setting] || node[setting].value!=1) && this._tree.checkNode(n=node, true, true, true));\r\n            n && this._tree.selectNode(n, false);\r\n            this.showDropDown = false;\r\n          }\r\n        }\r\n      },\r\n      openDropDown() {// 显示或隐藏选项列表\r\n        this.showDropDown = true;\r\n        this.styleDropDown();\r\n        let dom = this.$refs.dropdown;\r\n        dom.innerHTML = '';\r\n        let span = [];\r\n        for (let i=0, len=this._options.length, node, icon_url, icon_css, li, name; i<len; i++) {\r\n          node = this._options[i];\r\n          \r\n          span.push(\"<span style='width:30px;height:30px;background-position:center;\");\r\n          icon_url = this.iconUrl(node);\r\n          icon_url && span.push(icon_url);\r\n          span.push(\"' class='button\");\r\n          icon_css = this.iconCss(node);\r\n          icon_css && span.push(\" \", icon_css);\r\n          span.push(\"'></span>\");\r\n          span.push(name = this.nameFunction(node) || '');\r\n\r\n          li = document.createElement(\"li\");\r\n          li.className = this.$style.option_item;\r\n          li.style['background-color'] = this.theme.alternate_colors[i%2];\r\n          li.innerHTML = span.join('');\r\n          li.onclick = event => this.onItemClick(event, i, name);\r\n          span.length = 0;\r\n\r\n          dom.appendChild(li);\r\n        }\r\n      },\r\n      styleDropDown() {\r\n        let treeDom = this._tree.setting.treeObj.get(0).parentNode;\r\n        let treeHide = treeDom.offsetWidth == 0;\r\n        let {left, top} = treeHide ? domLeftTop(this.$el.parentNode) : domLeftTop(treeDom);\r\n        treeHide && (top = this.$el.offsetHeight + top);\r\n        !treeHide && left--;\r\n        let style = this.$refs.dropdown.style;\r\n        style.color = '';\r\n        style['z-index'] = $_theme.zindex();\r\n        style.top = top + 'px';\r\n        style.left = left + 'px';\r\n        style.height = Math.min(treeHide ? (document.documentElement.clientHeight - top - 21) : (treeDom.offsetHeight-1), this._options.length * 30) + 'px';\r\n        style.width = (treeHide ? this.$el.parentNode.offsetWidth-2 : treeDom.offsetWidth) + 'px';\r\n      },\r\n      iconUrl(node) {\r\n        if (!this._tree.setting.view.iconUrlFunction) return null;\r\n        let iconUrl = this._tree.setting.view.iconUrlFunction(node);\r\n        return iconUrl ? (\"background-size:16px 16px;background-image:url(\" + iconUrl + \");\") : null;\r\n      },\r\n      iconCss(node) {\r\n        if (this._tree.setting.view.iconCssFunction) {\r\n          return this._tree.setting.view.iconCssFunction(node) || null;\r\n        }\r\n        return node[this._tree.setting.treeId].isParent ? 'ico_close' : 'ico_docu';\r\n      },\r\n      nameFunction(node) {\r\n        return this._tree.setting.view.nameFunction ? this._tree.setting.view.nameFunction(node) : node[this._tree.setting.data.key.name];\r\n      },\r\n      onItemClick(event, index, name) {\r\n        this.value = name.split(' ')[0];\r\n        if (this._selectedInfo) {\r\n          this._selectedInfo.dom.style.cssText = 'background-color:' + this.theme.alternate_colors[this._selectedInfo.index%2];\r\n        }\r\n        this._selectedInfo = {dom: event.target, index: index};\r\n        this._selectedInfo.dom.style.cssText = 'background-color:' + this.theme.selected_color + '!important';\r\n        let node = this._options[index];\r\n        this._tree.selectNode(node, false);\r\n        let setting = this._tree.setting, tools = setting.treeObj.zTree._z.tools;\r\n        if (!setting.callback.beforeClick || tools.apply(setting.callback.beforeClick, [node], true) !== false) {\r\n          setting.treeObj.trigger(setting.treeObj.zTree.consts.event.CLICK, [null, node]);\r\n        }\r\n        if (setting.check && setting.check.enable && setting.check.hasChecked) {//hasChecked:是否需要勾选上\r\n          this._tree.checkNode(node, true, true, true);\r\n        }\r\n        this.onItemSelected && this.onItemSelected(node);\r\n      },\r\n      clear() {\r\n        this._timeout && clearTimeout(this._timeout);\r\n        this._timeout = null;\r\n        this.showDropDown = false;\r\n        this.$refs.dropdown.innerHTML = '';\r\n        this.value = this.tip = null;\r\n        this._options = null;\r\n        this._selectedInfo = null;\r\n        this.showOrHideClearBtn(false);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    overflow: hidden;\r\n    outline: none;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    position: relative;\r\n    background-color: #fff;\r\n  }\r\n  .container > *:not(ul) {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  \r\n  /* 搜索图标 */\r\n  .search_icon {\r\n    float: left;\r\n    font-size: 16px;\r\n    padding-left: 6px;\r\n  }\r\n  /* 输入框 */\r\n  .input {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: inline-block;\r\n    border: 0;\r\n    outline: 0;\r\n    padding: 0 8px;\r\n  }\r\n  .input::placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .input::-webkit-input-placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .input:-ms-input-placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .input::-ms-input-placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  /* 清空按钮 */\r\n  .clear {\r\n    float: right;\r\n    position: relative;\r\n    width: 0px;\r\n  }\r\n  .clear > i {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    left: -20px;\r\n    width: 20px;\r\n    font-size: 16px;\r\n    line-height: 0;\r\n  }\r\n  .clear > i:first-child {\r\n    top: 0;\r\n    background-color: #fff;\r\n    height: calc(100% - 2px);\r\n  }\r\n  /* 下拉容器 */\r\n  .dropdown {\r\n    position: fixed;\r\n    padding: 0;\r\n    margin: 0;\r\n    background-color: #fff;\r\n    margin-block-start: 0;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-top-width: 0;\r\n    box-shadow: 0px 0px 5px 0px RGBA(0, 0, 0, 0.2);\r\n  }\r\n  .option_item {\r\n    height: 30px;\r\n    cursor: default;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .option_item:hover {\r\n    background-color: #FCF0C1 !important;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components/Tree"}]}