{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\modal\\src\\modal.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\modal\\src\\modal.js","mtime":1635230121053},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport XEUtils from 'xe-utils';\nimport { UtilTools, DomTools, GlobalEvent } from \"../../tools\";\nexport var allActivedModals = [];\nexport var msgQueue = [];\nexport default {\n  name: 'VxeModal',\n  mixins: [vSize],\n  props: {\n    value: Boolean,\n    id: String,\n    type: {\n      type: String,\n      default: 'modal'\n    },\n    loading: {\n      type: Boolean,\n      default: null\n    },\n    status: String,\n    iconStatus: String,\n    className: String,\n    top: {\n      type: [Number, String],\n      default: function _default() {\n        return GlobalConfig.modal.top;\n      }\n    },\n    position: [String, Object],\n    title: String,\n    duration: {\n      type: [Number, String],\n      default: function _default() {\n        return GlobalConfig.modal.duration;\n      }\n    },\n    // 请使用 content\n    message: [String, Function],\n    content: [String, Function],\n    cancelButtonText: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.modal.cancelButtonText;\n      }\n    },\n    confirmButtonText: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.modal.confirmButtonText;\n      }\n    },\n    lockView: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.lockView;\n      }\n    },\n    lockScroll: Boolean,\n    mask: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.mask;\n      }\n    },\n    maskClosable: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.maskClosable;\n      }\n    },\n    escClosable: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.escClosable;\n      }\n    },\n    resize: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.resize;\n      }\n    },\n    showHeader: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.showHeader;\n      }\n    },\n    showFooter: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.showFooter;\n      }\n    },\n    showZoom: {\n      type: Boolean,\n      default: null\n    },\n    showClose: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.showClose;\n      }\n    },\n    dblclickZoom: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.dblclickZoom;\n      }\n    },\n    width: [Number, String],\n    height: [Number, String],\n    minWidth: {\n      type: [Number, String],\n      default: function _default() {\n        return GlobalConfig.modal.minWidth;\n      }\n    },\n    minHeight: {\n      type: [Number, String],\n      default: function _default() {\n        return GlobalConfig.modal.minHeight;\n      }\n    },\n    zIndex: Number,\n    marginSize: {\n      type: [Number, String],\n      default: GlobalConfig.modal.marginSize\n    },\n    fullscreen: Boolean,\n    remember: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.remember;\n      }\n    },\n    destroyOnClose: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.destroyOnClose;\n      }\n    },\n    showTitleOverflow: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.showTitleOverflow;\n      }\n    },\n    transfer: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.transfer;\n      }\n    },\n    storage: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.storage;\n      }\n    },\n    storageKey: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.modal.storageKey;\n      }\n    },\n    animat: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.modal.animat;\n      }\n    },\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.modal.size || GlobalConfig.size;\n      }\n    },\n    beforeHideMethod: {\n      type: Function,\n      default: function _default() {\n        return GlobalConfig.modal.beforeHideMethod;\n      }\n    },\n    slots: Object,\n    events: Object\n  },\n  data: function data() {\n    return {\n      inited: false,\n      visible: false,\n      contentVisible: false,\n      modalTop: 0,\n      modalZindex: 0,\n      zoomLocat: null,\n      firstOpen: false\n    };\n  },\n  computed: {\n    isMsg: function isMsg() {\n      return this.type === 'message';\n    }\n  },\n  watch: {\n    width: function width() {\n      this.recalculate();\n    },\n    height: function height() {\n      this.recalculate();\n    },\n    value: function value(visible) {\n      this[visible ? 'open' : 'close']('model');\n    }\n  },\n  created: function created() {\n    if (this.storage && !this.id) {\n      UtilTools.error('vxe.error.reqProp', ['modal.id']);\n    }\n  },\n  mounted: function mounted() {\n    var $listeners = this.$listeners,\n        _this$events = this.events,\n        events = _this$events === void 0 ? {} : _this$events;\n\n    if (this.value) {\n      this.open();\n    }\n\n    this.recalculate();\n\n    if (this.escClosable) {\n      GlobalEvent.on(this, 'keydown', this.handleGlobalKeydownEvent);\n    } // 触发 inserted 事件\n\n\n    var type = 'inserted';\n    var params = {\n      type: type,\n      $modal: this,\n      $event: {\n        type: type\n      }\n    };\n\n    if ($listeners.inserted) {\n      this.$emit('inserted', params);\n    } else if (events.inserted) {\n      events.inserted.call(this, params);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    var $el = this.$el;\n    GlobalEvent.off(this, 'keydown');\n    this.removeMsgQueue();\n\n    if ($el.parentNode === document.body) {\n      $el.parentNode.removeChild($el);\n    }\n  },\n  render: function render(h) {\n    var _ref,\n        _this = this;\n\n    var _e = this._e,\n        $scopedSlots = this.$scopedSlots,\n        _this$slots = this.slots,\n        slots = _this$slots === void 0 ? {} : _this$slots,\n        inited = this.inited,\n        vSize = this.vSize,\n        className = this.className,\n        type = this.type,\n        resize = this.resize,\n        showClose = this.showClose,\n        showZoom = this.showZoom,\n        animat = this.animat,\n        loading = this.loading,\n        status = this.status,\n        iconStatus = this.iconStatus,\n        showFooter = this.showFooter,\n        zoomLocat = this.zoomLocat,\n        modalTop = this.modalTop,\n        dblclickZoom = this.dblclickZoom,\n        contentVisible = this.contentVisible,\n        visible = this.visible,\n        title = this.title,\n        lockScroll = this.lockScroll,\n        lockView = this.lockView,\n        mask = this.mask,\n        isMsg = this.isMsg,\n        showTitleOverflow = this.showTitleOverflow,\n        destroyOnClose = this.destroyOnClose;\n    var content = this.content || this.message;\n    var defaultSlot = $scopedSlots.default || slots.default;\n    var footerSlot = $scopedSlots.footer || slots.footer;\n    var headerSlot = $scopedSlots.header || slots.header;\n    var titleSlot = $scopedSlots.title || slots.title;\n    var headerOns = {\n      mousedown: this.mousedownEvent\n    };\n\n    if (showZoom && dblclickZoom && type === 'modal') {\n      headerOns.dblclick = this.toggleZoomEvent;\n    }\n\n    return h('div', {\n      class: ['vxe-modal--wrapper', \"type--\".concat(type), className || '', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, \"status--\".concat(status), status), _defineProperty(_ref, 'is--animat', animat), _defineProperty(_ref, 'lock--scroll', lockScroll), _defineProperty(_ref, 'lock--view', lockView), _defineProperty(_ref, 'is--resize', resize), _defineProperty(_ref, 'is--mask', mask), _defineProperty(_ref, 'is--maximize', zoomLocat), _defineProperty(_ref, 'is--visible', contentVisible), _defineProperty(_ref, 'is--active', visible), _defineProperty(_ref, 'is--loading', loading), _ref)],\n      style: {\n        zIndex: this.modalZindex,\n        top: modalTop ? \"\".concat(modalTop, \"px\") : null\n      },\n      on: {\n        click: this.selfClickEvent\n      }\n    }, [h('div', {\n      class: 'vxe-modal--box',\n      on: {\n        mousedown: this.boxMousedownEvent\n      },\n      ref: 'modalBox'\n    }, [this.showHeader ? h('div', {\n      class: ['vxe-modal--header', !isMsg && showTitleOverflow ? 'is--ellipsis' : ''],\n      on: headerOns\n    }, headerSlot ? !inited || destroyOnClose && !visible ? [] : headerSlot.call(this, {\n      $modal: this\n    }, h) : [titleSlot ? titleSlot.call(this, {\n      $modal: this\n    }, h) : h('span', {\n      class: 'vxe-modal--title'\n    }, title ? UtilTools.getFuncText(title) : GlobalConfig.i18n('vxe.alert.title')), showZoom ? h('i', {\n      class: ['vxe-modal--zoom-btn', 'trigger--btn', zoomLocat ? GlobalConfig.icon.MODAL_ZOOM_OUT : GlobalConfig.icon.MODAL_ZOOM_IN],\n      attrs: {\n        title: GlobalConfig.i18n(\"vxe.modal.zoom\".concat(zoomLocat ? 'Out' : 'In'))\n      },\n      on: {\n        click: this.toggleZoomEvent\n      }\n    }) : _e(), showClose ? h('i', {\n      class: ['vxe-modal--close-btn', 'trigger--btn', GlobalConfig.icon.MODAL_CLOSE],\n      attrs: {\n        title: GlobalConfig.i18n('vxe.modal.close')\n      },\n      on: {\n        click: this.closeEvent\n      }\n    }) : _e()]) : null, h('div', {\n      class: 'vxe-modal--body'\n    }, [status ? h('div', {\n      class: 'vxe-modal--status-wrapper'\n    }, [h('i', {\n      class: ['vxe-modal--status-icon', iconStatus || GlobalConfig.icon[\"MODAL_\".concat(status).toLocaleUpperCase()]]\n    })]) : null, h('div', {\n      class: 'vxe-modal--content'\n    }, defaultSlot ? !inited || destroyOnClose && !visible ? [] : defaultSlot.call(this, {\n      $modal: this\n    }, h) : UtilTools.getFuncText(content)), !isMsg ? h('div', {\n      class: ['vxe-loading', {\n        'is--visible': loading\n      }]\n    }, [h('div', {\n      class: 'vxe-loading--spinner'\n    })]) : null]), showFooter ? h('div', {\n      class: 'vxe-modal--footer'\n    }, footerSlot ? !inited || destroyOnClose && !visible ? [] : footerSlot.call(this, {\n      $modal: this\n    }, h) : [type === 'confirm' ? h('vxe-button', {\n      ref: 'cancelBtn',\n      on: {\n        click: this.cancelEvent\n      }\n    }, this.cancelButtonText || GlobalConfig.i18n('vxe.button.cancel')) : null, h('vxe-button', {\n      ref: 'confirmBtn',\n      props: {\n        status: 'primary'\n      },\n      on: {\n        click: this.confirmEvent\n      }\n    }, this.confirmButtonText || GlobalConfig.i18n('vxe.button.confirm'))]) : null, !isMsg && resize ? h('span', {\n      class: 'vxe-modal--resize'\n    }, ['wl', 'wr', 'swst', 'sest', 'st', 'swlb', 'selb', 'sb'].map(function (type) {\n      return h('span', {\n        class: \"\".concat(type, \"-resize\"),\n        attrs: {\n          type: type\n        },\n        on: {\n          mousedown: _this.dragEvent\n        }\n      });\n    })) : null])]);\n  },\n  methods: {\n    recalculate: function recalculate() {\n      var width = this.width,\n          height = this.height;\n      var modalBoxElem = this.getBox();\n      modalBoxElem.style.width = width ? isNaN(width) ? width : \"\".concat(width, \"px\") : null;\n      modalBoxElem.style.height = height ? isNaN(height) ? height : \"\".concat(height, \"px\") : null;\n      return this.$nextTick();\n    },\n    selfClickEvent: function selfClickEvent(evnt) {\n      if (this.maskClosable && evnt.target === this.$el) {\n        var type = 'mask';\n        this.close(type);\n      }\n    },\n    updateZindex: function updateZindex() {\n      var zIndex = this.zIndex,\n          modalZindex = this.modalZindex;\n\n      if (zIndex) {\n        this.modalZindex = zIndex;\n      } else if (modalZindex < UtilTools.getLastZIndex()) {\n        this.modalZindex = UtilTools.nextZIndex();\n      }\n    },\n    closeEvent: function closeEvent(evnt) {\n      var type = 'close';\n      this.$emit(type, {\n        type: type,\n        $modal: this,\n        $event: evnt\n      });\n      this.close(type);\n    },\n    confirmEvent: function confirmEvent(evnt) {\n      var type = 'confirm';\n      this.$emit(type, {\n        type: type,\n        $modal: this,\n        $event: evnt\n      });\n      this.close(type);\n    },\n    cancelEvent: function cancelEvent(evnt) {\n      var type = 'cancel';\n      this.$emit(type, {\n        type: type,\n        $modal: this,\n        $event: evnt\n      });\n      this.close(type);\n    },\n    open: function open() {\n      var _this2 = this;\n\n      var $refs = this.$refs,\n          _this$events2 = this.events,\n          events = _this$events2 === void 0 ? {} : _this$events2,\n          inited = this.inited,\n          duration = this.duration,\n          visible = this.visible,\n          isMsg = this.isMsg,\n          remember = this.remember,\n          showFooter = this.showFooter;\n\n      if (!inited) {\n        this.inited = true;\n\n        if (this.transfer) {\n          document.body.appendChild(this.$el);\n        }\n      }\n\n      if (!visible) {\n        if (!remember) {\n          this.recalculate();\n        }\n\n        this.visible = true;\n        this.contentVisible = false;\n        this.updateZindex();\n        allActivedModals.push(this);\n        setTimeout(function () {\n          _this2.contentVisible = true;\n\n          _this2.$nextTick(function () {\n            if (showFooter) {\n              var operBtn = $refs.confirmBtn || $refs.cancelBtn;\n\n              if (operBtn) {\n                operBtn.focus();\n              }\n            }\n\n            var type = '';\n            var params = {\n              type: type,\n              $modal: _this2\n            };\n\n            if (events.show) {\n              events.show.call(_this2, params);\n            } else {\n              _this2.$emit('input', true);\n\n              _this2.$emit('show', params);\n            }\n          });\n        }, 10);\n\n        if (isMsg) {\n          this.addMsgQueue();\n\n          if (duration !== -1) {\n            setTimeout(function () {\n              return _this2.close('close');\n            }, XEUtils.toNumber(duration));\n          }\n        } else {\n          this.$nextTick(function () {\n            var firstOpen = _this2.firstOpen,\n                fullscreen = _this2.fullscreen;\n\n            if (!remember || !firstOpen) {\n              _this2.updatePosition().then(function () {\n                setTimeout(function () {\n                  return _this2.updatePosition();\n                }, 20);\n              });\n            }\n\n            if (!firstOpen) {\n              _this2.firstOpen = true;\n\n              if (_this2.hasPosStorage()) {\n                _this2.restorePosStorage();\n              } else if (fullscreen) {\n                _this2.$nextTick(function () {\n                  return _this2.maximize();\n                });\n              }\n            }\n          });\n        }\n      }\n    },\n    addMsgQueue: function addMsgQueue() {\n      if (msgQueue.indexOf(this) === -1) {\n        msgQueue.push(this);\n      }\n\n      this.updateStyle();\n    },\n    removeMsgQueue: function removeMsgQueue() {\n      var _this3 = this;\n\n      if (msgQueue.indexOf(this) > -1) {\n        XEUtils.remove(msgQueue, function (comp) {\n          return comp === _this3;\n        });\n      }\n\n      this.updateStyle();\n    },\n    updateStyle: function updateStyle() {\n      this.$nextTick(function () {\n        var offsetTop = 0;\n        msgQueue.forEach(function (comp) {\n          offsetTop += XEUtils.toNumber(comp.top);\n          comp.modalTop = offsetTop;\n          offsetTop += comp.$refs.modalBox.clientHeight;\n        });\n      });\n    },\n    updatePosition: function updatePosition() {\n      var _this4 = this;\n\n      return this.$nextTick().then(function () {\n        var marginSize = _this4.marginSize,\n            position = _this4.position;\n\n        var modalBoxElem = _this4.getBox();\n\n        var clientVisibleWidth = document.documentElement.clientWidth || document.body.clientWidth;\n        var clientVisibleHeight = document.documentElement.clientHeight || document.body.clientHeight;\n        var isPosCenter = position === 'center';\n\n        var _ref2 = isPosCenter ? {\n          top: position,\n          left: position\n        } : Object.assign({}, position),\n            top = _ref2.top,\n            left = _ref2.left;\n\n        var topCenter = isPosCenter || top === 'center';\n        var leftCenter = isPosCenter || left === 'center';\n        var posTop = '';\n        var posLeft = '';\n\n        if (left && !leftCenter) {\n          posLeft = isNaN(left) ? left : \"\".concat(left, \"px\");\n        } else {\n          posLeft = \"\".concat(Math.max(marginSize, clientVisibleWidth / 2 - modalBoxElem.offsetWidth / 2), \"px\");\n        }\n\n        if (top && !topCenter) {\n          posTop = isNaN(top) ? top : \"\".concat(top, \"px\");\n        } else {\n          posTop = \"\".concat(Math.max(marginSize, clientVisibleHeight / 2 - modalBoxElem.offsetHeight / 2), \"px\");\n        }\n\n        modalBoxElem.style.top = posTop;\n        modalBoxElem.style.left = posLeft;\n      });\n    },\n    close: function close(type) {\n      var _this5 = this;\n\n      var _this$events3 = this.events,\n          events = _this$events3 === void 0 ? {} : _this$events3,\n          remember = this.remember,\n          visible = this.visible,\n          isMsg = this.isMsg,\n          beforeHideMethod = this.beforeHideMethod;\n      var params = {\n        type: type,\n        $modal: this\n      };\n\n      if (visible) {\n        Promise.resolve(beforeHideMethod ? beforeHideMethod(params) : null).then(function (rest) {\n          if (!XEUtils.isError(rest)) {\n            if (isMsg) {\n              _this5.removeMsgQueue();\n            }\n\n            _this5.contentVisible = false;\n\n            if (!remember) {\n              _this5.zoomLocat = null;\n            }\n\n            XEUtils.remove(allActivedModals, function (item) {\n              return item === _this5;\n            });\n\n            _this5.$emit('before-hide', params);\n\n            setTimeout(function () {\n              _this5.visible = false;\n\n              if (events.hide) {\n                events.hide.call(_this5, params);\n              } else {\n                _this5.$emit('input', false);\n\n                _this5.$emit('hide', params);\n              }\n            }, 200);\n          }\n        }).catch(function (e) {\n          return e;\n        });\n      }\n    },\n    handleGlobalKeydownEvent: function handleGlobalKeydownEvent(evnt) {\n      var _this6 = this;\n\n      var isEsc = evnt.keyCode === 27;\n\n      if (isEsc) {\n        var lastModal = XEUtils.max(allActivedModals, function (item) {\n          return item.modalZindex;\n        }); // 多个时，只关掉最上层的窗口\n\n        if (lastModal) {\n          setTimeout(function () {\n            if (lastModal === _this6 && lastModal.escClosable) {\n              _this6.close('exit');\n            }\n          }, 10);\n        }\n      }\n    },\n    getBox: function getBox() {\n      return this.$refs.modalBox;\n    },\n    isMaximized: function isMaximized() {\n      return !!this.zoomLocat;\n    },\n    maximize: function maximize() {\n      var _this7 = this;\n\n      return this.$nextTick().then(function () {\n        if (!_this7.zoomLocat) {\n          var marginSize = _this7.marginSize;\n\n          var modalBoxElem = _this7.getBox();\n\n          var _DomTools$getDomNode = DomTools.getDomNode(),\n              visibleHeight = _DomTools$getDomNode.visibleHeight,\n              visibleWidth = _DomTools$getDomNode.visibleWidth;\n\n          _this7.zoomLocat = {\n            top: modalBoxElem.offsetTop,\n            left: modalBoxElem.offsetLeft,\n            width: modalBoxElem.offsetWidth + (modalBoxElem.style.width ? 0 : 1),\n            height: modalBoxElem.offsetHeight + (modalBoxElem.style.height ? 0 : 1)\n          };\n          Object.assign(modalBoxElem.style, {\n            top: \"\".concat(marginSize, \"px\"),\n            left: \"\".concat(marginSize, \"px\"),\n            width: \"\".concat(visibleWidth - marginSize * 2, \"px\"),\n            height: \"\".concat(visibleHeight - marginSize * 2, \"px\")\n          });\n\n          _this7.savePosStorage();\n        }\n      });\n    },\n    revert: function revert() {\n      var _this8 = this;\n\n      return this.$nextTick().then(function () {\n        var zoomLocat = _this8.zoomLocat;\n\n        if (zoomLocat) {\n          var modalBoxElem = _this8.getBox();\n\n          _this8.zoomLocat = null;\n          Object.assign(modalBoxElem.style, {\n            top: \"\".concat(zoomLocat.top, \"px\"),\n            left: \"\".concat(zoomLocat.left, \"px\"),\n            width: \"\".concat(zoomLocat.width, \"px\"),\n            height: \"\".concat(zoomLocat.height, \"px\")\n          });\n\n          _this8.savePosStorage();\n        }\n      });\n    },\n    zoom: function zoom() {\n      var _this9 = this;\n\n      return this[this.zoomLocat ? 'revert' : 'maximize']().then(function () {\n        return _this9.isMaximized();\n      });\n    },\n    toggleZoomEvent: function toggleZoomEvent(evnt) {\n      var _this10 = this;\n\n      var $listeners = this.$listeners,\n          zoomLocat = this.zoomLocat,\n          _this$events4 = this.events,\n          events = _this$events4 === void 0 ? {} : _this$events4;\n      var params = {\n        type: zoomLocat ? 'revert' : 'max',\n        $modal: this,\n        $event: evnt\n      };\n      return this.zoom().then(function () {\n        if ($listeners.zoom) {\n          _this10.$emit('zoom', params);\n        } else if (events.zoom) {\n          events.zoom.call(_this10, params);\n        }\n      });\n    },\n    getPosition: function getPosition() {\n      if (!this.isMsg) {\n        var modalBoxElem = this.getBox();\n\n        if (modalBoxElem) {\n          return {\n            top: modalBoxElem.offsetTop,\n            left: modalBoxElem.offsetLeft\n          };\n        }\n      }\n\n      return null;\n    },\n    setPosition: function setPosition(top, left) {\n      if (!this.isMsg) {\n        var modalBoxElem = this.getBox();\n\n        if (XEUtils.isNumber(top)) {\n          modalBoxElem.style.top = \"\".concat(top, \"px\");\n        }\n\n        if (XEUtils.isNumber(left)) {\n          modalBoxElem.style.left = \"\".concat(left, \"px\");\n        }\n      }\n\n      return this.$nextTick();\n    },\n    boxMousedownEvent: function boxMousedownEvent() {\n      var modalZindex = this.modalZindex;\n\n      if (allActivedModals.some(function (_vm) {\n        return _vm.visible && _vm.modalZindex > modalZindex;\n      })) {\n        this.updateZindex();\n      }\n    },\n    mousedownEvent: function mousedownEvent(evnt) {\n      var _this11 = this;\n\n      var remember = this.remember,\n          storage = this.storage,\n          marginSize = this.marginSize,\n          zoomLocat = this.zoomLocat;\n      var modalBoxElem = this.getBox();\n\n      if (!zoomLocat && evnt.button === 0 && !DomTools.getEventTargetNode(evnt, modalBoxElem, 'trigger--btn').flag) {\n        evnt.preventDefault();\n        var domMousemove = document.onmousemove;\n        var domMouseup = document.onmouseup;\n        var disX = evnt.clientX - modalBoxElem.offsetLeft;\n        var disY = evnt.clientY - modalBoxElem.offsetTop;\n\n        var _DomTools$getDomNode2 = DomTools.getDomNode(),\n            visibleHeight = _DomTools$getDomNode2.visibleHeight,\n            visibleWidth = _DomTools$getDomNode2.visibleWidth;\n\n        document.onmousemove = function (evnt) {\n          evnt.preventDefault();\n          var offsetWidth = modalBoxElem.offsetWidth;\n          var offsetHeight = modalBoxElem.offsetHeight;\n          var minX = marginSize;\n          var maxX = visibleWidth - offsetWidth - marginSize - 1;\n          var minY = marginSize;\n          var maxY = visibleHeight - offsetHeight - marginSize - 1;\n          var left = evnt.clientX - disX;\n          var top = evnt.clientY - disY;\n\n          if (left > maxX) {\n            left = maxX;\n          }\n\n          if (left < minX) {\n            left = minX;\n          }\n\n          if (top > maxY) {\n            top = maxY;\n          }\n\n          if (top < minY) {\n            top = minY;\n          }\n\n          modalBoxElem.style.left = \"\".concat(left, \"px\");\n          modalBoxElem.style.top = \"\".concat(top, \"px\");\n        };\n\n        document.onmouseup = function () {\n          document.onmousemove = domMousemove;\n          document.onmouseup = domMouseup;\n\n          if (remember && storage) {\n            _this11.$nextTick(function () {\n              _this11.savePosStorage();\n            });\n          }\n        };\n      }\n    },\n    dragEvent: function dragEvent(evnt) {\n      var _this12 = this;\n\n      evnt.preventDefault();\n      var $listeners = this.$listeners,\n          marginSize = this.marginSize,\n          _this$events5 = this.events,\n          events = _this$events5 === void 0 ? {} : _this$events5,\n          remember = this.remember,\n          storage = this.storage;\n\n      var _DomTools$getDomNode3 = DomTools.getDomNode(),\n          visibleHeight = _DomTools$getDomNode3.visibleHeight,\n          visibleWidth = _DomTools$getDomNode3.visibleWidth;\n\n      var type = evnt.target.getAttribute('type');\n      var minWidth = XEUtils.toNumber(this.minWidth);\n      var minHeight = XEUtils.toNumber(this.minHeight);\n      var maxWidth = visibleWidth;\n      var maxHeight = visibleHeight;\n      var modalBoxElem = this.getBox();\n      var domMousemove = document.onmousemove;\n      var domMouseup = document.onmouseup;\n      var clientWidth = modalBoxElem.clientWidth;\n      var clientHeight = modalBoxElem.clientHeight;\n      var disX = evnt.clientX;\n      var disY = evnt.clientY;\n      var offsetTop = modalBoxElem.offsetTop;\n      var offsetLeft = modalBoxElem.offsetLeft;\n      var params = {\n        type: 'resize',\n        $modal: this\n      };\n\n      document.onmousemove = function (evnt) {\n        evnt.preventDefault();\n        var dragLeft;\n        var dragTop;\n        var width;\n        var height;\n\n        switch (type) {\n          case 'wl':\n            dragLeft = disX - evnt.clientX;\n            width = dragLeft + clientWidth;\n\n            if (offsetLeft - dragLeft > marginSize) {\n              if (width > minWidth) {\n                modalBoxElem.style.width = \"\".concat(width < maxWidth ? width : maxWidth, \"px\");\n                modalBoxElem.style.left = \"\".concat(offsetLeft - dragLeft, \"px\");\n              }\n            }\n\n            break;\n\n          case 'swst':\n            dragLeft = disX - evnt.clientX;\n            dragTop = disY - evnt.clientY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft - dragLeft > marginSize) {\n              if (width > minWidth) {\n                modalBoxElem.style.width = \"\".concat(width < maxWidth ? width : maxWidth, \"px\");\n                modalBoxElem.style.left = \"\".concat(offsetLeft - dragLeft, \"px\");\n              }\n            }\n\n            if (offsetTop - dragTop > marginSize) {\n              if (height > minHeight) {\n                modalBoxElem.style.height = \"\".concat(height < maxHeight ? height : maxHeight, \"px\");\n                modalBoxElem.style.top = \"\".concat(offsetTop - dragTop, \"px\");\n              }\n            }\n\n            break;\n\n          case 'swlb':\n            dragLeft = disX - evnt.clientX;\n            dragTop = evnt.clientY - disY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft - dragLeft > marginSize) {\n              if (width > minWidth) {\n                modalBoxElem.style.width = \"\".concat(width < maxWidth ? width : maxWidth, \"px\");\n                modalBoxElem.style.left = \"\".concat(offsetLeft - dragLeft, \"px\");\n              }\n            }\n\n            if (offsetTop + height + marginSize < visibleHeight) {\n              if (height > minHeight) {\n                modalBoxElem.style.height = \"\".concat(height < maxHeight ? height : maxHeight, \"px\");\n              }\n            }\n\n            break;\n\n          case 'st':\n            dragTop = disY - evnt.clientY;\n            height = clientHeight + dragTop;\n\n            if (offsetTop - dragTop > marginSize) {\n              if (height > minHeight) {\n                modalBoxElem.style.height = \"\".concat(height < maxHeight ? height : maxHeight, \"px\");\n                modalBoxElem.style.top = \"\".concat(offsetTop - dragTop, \"px\");\n              }\n            }\n\n            break;\n\n          case 'wr':\n            dragLeft = evnt.clientX - disX;\n            width = dragLeft + clientWidth;\n\n            if (offsetLeft + width + marginSize < visibleWidth) {\n              if (width > minWidth) {\n                modalBoxElem.style.width = \"\".concat(width < maxWidth ? width : maxWidth, \"px\");\n              }\n            }\n\n            break;\n\n          case 'sest':\n            dragLeft = evnt.clientX - disX;\n            dragTop = disY - evnt.clientY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft + width + marginSize < visibleWidth) {\n              if (width > minWidth) {\n                modalBoxElem.style.width = \"\".concat(width < maxWidth ? width : maxWidth, \"px\");\n              }\n            }\n\n            if (offsetTop - dragTop > marginSize) {\n              if (height > minHeight) {\n                modalBoxElem.style.height = \"\".concat(height < maxHeight ? height : maxHeight, \"px\");\n                modalBoxElem.style.top = \"\".concat(offsetTop - dragTop, \"px\");\n              }\n            }\n\n            break;\n\n          case 'selb':\n            dragLeft = evnt.clientX - disX;\n            dragTop = evnt.clientY - disY;\n            width = dragLeft + clientWidth;\n            height = dragTop + clientHeight;\n\n            if (offsetLeft + width + marginSize < visibleWidth) {\n              if (width > minWidth) {\n                modalBoxElem.style.width = \"\".concat(width < maxWidth ? width : maxWidth, \"px\");\n              }\n            }\n\n            if (offsetTop + height + marginSize < visibleHeight) {\n              if (height > minHeight) {\n                modalBoxElem.style.height = \"\".concat(height < maxHeight ? height : maxHeight, \"px\");\n              }\n            }\n\n            break;\n\n          case 'sb':\n            dragTop = evnt.clientY - disY;\n            height = dragTop + clientHeight;\n\n            if (offsetTop + height + marginSize < visibleHeight) {\n              if (height > minHeight) {\n                modalBoxElem.style.height = \"\".concat(height < maxHeight ? height : maxHeight, \"px\");\n              }\n            }\n\n            break;\n        }\n\n        modalBoxElem.className = modalBoxElem.className.replace(/\\s?is--drag/, '') + ' is--drag';\n\n        if (remember && storage) {\n          _this12.savePosStorage();\n        }\n\n        if ($listeners.zoom) {\n          _this12.$emit('zoom', params);\n        } else if (events.zoom) {\n          events.zoom.call(_this12, params);\n        }\n      };\n\n      document.onmouseup = function () {\n        _this12.zoomLocat = null;\n        document.onmousemove = domMousemove;\n        document.onmouseup = domMouseup;\n        setTimeout(function () {\n          modalBoxElem.className = modalBoxElem.className.replace(/\\s?is--drag/, '');\n        }, 50);\n      };\n    },\n    getStorageMap: function getStorageMap(key) {\n      var version = GlobalConfig.version;\n      var rest = XEUtils.toStringJSON(localStorage.getItem(key));\n      return rest && rest._v === version ? rest : {\n        _v: version\n      };\n    },\n    hasPosStorage: function hasPosStorage() {\n      var id = this.id,\n          remember = this.remember,\n          storage = this.storage,\n          storageKey = this.storageKey;\n      return !!(remember && storage && this.getStorageMap(storageKey)[id]);\n    },\n    restorePosStorage: function restorePosStorage() {\n      var id = this.id,\n          remember = this.remember,\n          storage = this.storage,\n          storageKey = this.storageKey;\n\n      if (remember && storage) {\n        var posStorage = this.getStorageMap(storageKey)[id];\n\n        if (posStorage) {\n          var modalBoxElem = this.getBox();\n\n          var _posStorage$split = posStorage.split(','),\n              _posStorage$split2 = _slicedToArray(_posStorage$split, 8),\n              left = _posStorage$split2[0],\n              top = _posStorage$split2[1],\n              width = _posStorage$split2[2],\n              height = _posStorage$split2[3],\n              zoomLeft = _posStorage$split2[4],\n              zoomTop = _posStorage$split2[5],\n              zoomWidth = _posStorage$split2[6],\n              zoomHeight = _posStorage$split2[7];\n\n          if (left) {\n            modalBoxElem.style.left = \"\".concat(left, \"px\");\n          }\n\n          if (top) {\n            modalBoxElem.style.top = \"\".concat(top, \"px\");\n          }\n\n          if (width) {\n            modalBoxElem.style.width = \"\".concat(width, \"px\");\n          }\n\n          if (height) {\n            modalBoxElem.style.height = \"\".concat(height, \"px\");\n          }\n\n          if (zoomLeft && zoomTop) {\n            this.zoomLocat = {\n              left: zoomLeft,\n              top: zoomTop,\n              width: zoomWidth,\n              height: zoomHeight\n            };\n          }\n        }\n      }\n    },\n    savePosStorage: function savePosStorage() {\n      var id = this.id,\n          remember = this.remember,\n          storage = this.storage,\n          storageKey = this.storageKey,\n          zoomLocat = this.zoomLocat;\n\n      if (remember && storage) {\n        var modalBoxElem = this.getBox();\n        var posStorageMap = this.getStorageMap(storageKey);\n        posStorageMap[id] = [modalBoxElem.style.left, modalBoxElem.style.top, modalBoxElem.style.width, modalBoxElem.style.height].concat(zoomLocat ? [zoomLocat.left, zoomLocat.top, zoomLocat.width, zoomLocat.height] : []).map(function (val) {\n          return val ? XEUtils.toNumber(val) : '';\n        }).join(',');\n        localStorage.setItem(storageKey, XEUtils.toJSONString(posStorageMap));\n      }\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\modal\\src\\modal.js"],"names":["allActivedModals","msgQueue","name","mixins","props","value","id","type","default","loading","status","iconStatus","className","top","GlobalConfig","position","title","duration","message","content","cancelButtonText","confirmButtonText","lockView","lockScroll","mask","maskClosable","escClosable","resize","showHeader","showFooter","showZoom","showClose","dblclickZoom","width","height","minWidth","minHeight","zIndex","marginSize","fullscreen","remember","destroyOnClose","showTitleOverflow","transfer","storage","storageKey","animat","size","beforeHideMethod","slots","events","Object","data","inited","visible","contentVisible","modalTop","modalZindex","zoomLocat","firstOpen","computed","isMsg","watch","created","UtilTools","mounted","$listeners","GlobalEvent","params","$modal","$event","beforeDestroy","$el","document","render","_e","$scopedSlots","vSize","defaultSlot","footerSlot","headerSlot","titleSlot","headerOns","mousedown","mousedownEvent","h","class","style","on","click","selfClickEvent","boxMousedownEvent","ref","attrs","toggleZoomEvent","closeEvent","cancelEvent","confirmEvent","dragEvent","methods","recalculate","modalBoxElem","isNaN","evnt","updateZindex","open","$refs","setTimeout","operBtn","XEUtils","addMsgQueue","removeMsgQueue","comp","updateStyle","offsetTop","updatePosition","clientVisibleWidth","clientVisibleHeight","isPosCenter","left","topCenter","leftCenter","posTop","posLeft","Math","close","Promise","item","handleGlobalKeydownEvent","isEsc","lastModal","getBox","isMaximized","maximize","visibleHeight","visibleWidth","DomTools","revert","zoom","getPosition","offsetLeft","setPosition","_vm","domMousemove","domMouseup","disX","disY","offsetWidth","offsetHeight","minX","maxX","minY","maxY","maxWidth","maxHeight","clientWidth","clientHeight","dragLeft","dragTop","getStorageMap","version","rest","localStorage","_v","hasPosStorage","restorePosStorage","posStorage","zoomLeft","zoomTop","zoomWidth","zoomHeight","savePosStorage","posStorageMap","val"],"mappings":"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","sourcesContent":["import GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\nimport XEUtils from 'xe-utils'\r\nimport { UtilTools, DomTools, GlobalEvent } from '../../tools'\r\n\r\nexport const allActivedModals = []\r\nexport const msgQueue = []\r\n\r\nexport default {\r\n  name: 'VxeModal',\r\n  mixins: [vSize],\r\n  props: {\r\n    value: Boolean,\r\n    id: String,\r\n    type: { type: String, default: 'modal' },\r\n    loading: { type: Boolean, default: null },\r\n    status: String,\r\n    iconStatus: String,\r\n    className: String,\r\n    top: { type: [Number, String], default: () => GlobalConfig.modal.top },\r\n    position: [String, Object],\r\n    title: String,\r\n    duration: { type: [Number, String], default: () => GlobalConfig.modal.duration },\r\n    // 请使用 content\r\n    message: [String, Function],\r\n    content: [String, Function],\r\n    cancelButtonText: { type: String, default: () => GlobalConfig.modal.cancelButtonText },\r\n    confirmButtonText: { type: String, default: () => GlobalConfig.modal.confirmButtonText },\r\n    lockView: { type: Boolean, default: () => GlobalConfig.modal.lockView },\r\n    lockScroll: Boolean,\r\n    mask: { type: Boolean, default: () => GlobalConfig.modal.mask },\r\n    maskClosable: { type: Boolean, default: () => GlobalConfig.modal.maskClosable },\r\n    escClosable: { type: Boolean, default: () => GlobalConfig.modal.escClosable },\r\n    resize: { type: Boolean, default: () => GlobalConfig.modal.resize },\r\n    showHeader: { type: Boolean, default: () => GlobalConfig.modal.showHeader },\r\n    showFooter: { type: Boolean, default: () => GlobalConfig.modal.showFooter },\r\n    showZoom: { type: Boolean, default: null },\r\n    showClose: { type: Boolean, default: () => GlobalConfig.modal.showClose },\r\n    dblclickZoom: { type: Boolean, default: () => GlobalConfig.modal.dblclickZoom },\r\n    width: [Number, String],\r\n    height: [Number, String],\r\n    minWidth: { type: [Number, String], default: () => GlobalConfig.modal.minWidth },\r\n    minHeight: { type: [Number, String], default: () => GlobalConfig.modal.minHeight },\r\n    zIndex: Number,\r\n    marginSize: { type: [Number, String], default: GlobalConfig.modal.marginSize },\r\n    fullscreen: Boolean,\r\n    remember: { type: Boolean, default: () => GlobalConfig.modal.remember },\r\n    destroyOnClose: { type: Boolean, default: () => GlobalConfig.modal.destroyOnClose },\r\n    showTitleOverflow: { type: Boolean, default: () => GlobalConfig.modal.showTitleOverflow },\r\n    transfer: { type: Boolean, default: () => GlobalConfig.modal.transfer },\r\n    storage: { type: Boolean, default: () => GlobalConfig.modal.storage },\r\n    storageKey: { type: String, default: () => GlobalConfig.modal.storageKey },\r\n    animat: { type: Boolean, default: () => GlobalConfig.modal.animat },\r\n    size: { type: String, default: () => GlobalConfig.modal.size || GlobalConfig.size },\r\n    beforeHideMethod: { type: Function, default: () => GlobalConfig.modal.beforeHideMethod },\r\n    slots: Object,\r\n    events: Object\r\n  },\r\n  data () {\r\n    return {\r\n      inited: false,\r\n      visible: false,\r\n      contentVisible: false,\r\n      modalTop: 0,\r\n      modalZindex: 0,\r\n      zoomLocat: null,\r\n      firstOpen: false\r\n    }\r\n  },\r\n  computed: {\r\n    isMsg () {\r\n      return this.type === 'message'\r\n    }\r\n  },\r\n  watch: {\r\n    width () {\r\n      this.recalculate()\r\n    },\r\n    height () {\r\n      this.recalculate()\r\n    },\r\n    value (visible) {\r\n      this[visible ? 'open' : 'close']('model')\r\n    }\r\n  },\r\n  created () {\r\n    if (this.storage && !this.id) {\r\n      UtilTools.error('vxe.error.reqProp', ['modal.id'])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { $listeners, events = {} } = this\r\n    if (this.value) {\r\n      this.open()\r\n    }\r\n    this.recalculate()\r\n    if (this.escClosable) {\r\n      GlobalEvent.on(this, 'keydown', this.handleGlobalKeydownEvent)\r\n    }\r\n    // 触发 inserted 事件\r\n    const type = 'inserted'\r\n    const params = { type, $modal: this, $event: { type } }\r\n    if ($listeners.inserted) {\r\n      this.$emit('inserted', params)\r\n    } else if (events.inserted) {\r\n      events.inserted.call(this, params)\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    const { $el } = this\r\n    GlobalEvent.off(this, 'keydown')\r\n    this.removeMsgQueue()\r\n    if ($el.parentNode === document.body) {\r\n      $el.parentNode.removeChild($el)\r\n    }\r\n  },\r\n  render (h) {\r\n    const { _e, $scopedSlots, slots = {}, inited, vSize, className, type, resize, showClose, showZoom, animat, loading, status, iconStatus, showFooter, zoomLocat, modalTop, dblclickZoom, contentVisible, visible, title, lockScroll, lockView, mask, isMsg, showTitleOverflow, destroyOnClose } = this\r\n    const content = this.content || this.message\r\n    const defaultSlot = $scopedSlots.default || slots.default\r\n    const footerSlot = $scopedSlots.footer || slots.footer\r\n    const headerSlot = $scopedSlots.header || slots.header\r\n    const titleSlot = $scopedSlots.title || slots.title\r\n    const headerOns = {\r\n      mousedown: this.mousedownEvent\r\n    }\r\n    if (showZoom && dblclickZoom && type === 'modal') {\r\n      headerOns.dblclick = this.toggleZoomEvent\r\n    }\r\n    return h('div', {\r\n      class: ['vxe-modal--wrapper', `type--${type}`, className || '', {\r\n        [`size--${vSize}`]: vSize,\r\n        [`status--${status}`]: status,\r\n        'is--animat': animat,\r\n        'lock--scroll': lockScroll,\r\n        'lock--view': lockView,\r\n        'is--resize': resize,\r\n        'is--mask': mask,\r\n        'is--maximize': zoomLocat,\r\n        'is--visible': contentVisible,\r\n        'is--active': visible,\r\n        'is--loading': loading\r\n      }],\r\n      style: {\r\n        zIndex: this.modalZindex,\r\n        top: modalTop ? `${modalTop}px` : null\r\n      },\r\n      on: {\r\n        click: this.selfClickEvent\r\n      }\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-modal--box',\r\n        on: {\r\n          mousedown: this.boxMousedownEvent\r\n        },\r\n        ref: 'modalBox'\r\n      }, [\r\n        this.showHeader ? h('div', {\r\n          class: ['vxe-modal--header', !isMsg && showTitleOverflow ? 'is--ellipsis' : ''],\r\n          on: headerOns\r\n        }, headerSlot ? (!inited || (destroyOnClose && !visible) ? [] : headerSlot.call(this, { $modal: this }, h)) : [\r\n          titleSlot ? titleSlot.call(this, { $modal: this }, h) : h('span', {\r\n            class: 'vxe-modal--title'\r\n          }, title ? UtilTools.getFuncText(title) : GlobalConfig.i18n('vxe.alert.title')),\r\n          showZoom ? h('i', {\r\n            class: ['vxe-modal--zoom-btn', 'trigger--btn', zoomLocat ? GlobalConfig.icon.MODAL_ZOOM_OUT : GlobalConfig.icon.MODAL_ZOOM_IN],\r\n            attrs: {\r\n              title: GlobalConfig.i18n(`vxe.modal.zoom${zoomLocat ? 'Out' : 'In'}`)\r\n            },\r\n            on: {\r\n              click: this.toggleZoomEvent\r\n            }\r\n          }) : _e(),\r\n          showClose ? h('i', {\r\n            class: ['vxe-modal--close-btn', 'trigger--btn', GlobalConfig.icon.MODAL_CLOSE],\r\n            attrs: {\r\n              title: GlobalConfig.i18n('vxe.modal.close')\r\n            },\r\n            on: {\r\n              click: this.closeEvent\r\n            }\r\n          }) : _e()\r\n        ]) : null,\r\n        h('div', {\r\n          class: 'vxe-modal--body'\r\n        }, [\r\n          status ? h('div', {\r\n            class: 'vxe-modal--status-wrapper'\r\n          }, [\r\n            h('i', {\r\n              class: ['vxe-modal--status-icon', iconStatus || GlobalConfig.icon[`MODAL_${status}`.toLocaleUpperCase()]]\r\n            })\r\n          ]) : null,\r\n          h('div', {\r\n            class: 'vxe-modal--content'\r\n          }, defaultSlot ? (!inited || (destroyOnClose && !visible) ? [] : defaultSlot.call(this, { $modal: this }, h)) : UtilTools.getFuncText(content)),\r\n          !isMsg ? h('div', {\r\n            class: ['vxe-loading', {\r\n              'is--visible': loading\r\n            }]\r\n          }, [\r\n            h('div', {\r\n              class: 'vxe-loading--spinner'\r\n            })\r\n          ]) : null\r\n        ]),\r\n        showFooter ? h('div', {\r\n          class: 'vxe-modal--footer'\r\n        }, footerSlot ? (!inited || (destroyOnClose && !visible) ? [] : footerSlot.call(this, { $modal: this }, h)) : [\r\n          type === 'confirm' ? h('vxe-button', {\r\n            ref: 'cancelBtn',\r\n            on: {\r\n              click: this.cancelEvent\r\n            }\r\n          }, this.cancelButtonText || GlobalConfig.i18n('vxe.button.cancel')) : null,\r\n          h('vxe-button', {\r\n            ref: 'confirmBtn',\r\n            props: {\r\n              status: 'primary'\r\n            },\r\n            on: {\r\n              click: this.confirmEvent\r\n            }\r\n          }, this.confirmButtonText || GlobalConfig.i18n('vxe.button.confirm'))\r\n        ]) : null,\r\n        !isMsg && resize ? h('span', {\r\n          class: 'vxe-modal--resize'\r\n        }, ['wl', 'wr', 'swst', 'sest', 'st', 'swlb', 'selb', 'sb'].map(type => {\r\n          return h('span', {\r\n            class: `${type}-resize`,\r\n            attrs: {\r\n              type: type\r\n            },\r\n            on: {\r\n              mousedown: this.dragEvent\r\n            }\r\n          })\r\n        })) : null\r\n      ])\r\n    ])\r\n  },\r\n  methods: {\r\n    recalculate () {\r\n      const { width, height } = this\r\n      const modalBoxElem = this.getBox()\r\n      modalBoxElem.style.width = width ? (isNaN(width) ? width : `${width}px`) : null\r\n      modalBoxElem.style.height = height ? (isNaN(height) ? height : `${height}px`) : null\r\n      return this.$nextTick()\r\n    },\r\n    selfClickEvent (evnt) {\r\n      if (this.maskClosable && evnt.target === this.$el) {\r\n        const type = 'mask'\r\n        this.close(type)\r\n      }\r\n    },\r\n    updateZindex () {\r\n      const { zIndex, modalZindex } = this\r\n      if (zIndex) {\r\n        this.modalZindex = zIndex\r\n      } else if (modalZindex < UtilTools.getLastZIndex()) {\r\n        this.modalZindex = UtilTools.nextZIndex()\r\n      }\r\n    },\r\n    closeEvent (evnt) {\r\n      const type = 'close'\r\n      this.$emit(type, { type, $modal: this, $event: evnt })\r\n      this.close(type)\r\n    },\r\n    confirmEvent (evnt) {\r\n      const type = 'confirm'\r\n      this.$emit(type, { type, $modal: this, $event: evnt })\r\n      this.close(type)\r\n    },\r\n    cancelEvent (evnt) {\r\n      const type = 'cancel'\r\n      this.$emit(type, { type, $modal: this, $event: evnt })\r\n      this.close(type)\r\n    },\r\n    open () {\r\n      const { $refs, events = {}, inited, duration, visible, isMsg, remember, showFooter } = this\r\n      if (!inited) {\r\n        this.inited = true\r\n        if (this.transfer) {\r\n          document.body.appendChild(this.$el)\r\n        }\r\n      }\r\n      if (!visible) {\r\n        if (!remember) {\r\n          this.recalculate()\r\n        }\r\n        this.visible = true\r\n        this.contentVisible = false\r\n        this.updateZindex()\r\n        allActivedModals.push(this)\r\n        setTimeout(() => {\r\n          this.contentVisible = true\r\n          this.$nextTick(() => {\r\n            if (showFooter) {\r\n              const operBtn = $refs.confirmBtn || $refs.cancelBtn\r\n              if (operBtn) {\r\n                operBtn.focus()\r\n              }\r\n            }\r\n            const type = ''\r\n            const params = { type, $modal: this }\r\n            if (events.show) {\r\n              events.show.call(this, params)\r\n            } else {\r\n              this.$emit('input', true)\r\n              this.$emit('show', params)\r\n            }\r\n          })\r\n        }, 10)\r\n        if (isMsg) {\r\n          this.addMsgQueue()\r\n          if (duration !== -1) {\r\n            setTimeout(() => this.close('close'), XEUtils.toNumber(duration))\r\n          }\r\n        } else {\r\n          this.$nextTick(() => {\r\n            const { firstOpen, fullscreen } = this\r\n            if (!remember || !firstOpen) {\r\n              this.updatePosition().then(() => {\r\n                setTimeout(() => this.updatePosition(), 20)\r\n              })\r\n            }\r\n            if (!firstOpen) {\r\n              this.firstOpen = true\r\n              if (this.hasPosStorage()) {\r\n                this.restorePosStorage()\r\n              } else if (fullscreen) {\r\n                this.$nextTick(() => this.maximize())\r\n              }\r\n            }\r\n          })\r\n        }\r\n      }\r\n    },\r\n    addMsgQueue () {\r\n      if (msgQueue.indexOf(this) === -1) {\r\n        msgQueue.push(this)\r\n      }\r\n      this.updateStyle()\r\n    },\r\n    removeMsgQueue () {\r\n      if (msgQueue.indexOf(this) > -1) {\r\n        XEUtils.remove(msgQueue, comp => comp === this)\r\n      }\r\n      this.updateStyle()\r\n    },\r\n    updateStyle () {\r\n      this.$nextTick(() => {\r\n        let offsetTop = 0\r\n        msgQueue.forEach(comp => {\r\n          offsetTop += XEUtils.toNumber(comp.top)\r\n          comp.modalTop = offsetTop\r\n          offsetTop += comp.$refs.modalBox.clientHeight\r\n        })\r\n      })\r\n    },\r\n    updatePosition () {\r\n      return this.$nextTick().then(() => {\r\n        const { marginSize, position } = this\r\n        const modalBoxElem = this.getBox()\r\n        const clientVisibleWidth = document.documentElement.clientWidth || document.body.clientWidth\r\n        const clientVisibleHeight = document.documentElement.clientHeight || document.body.clientHeight\r\n        const isPosCenter = position === 'center'\r\n        const { top, left } = isPosCenter ? { top: position, left: position } : Object.assign({}, position)\r\n        const topCenter = isPosCenter || top === 'center'\r\n        const leftCenter = isPosCenter || left === 'center'\r\n        let posTop = ''\r\n        let posLeft = ''\r\n        if (left && !leftCenter) {\r\n          posLeft = isNaN(left) ? left : `${left}px`\r\n        } else {\r\n          posLeft = `${Math.max(marginSize, clientVisibleWidth / 2 - modalBoxElem.offsetWidth / 2)}px`\r\n        }\r\n        if (top && !topCenter) {\r\n          posTop = isNaN(top) ? top : `${top}px`\r\n        } else {\r\n          posTop = `${Math.max(marginSize, clientVisibleHeight / 2 - modalBoxElem.offsetHeight / 2)}px`\r\n        }\r\n        modalBoxElem.style.top = posTop\r\n        modalBoxElem.style.left = posLeft\r\n      })\r\n    },\r\n    close (type) {\r\n      const { events = {}, remember, visible, isMsg, beforeHideMethod } = this\r\n      const params = { type, $modal: this }\r\n      if (visible) {\r\n        Promise.resolve(beforeHideMethod ? beforeHideMethod(params) : null).then((rest) => {\r\n          if (!XEUtils.isError(rest)) {\r\n            if (isMsg) {\r\n              this.removeMsgQueue()\r\n            }\r\n            this.contentVisible = false\r\n            if (!remember) {\r\n              this.zoomLocat = null\r\n            }\r\n            XEUtils.remove(allActivedModals, item => item === this)\r\n            this.$emit('before-hide', params)\r\n            setTimeout(() => {\r\n              this.visible = false\r\n              if (events.hide) {\r\n                events.hide.call(this, params)\r\n              } else {\r\n                this.$emit('input', false)\r\n                this.$emit('hide', params)\r\n              }\r\n            }, 200)\r\n          }\r\n        }).catch(e => e)\r\n      }\r\n    },\r\n    handleGlobalKeydownEvent (evnt) {\r\n      const isEsc = evnt.keyCode === 27\r\n      if (isEsc) {\r\n        const lastModal = XEUtils.max(allActivedModals, item => item.modalZindex)\r\n        // 多个时，只关掉最上层的窗口\r\n        if (lastModal) {\r\n          setTimeout(() => {\r\n            if (lastModal === this && lastModal.escClosable) {\r\n              this.close('exit')\r\n            }\r\n          }, 10)\r\n        }\r\n      }\r\n    },\r\n    getBox () {\r\n      return this.$refs.modalBox\r\n    },\r\n    isMaximized () {\r\n      return !!this.zoomLocat\r\n    },\r\n    maximize () {\r\n      return this.$nextTick().then(() => {\r\n        if (!this.zoomLocat) {\r\n          const marginSize = this.marginSize\r\n          const modalBoxElem = this.getBox()\r\n          const { visibleHeight, visibleWidth } = DomTools.getDomNode()\r\n          this.zoomLocat = {\r\n            top: modalBoxElem.offsetTop,\r\n            left: modalBoxElem.offsetLeft,\r\n            width: modalBoxElem.offsetWidth + (modalBoxElem.style.width ? 0 : 1),\r\n            height: modalBoxElem.offsetHeight + (modalBoxElem.style.height ? 0 : 1)\r\n          }\r\n          Object.assign(modalBoxElem.style, {\r\n            top: `${marginSize}px`,\r\n            left: `${marginSize}px`,\r\n            width: `${visibleWidth - marginSize * 2}px`,\r\n            height: `${visibleHeight - marginSize * 2}px`\r\n          })\r\n          this.savePosStorage()\r\n        }\r\n      })\r\n    },\r\n    revert () {\r\n      return this.$nextTick().then(() => {\r\n        const zoomLocat = this.zoomLocat\r\n        if (zoomLocat) {\r\n          const modalBoxElem = this.getBox()\r\n          this.zoomLocat = null\r\n          Object.assign(modalBoxElem.style, {\r\n            top: `${zoomLocat.top}px`,\r\n            left: `${zoomLocat.left}px`,\r\n            width: `${zoomLocat.width}px`,\r\n            height: `${zoomLocat.height}px`\r\n          })\r\n          this.savePosStorage()\r\n        }\r\n      })\r\n    },\r\n    zoom () {\r\n      return this[this.zoomLocat ? 'revert' : 'maximize']().then(() => this.isMaximized())\r\n    },\r\n    toggleZoomEvent (evnt) {\r\n      const { $listeners, zoomLocat, events = {} } = this\r\n      const params = { type: zoomLocat ? 'revert' : 'max', $modal: this, $event: evnt }\r\n      return this.zoom().then(() => {\r\n        if ($listeners.zoom) {\r\n          this.$emit('zoom', params)\r\n        } else if (events.zoom) {\r\n          events.zoom.call(this, params)\r\n        }\r\n      })\r\n    },\r\n    getPosition () {\r\n      if (!this.isMsg) {\r\n        const modalBoxElem = this.getBox()\r\n        if (modalBoxElem) {\r\n          return {\r\n            top: modalBoxElem.offsetTop,\r\n            left: modalBoxElem.offsetLeft\r\n          }\r\n        }\r\n      }\r\n      return null\r\n    },\r\n    setPosition (top, left) {\r\n      if (!this.isMsg) {\r\n        const modalBoxElem = this.getBox()\r\n        if (XEUtils.isNumber(top)) {\r\n          modalBoxElem.style.top = `${top}px`\r\n        }\r\n        if (XEUtils.isNumber(left)) {\r\n          modalBoxElem.style.left = `${left}px`\r\n        }\r\n      }\r\n      return this.$nextTick()\r\n    },\r\n    boxMousedownEvent () {\r\n      const { modalZindex } = this\r\n      if (allActivedModals.some(_vm => _vm.visible && _vm.modalZindex > modalZindex)) {\r\n        this.updateZindex()\r\n      }\r\n    },\r\n    mousedownEvent (evnt) {\r\n      const { remember, storage, marginSize, zoomLocat } = this\r\n      const modalBoxElem = this.getBox()\r\n      if (!zoomLocat && evnt.button === 0 && !DomTools.getEventTargetNode(evnt, modalBoxElem, 'trigger--btn').flag) {\r\n        evnt.preventDefault()\r\n        const domMousemove = document.onmousemove\r\n        const domMouseup = document.onmouseup\r\n        const disX = evnt.clientX - modalBoxElem.offsetLeft\r\n        const disY = evnt.clientY - modalBoxElem.offsetTop\r\n        const { visibleHeight, visibleWidth } = DomTools.getDomNode()\r\n        document.onmousemove = evnt => {\r\n          evnt.preventDefault()\r\n          const offsetWidth = modalBoxElem.offsetWidth\r\n          const offsetHeight = modalBoxElem.offsetHeight\r\n          const minX = marginSize\r\n          const maxX = visibleWidth - offsetWidth - marginSize - 1\r\n          const minY = marginSize\r\n          const maxY = visibleHeight - offsetHeight - marginSize - 1\r\n          let left = evnt.clientX - disX\r\n          let top = evnt.clientY - disY\r\n          if (left > maxX) {\r\n            left = maxX\r\n          }\r\n          if (left < minX) {\r\n            left = minX\r\n          }\r\n          if (top > maxY) {\r\n            top = maxY\r\n          }\r\n          if (top < minY) {\r\n            top = minY\r\n          }\r\n          modalBoxElem.style.left = `${left}px`\r\n          modalBoxElem.style.top = `${top}px`\r\n        }\r\n        document.onmouseup = () => {\r\n          document.onmousemove = domMousemove\r\n          document.onmouseup = domMouseup\r\n          if (remember && storage) {\r\n            this.$nextTick(() => {\r\n              this.savePosStorage()\r\n            })\r\n          }\r\n        }\r\n      }\r\n    },\r\n    dragEvent (evnt) {\r\n      evnt.preventDefault()\r\n      const { $listeners, marginSize, events = {}, remember, storage } = this\r\n      const { visibleHeight, visibleWidth } = DomTools.getDomNode()\r\n      const type = evnt.target.getAttribute('type')\r\n      const minWidth = XEUtils.toNumber(this.minWidth)\r\n      const minHeight = XEUtils.toNumber(this.minHeight)\r\n      const maxWidth = visibleWidth\r\n      const maxHeight = visibleHeight\r\n      const modalBoxElem = this.getBox()\r\n      const domMousemove = document.onmousemove\r\n      const domMouseup = document.onmouseup\r\n      const clientWidth = modalBoxElem.clientWidth\r\n      const clientHeight = modalBoxElem.clientHeight\r\n      const disX = evnt.clientX\r\n      const disY = evnt.clientY\r\n      const offsetTop = modalBoxElem.offsetTop\r\n      const offsetLeft = modalBoxElem.offsetLeft\r\n      const params = { type: 'resize', $modal: this }\r\n      document.onmousemove = evnt => {\r\n        evnt.preventDefault()\r\n        let dragLeft\r\n        let dragTop\r\n        let width\r\n        let height\r\n        switch (type) {\r\n          case 'wl':\r\n            dragLeft = disX - evnt.clientX\r\n            width = dragLeft + clientWidth\r\n            if (offsetLeft - dragLeft > marginSize) {\r\n              if (width > minWidth) {\r\n                modalBoxElem.style.width = `${width < maxWidth ? width : maxWidth}px`\r\n                modalBoxElem.style.left = `${offsetLeft - dragLeft}px`\r\n              }\r\n            }\r\n            break\r\n          case 'swst':\r\n            dragLeft = disX - evnt.clientX\r\n            dragTop = disY - evnt.clientY\r\n            width = dragLeft + clientWidth\r\n            height = dragTop + clientHeight\r\n            if (offsetLeft - dragLeft > marginSize) {\r\n              if (width > minWidth) {\r\n                modalBoxElem.style.width = `${width < maxWidth ? width : maxWidth}px`\r\n                modalBoxElem.style.left = `${offsetLeft - dragLeft}px`\r\n              }\r\n            }\r\n            if (offsetTop - dragTop > marginSize) {\r\n              if (height > minHeight) {\r\n                modalBoxElem.style.height = `${height < maxHeight ? height : maxHeight}px`\r\n                modalBoxElem.style.top = `${offsetTop - dragTop}px`\r\n              }\r\n            }\r\n            break\r\n          case 'swlb':\r\n            dragLeft = disX - evnt.clientX\r\n            dragTop = evnt.clientY - disY\r\n            width = dragLeft + clientWidth\r\n            height = dragTop + clientHeight\r\n            if (offsetLeft - dragLeft > marginSize) {\r\n              if (width > minWidth) {\r\n                modalBoxElem.style.width = `${width < maxWidth ? width : maxWidth}px`\r\n                modalBoxElem.style.left = `${offsetLeft - dragLeft}px`\r\n              }\r\n            }\r\n            if (offsetTop + height + marginSize < visibleHeight) {\r\n              if (height > minHeight) {\r\n                modalBoxElem.style.height = `${height < maxHeight ? height : maxHeight}px`\r\n              }\r\n            }\r\n            break\r\n          case 'st':\r\n            dragTop = disY - evnt.clientY\r\n            height = clientHeight + dragTop\r\n            if (offsetTop - dragTop > marginSize) {\r\n              if (height > minHeight) {\r\n                modalBoxElem.style.height = `${height < maxHeight ? height : maxHeight}px`\r\n                modalBoxElem.style.top = `${offsetTop - dragTop}px`\r\n              }\r\n            }\r\n            break\r\n          case 'wr':\r\n            dragLeft = evnt.clientX - disX\r\n            width = dragLeft + clientWidth\r\n            if (offsetLeft + width + marginSize < visibleWidth) {\r\n              if (width > minWidth) {\r\n                modalBoxElem.style.width = `${width < maxWidth ? width : maxWidth}px`\r\n              }\r\n            }\r\n            break\r\n          case 'sest':\r\n            dragLeft = evnt.clientX - disX\r\n            dragTop = disY - evnt.clientY\r\n            width = dragLeft + clientWidth\r\n            height = dragTop + clientHeight\r\n            if (offsetLeft + width + marginSize < visibleWidth) {\r\n              if (width > minWidth) {\r\n                modalBoxElem.style.width = `${width < maxWidth ? width : maxWidth}px`\r\n              }\r\n            }\r\n            if (offsetTop - dragTop > marginSize) {\r\n              if (height > minHeight) {\r\n                modalBoxElem.style.height = `${height < maxHeight ? height : maxHeight}px`\r\n                modalBoxElem.style.top = `${offsetTop - dragTop}px`\r\n              }\r\n            }\r\n            break\r\n          case 'selb':\r\n            dragLeft = evnt.clientX - disX\r\n            dragTop = evnt.clientY - disY\r\n            width = dragLeft + clientWidth\r\n            height = dragTop + clientHeight\r\n            if (offsetLeft + width + marginSize < visibleWidth) {\r\n              if (width > minWidth) {\r\n                modalBoxElem.style.width = `${width < maxWidth ? width : maxWidth}px`\r\n              }\r\n            }\r\n            if (offsetTop + height + marginSize < visibleHeight) {\r\n              if (height > minHeight) {\r\n                modalBoxElem.style.height = `${height < maxHeight ? height : maxHeight}px`\r\n              }\r\n            }\r\n            break\r\n          case 'sb':\r\n            dragTop = evnt.clientY - disY\r\n            height = dragTop + clientHeight\r\n            if (offsetTop + height + marginSize < visibleHeight) {\r\n              if (height > minHeight) {\r\n                modalBoxElem.style.height = `${height < maxHeight ? height : maxHeight}px`\r\n              }\r\n            }\r\n            break\r\n        }\r\n        modalBoxElem.className = modalBoxElem.className.replace(/\\s?is--drag/, '') + ' is--drag'\r\n        if (remember && storage) {\r\n          this.savePosStorage()\r\n        }\r\n        if ($listeners.zoom) {\r\n          this.$emit('zoom', params)\r\n        } else if (events.zoom) {\r\n          events.zoom.call(this, params)\r\n        }\r\n      }\r\n      document.onmouseup = () => {\r\n        this.zoomLocat = null\r\n        document.onmousemove = domMousemove\r\n        document.onmouseup = domMouseup\r\n        setTimeout(() => {\r\n          modalBoxElem.className = modalBoxElem.className.replace(/\\s?is--drag/, '')\r\n        }, 50)\r\n      }\r\n    },\r\n    getStorageMap (key) {\r\n      const version = GlobalConfig.version\r\n      const rest = XEUtils.toStringJSON(localStorage.getItem(key))\r\n      return rest && rest._v === version ? rest : { _v: version }\r\n    },\r\n    hasPosStorage () {\r\n      const { id, remember, storage, storageKey } = this\r\n      return !!(remember && storage && this.getStorageMap(storageKey)[id])\r\n    },\r\n    restorePosStorage () {\r\n      const { id, remember, storage, storageKey } = this\r\n      if (remember && storage) {\r\n        const posStorage = this.getStorageMap(storageKey)[id]\r\n        if (posStorage) {\r\n          const modalBoxElem = this.getBox()\r\n          const [left, top, width, height, zoomLeft, zoomTop, zoomWidth, zoomHeight] = posStorage.split(',')\r\n          if (left) {\r\n            modalBoxElem.style.left = `${left}px`\r\n          }\r\n          if (top) {\r\n            modalBoxElem.style.top = `${top}px`\r\n          }\r\n          if (width) {\r\n            modalBoxElem.style.width = `${width}px`\r\n          }\r\n          if (height) {\r\n            modalBoxElem.style.height = `${height}px`\r\n          }\r\n          if (zoomLeft && zoomTop) {\r\n            this.zoomLocat = {\r\n              left: zoomLeft,\r\n              top: zoomTop,\r\n              width: zoomWidth,\r\n              height: zoomHeight\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    savePosStorage () {\r\n      const { id, remember, storage, storageKey, zoomLocat } = this\r\n      if (remember && storage) {\r\n        const modalBoxElem = this.getBox()\r\n        const posStorageMap = this.getStorageMap(storageKey)\r\n        posStorageMap[id] = [\r\n          modalBoxElem.style.left,\r\n          modalBoxElem.style.top,\r\n          modalBoxElem.style.width,\r\n          modalBoxElem.style.height\r\n        ].concat(zoomLocat ? [\r\n          zoomLocat.left,\r\n          zoomLocat.top,\r\n          zoomLocat.width,\r\n          zoomLocat.height\r\n        ] : []).map(val => val ? XEUtils.toNumber(val) : '').join(',')\r\n        localStorage.setItem(storageKey, XEUtils.toJSONString(posStorageMap))\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}