{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\common\\tree\\CarTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\common\\tree\\CarTree.vue","mtime":1677634046508},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.string.pad-end\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CarTreeToolbar from \"./CarTreeToolbar.vue\";\nimport CarFavSetWindow from \"./CarFavSetWindow.vue\";\nimport CarGroupSetWindow from \"./CarGroupSetWindow.vue\";\nimport Labels from '@/common/gps/Labels.js';\nimport Storage from '@/common/cache/Storage.js';\nimport CarTreeDyField from \"./CarTreeDyField.js\";\nimport { getCars } from '@/common/cache/CacheTeamCar.js';\nimport { getFavRoot, getFavCount as _getFavCount } from '@/common/cache/CacheTeamCar.js';\nimport { getGroupRoot } from '@/common/cache/CacheTeamCar.js';\nimport { getCarById } from '@/common/cache/CacheTeamCar.js';\nimport { refreshAll } from '@/common/cache/CacheTeamCar.js';\nimport { Fields } from '@/common/cache/CacheTeamCar.js';\nimport { countFilter } from '@/common/cache/CacheTeamCar.js';\nimport { getCarTreeCfg } from '@/common/cache/CacheTeamCar.js';\nimport { State } from '@/common/cache/CacheTeamCar.js';\nimport { onCarTreeAdd, onCarTreeRemove } from '@/common/cache/CacheTeamCar.js';\nimport { getCarBxtWidgets } from '@/common/cache/CacheCmn.js';\nimport { getTmnById } from '@/common/cache/CacheTmn.js';\nimport { getTmnByKey } from '@/common/cache/CacheTmn.js';\nimport { getCarTreeIconUrl } from '@/common/util/Urls.js';\nimport { getPlateColorMap } from '@/common/Vars.js';\nimport { getCarStateCnMap } from '@/common/Vars.js';\nimport { objClone } from '@/common/util/Objects.js';\nexport default {\n  components: {\n    CarTreeToolbar: CarTreeToolbar\n  },\n  props: {\n    setting: {\n      default: function _default() {\n        return {\n          favshow: true,\n          favset: false,\n          groupshow: true,\n          groupset: false\n        };\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    border: {\n      type: Boolean,\n      default: true\n    },\n    miniBar: {\n      type: Boolean,\n      default: false\n    },\n    borderColor: {\n      default: $_theme.border_color_dark\n    },\n    toolbarStyle: {\n      default: null\n    },\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    showDyField: {\n      type: Boolean,\n      default: false\n    },\n    show2g4gIcon: {\n      type: Boolean,\n      default: false\n    },\n    onTreeInited: Function,\n    onTreeRefreshed: Function,\n    onSearchItemSelected: Function,\n    onCarSortFieldChg: Function\n  },\n  _tree: null,\n  _car_bxt_map: null,\n  _carTreeCfg: null,\n  _plateColorMap: null,\n  _carStateCnMap: null,\n  getTreeRoots: function getTreeRoots(callback) {\n    return getCars(function (cars) {\n      return callback(cars.tree);\n    });\n  },\n  getNodeText: function getNodeText(node) {\n    return node.plate ? node[getCarTreeCfg().sortField] : node.name;\n  },\n  data: function data() {\n    return {\n      loading: false,\n      model: null,\n      //null车队车辆　fav收藏车辆  group分组车辆\n      treeId: 'tree_' + $_theme.zindex(),\n      search: {\n        placeholder: null,\n        hasOwnField: null\n      },\n      favCount: 0,\n      favHover: false,\n      groupHover: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.loading = true;\n    this._carTreeCfg = getCarTreeCfg();\n    this._plateColorMap = getPlateColorMap();\n    this._carStateCnMap = getCarStateCnMap();\n    this._dyfield = this.showDyField ? new CarTreeDyField(this, getCarById, true) : null;\n    getCarBxtWidgets(function (bxts) {\n      _this._car_bxt_map = bxts.map;\n      _this.searchable && _this.$refs.toolbar.init(bxts.list);\n      getCars(_this.onCarLoaded);\n    });\n  },\n  watch: {\n    model: function model() {\n      var root = this.model == 'fav' ? getFavRoot() : this.model == 'group' ? getGroupRoot() : getCars()[0].root;\n\n      this._tree.reset(root, true);\n\n      if (this.model == 'fav') {\n        this._favIsClear && this._tree.checkAllNodes(this._favIsClear = false);\n      } else if (this.model == 'group') {\n        this._groupIsClear && this._tree.checkAllNodes(this._groupIsClear = false);\n      } else {\n        this._allIsClear && this._tree.checkAllNodes(this._allIsClear = false);\n      }\n\n      this._dyfield && this._dyfield.resetRoot(root);\n    }\n  },\n  computed: {\n    selectTab: function selectTab() {\n      return {\n        fontWeight: 'bold',\n        color: this.theme.color,\n        borderBottom: '2px solid ' + this.theme.color\n      };\n    },\n    getFavCount: function getFavCount() {\n      return _getFavCount;\n    }\n  },\n  methods: {\n    refreshClick: function refreshClick() {\n      var _this2 = this;\n\n      this.loading = true;\n      refreshAll(function (e) {\n        _this2.loading = false;\n        _this2.searchable && _this2.$refs.toolbar.showTip($_L.get('刷新失败'), '#f00');\n      });\n    },\n    afterRefresh: function afterRefresh(root, selected) {\n      this.loading = false;\n      this._carTreeCfg.hasFilter && countFilter();\n      this._dyfield && this._dyfield.resetRoot(root);\n      this.searchable && this.$refs.toolbar.showTip($_L.get('刷新成功'), '#00f');\n      this.onTreeRefreshed && this.onTreeRefreshed(root, selected);\n    },\n    onCarLoaded: function onCarLoaded(cars, teams) {\n      if (!this._setting) {\n        this._setting = objClone(this.setting);\n        this._setting.view = this._setting.view || {};\n        this._setting.view.nameIsHTML = true;\n        this._setting.view.nameFunction = this.nameFunction;\n        this._setting.view.iconUrlFunction = this.iconUrlFunction;\n        this._setting.view.iconCssFunction = this.iconCssFunction;\n        this._setting.view.titleFunction = this.titleFunction;\n        this.__hideFunction = this._setting.view.hideFunction;\n        this._setting.view.hideFunction = this.hideFunction;\n        this._setting.callback = this._setting.callback || {};\n\n        if (this._setting.check && this._setting.check.enable) {\n          this.__onDblClick = this.__onDblClick || this._setting.callback.onDblClick;\n          this._setting.callback.onDblClick = this.onDblClick;\n          this.__onCheck = this.__onCheck || this._setting.callback.onCheck;\n          this._setting.callback.onCheck = this.onCheck;\n        } else {\n          this.__onClick = this.__onClick || this._setting.callback.onClick;\n          this._setting.callback.onClick = this.onClick;\n        }\n\n        this._dyfield && this._dyfield.addEventListener(this._setting);\n      }\n\n      this._carTreeCfg.hasFilter && countFilter();\n      cars.root[this.treeId] = {\n        open: true\n      };\n      this._tree = $.fn.zTree.init($(this.$refs.treeUl), this._setting, cars.root);\n      this.searchable && this.$refs.toolbar.setTree(this._tree);\n      this.loading = false;\n      onCarTreeAdd(this.treeId, this);\n\n      if (window.$_cache.userCfg.RTL_FAV) {\n        var _rtlCfg = JSON.parse(window.$_cache.userCfg.RTL_FAV);\n\n        if (_rtlCfg.expand && _rtlCfg.expand) {\n          cars.list.length <= (Number(_rtlCfg.expandNum) || 200) && this._tree.expandAll(true);\n        }\n      }\n\n      this.onTreeInited && this.onTreeInited(cars, teams, this._tree, this);\n      this._dyfield && this._dyfield.onExpand(cars.root);\n      this._setting.favshow !== false && (this.favCount = _getFavCount());\n    },\n    showRecent: function showRecent(box) {\n      var ids = Storage.get('recent_cars', null);\n      if (!ids || ids.length == 0) return;\n      var cars = [];\n      ids.forEach(function (id) {\n        return getCarById(id) && cars.push(getCarById(id));\n      });\n      cars.length > 0 && box.openOptions(cars);\n    },\n    onCheck: function onCheck(node, chgs, value, event) {\n      this.__onCheck && this.__onCheck(node, chgs, value, event);\n      if (value !== 1) return;\n      var carIds = [];\n\n      for (var i = 0, len = chgs.length, car; i < len; i++) {\n        car = chgs[i];\n\n        if (car.plate) {\n          carIds.push(car.id);\n          if (carIds.length == 10) return Storage.set('recent_cars', carIds);\n        }\n      }\n\n      if (carIds.length == 0) return;\n      var ids = Storage.get('recent_cars', null);\n      if (!ids || ids.length == 0) return Storage.set('recent_cars', carIds);\n\n      for (var _i = 0, _len = ids.length; _i < _len; _i++) {\n        if (carIds.indexOf(ids[_i]) == -1) {\n          carIds.push(ids[_i]);\n          if (carIds.length == 10) break;\n        }\n      }\n\n      Storage.set('recent_cars', carIds);\n    },\n    onClick: function onClick(node, event) {\n      this.__onClick && this.__onClick(node, event);\n      if (!node.plate) return;\n      var ids = Storage.get('recent_cars', null);\n      if (!ids || ids.length == 0) return Storage.set('recent_cars', [node.id]);\n      if (ids[0] == node.id) return;\n      var i = ids.indexOf(node.id);\n      i != -1 && ids.splice(i, 1);\n      ids.unshift(node.id);\n      ids.length > 10 && ids.pop();\n      Storage.set('recent_cars', ids);\n    },\n    onDblClick: function onDblClick(node, event) {\n      this.__onDblClick && this.__onDblClick(node, event);\n      !node[this.treeId].value && node.plate && this._tree.checkNode(node, true, true, true);\n    },\n    iconUrlFunction: function iconUrlFunction(node, open) {\n      //车辆\n      return node.plate ? getCarTreeIconUrl(node.state, node.stts, node.cmpId) : null;\n    },\n    iconCssFunction: function iconCssFunction(node, open) {\n      //车队\n      return node.plate ? null : open ? 'ico_open' : 'ico_close';\n    },\n    titleFunction: function titleFunction(node) {\n      return node.plate ? this._carStateCnMap[node.state] : null;\n    },\n    hideFunction: function hideFunction(node) {\n      if (this._carTreeCfg.filterFun(node)) return true;\n      return this.__hideFunction ? this.__hideFunction(node) : false;\n    },\n    nameFunction: function nameFunction(node) {\n      var _this3 = this;\n\n      if (node.plate) {\n        //车辆\n        if (!this._carTreeCfg.showCarField) {\n          // 没有显示其它字段，则直接返回车牌号或车辆名\n          return node[this._carTreeCfg.sortField] + this._get2g4gIcon(node);\n        }\n\n        var array = [];\n\n        if (this._carTreeCfg.showCarField.color) {\n          array.push(this._plateColorMap[node.plateColor]);\n        }\n\n        if (this._carTreeCfg.showCarField.tmnKey) {\n          array.push($_L.get('终端标识') + ':' + (node.viceKeys ? (node.tmnKey ? node.tmnKey + ',' : '') + node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '') : node.tmnKey || ''));\n        }\n\n        if (this._carTreeCfg.showCarField.simCard) {\n          var tmn = getTmnById(node.tmnId);\n          tmn = tmn ? tmn.simCard : null;\n\n          if (!node.viceKeys) {\n            array.push('SIM:' + (tmn || $_L.get('无')));\n          } else {\n            var sims = [tmn || $_L.get('无')],\n                viceKeys = node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '');\n            viceKeys.split(',').forEach(function (key) {\n              tmn = getTmnByKey(key);\n              tmn = tmn ? tmn.simCard : null;\n              sims.push(tmn || $_L.get('无'));\n            });\n            array.push('SIM:' + sims.join(','));\n          }\n        }\n\n        if (this._carTreeCfg.showCarField.tmnNo) {\n          var _tmn = getTmnById(node.tmnId);\n\n          _tmn = _tmn ? _tmn.tmnNo : null;\n\n          if (_tmn && _tmn.length > 8 && $_cache.sysCfg['tmnCode.hidden'] == 'true') {\n            _tmn = _tmn.slice(0, 8).padEnd(_tmn.length, '*');\n          }\n\n          if (!node.viceKeys) {\n            array.push($_L.get('终端号') + ':' + (_tmn || $_L.get('无')));\n          } else {\n            var nos = [_tmn || $_L.get('无')],\n                _viceKeys = node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '');\n\n            _viceKeys.split(',').forEach(function (key) {\n              _tmn = getTmnByKey(key);\n              _tmn = _tmn ? _tmn.tmnNo : null;\n\n              if (_tmn && _tmn.length > 8 && $_cache.sysCfg['tmnCode.hidden'] == 'true') {\n                _tmn = _tmn.slice(0, 8).padEnd(_tmn.length, '*');\n              }\n\n              nos.push(_tmn || $_L.get('无'));\n            });\n\n            array.push($_L.get('终端号') + ':' + nos.join(','));\n          }\n        }\n\n        if (this._carTreeCfg.showCarField.driver) {\n          var driverName = Labels.driverByDriverId(node);\n          array.push($_L.get('司机') + ':' + (driverName || $_L.get('无')));\n        }\n\n        if (this._carTreeCfg.showCarField.state) {\n          array.push(this._carStateCnMap[node.state]);\n        }\n\n        this._dyfield && this._dyfield.values(array, node);\n\n        if (this._carTreeCfg.showCarField.bxts) {\n          //显示扩展属性\n          this._carTreeCfg.showCarField.bxts.forEach(function (bxtId) {\n            var bxt = _this3._car_bxt_map[bxtId];\n            bxt && array.push(bxt.name + ':' + (Fields.bxts(node, bxtId + '.text') || Fields.bxts(node, bxtId)));\n          });\n        }\n\n        if (array.length) {\n          return node[this._carTreeCfg.sortField] + ' [' + array.join(' ') + ']' + this._get2g4gIcon(node);\n        }\n\n        return node[this._carTreeCfg.sortField] + this._get2g4gIcon(node);\n      } else {\n        //车队\n        if (this.model || !this._carTreeCfg.showTeamCount) {\n          // 没有显示其它统计字段，则直接返回l队名\n          return node.id == '0' && this._carTreeCfg.hasFilter ? node.name + \" (<span class=\\\"el-icon-check\\\" style=\\\"color:\".concat(this.theme.color, \"\\\">\").concat($_L.get('过滤'), \"</span>)\") : node.name;\n        }\n\n        var _array = [];\n\n        if (this._carTreeCfg.hasFilter) {\n          if (this._carTreeCfg.showTeamCount.line) {\n            this._carTreeCfg.filters.state ? _array.push(node.f_carNum) : _array.push(node.f_online + '/' + node.f_carNum);\n          }\n\n          if (this._carTreeCfg.showTeamCount.move) {\n            _array.push($_L.get('行:') + node.f_move);\n\n            _array.push($_L.get('停:') + node.f_stop);\n          }\n\n          this._carTreeCfg.showTeamCount.alarm && _array.push($_L.get('警:') + node.f_alarm);\n          this._carTreeCfg.showTeamCount.invalid && _array.push($_L.get('无效:') + node.f_invalid);\n\n          if (this._carTreeCfg.showTeamCount.acc) {\n            _array.push($_L.get('ACC开:') + node.f_accon);\n\n            _array.push($_L.get('ACC关:') + node.f_accoff);\n          }\n        } else {\n          this._carTreeCfg.showTeamCount.line && _array.push(node.online + '/' + node.carNum);\n\n          if (this._carTreeCfg.showTeamCount.move) {\n            _array.push($_L.get('行:') + node.move);\n\n            _array.push($_L.get('停:') + node.stop);\n          }\n\n          this._carTreeCfg.showTeamCount.alarm && _array.push($_L.get('警:') + node.alarm);\n          this._carTreeCfg.showTeamCount.invalid && _array.push($_L.get('无效:') + node.invalid);\n\n          if (this._carTreeCfg.showTeamCount.acc) {\n            _array.push($_L.get('ACC开:') + node.accon);\n\n            _array.push($_L.get('ACC关:') + node.accoff);\n          }\n        }\n\n        return node.id == '0' && this._carTreeCfg.hasFilter ? node.name + ' [' + _array.join(' ') + \"] (<span class=\\\"el-icon-check\\\" style=\\\"color:\".concat(this.theme.color, \"\\\">\").concat($_L.get('过滤'), \"</span>)\") : node.name + ' [' + _array.join(' ') + ']';\n      }\n    },\n    _get2g4gIcon: function _get2g4gIcon(car) {\n      if (!this.show2g4gIcon || this._carTreeCfg.showCarField && !this._carTreeCfg.showCarField.g24) return '';\n\n      if (!this._gps_icon) {\n        this._gps_icon = \" <i class=\\\"el-icon-location-outline\\\" style=\\\"font-size:14px;margin-left:1px;margin-right:-4px;color:#8A8A8A\\\" title=\\\"\".concat($_L.get('定位设备'), \"\\\"></i>\");\n        this._accon_icon = \" <i class=\\\"el-icon-video-camera\\\" style=\\\"font-size:14px;margin-left:3px;margin-right:-3px;color:#007EFF\\\" title=\\\"\".concat($_L.get('视频设备'), \"\\\"></i>\");\n        this._accoff_icon = \" <i class=\\\"el-icon-video-camera\\\" style=\\\"font-size:14px;margin-left:3px;margin-right:-3px;color:#8A8A8A\\\" title=\\\"\".concat($_L.get('视频设备'), \"\\\"></i>\");\n      }\n\n      return !car.videos ? this._gps_icon : State.isAccOn(car.state) ? this._accon_icon : this._accoff_icon;\n    },\n    getCheckedNodes: function getCheckedNodes() {\n      var onlyChecked = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var onlyTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var field = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var hasOwnField = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var nodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      return this._tree ? this._tree.getCheckedNodes(onlyChecked, onlyTop, field, hasOwnField, nodes) : [];\n    },\n    checkNodes: function () {\n      var _checkNodes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(nodes) {\n        var checked,\n            checkTypeFlag,\n            callbackFlag,\n            i,\n            len,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                checked = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;\n                checkTypeFlag = _args.length > 2 ? _args[2] : undefined;\n                callbackFlag = _args.length > 3 ? _args[3] : undefined;\n\n              case 3:\n                if (!this.loading) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 6;\n                return sleep(10);\n\n              case 6:\n                _context.next = 3;\n                break;\n\n              case 8:\n                for (i = 0, len = nodes.length; i < len; i++) {\n                  this._tree.checkNode(nodes[i], checked, checkTypeFlag, callbackFlag);\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function checkNodes(_x) {\n        return _checkNodes.apply(this, arguments);\n      }\n\n      return checkNodes;\n    }(),\n    selectNode: function () {\n      var _selectNode = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(node) {\n        var isSilent,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                isSilent = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : false;\n\n              case 1:\n                if (!this.loading) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 4;\n                return sleep(10);\n\n              case 4:\n                _context2.next = 1;\n                break;\n\n              case 6:\n                this._tree.selectNode(node, false, isSilent);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function selectNode(_x2) {\n        return _selectNode.apply(this, arguments);\n      }\n\n      return selectNode;\n    }(),\n    favSetClick: function favSetClick() {\n      $_popup.open(CarFavSetWindow);\n    },\n    groupSetClick: function groupSetClick() {\n      $_popup.open(CarGroupSetWindow);\n    },\n    getTree: function getTree() {\n      return this._tree;\n    },\n    getTreeId: function getTreeId() {\n      return this.treeId;\n    },\n    clear: function clear() {\n      this._allIsClear = this._favIsClear = this._groupIsClear = true; //这几个tree是否需要清空勾选，解决inputTree组件的clear按钮执行时，只清空了当前树的勾选，另外tab树的勾选还在缓存中没有清空\n    },\n    destroy: function destroy() {\n      onCarTreeRemove(this.treeId);\n\n      if (this._tree) {\n        this._tree.destroy();\n\n        this._tree = null;\n      }\n\n      if (this.searchable && this.$refs.toolbar) {\n        this.$refs.toolbar.destroy();\n      }\n\n      this._dyfield && this._dyfield.destroy();\n      this._car_bxt_map = null;\n      this._carTreeCfg = null;\n      this._plateColorMap = null;\n      this._carStateCnMap = null;\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroy();\n  }\n};\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}",{"version":3,"sources":["CarTree.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"{borderColor:borderColor}\" style=\"display:flex !important\">\r\n\r\n    <!--TAB选择树类型-->\r\n    <div v-if=\"setting.favshow!==false||setting.groupshow!==false\" :style=\"{height:miniBar?'30px':'38px',lineHeight:miniBar?'29px':'37px',fontSize:miniBar?'12px':'14px'}\" style=\"display:flex;background-color:#fff\">\r\n      <div :class=\"[$style.tab]\" :style=\"[!model && selectTab]\" @click=\"model=null\"> {{$_L.get('全部')}} </div>\r\n      <div v-if=\"setting.favshow!==false\" :class=\"[$style.tab, $style.tab_border_left]\" :style=\"[model=='fav' && selectTab]\" @click=\"model='fav'\" @mouseenter=\"favHover=true\" @mouseleave=\"favHover=false\">\r\n        {{$_L.get('收藏') + (favCount>0 ? ` (${favCount})` : '')}}\r\n        <i v-show=\"model=='fav' && favHover\" v-if=\"setting.favset === true\" @click=\"favSetClick\" style=\"float:right;margin-right:5px;line-height:inherit\" class=\"el-icon-edit\" />\r\n      </div>\r\n      <div v-if=\"setting.groupshow!==false\" :class=\"[$style.tab, $style.tab_border_left]\" :style=\"[model=='group' && selectTab]\" @click=\"model='group'\" @mouseenter=\"groupHover=true\" @mouseleave=\"groupHover=false\">\r\n        {{$_L.get('分组')}}\r\n        <i v-show=\"model=='group' && groupHover\" v-if=\"setting.groupset === true\" @click=\"groupSetClick\" style=\"float:right;margin-right:5px;line-height:inherit\" class=\"el-icon-edit\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!--搜索设置栏-->\r\n    <CarTreeToolbar ref=\"toolbar\" v-if=\"searchable\" :setting=\"setting\" :showDyField=\"showDyField\" :show2g4gIcon=\"show2g4gIcon\" :onCarSortFieldChg=\"onCarSortFieldChg\" :miniBar=\"miniBar\" :treeBorder=\"border\" :onSearchItemSelected=\"onSearchItemSelected\" :refreshClick=\"refreshClick\" :showRecent=\"showRecent\" :model=\"model\" :style=\"toolbarStyle\"/>\r\n\r\n    <!--车辆树-->\r\n    <div style=\"overflow:auto;flex-grow:1;height:1px\">\r\n      <ul :id=\"treeId\" class=\"ztree\" ref=\"treeUl\"></ul>\r\n      <div v-if=\"disabled\" :class=\"$style.disabled\" />\r\n      <div v-if=\"loading\" :class=\"$style.loading\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CarTreeToolbar from \"./CarTreeToolbar.vue\";\r\nimport CarFavSetWindow from \"./CarFavSetWindow.vue\";\r\nimport CarGroupSetWindow from \"./CarGroupSetWindow.vue\";\r\n\r\nimport Labels from '@/common/gps/Labels.js';\r\nimport Storage from '@/common/cache/Storage.js';\r\nimport CarTreeDyField from './CarTreeDyField.js';\r\n\r\nimport { getCars } from '@/common/cache/CacheTeamCar.js';\r\nimport { getFavRoot, getFavCount } from '@/common/cache/CacheTeamCar.js';\r\nimport { getGroupRoot } from '@/common/cache/CacheTeamCar.js';\r\nimport { getCarById } from '@/common/cache/CacheTeamCar.js';\r\nimport { refreshAll } from '@/common/cache/CacheTeamCar.js';\r\nimport { Fields } from '@/common/cache/CacheTeamCar.js';\r\nimport { countFilter } from '@/common/cache/CacheTeamCar.js';\r\nimport { getCarTreeCfg } from '@/common/cache/CacheTeamCar.js';\r\nimport { State } from '@/common/cache/CacheTeamCar.js';\r\nimport { onCarTreeAdd, onCarTreeRemove } from '@/common/cache/CacheTeamCar.js';\r\nimport { getCarBxtWidgets } from '@/common/cache/CacheCmn.js';\r\nimport { getTmnById } from '@/common/cache/CacheTmn.js';\r\nimport { getTmnByKey } from '@/common/cache/CacheTmn.js';\r\n\r\nimport { getCarTreeIconUrl } from '@/common/util/Urls.js';\r\nimport { getPlateColorMap } from '@/common/Vars.js';\r\nimport { getCarStateCnMap } from '@/common/Vars.js';\r\nimport { objClone } from '@/common/util/Objects.js';\r\n\r\nexport default {\r\n  components: { CarTreeToolbar },\r\n  props: {\r\n    setting: { default: () => { return { favshow: true, favset: false, groupshow: true, groupset: false } } },\r\n    disabled: { type: Boolean, default: false },\r\n    border: { type: Boolean, default: true },\r\n    miniBar: { type: Boolean, default: false },\r\n    borderColor: { default: $_theme.border_color_dark },\r\n    toolbarStyle: { default: null },\r\n    searchable: { type: Boolean, default: true },\r\n    showDyField: { type: Boolean, default: false },\r\n    show2g4gIcon: { type: Boolean, default: false },\r\n    onTreeInited: Function,\r\n    onTreeRefreshed: Function,\r\n    onSearchItemSelected: Function,\r\n    onCarSortFieldChg: Function,\r\n  },\r\n\r\n  _tree: null,\r\n  _car_bxt_map: null,\r\n  _carTreeCfg: null,\r\n  _plateColorMap: null,\r\n  _carStateCnMap: null,\r\n\r\n  getTreeRoots: callback => getCars(cars => callback(cars.tree)),\r\n  getNodeText: node => node.plate ? node[getCarTreeCfg().sortField] : node.name,\r\n\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      model: null, //null车队车辆　fav收藏车辆  group分组车辆\r\n      treeId: 'tree_' + $_theme.zindex(),\r\n      search: { placeholder: null, hasOwnField: null },\r\n      favCount: 0,\r\n      favHover: false,\r\n      groupHover: false,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.loading = true;\r\n    this._carTreeCfg = getCarTreeCfg();\r\n    this._plateColorMap = getPlateColorMap();\r\n    this._carStateCnMap = getCarStateCnMap();\r\n    this._dyfield = this.showDyField ? new CarTreeDyField(this, getCarById, true) : null;\r\n    getCarBxtWidgets(bxts => {\r\n      this._car_bxt_map = bxts.map;\r\n      this.searchable && this.$refs.toolbar.init(bxts.list);\r\n      getCars(this.onCarLoaded);\r\n    });\r\n  },\r\n\r\n  watch: {\r\n    model: function () {\r\n      let root = this.model == 'fav' ? getFavRoot() : this.model == 'group' ? getGroupRoot() : getCars()[0].root;\r\n      this._tree.reset(root, true);\r\n      if (this.model == 'fav') {\r\n        this._favIsClear && this._tree.checkAllNodes(this._favIsClear = false);\r\n      } else if (this.model == 'group') {\r\n        this._groupIsClear && this._tree.checkAllNodes(this._groupIsClear = false);\r\n      } else {\r\n        this._allIsClear && this._tree.checkAllNodes(this._allIsClear = false);\r\n      }\r\n      this._dyfield && this._dyfield.resetRoot(root);\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    selectTab: function () {\r\n      return { fontWeight: 'bold', color: this.theme.color, borderBottom: '2px solid ' + this.theme.color };\r\n    },\r\n    getFavCount: () => getFavCount,\r\n  },\r\n\r\n  methods: {\r\n    refreshClick() {\r\n      this.loading = true;\r\n      refreshAll(e => {\r\n        this.loading = false;\r\n        this.searchable && this.$refs.toolbar.showTip($_L.get('刷新失败'), '#f00');\r\n      });\r\n    },\r\n    afterRefresh(root, selected) {\r\n      this.loading = false;\r\n      this._carTreeCfg.hasFilter && countFilter();\r\n      this._dyfield && this._dyfield.resetRoot(root);\r\n      this.searchable && this.$refs.toolbar.showTip($_L.get('刷新成功'), '#00f');\r\n      this.onTreeRefreshed && this.onTreeRefreshed(root, selected);\r\n    },\r\n    onCarLoaded(cars, teams) {\r\n      if (!this._setting) {\r\n        this._setting = objClone(this.setting);\r\n        this._setting.view = this._setting.view || {};\r\n        this._setting.view.nameIsHTML = true;\r\n        this._setting.view.nameFunction = this.nameFunction;\r\n        this._setting.view.iconUrlFunction = this.iconUrlFunction;\r\n        this._setting.view.iconCssFunction = this.iconCssFunction;\r\n        this._setting.view.titleFunction = this.titleFunction;\r\n        this.__hideFunction = this._setting.view.hideFunction;\r\n        this._setting.view.hideFunction = this.hideFunction;\r\n\r\n        this._setting.callback = this._setting.callback || {};\r\n        if (this._setting.check && this._setting.check.enable) {\r\n          this.__onDblClick = this.__onDblClick || this._setting.callback.onDblClick;\r\n          this._setting.callback.onDblClick = this.onDblClick;\r\n          this.__onCheck = this.__onCheck || this._setting.callback.onCheck;\r\n          this._setting.callback.onCheck = this.onCheck;\r\n        } else {\r\n          this.__onClick = this.__onClick || this._setting.callback.onClick;\r\n          this._setting.callback.onClick = this.onClick;\r\n        }\r\n        this._dyfield && this._dyfield.addEventListener(this._setting);\r\n      }\r\n\r\n      this._carTreeCfg.hasFilter && countFilter();\r\n\r\n      cars.root[this.treeId] = { open: true };\r\n      this._tree = $.fn.zTree.init($(this.$refs.treeUl), this._setting, cars.root);\r\n      this.searchable && this.$refs.toolbar.setTree(this._tree);\r\n      this.loading = false;\r\n      onCarTreeAdd(this.treeId, this);\r\n      if (window.$_cache.userCfg.RTL_FAV) {\r\n        let _rtlCfg = JSON.parse(window.$_cache.userCfg.RTL_FAV);\r\n        if(_rtlCfg.expand&&_rtlCfg.expand){\r\n          cars.list.length <=  (Number(_rtlCfg.expandNum)||200) && this._tree.expandAll(true);\r\n        }\r\n      }\r\n      this.onTreeInited && this.onTreeInited(cars, teams, this._tree, this);\r\n      this._dyfield && this._dyfield.onExpand(cars.root);\r\n      this._setting.favshow !== false && (this.favCount = getFavCount());\r\n    },\r\n    showRecent(box) {\r\n      let ids = Storage.get('recent_cars', null);\r\n      if (!ids || ids.length == 0) return;\r\n      let cars = [];\r\n      ids.forEach(id => getCarById(id) && cars.push(getCarById(id)));\r\n      cars.length > 0 && box.openOptions(cars);\r\n    },\r\n    onCheck(node, chgs, value, event) {\r\n      this.__onCheck && this.__onCheck(node, chgs, value, event);\r\n      if (value !== 1) return;\r\n      let carIds = [];\r\n      for (let i = 0, len = chgs.length, car; i < len; i++) {\r\n        car = chgs[i];\r\n        if (car.plate) {\r\n          carIds.push(car.id);\r\n          if (carIds.length == 10) return Storage.set('recent_cars', carIds);\r\n        }\r\n      }\r\n      if (carIds.length == 0) return;\r\n      let ids = Storage.get('recent_cars', null);\r\n      if (!ids || ids.length == 0) return Storage.set('recent_cars', carIds);\r\n      for (let i = 0, len = ids.length; i < len; i++) {\r\n        if (carIds.indexOf(ids[i]) == -1) {\r\n          carIds.push(ids[i]);\r\n          if (carIds.length == 10) break;\r\n        }\r\n      }\r\n      Storage.set('recent_cars', carIds);\r\n    },\r\n    onClick(node, event) {\r\n      this.__onClick && this.__onClick(node, event);\r\n      if (!node.plate) return;\r\n      let ids = Storage.get('recent_cars', null);\r\n      if (!ids || ids.length == 0) return Storage.set('recent_cars', [node.id]);\r\n      if (ids[0] == node.id) return;\r\n      let i = ids.indexOf(node.id);\r\n      i != -1 && ids.splice(i, 1);\r\n      ids.unshift(node.id);\r\n      ids.length > 10 && ids.pop();\r\n      Storage.set('recent_cars', ids);\r\n    },\r\n    onDblClick(node, event) {\r\n      this.__onDblClick && this.__onDblClick(node, event);\r\n      !node[this.treeId].value && node.plate && this._tree.checkNode(node, true, true, true);\r\n    },\r\n    iconUrlFunction(node, open) {//车辆\r\n      return node.plate ? getCarTreeIconUrl(node.state, node.stts, node.cmpId) : null;\r\n    },\r\n    iconCssFunction(node, open) {//车队\r\n      return node.plate ? null : (open ? 'ico_open' : 'ico_close');\r\n    },\r\n    titleFunction(node) {\r\n      return node.plate ? this._carStateCnMap[node.state] : null;\r\n    },\r\n    hideFunction(node) {\r\n      if (this._carTreeCfg.filterFun(node)) return true;\r\n      return this.__hideFunction ? this.__hideFunction(node) : false;\r\n    },\r\n    nameFunction(node) {\r\n      if (node.plate) {//车辆\r\n        if (!this._carTreeCfg.showCarField) {// 没有显示其它字段，则直接返回车牌号或车辆名\r\n          return node[this._carTreeCfg.sortField] + this._get2g4gIcon(node);\r\n        }\r\n        let array = [];\r\n        if (this._carTreeCfg.showCarField.color) {\r\n          array.push(this._plateColorMap[node.plateColor]);\r\n        }\r\n        if (this._carTreeCfg.showCarField.tmnKey) {\r\n          array.push($_L.get('终端标识') + ':' + (node.viceKeys ? ((node.tmnKey ? (node.tmnKey + ',') : '') + node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '')) : (node.tmnKey || '')));\r\n        }\r\n        if (this._carTreeCfg.showCarField.simCard) {\r\n          let tmn = getTmnById(node.tmnId);\r\n          tmn = tmn ? tmn.simCard : null;\r\n          if (!node.viceKeys) {\r\n            array.push('SIM:' + (tmn || $_L.get('无')));\r\n          } else {\r\n            let sims = [tmn || $_L.get('无')], viceKeys = node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '');\r\n            viceKeys.split(',').forEach(key => {\r\n              tmn = getTmnByKey(key);\r\n              tmn = tmn ? tmn.simCard : null;\r\n              sims.push(tmn || $_L.get('无'));\r\n            });\r\n            array.push('SIM:' + sims.join(','));\r\n          }\r\n        }\r\n        if (this._carTreeCfg.showCarField.tmnNo) {\r\n          let tmn = getTmnById(node.tmnId);\r\n          tmn = tmn ? tmn.tmnNo : null;\r\n          if (tmn && tmn.length > 8 && $_cache.sysCfg['tmnCode.hidden'] == 'true') {\r\n            tmn = tmn.slice(0, 8).padEnd(tmn.length, '*');\r\n          }\r\n          if (!node.viceKeys) {\r\n            array.push($_L.get('终端号') + ':' + (tmn || $_L.get('无')));\r\n          } else {\r\n            let nos = [tmn || $_L.get('无')], viceKeys = node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '');\r\n            viceKeys.split(',').forEach(key => {\r\n              tmn = getTmnByKey(key);\r\n              tmn = tmn ? tmn.tmnNo : null;\r\n              if (tmn && tmn.length > 8 && $_cache.sysCfg['tmnCode.hidden'] == 'true') {\r\n                tmn = tmn.slice(0, 8).padEnd(tmn.length, '*');\r\n              }\r\n              nos.push(tmn || $_L.get('无'));\r\n            });\r\n            array.push($_L.get('终端号') + ':' + nos.join(','));\r\n          }\r\n        }\r\n        if (this._carTreeCfg.showCarField.driver) {\r\n          let driverName = Labels.driverByDriverId(node);\r\n          array.push($_L.get('司机') + ':' + (driverName || $_L.get('无')));\r\n        }\r\n        if (this._carTreeCfg.showCarField.state) {\r\n          array.push(this._carStateCnMap[node.state]);\r\n        }\r\n        this._dyfield && this._dyfield.values(array, node);\r\n        if (this._carTreeCfg.showCarField.bxts) {//显示扩展属性\r\n          this._carTreeCfg.showCarField.bxts.forEach(bxtId => {\r\n            let bxt = this._car_bxt_map[bxtId];\r\n            bxt && array.push(bxt.name + ':' + (Fields.bxts(node, bxtId + '.text') || Fields.bxts(node, bxtId)));\r\n          });\r\n        }\r\n        if (array.length) {\r\n          return node[this._carTreeCfg.sortField] + ' [' + array.join(' ') + ']' + this._get2g4gIcon(node);\r\n        }\r\n        return node[this._carTreeCfg.sortField] + this._get2g4gIcon(node);\r\n      } else {//车队\r\n        if (this.model || !this._carTreeCfg.showTeamCount) {// 没有显示其它统计字段，则直接返回l队名\r\n          return node.id == '0' && this._carTreeCfg.hasFilter ? (node.name + ` (<span class=\"el-icon-check\" style=\"color:${this.theme.color}\">${$_L.get('过滤')}</span>)`) : node.name;\r\n        }\r\n        let array = [];\r\n        if (this._carTreeCfg.hasFilter) {\r\n          if (this._carTreeCfg.showTeamCount.line) {\r\n            this._carTreeCfg.filters.state ? array.push(node.f_carNum) : array.push(node.f_online + '/' + node.f_carNum);\r\n          }\r\n          if (this._carTreeCfg.showTeamCount.move) {\r\n            array.push($_L.get('行:') + node.f_move);\r\n            array.push($_L.get('停:') + node.f_stop);\r\n          }\r\n          this._carTreeCfg.showTeamCount.alarm && array.push($_L.get('警:') + node.f_alarm);\r\n          this._carTreeCfg.showTeamCount.invalid && array.push($_L.get('无效:') + node.f_invalid);\r\n          if (this._carTreeCfg.showTeamCount.acc) {\r\n            array.push($_L.get('ACC开:') + node.f_accon);\r\n            array.push($_L.get('ACC关:') + node.f_accoff);\r\n          }\r\n        } else {\r\n          this._carTreeCfg.showTeamCount.line && array.push(node.online + '/' + node.carNum);\r\n          if (this._carTreeCfg.showTeamCount.move) {\r\n            array.push($_L.get('行:') + node.move);\r\n            array.push($_L.get('停:') + node.stop);\r\n          }\r\n          this._carTreeCfg.showTeamCount.alarm && array.push($_L.get('警:') + node.alarm);\r\n          this._carTreeCfg.showTeamCount.invalid && array.push($_L.get('无效:') + node.invalid);\r\n          if (this._carTreeCfg.showTeamCount.acc) {\r\n            array.push($_L.get('ACC开:') + node.accon);\r\n            array.push($_L.get('ACC关:') + node.accoff);\r\n          }\r\n        }\r\n        return node.id == '0' && this._carTreeCfg.hasFilter ? (node.name + ' [' + array.join(' ') + `] (<span class=\"el-icon-check\" style=\"color:${this.theme.color}\">${$_L.get('过滤')}</span>)`) : (node.name + ' [' + array.join(' ') + ']');\r\n      }\r\n    },\r\n    _get2g4gIcon(car) {\r\n      if (!this.show2g4gIcon || (this._carTreeCfg.showCarField&&!this._carTreeCfg.showCarField.g24)) return '';\r\n      if (!this._gps_icon) {\r\n        this._gps_icon = ` <i class=\"el-icon-location-outline\" style=\"font-size:14px;margin-left:1px;margin-right:-4px;color:#8A8A8A\" title=\"${$_L.get('定位设备')}\"></i>`;\r\n        this._accon_icon = ` <i class=\"el-icon-video-camera\" style=\"font-size:14px;margin-left:3px;margin-right:-3px;color:#007EFF\" title=\"${$_L.get('视频设备')}\"></i>`;\r\n        this._accoff_icon = ` <i class=\"el-icon-video-camera\" style=\"font-size:14px;margin-left:3px;margin-right:-3px;color:#8A8A8A\" title=\"${$_L.get('视频设备')}\"></i>`;\r\n      }\r\n      return !car.videos ? this._gps_icon : State.isAccOn(car.state) ? this._accon_icon : this._accoff_icon;\r\n    },\r\n    getCheckedNodes(onlyChecked = true, onlyTop = false, field = null, hasOwnField = null, nodes = null) {\r\n      return this._tree ? this._tree.getCheckedNodes(onlyChecked, onlyTop, field, hasOwnField, nodes) : [];\r\n    },\r\n    async checkNodes(nodes, checked = true, checkTypeFlag, callbackFlag) {\r\n      while (this.loading) await sleep(10);\r\n      for (let i = 0, len = nodes.length; i < len; i++) {\r\n        this._tree.checkNode(nodes[i], checked, checkTypeFlag, callbackFlag);\r\n      }\r\n    },\r\n    async selectNode(node, isSilent = false) {\r\n      while (this.loading) await sleep(10);\r\n      this._tree.selectNode(node, false, isSilent);\r\n    },\r\n    favSetClick() {\r\n      $_popup.open(CarFavSetWindow);\r\n    },\r\n    groupSetClick() {\r\n      $_popup.open(CarGroupSetWindow);\r\n    },\r\n    getTree() { return this._tree; },\r\n    getTreeId() { return this.treeId; },\r\n    clear() {\r\n      this._allIsClear = this._favIsClear = this._groupIsClear = true; //这几个tree是否需要清空勾选，解决inputTree组件的clear按钮执行时，只清空了当前树的勾选，另外tab树的勾选还在缓存中没有清空\r\n    },\r\n    destroy() {\r\n      onCarTreeRemove(this.treeId);\r\n      if (this._tree) {\r\n        this._tree.destroy();\r\n        this._tree = null;\r\n      }\r\n      if (this.searchable && this.$refs.toolbar) {\r\n        this.$refs.toolbar.destroy();\r\n      }\r\n      this._dyfield && this._dyfield.destroy();\r\n      this._car_bxt_map = null;\r\n      this._carTreeCfg = null;\r\n      this._plateColorMap = null;\r\n      this._carStateCnMap = null;\r\n    }\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n</script>\r\n\r\n<style module>\r\n.container {\r\n  position: relative;\r\n  background-color: #fff;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex !important;\r\n  flex-flow: column;\r\n  align-items: unset !important;\r\n}\r\n.border {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n}\r\n.loading {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  opacity: 0.3;\r\n  filter: alpha(opacity=30);\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-image: url(\"@/assets/icon/loading.gif\");\r\n}\r\n.disabled {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  opacity: 0.6;\r\n  filter: alpha(opacity=60);\r\n  cursor: not-allowed;\r\n}\r\n.tab {\r\n  width: 100%;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #d6d6d6;\r\n  position: relative;\r\n  font-size: 13px;\r\n}\r\n.tab_border_left {\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n.tab_border_left::before {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  content: \"\";\r\n  width: 1px;\r\n  height: calc(100% - 16px);\r\n  background-color: #d6d6d6;\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":"src/common/tree"}]}