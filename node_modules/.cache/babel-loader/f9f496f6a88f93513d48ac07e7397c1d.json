{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\radio\\src\\radio.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\radio\\src\\radio.js","mtime":1635230121092},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { UtilTools } from \"../../tools\";\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nexport default {\n  name: 'VxeRadio',\n  mixins: [vSize],\n  props: {\n    value: [String, Number, Boolean],\n    label: [String, Number, Boolean],\n    title: [String, Number],\n    content: [String, Number],\n    disabled: Boolean,\n    name: String,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.radio.size || GlobalConfig.size;\n      }\n    }\n  },\n  inject: {\n    $xeradiogroup: {\n      default: null\n    }\n  },\n  computed: {\n    isDisabled: function isDisabled() {\n      var $xeradiogroup = this.$xeradiogroup;\n      return this.disabled || $xeradiogroup && $xeradiogroup.disabled;\n    }\n  },\n  render: function render(h) {\n    var _ref,\n        _this = this;\n\n    var $scopedSlots = this.$scopedSlots,\n        $xeradiogroup = this.$xeradiogroup,\n        isDisabled = this.isDisabled,\n        title = this.title,\n        vSize = this.vSize,\n        value = this.value,\n        label = this.label,\n        name = this.name,\n        content = this.content;\n    var attrs = {};\n\n    if (title) {\n      attrs.title = title;\n    }\n\n    return h('label', {\n      class: ['vxe-radio', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--disabled', isDisabled), _ref)],\n      attrs: attrs\n    }, [h('input', {\n      class: 'vxe-radio--input',\n      attrs: {\n        type: 'radio',\n        name: $xeradiogroup ? $xeradiogroup.name : name,\n        disabled: isDisabled\n      },\n      domProps: {\n        checked: $xeradiogroup ? $xeradiogroup.value === label : value === label\n      },\n      on: {\n        change: function change(evnt) {\n          if (!isDisabled) {\n            var params = {\n              label: label,\n              $event: evnt\n            };\n\n            if ($xeradiogroup) {\n              $xeradiogroup.handleChecked(params);\n            } else {\n              _this.$emit('input', label);\n\n              _this.$emit('change', params);\n            }\n          }\n        }\n      }\n    }), h('span', {\n      class: 'vxe-radio--icon'\n    }), h('span', {\n      class: 'vxe-radio--label'\n    }, $scopedSlots.default ? $scopedSlots.default.call(this, {}) : [UtilTools.getFuncText(content)])]);\n  },\n  methods: {\n    changeEvent: function changeEvent(evnt) {\n      var $xeradiogroup = this.$xeradiogroup,\n          isDisabled = this.isDisabled,\n          label = this.label;\n\n      if (!isDisabled) {\n        var params = {\n          label: label,\n          $event: evnt\n        };\n\n        if ($xeradiogroup) {\n          $xeradiogroup.handleChecked(params);\n        } else {\n          this.$emit('input', label);\n          this.$emit('change', params);\n        }\n      }\n    }\n  }\n};",null]}