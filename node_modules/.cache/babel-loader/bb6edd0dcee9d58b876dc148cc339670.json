{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\keyboard\\src\\mixin.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\keyboard\\src\\mixin.js","mtime":1635230121761},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.fixed\";\nimport XEUtils from 'xe-utils';\nimport { DomTools } from \"../../tools\";\nimport { browse } from \"../../tools/src/dom\";\n\nfunction getTargetOffset(target, container) {\n  var offsetTop = 0;\n  var offsetLeft = 0;\n  var triggerCheckboxLabel = !browse.firefox && DomTools.hasClass(target, 'vxe-checkbox--label');\n\n  if (triggerCheckboxLabel) {\n    var checkboxLabelStyle = getComputedStyle(target);\n    offsetTop -= XEUtils.toNumber(checkboxLabelStyle.paddingTop);\n    offsetLeft -= XEUtils.toNumber(checkboxLabelStyle.paddingLeft);\n  }\n\n  while (target && target !== container) {\n    offsetTop += target.offsetTop;\n    offsetLeft += target.offsetLeft;\n    target = target.offsetParent;\n\n    if (triggerCheckboxLabel) {\n      var checkboxStyle = getComputedStyle(target);\n      offsetTop -= XEUtils.toNumber(checkboxStyle.paddingTop);\n      offsetLeft -= XEUtils.toNumber(checkboxStyle.paddingLeft);\n    }\n  }\n\n  return {\n    offsetTop: offsetTop,\n    offsetLeft: offsetLeft\n  };\n}\n\nfunction getCheckboxRangeRows(_vm, params, targetTrElem, moveRange) {\n  var countHeight = 0;\n  var rangeRows = [];\n  var isDown = moveRange > 0;\n  var moveSize = moveRange > 0 ? moveRange : Math.abs(moveRange) + targetTrElem.offsetHeight;\n  var afterFullData = _vm.afterFullData,\n      scrollYStore = _vm.scrollYStore,\n      scrollYLoad = _vm.scrollYLoad;\n\n  if (scrollYLoad) {\n    var _rowIndex = _vm.getVTRowIndex(params.row);\n\n    if (isDown) {\n      rangeRows = afterFullData.slice(_rowIndex, _rowIndex + Math.ceil(moveSize / scrollYStore.rowHeight));\n    } else {\n      rangeRows = afterFullData.slice(_rowIndex - Math.floor(moveSize / scrollYStore.rowHeight) + 1, _rowIndex + 1);\n    }\n  } else {\n    var siblingProp = isDown ? 'next' : 'previous';\n\n    while (targetTrElem && countHeight < moveSize) {\n      rangeRows.push(_vm.getRowNode(targetTrElem).item);\n      countHeight += targetTrElem.offsetHeight;\n      targetTrElem = targetTrElem[\"\".concat(siblingProp, \"ElementSibling\")];\n    }\n  }\n\n  return rangeRows;\n}\n\nexport default {\n  methods: {\n    // 处理 Tab 键移动\n    moveTabSelected: function moveTabSelected(args, isLeft, evnt) {\n      var _this = this;\n\n      var afterFullData = this.afterFullData,\n          visibleColumn = this.visibleColumn,\n          editConfig = this.editConfig,\n          editOpts = this.editOpts;\n      var targetRow;\n      var targetRowIndex;\n      var targetColumnIndex;\n      var params = Object.assign({}, args);\n\n      var _rowIndex = this.getVTRowIndex(params.row);\n\n      var _columnIndex = this.getVTColumnIndex(params.column);\n\n      evnt.preventDefault();\n\n      if (isLeft) {\n        // 向左\n        if (_columnIndex <= 0) {\n          // 如果已经是第一列，则移动到上一行\n          if (_rowIndex > 0) {\n            targetRowIndex = _rowIndex - 1;\n            targetRow = afterFullData[targetRowIndex];\n            targetColumnIndex = visibleColumn.length - 1;\n          }\n        } else {\n          targetColumnIndex = _columnIndex - 1;\n        }\n      } else {\n        if (_columnIndex >= visibleColumn.length - 1) {\n          // 如果已经是第一列，则移动到上一行\n          if (_rowIndex < afterFullData.length - 1) {\n            targetRowIndex = _rowIndex + 1;\n            targetRow = afterFullData[targetRowIndex];\n            targetColumnIndex = 0;\n          }\n        } else {\n          targetColumnIndex = _columnIndex + 1;\n        }\n      }\n\n      var targetColumn = visibleColumn[targetColumnIndex];\n\n      if (targetColumn) {\n        if (targetRow) {\n          params.rowIndex = targetRowIndex;\n          params.row = targetRow;\n        } else {\n          params.rowIndex = _rowIndex;\n        }\n\n        params.columnIndex = targetColumnIndex;\n        params.column = targetColumn;\n        params.cell = this.getCell(params.row, params.column);\n\n        if (editConfig) {\n          if (editOpts.trigger === 'click' || editOpts.trigger === 'dblclick') {\n            if (editOpts.mode === 'row') {\n              this.handleActived(params, evnt);\n            } else {\n              this.scrollToRow(params.row, params.column).then(function () {\n                return _this.handleSelected(params, evnt);\n              });\n            }\n          }\n        } else {\n          this.scrollToRow(params.row, params.column).then(function () {\n            return _this.handleSelected(params, evnt);\n          });\n        }\n      }\n    },\n    // 处理当前行方向键移动\n    moveCurrentRow: function moveCurrentRow(isUpArrow, isDwArrow, evnt) {\n      var _this2 = this;\n\n      var currentRow = this.currentRow,\n          treeConfig = this.treeConfig,\n          treeOpts = this.treeOpts,\n          afterFullData = this.afterFullData;\n      var targetRow;\n      evnt.preventDefault();\n\n      if (currentRow) {\n        if (treeConfig) {\n          var _XEUtils$findTree = XEUtils.findTree(afterFullData, function (item) {\n            return item === currentRow;\n          }, treeOpts),\n              index = _XEUtils$findTree.index,\n              items = _XEUtils$findTree.items;\n\n          if (isUpArrow && index > 0) {\n            targetRow = items[index - 1];\n          } else if (isDwArrow && index < items.length - 1) {\n            targetRow = items[index + 1];\n          }\n        } else {\n          var _rowIndex = this.getVTRowIndex(currentRow);\n\n          if (isUpArrow && _rowIndex > 0) {\n            targetRow = afterFullData[_rowIndex - 1];\n          } else if (isDwArrow && _rowIndex < afterFullData.length - 1) {\n            targetRow = afterFullData[_rowIndex + 1];\n          }\n        }\n      } else {\n        targetRow = afterFullData[0];\n      }\n\n      if (targetRow) {\n        var params = {\n          $table: this,\n          row: targetRow\n        };\n        this.scrollToRow(targetRow).then(function () {\n          return _this2.triggerCurrentRowEvent(evnt, params);\n        });\n      }\n    },\n    // 处理可编辑方向键移动\n    moveSelected: function moveSelected(args, isLeftArrow, isUpArrow, isRightArrow, isDwArrow, evnt) {\n      var _this3 = this;\n\n      var afterFullData = this.afterFullData,\n          visibleColumn = this.visibleColumn;\n      var params = Object.assign({}, args);\n\n      var _rowIndex = this.getVTRowIndex(params.row);\n\n      var _columnIndex = this.getVTColumnIndex(params.column);\n\n      evnt.preventDefault();\n\n      if (isUpArrow && _rowIndex > 0) {\n        // 移动到上一行\n        params.rowIndex = _rowIndex - 1;\n        params.row = afterFullData[params.rowIndex];\n      } else if (isDwArrow && _rowIndex < afterFullData.length - 1) {\n        // 移动到下一行\n        params.rowIndex = _rowIndex + 1;\n        params.row = afterFullData[params.rowIndex];\n      } else if (isLeftArrow && _columnIndex) {\n        // 移动到左侧单元格\n        params.columnIndex = _columnIndex - 1;\n        params.column = visibleColumn[params.columnIndex];\n      } else if (isRightArrow && _columnIndex < visibleColumn.length - 1) {\n        // 移动到右侧单元格\n        params.columnIndex = _columnIndex + 1;\n        params.column = visibleColumn[params.columnIndex];\n      }\n\n      this.scrollToRow(params.row, params.column).then(function () {\n        params.cell = _this3.getCell(params.row, params.column);\n\n        _this3.handleSelected(params, evnt);\n      });\n    },\n\n    /**\r\n     * 表头单元格按下事件\r\n     */\n    triggerHeaderCellMousedownEvent: function triggerHeaderCellMousedownEvent(evnt, params) {\n      var mouseConfig = this.mouseConfig,\n          mouseOpts = this.mouseOpts;\n\n      if (mouseConfig && mouseOpts.area && this.handleHeaderCellAreaEvent) {\n        var cell = evnt.currentTarget;\n        var triggerSort = DomTools.getEventTargetNode(evnt, cell, 'vxe-cell--sort').flag;\n        var triggerFilter = DomTools.getEventTargetNode(evnt, cell, 'vxe-cell--filter').flag;\n        this.handleHeaderCellAreaEvent(evnt, Object.assign({\n          cell: cell,\n          triggerSort: triggerSort,\n          triggerFilter: triggerFilter\n        }, params));\n      }\n\n      this.focus();\n      this.closeMenu();\n    },\n\n    /**\r\n     * 单元格按下事件\r\n     */\n    triggerCellMousedownEvent: function triggerCellMousedownEvent(evnt, params) {\n      var cell = evnt.currentTarget;\n      params.cell = cell;\n      this.handleCellMousedownEvent(evnt, params);\n      this.focus();\n      this.closeFilter();\n      this.closeMenu();\n    },\n    handleCellMousedownEvent: function handleCellMousedownEvent(evnt, params) {\n      var editConfig = this.editConfig,\n          editOpts = this.editOpts,\n          handleSelected = this.handleSelected,\n          checkboxConfig = this.checkboxConfig,\n          checkboxOpts = this.checkboxOpts,\n          mouseConfig = this.mouseConfig,\n          mouseOpts = this.mouseOpts;\n\n      if (mouseConfig && mouseOpts.area && this.handleCellAreaEvent) {\n        return this.handleCellAreaEvent(evnt, params);\n      } else {\n        if (checkboxConfig && checkboxOpts.range) {\n          this.handleCheckboxRangeEvent(evnt, params);\n        }\n\n        if (mouseConfig && mouseOpts.selected) {\n          if (!editConfig || editOpts.mode === 'cell') {\n            handleSelected(params, evnt);\n          }\n        }\n      }\n    },\n    handleCheckboxRangeEvent: function handleCheckboxRangeEvent(evnt, params) {\n      var _this4 = this;\n\n      var column = params.column,\n          cell = params.cell;\n\n      if (column.type === 'checkbox') {\n        var $el = this.$el,\n            elemStore = this.elemStore;\n        var disX = evnt.clientX;\n        var disY = evnt.clientY;\n        var bodyWrapperElem = elemStore[\"\".concat(column.fixed || 'main', \"-body-wrapper\")] || elemStore['main-body-wrapper'];\n        var checkboxRangeElem = bodyWrapperElem.querySelector('.vxe-table--checkbox-range');\n        var domMousemove = document.onmousemove;\n        var domMouseup = document.onmouseup;\n        var trElem = cell.parentNode;\n        var selectRecords = this.getCheckboxRecords();\n        var lastRangeRows = [];\n        var marginSize = 1;\n        var offsetRest = getTargetOffset(evnt.target, bodyWrapperElem);\n        var startTop = offsetRest.offsetTop + evnt.offsetY;\n        var startLeft = offsetRest.offsetLeft + evnt.offsetX;\n        var startScrollTop = bodyWrapperElem.scrollTop;\n        var rowHeight = trElem.offsetHeight;\n        var mouseScrollTimeout = null;\n        var isMouseScrollDown = false;\n        var mouseScrollSpaceSize = 1;\n\n        var triggerEvent = function triggerEvent(type, evnt) {\n          _this4.emitEvent(\"checkbox-range-\".concat(type), {\n            records: _this4.getCheckboxRecords(),\n            reserves: _this4.getCheckboxReserveRecords()\n          }, evnt);\n        };\n\n        var handleChecked = function handleChecked(evnt) {\n          var clientX = evnt.clientX,\n              clientY = evnt.clientY;\n          var offsetLeft = clientX - disX;\n          var offsetTop = clientY - disY + (bodyWrapperElem.scrollTop - startScrollTop);\n          var rangeHeight = Math.abs(offsetTop);\n          var rangeWidth = Math.abs(offsetLeft);\n          var rangeTop = startTop;\n          var rangeLeft = startLeft;\n\n          if (offsetTop < marginSize) {\n            // 向上\n            rangeTop += offsetTop;\n\n            if (rangeTop < marginSize) {\n              rangeTop = marginSize;\n              rangeHeight = startTop;\n            }\n          } else {\n            // 向下\n            rangeHeight = Math.min(rangeHeight, bodyWrapperElem.scrollHeight - startTop - marginSize);\n          }\n\n          if (offsetLeft < marginSize) {\n            // 向左\n            rangeLeft += offsetLeft;\n\n            if (rangeWidth > startLeft) {\n              rangeLeft = marginSize;\n              rangeWidth = startLeft;\n            }\n          } else {\n            // 向右\n            rangeWidth = Math.min(rangeWidth, bodyWrapperElem.clientWidth - startLeft - marginSize);\n          }\n\n          checkboxRangeElem.style.height = \"\".concat(rangeHeight, \"px\");\n          checkboxRangeElem.style.width = \"\".concat(rangeWidth, \"px\");\n          checkboxRangeElem.style.left = \"\".concat(rangeLeft, \"px\");\n          checkboxRangeElem.style.top = \"\".concat(rangeTop, \"px\");\n          checkboxRangeElem.style.display = 'block';\n          var rangeRows = getCheckboxRangeRows(_this4, params, trElem, offsetTop < marginSize ? -rangeHeight : rangeHeight); // 至少滑动 10px 才能有效匹配\n\n          if (rangeHeight > 10 && rangeRows.length !== lastRangeRows.length) {\n            lastRangeRows = rangeRows;\n\n            if (evnt.ctrlKey) {\n              rangeRows.forEach(function (row) {\n                _this4.handleSelectRow({\n                  row: row\n                }, selectRecords.indexOf(row) === -1);\n              });\n            } else {\n              _this4.setAllCheckboxRow(false);\n\n              _this4.setCheckboxRow(rangeRows, true);\n            }\n\n            triggerEvent('change', evnt);\n          }\n        }; // 停止鼠标滚动\n\n\n        var stopMouseScroll = function stopMouseScroll() {\n          clearTimeout(mouseScrollTimeout);\n          mouseScrollTimeout = null;\n        }; // 开始鼠标滚动\n\n\n        var startMouseScroll = function startMouseScroll(evnt) {\n          stopMouseScroll();\n          mouseScrollTimeout = setTimeout(function () {\n            if (mouseScrollTimeout) {\n              var scrollLeft = bodyWrapperElem.scrollLeft,\n                  scrollTop = bodyWrapperElem.scrollTop,\n                  clientHeight = bodyWrapperElem.clientHeight,\n                  scrollHeight = bodyWrapperElem.scrollHeight;\n              var topSize = Math.ceil(mouseScrollSpaceSize * 50 / rowHeight);\n\n              if (isMouseScrollDown) {\n                if (scrollTop + clientHeight < scrollHeight) {\n                  _this4.scrollTo(scrollLeft, scrollTop + topSize);\n\n                  startMouseScroll(evnt);\n                  handleChecked(evnt);\n                } else {\n                  stopMouseScroll();\n                }\n              } else {\n                if (scrollTop) {\n                  _this4.scrollTo(scrollLeft, scrollTop - topSize);\n\n                  startMouseScroll(evnt);\n                  handleChecked(evnt);\n                } else {\n                  stopMouseScroll();\n                }\n              }\n            }\n          }, 50);\n        };\n\n        DomTools.addClass($el, 'drag--range');\n\n        document.onmousemove = function (evnt) {\n          evnt.preventDefault();\n          evnt.stopPropagation();\n          var clientY = evnt.clientY;\n\n          var _DomTools$getAbsolute = DomTools.getAbsolutePos(bodyWrapperElem),\n              boundingTop = _DomTools$getAbsolute.boundingTop; // 如果超过可视区，触发滚动\n\n\n          if (clientY < boundingTop) {\n            isMouseScrollDown = false;\n            mouseScrollSpaceSize = boundingTop - clientY;\n\n            if (!mouseScrollTimeout) {\n              startMouseScroll(evnt);\n            }\n          } else if (clientY > boundingTop + bodyWrapperElem.clientHeight) {\n            isMouseScrollDown = true;\n            mouseScrollSpaceSize = clientY - boundingTop - bodyWrapperElem.clientHeight;\n\n            if (!mouseScrollTimeout) {\n              startMouseScroll(evnt);\n            }\n          } else if (mouseScrollTimeout) {\n            stopMouseScroll();\n          }\n\n          handleChecked(evnt);\n        };\n\n        document.onmouseup = function (evnt) {\n          stopMouseScroll();\n          DomTools.removeClass($el, 'drag--range');\n          checkboxRangeElem.removeAttribute('style');\n          document.onmousemove = domMousemove;\n          document.onmouseup = domMouseup;\n          triggerEvent('end', evnt);\n        };\n\n        triggerEvent('start', evnt);\n      }\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\keyboard\\src\\mixin.js"],"names":["offsetTop","offsetLeft","triggerCheckboxLabel","browse","DomTools","checkboxLabelStyle","getComputedStyle","XEUtils","target","checkboxStyle","countHeight","rangeRows","isDown","moveRange","moveSize","Math","targetTrElem","afterFullData","scrollYStore","scrollYLoad","_vm","_rowIndex","params","siblingProp","methods","moveTabSelected","visibleColumn","editConfig","editOpts","Object","_columnIndex","evnt","targetRowIndex","targetRow","targetColumnIndex","targetColumn","moveCurrentRow","currentRow","treeConfig","treeOpts","index","items","item","isUpArrow","isDwArrow","$table","row","moveSelected","isLeftArrow","isRightArrow","triggerHeaderCellMousedownEvent","mouseConfig","mouseOpts","cell","triggerSort","triggerFilter","triggerCellMousedownEvent","handleCellMousedownEvent","handleSelected","checkboxConfig","checkboxOpts","handleCheckboxRangeEvent","column","$el","elemStore","disX","disY","bodyWrapperElem","checkboxRangeElem","domMousemove","document","domMouseup","trElem","selectRecords","lastRangeRows","marginSize","offsetRest","getTargetOffset","startTop","startLeft","startScrollTop","rowHeight","mouseScrollTimeout","isMouseScrollDown","mouseScrollSpaceSize","triggerEvent","records","reserves","handleChecked","clientX","clientY","rangeHeight","rangeWidth","rangeTop","rangeLeft","getCheckboxRangeRows","stopMouseScroll","clearTimeout","startMouseScroll","setTimeout","scrollLeft","scrollTop","clientHeight","scrollHeight","topSize","boundingTop"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport { DomTools } from '../../tools'\r\nimport { browse } from '../../tools/src/dom'\r\n\r\nfunction getTargetOffset (target, container) {\r\n  let offsetTop = 0\r\n  let offsetLeft = 0\r\n  const triggerCheckboxLabel = !browse.firefox && DomTools.hasClass(target, 'vxe-checkbox--label')\r\n  if (triggerCheckboxLabel) {\r\n    const checkboxLabelStyle = getComputedStyle(target)\r\n    offsetTop -= XEUtils.toNumber(checkboxLabelStyle.paddingTop)\r\n    offsetLeft -= XEUtils.toNumber(checkboxLabelStyle.paddingLeft)\r\n  }\r\n  while (target && target !== container) {\r\n    offsetTop += target.offsetTop\r\n    offsetLeft += target.offsetLeft\r\n    target = target.offsetParent\r\n    if (triggerCheckboxLabel) {\r\n      const checkboxStyle = getComputedStyle(target)\r\n      offsetTop -= XEUtils.toNumber(checkboxStyle.paddingTop)\r\n      offsetLeft -= XEUtils.toNumber(checkboxStyle.paddingLeft)\r\n    }\r\n  }\r\n  return { offsetTop, offsetLeft }\r\n}\r\n\r\nfunction getCheckboxRangeRows (_vm, params, targetTrElem, moveRange) {\r\n  let countHeight = 0\r\n  let rangeRows = []\r\n  const isDown = moveRange > 0\r\n  const moveSize = moveRange > 0 ? moveRange : (Math.abs(moveRange) + targetTrElem.offsetHeight)\r\n  const { afterFullData, scrollYStore, scrollYLoad } = _vm\r\n  if (scrollYLoad) {\r\n    const _rowIndex = _vm.getVTRowIndex(params.row)\r\n    if (isDown) {\r\n      rangeRows = afterFullData.slice(_rowIndex, _rowIndex + Math.ceil(moveSize / scrollYStore.rowHeight))\r\n    } else {\r\n      rangeRows = afterFullData.slice(_rowIndex - Math.floor(moveSize / scrollYStore.rowHeight) + 1, _rowIndex + 1)\r\n    }\r\n  } else {\r\n    const siblingProp = isDown ? 'next' : 'previous'\r\n    while (targetTrElem && countHeight < moveSize) {\r\n      rangeRows.push(_vm.getRowNode(targetTrElem).item)\r\n      countHeight += targetTrElem.offsetHeight\r\n      targetTrElem = targetTrElem[`${siblingProp}ElementSibling`]\r\n    }\r\n  }\r\n  return rangeRows\r\n}\r\n\r\nexport default {\r\n  methods: {\r\n    // 处理 Tab 键移动\r\n    moveTabSelected (args, isLeft, evnt) {\r\n      const { afterFullData, visibleColumn, editConfig, editOpts } = this\r\n      let targetRow\r\n      let targetRowIndex\r\n      let targetColumnIndex\r\n      const params = Object.assign({}, args)\r\n      const _rowIndex = this.getVTRowIndex(params.row)\r\n      const _columnIndex = this.getVTColumnIndex(params.column)\r\n      evnt.preventDefault()\r\n      if (isLeft) {\r\n        // 向左\r\n        if (_columnIndex <= 0) {\r\n          // 如果已经是第一列，则移动到上一行\r\n          if (_rowIndex > 0) {\r\n            targetRowIndex = _rowIndex - 1\r\n            targetRow = afterFullData[targetRowIndex]\r\n            targetColumnIndex = visibleColumn.length - 1\r\n          }\r\n        } else {\r\n          targetColumnIndex = _columnIndex - 1\r\n        }\r\n      } else {\r\n        if (_columnIndex >= visibleColumn.length - 1) {\r\n          // 如果已经是第一列，则移动到上一行\r\n          if (_rowIndex < afterFullData.length - 1) {\r\n            targetRowIndex = _rowIndex + 1\r\n            targetRow = afterFullData[targetRowIndex]\r\n            targetColumnIndex = 0\r\n          }\r\n        } else {\r\n          targetColumnIndex = _columnIndex + 1\r\n        }\r\n      }\r\n      const targetColumn = visibleColumn[targetColumnIndex]\r\n      if (targetColumn) {\r\n        if (targetRow) {\r\n          params.rowIndex = targetRowIndex\r\n          params.row = targetRow\r\n        } else {\r\n          params.rowIndex = _rowIndex\r\n        }\r\n        params.columnIndex = targetColumnIndex\r\n        params.column = targetColumn\r\n        params.cell = this.getCell(params.row, params.column)\r\n        if (editConfig) {\r\n          if (editOpts.trigger === 'click' || editOpts.trigger === 'dblclick') {\r\n            if (editOpts.mode === 'row') {\r\n              this.handleActived(params, evnt)\r\n            } else {\r\n              this.scrollToRow(params.row, params.column)\r\n                .then(() => this.handleSelected(params, evnt))\r\n            }\r\n          }\r\n        } else {\r\n          this.scrollToRow(params.row, params.column)\r\n            .then(() => this.handleSelected(params, evnt))\r\n        }\r\n      }\r\n    },\r\n    // 处理当前行方向键移动\r\n    moveCurrentRow (isUpArrow, isDwArrow, evnt) {\r\n      const { currentRow, treeConfig, treeOpts, afterFullData } = this\r\n      let targetRow\r\n      evnt.preventDefault()\r\n      if (currentRow) {\r\n        if (treeConfig) {\r\n          const { index, items } = XEUtils.findTree(afterFullData, item => item === currentRow, treeOpts)\r\n          if (isUpArrow && index > 0) {\r\n            targetRow = items[index - 1]\r\n          } else if (isDwArrow && index < items.length - 1) {\r\n            targetRow = items[index + 1]\r\n          }\r\n        } else {\r\n          const _rowIndex = this.getVTRowIndex(currentRow)\r\n          if (isUpArrow && _rowIndex > 0) {\r\n            targetRow = afterFullData[_rowIndex - 1]\r\n          } else if (isDwArrow && _rowIndex < afterFullData.length - 1) {\r\n            targetRow = afterFullData[_rowIndex + 1]\r\n          }\r\n        }\r\n      } else {\r\n        targetRow = afterFullData[0]\r\n      }\r\n      if (targetRow) {\r\n        const params = { $table: this, row: targetRow }\r\n        this.scrollToRow(targetRow)\r\n          .then(() => this.triggerCurrentRowEvent(evnt, params))\r\n      }\r\n    },\r\n    // 处理可编辑方向键移动\r\n    moveSelected (args, isLeftArrow, isUpArrow, isRightArrow, isDwArrow, evnt) {\r\n      const { afterFullData, visibleColumn } = this\r\n      const params = Object.assign({}, args)\r\n      const _rowIndex = this.getVTRowIndex(params.row)\r\n      const _columnIndex = this.getVTColumnIndex(params.column)\r\n      evnt.preventDefault()\r\n      if (isUpArrow && _rowIndex > 0) {\r\n        // 移动到上一行\r\n        params.rowIndex = _rowIndex - 1\r\n        params.row = afterFullData[params.rowIndex]\r\n      } else if (isDwArrow && _rowIndex < afterFullData.length - 1) {\r\n        // 移动到下一行\r\n        params.rowIndex = _rowIndex + 1\r\n        params.row = afterFullData[params.rowIndex]\r\n      } else if (isLeftArrow && _columnIndex) {\r\n        // 移动到左侧单元格\r\n        params.columnIndex = _columnIndex - 1\r\n        params.column = visibleColumn[params.columnIndex]\r\n      } else if (isRightArrow && _columnIndex < visibleColumn.length - 1) {\r\n        // 移动到右侧单元格\r\n        params.columnIndex = _columnIndex + 1\r\n        params.column = visibleColumn[params.columnIndex]\r\n      }\r\n      this.scrollToRow(params.row, params.column).then(() => {\r\n        params.cell = this.getCell(params.row, params.column)\r\n        this.handleSelected(params, evnt)\r\n      })\r\n    },\r\n    /**\r\n     * 表头单元格按下事件\r\n     */\r\n    triggerHeaderCellMousedownEvent (evnt, params) {\r\n      const { mouseConfig, mouseOpts } = this\r\n      if (mouseConfig && mouseOpts.area && this.handleHeaderCellAreaEvent) {\r\n        const cell = evnt.currentTarget\r\n        const triggerSort = DomTools.getEventTargetNode(evnt, cell, 'vxe-cell--sort').flag\r\n        const triggerFilter = DomTools.getEventTargetNode(evnt, cell, 'vxe-cell--filter').flag\r\n        this.handleHeaderCellAreaEvent(evnt, Object.assign({ cell, triggerSort, triggerFilter }, params))\r\n      }\r\n      this.focus()\r\n      this.closeMenu()\r\n    },\r\n    /**\r\n     * 单元格按下事件\r\n     */\r\n    triggerCellMousedownEvent (evnt, params) {\r\n      const cell = evnt.currentTarget\r\n      params.cell = cell\r\n      this.handleCellMousedownEvent(evnt, params)\r\n      this.focus()\r\n      this.closeFilter()\r\n      this.closeMenu()\r\n    },\r\n    handleCellMousedownEvent (evnt, params) {\r\n      const { editConfig, editOpts, handleSelected, checkboxConfig, checkboxOpts, mouseConfig, mouseOpts } = this\r\n      if (mouseConfig && mouseOpts.area && this.handleCellAreaEvent) {\r\n        return this.handleCellAreaEvent(evnt, params)\r\n      } else {\r\n        if (checkboxConfig && checkboxOpts.range) {\r\n          this.handleCheckboxRangeEvent(evnt, params)\r\n        }\r\n        if (mouseConfig && mouseOpts.selected) {\r\n          if (!editConfig || editOpts.mode === 'cell') {\r\n            handleSelected(params, evnt)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    handleCheckboxRangeEvent (evnt, params) {\r\n      const { column, cell } = params\r\n      if (column.type === 'checkbox') {\r\n        const { $el, elemStore } = this\r\n        const disX = evnt.clientX\r\n        const disY = evnt.clientY\r\n        const bodyWrapperElem = elemStore[`${column.fixed || 'main'}-body-wrapper`] || elemStore['main-body-wrapper']\r\n        const checkboxRangeElem = bodyWrapperElem.querySelector('.vxe-table--checkbox-range')\r\n        const domMousemove = document.onmousemove\r\n        const domMouseup = document.onmouseup\r\n        const trElem = cell.parentNode\r\n        const selectRecords = this.getCheckboxRecords()\r\n        let lastRangeRows = []\r\n        const marginSize = 1\r\n        const offsetRest = getTargetOffset(evnt.target, bodyWrapperElem)\r\n        const startTop = offsetRest.offsetTop + evnt.offsetY\r\n        const startLeft = offsetRest.offsetLeft + evnt.offsetX\r\n        const startScrollTop = bodyWrapperElem.scrollTop\r\n        const rowHeight = trElem.offsetHeight\r\n        let mouseScrollTimeout = null\r\n        let isMouseScrollDown = false\r\n        let mouseScrollSpaceSize = 1\r\n        const triggerEvent = (type, evnt) => {\r\n          this.emitEvent(`checkbox-range-${type}`, { records: this.getCheckboxRecords(), reserves: this.getCheckboxReserveRecords() }, evnt)\r\n        }\r\n        const handleChecked = (evnt) => {\r\n          const { clientX, clientY } = evnt\r\n          const offsetLeft = clientX - disX\r\n          const offsetTop = clientY - disY + (bodyWrapperElem.scrollTop - startScrollTop)\r\n          let rangeHeight = Math.abs(offsetTop)\r\n          let rangeWidth = Math.abs(offsetLeft)\r\n          let rangeTop = startTop\r\n          let rangeLeft = startLeft\r\n          if (offsetTop < marginSize) {\r\n            // 向上\r\n            rangeTop += offsetTop\r\n            if (rangeTop < marginSize) {\r\n              rangeTop = marginSize\r\n              rangeHeight = startTop\r\n            }\r\n          } else {\r\n            // 向下\r\n            rangeHeight = Math.min(rangeHeight, bodyWrapperElem.scrollHeight - startTop - marginSize)\r\n          }\r\n          if (offsetLeft < marginSize) {\r\n            // 向左\r\n            rangeLeft += offsetLeft\r\n            if (rangeWidth > startLeft) {\r\n              rangeLeft = marginSize\r\n              rangeWidth = startLeft\r\n            }\r\n          } else {\r\n            // 向右\r\n            rangeWidth = Math.min(rangeWidth, bodyWrapperElem.clientWidth - startLeft - marginSize)\r\n          }\r\n          checkboxRangeElem.style.height = `${rangeHeight}px`\r\n          checkboxRangeElem.style.width = `${rangeWidth}px`\r\n          checkboxRangeElem.style.left = `${rangeLeft}px`\r\n          checkboxRangeElem.style.top = `${rangeTop}px`\r\n          checkboxRangeElem.style.display = 'block'\r\n          const rangeRows = getCheckboxRangeRows(this, params, trElem, offsetTop < marginSize ? -rangeHeight : rangeHeight)\r\n          // 至少滑动 10px 才能有效匹配\r\n          if (rangeHeight > 10 && rangeRows.length !== lastRangeRows.length) {\r\n            lastRangeRows = rangeRows\r\n            if (evnt.ctrlKey) {\r\n              rangeRows.forEach(row => {\r\n                this.handleSelectRow({ row }, selectRecords.indexOf(row) === -1)\r\n              })\r\n            } else {\r\n              this.setAllCheckboxRow(false)\r\n              this.setCheckboxRow(rangeRows, true)\r\n            }\r\n            triggerEvent('change', evnt)\r\n          }\r\n        }\r\n        // 停止鼠标滚动\r\n        const stopMouseScroll = () => {\r\n          clearTimeout(mouseScrollTimeout)\r\n          mouseScrollTimeout = null\r\n        }\r\n        // 开始鼠标滚动\r\n        const startMouseScroll = (evnt) => {\r\n          stopMouseScroll()\r\n          mouseScrollTimeout = setTimeout(() => {\r\n            if (mouseScrollTimeout) {\r\n              const { scrollLeft, scrollTop, clientHeight, scrollHeight } = bodyWrapperElem\r\n              const topSize = Math.ceil(mouseScrollSpaceSize * 50 / rowHeight)\r\n              if (isMouseScrollDown) {\r\n                if (scrollTop + clientHeight < scrollHeight) {\r\n                  this.scrollTo(scrollLeft, scrollTop + topSize)\r\n                  startMouseScroll(evnt)\r\n                  handleChecked(evnt)\r\n                } else {\r\n                  stopMouseScroll()\r\n                }\r\n              } else {\r\n                if (scrollTop) {\r\n                  this.scrollTo(scrollLeft, scrollTop - topSize)\r\n                  startMouseScroll(evnt)\r\n                  handleChecked(evnt)\r\n                } else {\r\n                  stopMouseScroll()\r\n                }\r\n              }\r\n            }\r\n          }, 50)\r\n        }\r\n        DomTools.addClass($el, 'drag--range')\r\n        document.onmousemove = evnt => {\r\n          evnt.preventDefault()\r\n          evnt.stopPropagation()\r\n          const { clientY } = evnt\r\n          const { boundingTop } = DomTools.getAbsolutePos(bodyWrapperElem)\r\n          // 如果超过可视区，触发滚动\r\n          if (clientY < boundingTop) {\r\n            isMouseScrollDown = false\r\n            mouseScrollSpaceSize = boundingTop - clientY\r\n            if (!mouseScrollTimeout) {\r\n              startMouseScroll(evnt)\r\n            }\r\n          } else if (clientY > boundingTop + bodyWrapperElem.clientHeight) {\r\n            isMouseScrollDown = true\r\n            mouseScrollSpaceSize = clientY - boundingTop - bodyWrapperElem.clientHeight\r\n            if (!mouseScrollTimeout) {\r\n              startMouseScroll(evnt)\r\n            }\r\n          } else if (mouseScrollTimeout) {\r\n            stopMouseScroll()\r\n          }\r\n          handleChecked(evnt)\r\n        }\r\n        document.onmouseup = (evnt) => {\r\n          stopMouseScroll()\r\n          DomTools.removeClass($el, 'drag--range')\r\n          checkboxRangeElem.removeAttribute('style')\r\n          document.onmousemove = domMousemove\r\n          document.onmouseup = domMouseup\r\n          triggerEvent('end', evnt)\r\n        }\r\n        triggerEvent('start', evnt)\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}