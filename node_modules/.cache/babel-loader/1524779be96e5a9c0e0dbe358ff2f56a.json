{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\common\\Socket.js","dependencies":[{"path":"D:\\cdRule\\src\\common\\Socket.js","mtime":1671586198751},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/web.dom.iterable\";\nexport default function Socket(url, onopen, onclose) {\n  this.onopen = onopen;\n  this.onclose = onclose;\n  this.sid = window.$_uuid($_main.sessionId);\n  this.url = ($_domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + url;\n  this.ws = null;\n  this.opened = false;\n  this.stopped = false;\n  this.listeners = {};\n}\nSocket.prototype = {\n  getId: function getId() {\n    return this.sid;\n  },\n  connect: function connect() {\n    this.stopped = false;\n    this.ws = new WebSocket(this.url);\n    this.ws.onopen = this._onopen.bind(this);\n    this.ws.onmessage = this._onmessage.bind(this);\n    this.ws.onclose = this._onclose.bind(this);\n  },\n  close: function close() {\n    this.stopped = true;\n    this.opened = false;\n    this.listeners = {};\n\n    if (this.ws && this.ws.readyState === 1) {\n      this.ws.send('{\"cmd\":\"close\"}');\n      this.ws.close();\n    }\n  },\n  destroy: function destroy() {\n    this.close();\n    this.ws = null;\n    this.onopen = null;\n    this.onclose = null;\n    this.listeners = null;\n  },\n  send: function send(msg) {\n    if (!this.opened || !this.ws || this.ws.readyState != 1) return false;\n    this.ws.send(typeof msg === \"string\" ? msg : JSON.stringify(msg));\n    return true;\n  },\n  addListener: function addListener(cmd, callback) {\n    this.listeners[cmd] = this.listeners[cmd] || [];\n    this.listeners[cmd].push(callback);\n  },\n  removeListener: function removeListener(cmd, callback) {\n    if (!this.listeners) return;\n    var cbs = this.listeners[cmd];\n    if (!cbs) return;\n    var index = cbs.indexOf(callback);\n    if (index == -1) return;\n    cbs.splice(index, 1);\n    if (cbs.length) return;\n    delete this.listeners[cmd];\n  },\n  _onopen: function _onopen() {\n    if (this.stopped) {\n      this.ws.send('{\"cmd\":\"close\"}');\n      this.ws.close();\n      return;\n    }\n\n    this.opened = true;\n    this.time = new Date().getTime();\n\n    this._keepalive();\n\n    this.onopen && this.onopen();\n  },\n  _onmessage: function _onmessage(event) {\n    this.time = new Date().getTime();\n    event = JSON.parse(event.data);\n    var cbs = this.listeners[event.cmd];\n    cbs && cbs.forEach(function (cb) {\n      try {\n        cb(event);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  },\n  _onclose: function _onclose() {\n    if (this.opened) {\n      this.onclose && this.onclose();\n      this.opened = false;\n    }\n\n    if (this.keepaliveTimer) {\n      clearTimeout(this.keepaliveTimer);\n      this.keepaliveTimer = false;\n    }\n\n    !this.stopped && this.connect();\n  },\n  _keepalive: function _keepalive() {\n    if (!this.opened) return;\n\n    if (new Date().getTime() - this.time > 60 * 1000) {\n      return this.ws && (this.ws.send('{\"cmd\":\"close\"}'), this.ws.close());\n    }\n\n    this.send('{\"cmd\":\"keep_alive\",\"sid\":\"' + this.sid + '\"}');\n    this.keepaliveTimer = setTimeout(this._keepalive.bind(this), 10000);\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\common\\Socket.js"],"names":["window","$_main","$_domain","Socket","getId","connect","close","destroy","send","JSON","addListener","removeListener","cbs","index","_onopen","_onmessage","event","cb","console","_onclose","clearTimeout","_keepalive","setTimeout"],"mappings":"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","sourcesContent":["\r\nexport default function Socket(url, onopen, onclose) {\r\n\tthis.onopen = onopen;\r\n\tthis.onclose = onclose;\r\n\tthis.sid = window.$_uuid($_main.sessionId);\r\n\r\n\tthis.url = ($_domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + url;\r\n\tthis.ws = null;\r\n\r\n\tthis.opened = false;\r\n\tthis.stopped = false;\r\n\r\n\tthis.listeners = {};\r\n}\r\n\r\nSocket.prototype = {\r\n\tgetId: function() {\r\n\t\treturn this.sid;\r\n\t},\r\n\r\n\tconnect: function() {\r\n\t\tthis.stopped = false;\r\n\t\tthis.ws = new WebSocket(this.url);\r\n\t\tthis.ws.onopen = this._onopen.bind(this);\r\n\t\tthis.ws.onmessage = this._onmessage.bind(this);\r\n\t\tthis.ws.onclose = this._onclose.bind(this);\r\n\t},\r\n\t\r\n\tclose: function() {\r\n\t\tthis.stopped = true;\r\n\t\tthis.opened = false;\r\n\t\tthis.listeners = {};\r\n\t\tif (this.ws && this.ws.readyState === 1) {\r\n\t\t\tthis.ws.send('{\"cmd\":\"close\"}');\r\n\t\t\tthis.ws.close();\r\n\t\t}\r\n\t},\r\n\t\r\n\tdestroy: function() {\r\n\t\tthis.close();\r\n\t\tthis.ws = null;\r\n\t\tthis.onopen = null;\r\n\t\tthis.onclose = null;\r\n\t\tthis.listeners = null;\r\n\t},\r\n\r\n\tsend: function(msg) {\r\n\t\tif (!this.opened || !this.ws || this.ws.readyState != 1) return false;\r\n\t\tthis.ws.send((typeof msg === \"string\") ? msg : JSON.stringify(msg));\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\taddListener: function(cmd, callback) {\r\n\t\tthis.listeners[cmd] = this.listeners[cmd] || [];\r\n\t\tthis.listeners[cmd].push(callback);\r\n\t},\r\n\r\n\tremoveListener: function(cmd, callback) {\r\n\t\tif (!this.listeners) return;\r\n\t\tlet cbs = this.listeners[cmd];\r\n\t\tif (!cbs) return;\r\n\t\tlet index = cbs.indexOf(callback);\r\n\t\tif (index == -1) return;\r\n\t\tcbs.splice(index, 1);\r\n\t\tif (cbs.length) return;\r\n\t\tdelete this.listeners[cmd];\r\n\t},\r\n\t\r\n\t_onopen: function() {\r\n\t\tif (this.stopped) {\r\n\t\t\tthis.ws.send('{\"cmd\":\"close\"}');\r\n\t\t\tthis.ws.close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.opened = true;\r\n\t\tthis.time = new Date().getTime();\r\n\t\tthis._keepalive();\r\n\t\tthis.onopen && this.onopen();\r\n\t},\r\n\t\r\n\t_onmessage: function(event) {\r\n\t\tthis.time = new Date().getTime();\r\n\t\tevent = JSON.parse(event.data);\r\n\t\tlet cbs = this.listeners[event.cmd];\r\n\t\tcbs && cbs.forEach(cb => { try{cb(event)}catch(error){console.log(error)} });\r\n\t},\r\n\t\r\n\t_onclose: function() {\r\n\t\tif (this.opened) {\r\n\t\t\tthis.onclose && this.onclose();\r\n\t\t\tthis.opened = false;\r\n\t\t}\r\n\t\tif (this.keepaliveTimer) {\r\n\t\t\tclearTimeout(this.keepaliveTimer);\r\n\t\t\tthis.keepaliveTimer = false;\r\n\t\t}\r\n\t\t!this.stopped && this.connect();\r\n\t},\r\n\r\n\t_keepalive: function() {\r\n\t\tif (!this.opened) return;\r\n\t\tif (new Date().getTime() - this.time > 60*1000) {\r\n\t\t\treturn this.ws && (this.ws.send('{\"cmd\":\"close\"}'), this.ws.close());\r\n\t\t}\r\n\t\tthis.send('{\"cmd\":\"keep_alive\",\"sid\":\"'+this.sid+'\"}');\r\n\t\tthis.keepaliveTimer = setTimeout(this._keepalive.bind(this), 10000);\r\n\t},\r\n}"]}]}