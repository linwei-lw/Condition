{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\checkbox\\src\\group.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\checkbox\\src\\group.js","mtime":1635230121002},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import GlobalConfig from \"../../v-x-e-table/src/conf\";\nexport default {\n  name: 'VxeCheckboxGroup',\n  props: {\n    value: Array,\n    disabled: Boolean,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.checkbox.size || GlobalConfig.size;\n      }\n    }\n  },\n  provide: function provide() {\n    return {\n      $xecheckboxgroup: this\n    };\n  },\n  computed: {\n    vSize: function vSize() {\n      return this.size || this.$parent.size || this.$parent.vSize;\n    }\n  },\n  render: function render(h) {\n    var $scopedSlots = this.$scopedSlots;\n    return h('div', {\n      class: 'vxe-checkbox-group'\n    }, $scopedSlots.default ? $scopedSlots.default.call(this, {}) : []);\n  },\n  methods: {\n    handleChecked: function handleChecked(params) {\n      var checked = params.checked,\n          label = params.label;\n      var checklist = this.value || [];\n      var checkIndex = checklist.indexOf(label);\n\n      if (checked) {\n        if (checkIndex === -1) {\n          checklist.push(label);\n        }\n      } else {\n        checklist.splice(checkIndex, 1);\n      }\n\n      this.$emit('input', checklist);\n      this.$emit('change', Object.assign({\n        checklist: checklist\n      }, params));\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\checkbox\\src\\group.js"],"names":["name","props","value","disabled","size","type","default","GlobalConfig","provide","$xecheckboxgroup","computed","vSize","render","$scopedSlots","h","class","methods","handleChecked","checked","label","params","checklist","checkIndex"],"mappings":"AAAA,OAAA,YAAA;AAEA,eAAe;AACbA,EAAAA,IAAI,EADS,kBAAA;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EADA,KAAA;AAELC,IAAAA,QAAQ,EAFH,OAAA;AAGLC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAN,MAAA;AAAgBC,MAAAA,OAAO,EAAE,SAAA,QAAA,GAAA;AAAA,eAAMC,YAAY,CAAZA,QAAAA,CAAAA,IAAAA,IAA8BA,YAAY,CAAhD,IAAA;AAAA;AAAzB;AAHD,GAFM;AAObC,EAAAA,OAPa,EAAA,SAAA,OAAA,GAOF;AACT,WAAO;AACLC,MAAAA,gBAAgB,EAAE;AADb,KAAP;AARW,GAAA;AAYbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KADQ,EAAA,SAAA,KAAA,GACC;AACP,aAAO,KAAA,IAAA,IAAa,KAAA,OAAA,CAAb,IAAA,IAAkC,KAAA,OAAA,CAAzC,KAAA;AACD;AAHO,GAZG;AAiBbC,EAAAA,MAjBa,EAAA,SAAA,MAAA,CAAA,CAAA,EAiBF;AAAA,QACDC,YADC,GAAA,KAAA,YAAA;AAET,WAAOC,CAAC,CAAA,KAAA,EAAQ;AACdC,MAAAA,KAAK,EAAE;AADO,KAAR,EAELF,YAAY,CAAZA,OAAAA,GAAuBA,YAAY,CAAZA,OAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAvBA,EAAuBA,CAAvBA,GAFH,EAAQ,CAAR;AAnBW,GAAA;AAuBbG,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,EAAA,SAAA,aAAA,CAAA,MAAA,EACgB;AAAA,UACbC,OADa,GACME,MADN,CAAA,OAAA;AAAA,UACJD,KADI,GACMC,MADN,CAAA,KAAA;AAErB,UAAMC,SAAS,GAAG,KAAA,KAAA,IAAlB,EAAA;AACA,UAAMC,UAAU,GAAGD,SAAS,CAATA,OAAAA,CAAnB,KAAmBA,CAAnB;;AACA,UAAA,OAAA,EAAa;AACX,YAAIC,UAAU,KAAK,CAAnB,CAAA,EAAuB;AACrBD,UAAAA,SAAS,CAATA,IAAAA,CAAAA,KAAAA;AACD;AAHH,OAAA,MAIO;AACLA,QAAAA,SAAS,CAATA,MAAAA,CAAAA,UAAAA,EAAAA,CAAAA;AACD;;AACD,WAAA,KAAA,CAAA,OAAA,EAAA,SAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAqB,MAAM,CAAN,MAAA,CAAc;AAAEA,QAAAA,SAAS,EAATA;AAAF,OAAd,EAArB,MAAqB,CAArB;AACD;AAdM;AAvBI,CAAf","sourcesContent":["import GlobalConfig from '../../v-x-e-table/src/conf'\r\n\r\nexport default {\r\n  name: 'VxeCheckboxGroup',\r\n  props: {\r\n    value: Array,\r\n    disabled: Boolean,\r\n    size: { type: String, default: () => GlobalConfig.checkbox.size || GlobalConfig.size }\r\n  },\r\n  provide () {\r\n    return {\r\n      $xecheckboxgroup: this\r\n    }\r\n  },\r\n  computed: {\r\n    vSize () {\r\n      return this.size || this.$parent.size || this.$parent.vSize\r\n    }\r\n  },\r\n  render (h) {\r\n    const { $scopedSlots } = this\r\n    return h('div', {\r\n      class: 'vxe-checkbox-group'\r\n    }, $scopedSlots.default ? $scopedSlots.default.call(this, {}) : [])\r\n  },\r\n  methods: {\r\n    handleChecked (params) {\r\n      const { checked, label } = params\r\n      const checklist = this.value || []\r\n      const checkIndex = checklist.indexOf(label)\r\n      if (checked) {\r\n        if (checkIndex === -1) {\r\n          checklist.push(label)\r\n        }\r\n      } else {\r\n        checklist.splice(checkIndex, 1)\r\n      }\r\n      this.$emit('input', checklist)\r\n      this.$emit('change', Object.assign({ checklist }, params))\r\n    }\r\n  }\r\n}\r\n"]}]}