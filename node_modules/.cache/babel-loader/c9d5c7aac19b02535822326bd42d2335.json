{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\table\\src\\cell.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\table\\src\\cell.js","mtime":1638515720260},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport VXETable from \"../../v-x-e-table\";\nimport { UtilTools, DomTools } from \"../../tools\";\nimport { eqEmptyValue, isEnableConf } from \"../../tools/src/utils\";\n\nfunction renderHelpIcon(h, params) {\n  var $table = params.$table,\n      column = params.column;\n  var titleHelp = column.titleHelp;\n  return titleHelp ? [h('i', {\n    class: ['vxe-cell-help-icon', titleHelp.icon || GlobalConfig.icon.TABLE_HELP],\n    on: {\n      mouseenter: function mouseenter(evnt) {\n        $table.triggerHeaderHelpEvent(evnt, params);\n      },\n      mouseleave: function mouseleave(evnt) {\n        $table.handleTargetLeaveEvent(evnt);\n      }\n    }\n  })] : [];\n}\n\nfunction renderTitleContent(h, params, content) {\n  var $table = params.$table,\n      column = params.column;\n  var type = column.type,\n      showHeaderOverflow = column.showHeaderOverflow;\n  var allColumnHeaderOverflow = $table.showHeaderOverflow,\n      tooltipOpts = $table.tooltipOpts;\n  var showAllTip = tooltipOpts.showAll || tooltipOpts.enabled;\n  var headOverflow = XEUtils.isUndefined(showHeaderOverflow) || XEUtils.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;\n  var showTitle = headOverflow === 'title';\n  var showTooltip = headOverflow === true || headOverflow === 'tooltip';\n  var ons = {};\n\n  if (showTitle || showTooltip || showAllTip) {\n    ons.mouseenter = function (evnt) {\n      if ($table._isResize) {\n        return;\n      }\n\n      if (showTitle) {\n        DomTools.updateCellTitle(evnt.currentTarget, column);\n      } else if (showTooltip || showAllTip) {\n        $table.triggerHeaderTooltipEvent(evnt, params);\n      }\n    };\n  }\n\n  if (showTooltip || showAllTip) {\n    ons.mouseleave = function (evnt) {\n      if ($table._isResize) {\n        return;\n      }\n\n      if (showTooltip || showAllTip) {\n        $table.handleTargetLeaveEvent(evnt);\n      }\n    };\n  }\n\n  return [type === 'html' && XEUtils.isString(content) ? h('span', {\n    class: 'vxe-cell--title',\n    domProps: {\n      innerHTML: content\n    },\n    on: ons\n  }) : h('span', {\n    class: 'vxe-cell--title',\n    on: ons\n  }, content)];\n}\n\nfunction getFooterContent(h, params) {\n  var $table = params.$table,\n      column = params.column,\n      _columnIndex = params._columnIndex,\n      items = params.items;\n  var slots = column.slots,\n      editRender = column.editRender,\n      cellRender = column.cellRender;\n  var renderOpts = editRender || cellRender;\n\n  if (slots && slots.footer) {\n    return $table.callSlot(slots.footer, params, h);\n  }\n\n  if (renderOpts) {\n    var compConf = VXETable.renderer.get(renderOpts.name);\n\n    if (compConf && compConf.renderFooter) {\n      return compConf.renderFooter.call($table, h, renderOpts, params);\n    }\n  }\n\n  return [UtilTools.formatText(items[_columnIndex], 1)];\n}\n\nfunction getDefaultCellLabel(params) {\n  var $table = params.$table,\n      row = params.row,\n      column = params.column;\n  return UtilTools.formatText($table.getCellLabel(row, column), 1);\n}\n\nexport var Cell = {\n  createColumn: function createColumn($xetable, _vm) {\n    var type = _vm.type,\n        sortable = _vm.sortable,\n        remoteSort = _vm.remoteSort,\n        filters = _vm.filters,\n        editRender = _vm.editRender,\n        treeNode = _vm.treeNode;\n    var editConfig = $xetable.editConfig,\n        editOpts = $xetable.editOpts,\n        checkboxOpts = $xetable.checkboxOpts;\n    var renMaps = {\n      renderHeader: this.renderDefaultHeader,\n      renderCell: treeNode ? this.renderTreeCell : this.renderDefaultCell,\n      renderFooter: this.renderDefaultFooter\n    };\n\n    switch (type) {\n      case 'index':\n      case 'seq':\n        renMaps.renderHeader = this.renderIndexHeader;\n        renMaps.renderCell = treeNode ? this.renderTreeIndexCell : this.renderIndexCell;\n        break;\n\n      case 'radio':\n        renMaps.renderHeader = this.renderRadioHeader;\n        renMaps.renderCell = treeNode ? this.renderTreeRadioCell : this.renderRadioCell;\n        break;\n\n      case 'checkbox':\n        renMaps.renderHeader = this.renderSelectionHeader;\n        renMaps.renderCell = checkboxOpts.checkField ? treeNode ? this.renderTreeSelectionCellByProp : this.renderSelectionCellByProp : treeNode ? this.renderTreeSelectionCell : this.renderSelectionCell;\n        break;\n\n      case 'expand':\n        renMaps.renderCell = this.renderExpandCell;\n        renMaps.renderData = this.renderExpandData;\n        break;\n\n      case 'html':\n        renMaps.renderCell = treeNode ? this.renderTreeHTMLCell : this.renderHTMLCell;\n\n        if (filters && (sortable || remoteSort)) {\n          renMaps.renderHeader = this.renderSortAndFilterHeader;\n        } else if (sortable || remoteSort) {\n          renMaps.renderHeader = this.renderSortHeader;\n        } else if (filters) {\n          renMaps.renderHeader = this.renderFilterHeader;\n        }\n\n        break;\n\n      default:\n        if (editConfig && editRender) {\n          renMaps.renderHeader = this.renderEditHeader;\n          renMaps.renderCell = editOpts.mode === 'cell' ? treeNode ? this.renderTreeCellEdit : this.renderCellEdit : treeNode ? this.renderTreeRowEdit : this.renderRowEdit;\n        } else if (filters && (sortable || remoteSort)) {\n          renMaps.renderHeader = this.renderSortAndFilterHeader;\n        } else if (sortable || remoteSort) {\n          renMaps.renderHeader = this.renderSortHeader;\n        } else if (filters) {\n          renMaps.renderHeader = this.renderFilterHeader;\n        }\n\n    }\n\n    return UtilTools.getColumnConfig($xetable, _vm, renMaps);\n  },\n\n  /**\r\n   * 单元格\r\n   */\n  renderHeaderTitle: function renderHeaderTitle(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var slots = column.slots,\n        editRender = column.editRender,\n        cellRender = column.cellRender;\n    var renderOpts = editRender || cellRender;\n\n    if (slots && slots.header) {\n      return renderTitleContent(h, params, $table.callSlot(slots.header, params, h));\n    }\n\n    if (renderOpts) {\n      var compConf = VXETable.renderer.get(renderOpts.name);\n\n      if (compConf && compConf.renderHeader) {\n        return renderTitleContent(h, params, compConf.renderHeader.call($table, h, renderOpts, params));\n      }\n    }\n\n    return renderTitleContent(h, params, UtilTools.formatText(column.getTitle(), 1));\n  },\n  renderDefaultHeader: function renderDefaultHeader(h, params) {\n    return renderHelpIcon(h, params).concat(Cell.renderHeaderTitle(h, params));\n  },\n  renderDefaultCell: function renderDefaultCell(h, params) {\n    var $table = params.$table,\n        row = params.row,\n        column = params.column;\n    var slots = column.slots,\n        editRender = column.editRender,\n        cellRender = column.cellRender;\n    var renderOpts = editRender || cellRender;\n\n    if (slots && slots.default) {\n      return $table.callSlot(slots.default, params, h);\n    }\n\n    if (renderOpts) {\n      var funName = editRender ? 'renderCell' : 'renderDefault';\n      var compConf = VXETable.renderer.get(renderOpts.name);\n\n      if (compConf && compConf[funName]) {\n        return compConf[funName].call($table, h, renderOpts, Object.assign({\n          $type: editRender ? 'edit' : 'cell'\n        }, params));\n      }\n    }\n\n    var cellValue = $table.getCellLabel(row, column);\n    var cellPlaceholder = editRender ? editRender.placeholder : '';\n    return [h('span', {\n      class: 'vxe-cell--label'\n    }, editRender && eqEmptyValue(cellValue) ? [// 如果设置占位符\n    h('span', {\n      class: 'vxe-cell--placeholder'\n    }, UtilTools.formatText(UtilTools.getFuncText(cellPlaceholder), 1))] : UtilTools.formatText(cellValue, 1))];\n  },\n  renderTreeCell: function renderTreeCell(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderDefaultCell.call(this, h, params));\n  },\n  renderDefaultFooter: function renderDefaultFooter(h, params) {\n    return [h('span', {\n      class: 'vxe-cell--item'\n    }, getFooterContent(h, params))];\n  },\n\n  /**\r\n   * 树节点\r\n   */\n  renderTreeIcon: function renderTreeIcon(h, params, cellVNodes) {\n    var $table = params.$table,\n        isHidden = params.isHidden;\n    var treeOpts = $table.treeOpts,\n        treeExpandeds = $table.treeExpandeds,\n        treeLazyLoadeds = $table.treeLazyLoadeds;\n    var row = params.row,\n        column = params.column,\n        level = params.level;\n    var slots = column.slots;\n    var children = treeOpts.children,\n        hasChild = treeOpts.hasChild,\n        indent = treeOpts.indent,\n        lazy = treeOpts.lazy,\n        trigger = treeOpts.trigger,\n        iconLoaded = treeOpts.iconLoaded,\n        showIcon = treeOpts.showIcon,\n        iconOpen = treeOpts.iconOpen,\n        iconClose = treeOpts.iconClose;\n    var rowChilds = row[children];\n    var hasLazyChilds = false;\n    var isAceived = false;\n    var isLazyLoaded = false;\n    var on = {};\n\n    if (slots && slots.icon) {\n      return $table.callSlot(slots.icon, params, h, cellVNodes);\n    }\n\n    if (!isHidden) {\n      isAceived = treeExpandeds.indexOf(row) > -1;\n\n      if (lazy) {\n        isLazyLoaded = treeLazyLoadeds.indexOf(row) > -1;\n        hasLazyChilds = row[hasChild];\n      }\n    }\n\n    if (!trigger || trigger === 'default') {\n      on.click = function (evnt) {\n        return $table.triggerTreeExpandEvent(evnt, params);\n      };\n    }\n\n    return [h('div', {\n      class: ['vxe-cell--tree-node', {\n        'is--active': isAceived\n      }],\n      style: {\n        paddingLeft: \"\".concat(level * indent, \"px\")\n      }\n    }, [showIcon && (rowChilds && rowChilds.length || hasLazyChilds) ? [h('div', {\n      class: 'vxe-tree--btn-wrapper',\n      on: on\n    }, [h('i', {\n      class: ['vxe-tree--node-btn', isLazyLoaded ? iconLoaded || GlobalConfig.icon.TABLE_TREE_LOADED : isAceived ? iconOpen || GlobalConfig.icon.TABLE_TREE_OPEN : iconClose || GlobalConfig.icon.TABLE_TREE_CLOSE]\n    })])] : null, h('div', {\n      class: 'vxe-tree-cell'\n    }, cellVNodes)])];\n  },\n\n  /**\r\n   * 索引\r\n   */\n  renderIndexHeader: function renderIndexHeader(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var slots = column.slots;\n    return renderTitleContent(h, params, slots && slots.header ? $table.callSlot(slots.header, params, h) : UtilTools.formatText(column.getTitle(), 1));\n  },\n  renderIndexCell: function renderIndexCell(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var seqOpts = $table.seqOpts;\n    var slots = column.slots;\n\n    if (slots && slots.default) {\n      return $table.callSlot(slots.default, params, h);\n    }\n\n    var $seq = params.$seq,\n        seq = params.seq,\n        level = params.level;\n    var seqMethod = seqOpts.seqMethod;\n    return [UtilTools.formatText(seqMethod ? seqMethod(params) : level ? \"\".concat($seq, \".\").concat(seq) : seqOpts.startIndex + seq, 1)];\n  },\n  renderTreeIndexCell: function renderTreeIndexCell(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderIndexCell(h, params));\n  },\n\n  /**\r\n   * 单选\r\n   */\n  renderRadioHeader: function renderRadioHeader(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var slots = column.slots;\n    var headerSlot = slots ? slots.header : null;\n    var titleSlot = slots ? slots.title : null;\n    return renderTitleContent(h, params, headerSlot ? $table.callSlot(headerSlot, params, h) : [h('span', {\n      class: 'vxe-radio--label'\n    }, titleSlot ? $table.callSlot(titleSlot, params, h) : UtilTools.formatText(column.getTitle(), 1))]);\n  },\n  renderRadioCell: function renderRadioCell(h, params) {\n    var $table = params.$table,\n        column = params.column,\n        isHidden = params.isHidden;\n    var radioOpts = $table.radioOpts,\n        selectRow = $table.selectRow;\n    var slots = column.slots;\n    var labelField = radioOpts.labelField,\n        checkMethod = radioOpts.checkMethod;\n    var row = params.row;\n    var defaultSlot = slots ? slots.default : null;\n    var radioSlot = slots ? slots.radio : null;\n    var isChecked = row === selectRow;\n    var isDisabled = !!checkMethod;\n    var on;\n\n    if (!isHidden) {\n      on = {\n        click: function click(evnt) {\n          if (!isDisabled) {\n            $table.triggerRadioRowEvent(evnt, params);\n          }\n        }\n      };\n\n      if (checkMethod) {\n        isDisabled = !checkMethod({\n          row: row\n        });\n      }\n    }\n\n    var radioParams = _objectSpread(_objectSpread({}, params), {}, {\n      checked: isChecked,\n      disabled: isDisabled\n    });\n\n    return radioSlot ? $table.callSlot(radioSlot, radioParams, h) : [h('span', {\n      class: ['vxe-cell--radio', {\n        'is--checked': isChecked,\n        'is--disabled': isDisabled\n      }],\n      on: on\n    }, [h('span', {\n      class: 'vxe-radio--icon vxe-radio--checked-icon'\n    }), h('span', {\n      class: 'vxe-radio--icon vxe-radio--unchecked-icon'\n    })].concat(defaultSlot || labelField ? [h('span', {\n      class: 'vxe-radio--label'\n    }, defaultSlot ? $table.callSlot(defaultSlot, radioParams, h) : XEUtils.get(row, labelField))] : []))];\n  },\n  renderTreeRadioCell: function renderTreeRadioCell(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderRadioCell(h, params));\n  },\n\n  /**\r\n   * 多选\r\n   */\n  renderSelectionHeader: function renderSelectionHeader(h, params) {\n    var $table = params.$table,\n        column = params.column,\n        isHidden = params.isHidden;\n    var isAllCheckboxIndeterminate = $table.isIndeterminate,\n        isAllCheckboxDisabled = $table.isAllCheckboxDisabled;\n    var slots = column.slots;\n    var headerSlot = slots ? slots.header : null;\n    var titleSlot = slots ? slots.title : null;\n    var checkboxOpts = $table.checkboxOpts;\n    var headerTitle = column.getTitle();\n    var isChecked = false;\n    var on;\n\n    if (!isHidden) {\n      isChecked = isAllCheckboxDisabled ? false : $table.isAllSelected;\n      on = {\n        click: function click(evnt) {\n          if (!isAllCheckboxDisabled) {\n            $table.triggerCheckAllEvent(evnt, !isChecked);\n          }\n        }\n      };\n    }\n\n    var checkboxParams = _objectSpread(_objectSpread({}, params), {}, {\n      checked: isChecked,\n      disabled: isAllCheckboxDisabled,\n      indeterminate: isAllCheckboxIndeterminate\n    });\n\n    if (headerSlot) {\n      return renderTitleContent(h, checkboxParams, $table.callSlot(headerSlot, checkboxParams, h));\n    }\n\n    if (checkboxOpts.checkStrictly ? !checkboxOpts.showHeader : checkboxOpts.showHeader === false) {\n      return renderTitleContent(h, checkboxParams, [h('span', {\n        class: 'vxe-checkbox--label'\n      }, titleSlot ? $table.callSlot(titleSlot, checkboxParams, h) : headerTitle)]);\n    }\n\n    return renderTitleContent(h, checkboxParams, [h('span', {\n      class: ['vxe-cell--checkbox', {\n        'is--checked': isChecked,\n        'is--disabled': isAllCheckboxDisabled,\n        'is--indeterminate': isAllCheckboxIndeterminate\n      }],\n      attrs: {\n        title: GlobalConfig.i18n('vxe.table.allTitle')\n      },\n      on: on\n    }, [h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--checked-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    }), h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    }), h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    })].concat(titleSlot || headerTitle ? [h('span', {\n      class: 'vxe-checkbox--label'\n    }, titleSlot ? $table.callSlot(titleSlot, checkboxParams, h) : headerTitle)] : []))]);\n  },\n  renderSelectionCell: function renderSelectionCell(h, params) {\n    var $table = params.$table,\n        row = params.row,\n        column = params.column,\n        isHidden = params.isHidden;\n    var treeConfig = $table.treeConfig,\n        treeIndeterminates = $table.treeIndeterminates;\n    var _$table$checkboxOpts = $table.checkboxOpts,\n        labelField = _$table$checkboxOpts.labelField,\n        checkMethod = _$table$checkboxOpts.checkMethod;\n    var slots = column.slots;\n    var defaultSlot = slots ? slots.default : null;\n    var checkboxSlot = slots ? slots.checkbox : null;\n    var indeterminate = false;\n    var isChecked = false;\n    var isDisabled = !!checkMethod;\n    var on;\n\n    if (!isHidden) {\n      isChecked = $table.selection.indexOf(row) > -1;\n      on = {\n        click: function click(evnt) {\n          if (!isDisabled) {\n            $table.triggerCheckRowEvent(evnt, params, !isChecked);\n          }\n        }\n      };\n\n      if (checkMethod) {\n        isDisabled = !checkMethod({\n          row: row\n        });\n      }\n\n      if (treeConfig) {\n        indeterminate = treeIndeterminates.indexOf(row) > -1;\n      }\n    }\n\n    var checkboxParams = _objectSpread(_objectSpread({}, params), {}, {\n      checked: isChecked,\n      disabled: isDisabled,\n      indeterminate: indeterminate\n    });\n\n    return checkboxSlot ? $table.callSlot(checkboxSlot, checkboxParams, h) : [h('span', {\n      class: ['vxe-cell--checkbox', {\n        'is--checked': isChecked,\n        'is--disabled': isDisabled,\n        'is--indeterminate': indeterminate\n      }],\n      on: on\n    }, [h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--checked-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    }), h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    }), h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    })].concat(defaultSlot || labelField ? [h('span', {\n      class: 'vxe-checkbox--label'\n    }, defaultSlot ? $table.callSlot(defaultSlot, checkboxParams, h) : XEUtils.get(row, labelField))] : []))];\n  },\n  renderTreeSelectionCell: function renderTreeSelectionCell(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderSelectionCell(h, params));\n  },\n  renderSelectionCellByProp: function renderSelectionCellByProp(h, params) {\n    var $table = params.$table,\n        row = params.row,\n        column = params.column,\n        isHidden = params.isHidden;\n    var treeConfig = $table.treeConfig,\n        treeIndeterminates = $table.treeIndeterminates;\n    var _$table$checkboxOpts2 = $table.checkboxOpts,\n        labelField = _$table$checkboxOpts2.labelField,\n        property = _$table$checkboxOpts2.checkField,\n        halfField = _$table$checkboxOpts2.halfField,\n        checkMethod = _$table$checkboxOpts2.checkMethod;\n    var slots = column.slots;\n    var defaultSlot = slots ? slots.default : null;\n    var checkboxSlot = slots ? slots.checkbox : null;\n    var indeterminate = false;\n    var isChecked = false;\n    var isDisabled = !!checkMethod;\n    var on;\n\n    if (!isHidden) {\n      isChecked = XEUtils.get(row, property);\n      on = {\n        click: function click(evnt) {\n          if (!isDisabled) {\n            $table.triggerCheckRowEvent(evnt, params, !isChecked);\n          }\n        }\n      };\n\n      if (checkMethod) {\n        isDisabled = !checkMethod({\n          row: row\n        });\n      }\n\n      if (treeConfig) {\n        indeterminate = treeIndeterminates.indexOf(row) > -1;\n      }\n    }\n\n    var checkboxParams = _objectSpread(_objectSpread({}, params), {}, {\n      checked: isChecked,\n      disabled: isDisabled,\n      indeterminate: indeterminate\n    });\n\n    return checkboxSlot ? $table.callSlot(checkboxSlot, checkboxParams, h) : [h('span', {\n      class: ['vxe-cell--checkbox', {\n        'is--checked': isChecked,\n        'is--disabled': isDisabled,\n        'is--indeterminate': halfField && !isChecked ? row[halfField] : indeterminate\n      }],\n      on: on\n    }, [h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--checked-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    }), h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    }), h('span', {\n      class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon',\n      style: {\n        '--checkedColor': $_theme.color\n      }\n    })].concat(defaultSlot || labelField ? [h('span', {\n      class: 'vxe-checkbox--label'\n    }, defaultSlot ? $table.callSlot(defaultSlot, checkboxParams, h) : XEUtils.get(row, labelField))] : []))];\n  },\n  renderTreeSelectionCellByProp: function renderTreeSelectionCellByProp(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderSelectionCellByProp(h, params));\n  },\n\n  /**\r\n   * 展开行\r\n   */\n  renderExpandCell: function renderExpandCell(h, params) {\n    var $table = params.$table,\n        isHidden = params.isHidden,\n        row = params.row,\n        column = params.column;\n    var expandOpts = $table.expandOpts,\n        rowExpandeds = $table.rowExpandeds,\n        expandLazyLoadeds = $table.expandLazyLoadeds;\n    var lazy = expandOpts.lazy,\n        labelField = expandOpts.labelField,\n        iconLoaded = expandOpts.iconLoaded,\n        showIcon = expandOpts.showIcon,\n        iconOpen = expandOpts.iconOpen,\n        iconClose = expandOpts.iconClose,\n        visibleMethod = expandOpts.visibleMethod;\n    var slots = column.slots;\n    var defaultSlot = slots ? slots.default : null;\n    var isAceived = false;\n    var isLazyLoaded = false;\n\n    if (slots && slots.icon) {\n      return $table.callSlot(slots.icon, params, h);\n    }\n\n    if (!isHidden) {\n      isAceived = rowExpandeds.indexOf(params.row) > -1;\n\n      if (lazy) {\n        isLazyLoaded = expandLazyLoadeds.indexOf(row) > -1;\n      }\n    }\n\n    return [showIcon && (!visibleMethod || visibleMethod(params)) ? h('span', {\n      class: ['vxe-table--expanded', {\n        'is--active': isAceived\n      }],\n      on: {\n        click: function click(evnt) {\n          $table.triggerRowExpandEvent(evnt, params);\n        }\n      }\n    }, [h('i', {\n      class: ['vxe-table--expand-btn', isLazyLoaded ? iconLoaded || GlobalConfig.icon.TABLE_EXPAND_LOADED : isAceived ? iconOpen || GlobalConfig.icon.TABLE_EXPAND_OPEN : iconClose || GlobalConfig.icon.TABLE_EXPAND_CLOSE]\n    })]) : null, defaultSlot || labelField ? h('span', {\n      class: 'vxe-table--expand-label'\n    }, defaultSlot ? $table.callSlot(defaultSlot, params, h) : XEUtils.get(row, labelField)) : null];\n  },\n  renderExpandData: function renderExpandData(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var slots = column.slots,\n        contentRender = column.contentRender;\n\n    if (slots && slots.content) {\n      return $table.callSlot(slots.content, params, h);\n    }\n\n    if (contentRender) {\n      var compConf = VXETable.renderer.get(contentRender.name);\n\n      if (compConf && compConf.renderExpand) {\n        return compConf.renderExpand.call($table, h, contentRender, params);\n      }\n    }\n\n    return [];\n  },\n\n  /**\r\n   * HTML 标签\r\n   */\n  renderHTMLCell: function renderHTMLCell(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var slots = column.slots;\n\n    if (slots && slots.default) {\n      return $table.callSlot(slots.default, params, h);\n    }\n\n    return [h('span', {\n      class: 'vxe-cell--html',\n      domProps: {\n        innerHTML: getDefaultCellLabel(params)\n      }\n    })];\n  },\n  renderTreeHTMLCell: function renderTreeHTMLCell(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderHTMLCell(h, params));\n  },\n\n  /**\r\n   * 排序和筛选\r\n   */\n  renderSortAndFilterHeader: function renderSortAndFilterHeader(h, params) {\n    return Cell.renderDefaultHeader(h, params).concat(Cell.renderSortIcon(h, params)).concat(Cell.renderFilterIcon(h, params));\n  },\n\n  /**\r\n   * 排序\r\n   */\n  renderSortHeader: function renderSortHeader(h, params) {\n    return Cell.renderDefaultHeader(h, params).concat(Cell.renderSortIcon(h, params));\n  },\n  renderSortIcon: function renderSortIcon(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var _$table$sortOpts = $table.sortOpts,\n        showIcon = _$table$sortOpts.showIcon,\n        iconAsc = _$table$sortOpts.iconAsc,\n        iconDesc = _$table$sortOpts.iconDesc;\n    return showIcon ? [h('span', {\n      class: 'vxe-cell--sort',\n      style: {\n        visibility: column.order === 'asc' || column.order === 'desc' ? 'visible' : '' //加\n\n      }\n    }, [h('i', {\n      class: ['vxe-sort--asc-btn', iconAsc || GlobalConfig.icon.TABLE_SORT_ASC, {\n        'sort--active': column.order === 'asc'\n      }],\n      attrs: {\n        title: GlobalConfig.i18n('vxe.table.sortAsc')\n      },\n      on: {\n        click: function click(evnt) {\n          $table.triggerSortEvent(evnt, column, 'asc');\n        }\n      }\n    }), h('i', {\n      class: ['vxe-sort--desc-btn', iconDesc || GlobalConfig.icon.TABLE_SORT_DESC, {\n        'sort--active': column.order === 'desc'\n      }],\n      attrs: {\n        title: GlobalConfig.i18n('vxe.table.sortDesc')\n      },\n      on: {\n        click: function click(evnt) {\n          $table.triggerSortEvent(evnt, column, 'desc');\n        }\n      }\n    })])] : [];\n  },\n\n  /**\r\n   * 筛选\r\n   */\n  renderFilterHeader: function renderFilterHeader(h, params) {\n    return Cell.renderDefaultHeader(h, params).concat(Cell.renderFilterIcon(h, params));\n  },\n  renderFilterIcon: function renderFilterIcon(h, params) {\n    var $table = params.$table,\n        column = params.column,\n        hasFilter = params.hasFilter;\n    var filterStore = $table.filterStore,\n        filterOpts = $table.filterOpts;\n    var showIcon = filterOpts.showIcon,\n        iconNone = filterOpts.iconNone,\n        iconMatch = filterOpts.iconMatch;\n    return showIcon ? [h('span', {\n      class: ['vxe-cell--filter', {\n        'is--active': filterStore.visible && filterStore.column === column\n      }]\n    }, [h('i', {\n      class: ['vxe-filter--btn', hasFilter ? iconMatch || GlobalConfig.icon.TABLE_FILTER_MATCH : iconNone || GlobalConfig.icon.TABLE_FILTER_NONE],\n      attrs: {\n        title: GlobalConfig.i18n('vxe.table.filter')\n      },\n      on: {\n        click: function click(evnt) {\n          $table.triggerFilterEvent(evnt, params.column, params);\n        }\n      }\n    })])] : [];\n  },\n\n  /**\r\n   * 可编辑\r\n   */\n  renderEditHeader: function renderEditHeader(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var editRules = $table.editRules,\n        editOpts = $table.editOpts;\n    var sortable = column.sortable,\n        remoteSort = column.remoteSort,\n        filters = column.filters,\n        editRender = column.editRender;\n    var isRequired;\n\n    if (editRules) {\n      var columnRules = XEUtils.get(editRules, params.column.property);\n\n      if (columnRules) {\n        isRequired = columnRules.some(function (rule) {\n          return rule.required;\n        });\n      }\n    }\n\n    return [isRequired && editOpts.showAsterisk ? h('i', {\n      class: 'vxe-cell--required-icon'\n    }) : null, isEnableConf(editRender) && editOpts.showIcon ? h('i', {\n      class: ['vxe-cell--edit-icon', editOpts.icon || GlobalConfig.icon.TABLE_EDIT]\n    }) : null].concat(Cell.renderDefaultHeader(h, params)).concat(sortable || remoteSort ? Cell.renderSortIcon(h, params) : []).concat(filters ? Cell.renderFilterIcon(h, params) : []);\n  },\n  // 行格编辑模式\n  renderRowEdit: function renderRowEdit(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var editRender = column.editRender;\n    var actived = $table.editStore.actived;\n    return Cell.runRenderer(h, params, this, isEnableConf(editRender) && actived && actived.row === params.row);\n  },\n  renderTreeRowEdit: function renderTreeRowEdit(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderRowEdit(h, params));\n  },\n  // 单元格编辑模式\n  renderCellEdit: function renderCellEdit(h, params) {\n    var $table = params.$table,\n        column = params.column;\n    var editRender = column.editRender;\n    var actived = $table.editStore.actived;\n    return Cell.runRenderer(h, params, this, isEnableConf(editRender) && actived && actived.row === params.row && actived.column === params.column);\n  },\n  renderTreeCellEdit: function renderTreeCellEdit(h, params) {\n    return Cell.renderTreeIcon(h, params, Cell.renderCellEdit(h, params));\n  },\n  runRenderer: function runRenderer(h, params, _vm, isEdit) {\n    var $table = params.$table,\n        column = params.column;\n    var slots = column.slots,\n        editRender = column.editRender,\n        formatter = column.formatter;\n    var compConf = VXETable.renderer.get(editRender.name);\n\n    if (isEdit) {\n      if (slots && slots.edit) {\n        return $table.callSlot(slots.edit, params, h);\n      }\n\n      return compConf && compConf.renderEdit ? compConf.renderEdit.call($table, h, editRender, Object.assign({\n        $type: 'edit'\n      }, params)) : [];\n    }\n\n    if (slots && slots.default) {\n      return $table.callSlot(slots.default, params, h);\n    }\n\n    if (formatter) {\n      return [h('span', {\n        class: 'vxe-cell--label'\n      }, [getDefaultCellLabel(params)])];\n    }\n\n    return Cell.renderDefaultCell.call(_vm, h, params);\n  }\n};\nexport default Cell;",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\table\\src\\cell.js"],"names":["$table","column","params","titleHelp","h","class","GlobalConfig","on","mouseenter","mouseleave","type","showHeaderOverflow","allColumnHeaderOverflow","tooltipOpts","showAllTip","headOverflow","XEUtils","showTitle","showTooltip","ons","DomTools","evnt","domProps","innerHTML","content","_columnIndex","items","slots","editRender","cellRender","renderOpts","compConf","VXETable","UtilTools","row","Cell","createColumn","sortable","remoteSort","filters","treeNode","_vm","editConfig","editOpts","checkboxOpts","$xetable","renMaps","renderHeader","renderCell","renderFooter","renderDefaultFooter","renderHeaderTitle","renderTitleContent","renderDefaultHeader","renderHelpIcon","renderDefaultCell","funName","$type","cellValue","cellPlaceholder","eqEmptyValue","renderTreeCell","getFooterContent","renderTreeIcon","isHidden","treeOpts","treeExpandeds","treeLazyLoadeds","level","children","hasChild","indent","lazy","trigger","iconLoaded","showIcon","iconOpen","iconClose","rowChilds","hasLazyChilds","isAceived","isLazyLoaded","style","paddingLeft","renderIndexHeader","renderIndexCell","seqOpts","$seq","seq","seqMethod","renderTreeIndexCell","renderRadioHeader","headerSlot","titleSlot","renderRadioCell","radioOpts","selectRow","labelField","checkMethod","defaultSlot","radioSlot","isChecked","isDisabled","click","radioParams","checked","disabled","renderTreeRadioCell","renderSelectionHeader","isAllCheckboxIndeterminate","isAllCheckboxDisabled","headerTitle","checkboxParams","indeterminate","attrs","title","$_theme","color","renderSelectionCell","treeConfig","treeIndeterminates","checkboxSlot","renderTreeSelectionCell","renderSelectionCellByProp","property","halfField","renderTreeSelectionCellByProp","renderExpandCell","expandOpts","rowExpandeds","expandLazyLoadeds","visibleMethod","renderExpandData","contentRender","renderHTMLCell","getDefaultCellLabel","renderTreeHTMLCell","renderSortAndFilterHeader","renderSortHeader","renderSortIcon","iconAsc","iconDesc","visibility","renderFilterHeader","renderFilterIcon","hasFilter","filterStore","filterOpts","iconNone","iconMatch","renderEditHeader","editRules","columnRules","isRequired","rule","renderRowEdit","actived","isEnableConf","renderTreeRowEdit","renderCellEdit","renderTreeCellEdit","runRenderer","formatter"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport VXETable from '../../v-x-e-table'\r\nimport { UtilTools, DomTools } from '../../tools'\r\nimport { eqEmptyValue, isEnableConf } from '../../tools/src/utils'\r\n\r\nfunction renderHelpIcon (h, params) {\r\n  const { $table, column } = params\r\n  const { titleHelp } = column\r\n  return titleHelp ? [\r\n    h('i', {\r\n      class: ['vxe-cell-help-icon', titleHelp.icon || GlobalConfig.icon.TABLE_HELP],\r\n      on: {\r\n        mouseenter (evnt) {\r\n          $table.triggerHeaderHelpEvent(evnt, params)\r\n        },\r\n        mouseleave (evnt) {\r\n          $table.handleTargetLeaveEvent(evnt)\r\n        }\r\n      }\r\n    })\r\n  ] : []\r\n}\r\n\r\nfunction renderTitleContent (h, params, content) {\r\n  const { $table, column } = params\r\n  const { type, showHeaderOverflow } = column\r\n  const { showHeaderOverflow: allColumnHeaderOverflow, tooltipOpts } = $table\r\n  const showAllTip = tooltipOpts.showAll || tooltipOpts.enabled\r\n  const headOverflow = XEUtils.isUndefined(showHeaderOverflow) || XEUtils.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow\r\n  const showTitle = headOverflow === 'title'\r\n  const showTooltip = headOverflow === true || headOverflow === 'tooltip'\r\n  const ons = {}\r\n  if (showTitle || showTooltip || showAllTip) {\r\n    ons.mouseenter = evnt => {\r\n      if ($table._isResize) {\r\n        return\r\n      }\r\n      if (showTitle) {\r\n        DomTools.updateCellTitle(evnt.currentTarget, column)\r\n      } else if (showTooltip || showAllTip) {\r\n        $table.triggerHeaderTooltipEvent(evnt, params)\r\n      }\r\n    }\r\n  }\r\n  if (showTooltip || showAllTip) {\r\n    ons.mouseleave = evnt => {\r\n      if ($table._isResize) {\r\n        return\r\n      }\r\n      if (showTooltip || showAllTip) {\r\n        $table.handleTargetLeaveEvent(evnt)\r\n      }\r\n    }\r\n  }\r\n  return [\r\n    type === 'html' && XEUtils.isString(content) ? h('span', {\r\n      class: 'vxe-cell--title',\r\n      domProps: {\r\n        innerHTML: content\r\n      },\r\n      on: ons\r\n    }) : h('span', {\r\n      class: 'vxe-cell--title',\r\n      on: ons\r\n    }, content)\r\n  ]\r\n}\r\n\r\nfunction getFooterContent (h, params) {\r\n  const { $table, column, _columnIndex, items } = params\r\n  const { slots, editRender, cellRender } = column\r\n  const renderOpts = editRender || cellRender\r\n  if (slots && slots.footer) {\r\n    return $table.callSlot(slots.footer, params, h)\r\n  }\r\n  if (renderOpts) {\r\n    const compConf = VXETable.renderer.get(renderOpts.name)\r\n    if (compConf && compConf.renderFooter) {\r\n      return compConf.renderFooter.call($table, h, renderOpts, params)\r\n    }\r\n  }\r\n  return [UtilTools.formatText(items[_columnIndex], 1)]\r\n}\r\n\r\nfunction getDefaultCellLabel (params) {\r\n  const { $table, row, column } = params\r\n  return UtilTools.formatText($table.getCellLabel(row, column), 1)\r\n}\r\n\r\nexport const Cell = {\r\n  createColumn ($xetable, _vm) {\r\n    const { type, sortable, remoteSort, filters, editRender, treeNode } = _vm\r\n    const { editConfig, editOpts, checkboxOpts } = $xetable\r\n    const renMaps = {\r\n      renderHeader: this.renderDefaultHeader,\r\n      renderCell: treeNode ? this.renderTreeCell : this.renderDefaultCell,\r\n      renderFooter: this.renderDefaultFooter\r\n    }\r\n    switch (type) {\r\n      case 'index':\r\n      case 'seq':\r\n        renMaps.renderHeader = this.renderIndexHeader\r\n        renMaps.renderCell = treeNode ? this.renderTreeIndexCell : this.renderIndexCell\r\n        break\r\n      case 'radio':\r\n        renMaps.renderHeader = this.renderRadioHeader\r\n        renMaps.renderCell = treeNode ? this.renderTreeRadioCell : this.renderRadioCell\r\n        break\r\n      case 'checkbox':\r\n        renMaps.renderHeader = this.renderSelectionHeader\r\n        renMaps.renderCell = checkboxOpts.checkField ? (treeNode ? this.renderTreeSelectionCellByProp : this.renderSelectionCellByProp) : (treeNode ? this.renderTreeSelectionCell : this.renderSelectionCell)\r\n        break\r\n      case 'expand':\r\n        renMaps.renderCell = this.renderExpandCell\r\n        renMaps.renderData = this.renderExpandData\r\n        break\r\n      case 'html':\r\n        renMaps.renderCell = treeNode ? this.renderTreeHTMLCell : this.renderHTMLCell\r\n        if (filters && (sortable || remoteSort)) {\r\n          renMaps.renderHeader = this.renderSortAndFilterHeader\r\n        } else if (sortable || remoteSort) {\r\n          renMaps.renderHeader = this.renderSortHeader\r\n        } else if (filters) {\r\n          renMaps.renderHeader = this.renderFilterHeader\r\n        }\r\n        break\r\n      default:\r\n        if (editConfig && editRender) {\r\n          renMaps.renderHeader = this.renderEditHeader\r\n          renMaps.renderCell = editOpts.mode === 'cell' ? (treeNode ? this.renderTreeCellEdit : this.renderCellEdit) : (treeNode ? this.renderTreeRowEdit : this.renderRowEdit)\r\n        } else if (filters && (sortable || remoteSort)) {\r\n          renMaps.renderHeader = this.renderSortAndFilterHeader\r\n        } else if (sortable || remoteSort) {\r\n          renMaps.renderHeader = this.renderSortHeader\r\n        } else if (filters) {\r\n          renMaps.renderHeader = this.renderFilterHeader\r\n        }\r\n    }\r\n    return UtilTools.getColumnConfig($xetable, _vm, renMaps)\r\n  },\r\n  /**\r\n   * 单元格\r\n   */\r\n  renderHeaderTitle (h, params) {\r\n    const { $table, column } = params\r\n    const { slots, editRender, cellRender } = column\r\n    const renderOpts = editRender || cellRender\r\n    if (slots && slots.header) {\r\n      return renderTitleContent(h, params, $table.callSlot(slots.header, params, h))\r\n    }\r\n    if (renderOpts) {\r\n      const compConf = VXETable.renderer.get(renderOpts.name)\r\n      if (compConf && compConf.renderHeader) {\r\n        return renderTitleContent(h, params, compConf.renderHeader.call($table, h, renderOpts, params))\r\n      }\r\n    }\r\n    return renderTitleContent(h, params, UtilTools.formatText(column.getTitle(), 1))\r\n  },\r\n  renderDefaultHeader (h, params) {\r\n    return renderHelpIcon(h, params).concat(Cell.renderHeaderTitle(h, params))\r\n  },\r\n  renderDefaultCell (h, params) {\r\n    const { $table, row, column } = params\r\n    const { slots, editRender, cellRender } = column\r\n    const renderOpts = editRender || cellRender\r\n    if (slots && slots.default) {\r\n      return $table.callSlot(slots.default, params, h)\r\n    }\r\n    if (renderOpts) {\r\n      const funName = editRender ? 'renderCell' : 'renderDefault'\r\n      const compConf = VXETable.renderer.get(renderOpts.name)\r\n      if (compConf && compConf[funName]) {\r\n        return compConf[funName].call($table, h, renderOpts, Object.assign({ $type: editRender ? 'edit' : 'cell' }, params))\r\n      }\r\n    }\r\n    const cellValue = $table.getCellLabel(row, column)\r\n    const cellPlaceholder = editRender ? editRender.placeholder : ''\r\n    return [\r\n      h('span', {\r\n        class: 'vxe-cell--label'\r\n      }, editRender && eqEmptyValue(cellValue) ? [\r\n        // 如果设置占位符\r\n        h('span', {\r\n          class: 'vxe-cell--placeholder'\r\n        }, UtilTools.formatText(UtilTools.getFuncText(cellPlaceholder), 1))\r\n      ] : UtilTools.formatText(cellValue, 1))\r\n    ]\r\n  },\r\n  renderTreeCell (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderDefaultCell.call(this, h, params))\r\n  },\r\n  renderDefaultFooter (h, params) {\r\n    return [\r\n      h('span', {\r\n        class: 'vxe-cell--item'\r\n      }, getFooterContent(h, params))\r\n    ]\r\n  },\r\n\r\n  /**\r\n   * 树节点\r\n   */\r\n  renderTreeIcon (h, params, cellVNodes) {\r\n    const { $table, isHidden } = params\r\n    const { treeOpts, treeExpandeds, treeLazyLoadeds } = $table\r\n    const { row, column, level } = params\r\n    const { slots } = column\r\n    const { children, hasChild, indent, lazy, trigger, iconLoaded, showIcon, iconOpen, iconClose } = treeOpts\r\n    const rowChilds = row[children]\r\n    let hasLazyChilds = false\r\n    let isAceived = false\r\n    let isLazyLoaded = false\r\n    const on = {}\r\n    if (slots && slots.icon) {\r\n      return $table.callSlot(slots.icon, params, h, cellVNodes)\r\n    }\r\n    if (!isHidden) {\r\n      isAceived = treeExpandeds.indexOf(row) > -1\r\n      if (lazy) {\r\n        isLazyLoaded = treeLazyLoadeds.indexOf(row) > -1\r\n        hasLazyChilds = row[hasChild]\r\n      }\r\n    }\r\n    if (!trigger || trigger === 'default') {\r\n      on.click = evnt => $table.triggerTreeExpandEvent(evnt, params)\r\n    }\r\n    return [\r\n      h('div', {\r\n        class: ['vxe-cell--tree-node', {\r\n          'is--active': isAceived\r\n        }],\r\n        style: {\r\n          paddingLeft: `${level * indent}px`\r\n        }\r\n      }, [\r\n        showIcon && ((rowChilds && rowChilds.length) || hasLazyChilds) ? [\r\n          h('div', {\r\n            class: 'vxe-tree--btn-wrapper',\r\n            on\r\n          }, [\r\n            h('i', {\r\n              class: ['vxe-tree--node-btn', isLazyLoaded ? (iconLoaded || GlobalConfig.icon.TABLE_TREE_LOADED) : (isAceived ? (iconOpen || GlobalConfig.icon.TABLE_TREE_OPEN) : (iconClose || GlobalConfig.icon.TABLE_TREE_CLOSE))]\r\n            })\r\n          ])\r\n        ] : null,\r\n        h('div', {\r\n          class: 'vxe-tree-cell'\r\n        }, cellVNodes)\r\n      ])\r\n    ]\r\n  },\r\n\r\n  /**\r\n   * 索引\r\n   */\r\n  renderIndexHeader (h, params) {\r\n    const { $table, column } = params\r\n    const { slots } = column\r\n    return renderTitleContent(h, params, slots && slots.header ? $table.callSlot(slots.header, params, h) : UtilTools.formatText(column.getTitle(), 1))\r\n  },\r\n  renderIndexCell (h, params) {\r\n    const { $table, column } = params\r\n    const { seqOpts } = $table\r\n    const { slots } = column\r\n    if (slots && slots.default) {\r\n      return $table.callSlot(slots.default, params, h)\r\n    }\r\n    const { $seq, seq, level } = params\r\n    const seqMethod = seqOpts.seqMethod\r\n    return [UtilTools.formatText(seqMethod ? seqMethod(params) : level ? `${$seq}.${seq}` : (seqOpts.startIndex) + seq, 1)]\r\n  },\r\n  renderTreeIndexCell (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderIndexCell(h, params))\r\n  },\r\n\r\n  /**\r\n   * 单选\r\n   */\r\n  renderRadioHeader (h, params) {\r\n    const { $table, column } = params\r\n    const { slots } = column\r\n    const headerSlot = slots ? slots.header : null\r\n    const titleSlot = slots ? slots.title : null\r\n    return renderTitleContent(h, params, headerSlot ? $table.callSlot(headerSlot, params, h) : [\r\n      h('span', {\r\n        class: 'vxe-radio--label'\r\n      }, titleSlot ? $table.callSlot(titleSlot, params, h) : UtilTools.formatText(column.getTitle(), 1))\r\n    ])\r\n  },\r\n  renderRadioCell (h, params) {\r\n    const { $table, column, isHidden } = params\r\n    const { radioOpts, selectRow } = $table\r\n    const { slots } = column\r\n    const { labelField, checkMethod } = radioOpts\r\n    const { row } = params\r\n    const defaultSlot = slots ? slots.default : null\r\n    const radioSlot = slots ? slots.radio : null\r\n    const isChecked = row === selectRow\r\n    let isDisabled = !!checkMethod\r\n    let on\r\n    if (!isHidden) {\r\n      on = {\r\n        click (evnt) {\r\n          if (!isDisabled) {\r\n            $table.triggerRadioRowEvent(evnt, params)\r\n          }\r\n        }\r\n      }\r\n      if (checkMethod) {\r\n        isDisabled = !checkMethod({ row })\r\n      }\r\n    }\r\n    const radioParams = { ...params, checked: isChecked, disabled: isDisabled }\r\n    return radioSlot ? $table.callSlot(radioSlot, radioParams, h) : [\r\n      h('span', {\r\n        class: ['vxe-cell--radio', {\r\n          'is--checked': isChecked,\r\n          'is--disabled': isDisabled\r\n        }],\r\n        on\r\n      }, [\r\n        h('span', {\r\n          class: 'vxe-radio--icon vxe-radio--checked-icon'\r\n        }),\r\n        h('span', {\r\n          class: 'vxe-radio--icon vxe-radio--unchecked-icon'\r\n        })\r\n      ].concat(defaultSlot || labelField ? [\r\n        h('span', {\r\n          class: 'vxe-radio--label'\r\n        }, defaultSlot ? $table.callSlot(defaultSlot, radioParams, h) : XEUtils.get(row, labelField))\r\n      ] : []))\r\n    ]\r\n  },\r\n  renderTreeRadioCell (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderRadioCell(h, params))\r\n  },\r\n\r\n  /**\r\n   * 多选\r\n   */\r\n  renderSelectionHeader (h, params) {\r\n    const { $table, column, isHidden } = params\r\n    const { isIndeterminate: isAllCheckboxIndeterminate, isAllCheckboxDisabled } = $table\r\n    const { slots } = column\r\n    const headerSlot = slots ? slots.header : null\r\n    const titleSlot = slots ? slots.title : null\r\n    const checkboxOpts = $table.checkboxOpts\r\n    const headerTitle = column.getTitle()\r\n    let isChecked = false\r\n    let on\r\n    if (!isHidden) {\r\n      isChecked = isAllCheckboxDisabled ? false : $table.isAllSelected\r\n      on = {\r\n        click (evnt) {\r\n          if (!isAllCheckboxDisabled) {\r\n            $table.triggerCheckAllEvent(evnt, !isChecked)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const checkboxParams = { ...params, checked: isChecked, disabled: isAllCheckboxDisabled, indeterminate: isAllCheckboxIndeterminate }\r\n    if (headerSlot) {\r\n      return renderTitleContent(h, checkboxParams, $table.callSlot(headerSlot, checkboxParams, h))\r\n    }\r\n    if (checkboxOpts.checkStrictly ? !checkboxOpts.showHeader : checkboxOpts.showHeader === false) {\r\n      return renderTitleContent(h, checkboxParams, [\r\n        h('span', {\r\n          class: 'vxe-checkbox--label'\r\n        }, titleSlot ? $table.callSlot(titleSlot, checkboxParams, h) : headerTitle)\r\n      ])\r\n    }\r\n    return renderTitleContent(h, checkboxParams, [\r\n      h('span', {\r\n        class: ['vxe-cell--checkbox', {\r\n          'is--checked': isChecked,\r\n          'is--disabled': isAllCheckboxDisabled,\r\n          'is--indeterminate': isAllCheckboxIndeterminate\r\n        }],\r\n        attrs: {\r\n          title: GlobalConfig.i18n('vxe.table.allTitle')\r\n        },\r\n        on\r\n      }, [\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--checked-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        }),\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        }),\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        })\r\n      ].concat(titleSlot || headerTitle ? [\r\n        h('span', {\r\n          class: 'vxe-checkbox--label'\r\n        }, titleSlot ? $table.callSlot(titleSlot, checkboxParams, h) : headerTitle)\r\n      ] : []))\r\n    ])\r\n  },\r\n  renderSelectionCell (h, params) {\r\n    const { $table, row, column, isHidden } = params\r\n    const { treeConfig, treeIndeterminates } = $table\r\n    const { labelField, checkMethod } = $table.checkboxOpts\r\n    const { slots } = column\r\n    const defaultSlot = slots ? slots.default : null\r\n    const checkboxSlot = slots ? slots.checkbox : null\r\n    let indeterminate = false\r\n    let isChecked = false\r\n    let isDisabled = !!checkMethod\r\n    let on\r\n    if (!isHidden) {\r\n      isChecked = $table.selection.indexOf(row) > -1\r\n      on = {\r\n        click (evnt) {\r\n          if (!isDisabled) {\r\n            $table.triggerCheckRowEvent(evnt, params, !isChecked)\r\n          }\r\n        }\r\n      }\r\n      if (checkMethod) {\r\n        isDisabled = !checkMethod({ row })\r\n      }\r\n      if (treeConfig) {\r\n        indeterminate = treeIndeterminates.indexOf(row) > -1\r\n      }\r\n    }\r\n    const checkboxParams = { ...params, checked: isChecked, disabled: isDisabled, indeterminate }\r\n    return checkboxSlot ? $table.callSlot(checkboxSlot, checkboxParams, h) : [\r\n      h('span', {\r\n        class: ['vxe-cell--checkbox', {\r\n          'is--checked': isChecked,\r\n          'is--disabled': isDisabled,\r\n          'is--indeterminate': indeterminate\r\n        }],\r\n        on\r\n      }, [\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--checked-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        }),\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        }),\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        })\r\n      ].concat(defaultSlot || labelField ? [\r\n        h('span', {\r\n          class: 'vxe-checkbox--label'\r\n        }, defaultSlot ? $table.callSlot(defaultSlot, checkboxParams, h) : XEUtils.get(row, labelField))\r\n      ] : []))\r\n    ]\r\n  },\r\n  renderTreeSelectionCell (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderSelectionCell(h, params))\r\n  },\r\n  renderSelectionCellByProp (h, params) {\r\n    const { $table, row, column, isHidden } = params\r\n    const { treeConfig, treeIndeterminates } = $table\r\n    const { labelField, checkField: property, halfField, checkMethod } = $table.checkboxOpts\r\n    const { slots } = column\r\n    const defaultSlot = slots ? slots.default : null\r\n    const checkboxSlot = slots ? slots.checkbox : null\r\n    let indeterminate = false\r\n    let isChecked = false\r\n    let isDisabled = !!checkMethod\r\n    let on\r\n    if (!isHidden) {\r\n      isChecked = XEUtils.get(row, property)\r\n      on = {\r\n        click (evnt) {\r\n          if (!isDisabled) {\r\n            $table.triggerCheckRowEvent(evnt, params, !isChecked)\r\n          }\r\n        }\r\n      }\r\n      if (checkMethod) {\r\n        isDisabled = !checkMethod({ row })\r\n      }\r\n      if (treeConfig) {\r\n        indeterminate = treeIndeterminates.indexOf(row) > -1\r\n      }\r\n    }\r\n    const checkboxParams = { ...params, checked: isChecked, disabled: isDisabled, indeterminate }\r\n    return checkboxSlot ? $table.callSlot(checkboxSlot, checkboxParams, h) : [\r\n      h('span', {\r\n        class: ['vxe-cell--checkbox', {\r\n          'is--checked': isChecked,\r\n          'is--disabled': isDisabled,\r\n          'is--indeterminate': halfField && !isChecked ? row[halfField] : indeterminate\r\n        }],\r\n        on\r\n      }, [\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--checked-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        }),\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--unchecked-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        }),\r\n        h('span', {\r\n          class: 'vxe-checkbox--icon vxe-checkbox--indeterminate-icon',\r\n          style:{'--checkedColor':$_theme.color}\r\n        })\r\n      ].concat(defaultSlot || labelField ? [\r\n        h('span', {\r\n          class: 'vxe-checkbox--label'\r\n        }, defaultSlot ? $table.callSlot(defaultSlot, checkboxParams, h) : XEUtils.get(row, labelField))\r\n      ] : []))\r\n    ]\r\n  },\r\n  renderTreeSelectionCellByProp (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderSelectionCellByProp(h, params))\r\n  },\r\n\r\n  /**\r\n   * 展开行\r\n   */\r\n  renderExpandCell (h, params) {\r\n    const { $table, isHidden, row, column } = params\r\n    const { expandOpts, rowExpandeds, expandLazyLoadeds } = $table\r\n    const { lazy, labelField, iconLoaded, showIcon, iconOpen, iconClose, visibleMethod } = expandOpts\r\n    const { slots } = column\r\n    const defaultSlot = slots ? slots.default : null\r\n    let isAceived = false\r\n    let isLazyLoaded = false\r\n    if (slots && slots.icon) {\r\n      return $table.callSlot(slots.icon, params, h)\r\n    }\r\n    if (!isHidden) {\r\n      isAceived = rowExpandeds.indexOf(params.row) > -1\r\n      if (lazy) {\r\n        isLazyLoaded = expandLazyLoadeds.indexOf(row) > -1\r\n      }\r\n    }\r\n    return [\r\n      showIcon && (!visibleMethod || visibleMethod(params)) ? h('span', {\r\n        class: ['vxe-table--expanded', {\r\n          'is--active': isAceived\r\n        }],\r\n        on: {\r\n          click (evnt) {\r\n            $table.triggerRowExpandEvent(evnt, params)\r\n          }\r\n        }\r\n      }, [\r\n        h('i', {\r\n          class: ['vxe-table--expand-btn', isLazyLoaded ? (iconLoaded || GlobalConfig.icon.TABLE_EXPAND_LOADED) : (isAceived ? (iconOpen || GlobalConfig.icon.TABLE_EXPAND_OPEN) : (iconClose || GlobalConfig.icon.TABLE_EXPAND_CLOSE))]\r\n        })\r\n      ]) : null,\r\n      defaultSlot || labelField ? h('span', {\r\n        class: 'vxe-table--expand-label'\r\n      }, defaultSlot ? $table.callSlot(defaultSlot, params, h) : XEUtils.get(row, labelField)) : null\r\n    ]\r\n  },\r\n  renderExpandData (h, params) {\r\n    const { $table, column } = params\r\n    const { slots, contentRender } = column\r\n    if (slots && slots.content) {\r\n      return $table.callSlot(slots.content, params, h)\r\n    }\r\n    if (contentRender) {\r\n      const compConf = VXETable.renderer.get(contentRender.name)\r\n      if (compConf && compConf.renderExpand) {\r\n        return compConf.renderExpand.call($table, h, contentRender, params)\r\n      }\r\n    }\r\n    return []\r\n  },\r\n\r\n  /**\r\n   * HTML 标签\r\n   */\r\n  renderHTMLCell (h, params) {\r\n    const { $table, column } = params\r\n    const { slots } = column\r\n    if (slots && slots.default) {\r\n      return $table.callSlot(slots.default, params, h)\r\n    }\r\n    return [\r\n      h('span', {\r\n        class: 'vxe-cell--html',\r\n        domProps: {\r\n          innerHTML: getDefaultCellLabel(params)\r\n        }\r\n      })\r\n    ]\r\n  },\r\n  renderTreeHTMLCell (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderHTMLCell(h, params))\r\n  },\r\n\r\n  /**\r\n   * 排序和筛选\r\n   */\r\n  renderSortAndFilterHeader (h, params) {\r\n    return Cell.renderDefaultHeader(h, params)\r\n      .concat(Cell.renderSortIcon(h, params))\r\n      .concat(Cell.renderFilterIcon(h, params))\r\n  },\r\n\r\n  /**\r\n   * 排序\r\n   */\r\n  renderSortHeader (h, params) {\r\n    return Cell.renderDefaultHeader(h, params).concat(Cell.renderSortIcon(h, params))\r\n  },\r\n  renderSortIcon (h, params) {\r\n    const { $table, column } = params\r\n    const { showIcon, iconAsc, iconDesc } = $table.sortOpts\r\n    return showIcon ? [\r\n      h('span', {\r\n        class: 'vxe-cell--sort',\r\n        style: {visibility: column.order === 'asc' || column.order === 'desc' ? 'visible' : ''}//加\r\n      }, [\r\n        h('i', {\r\n          class: ['vxe-sort--asc-btn', iconAsc || GlobalConfig.icon.TABLE_SORT_ASC, {\r\n            'sort--active': column.order === 'asc'\r\n          }],\r\n          attrs: {\r\n            title: GlobalConfig.i18n('vxe.table.sortAsc')\r\n          },\r\n          on: {\r\n            click (evnt) {\r\n              $table.triggerSortEvent(evnt, column, 'asc')\r\n            }\r\n          }\r\n        }),\r\n        h('i', {\r\n          class: ['vxe-sort--desc-btn', iconDesc || GlobalConfig.icon.TABLE_SORT_DESC, {\r\n            'sort--active': column.order === 'desc'\r\n          }],\r\n          attrs: {\r\n            title: GlobalConfig.i18n('vxe.table.sortDesc')\r\n          },\r\n          on: {\r\n            click (evnt) {\r\n              $table.triggerSortEvent(evnt, column, 'desc')\r\n            }\r\n          }\r\n        })\r\n      ])\r\n    ] : []\r\n  },\r\n\r\n  /**\r\n   * 筛选\r\n   */\r\n  renderFilterHeader (h, params) {\r\n    return Cell.renderDefaultHeader(h, params).concat(Cell.renderFilterIcon(h, params))\r\n  },\r\n  renderFilterIcon (h, params) {\r\n    const { $table, column, hasFilter } = params\r\n    const { filterStore, filterOpts } = $table\r\n    const { showIcon, iconNone, iconMatch } = filterOpts\r\n    return showIcon ? [\r\n      h('span', {\r\n        class: ['vxe-cell--filter', {\r\n          'is--active': filterStore.visible && filterStore.column === column\r\n        }]\r\n      }, [\r\n        h('i', {\r\n          class: ['vxe-filter--btn', hasFilter ? (iconMatch || GlobalConfig.icon.TABLE_FILTER_MATCH) : (iconNone || GlobalConfig.icon.TABLE_FILTER_NONE)],\r\n          attrs: {\r\n            title: GlobalConfig.i18n('vxe.table.filter')\r\n          },\r\n          on: {\r\n            click (evnt) {\r\n              $table.triggerFilterEvent(evnt, params.column, params)\r\n            }\r\n          }\r\n        })\r\n      ])\r\n    ] : []\r\n  },\r\n\r\n  /**\r\n   * 可编辑\r\n   */\r\n  renderEditHeader (h, params) {\r\n    const { $table, column } = params\r\n    const { editRules, editOpts } = $table\r\n    const { sortable, remoteSort, filters, editRender } = column\r\n    let isRequired\r\n    if (editRules) {\r\n      const columnRules = XEUtils.get(editRules, params.column.property)\r\n      if (columnRules) {\r\n        isRequired = columnRules.some(rule => rule.required)\r\n      }\r\n    }\r\n    return [\r\n      isRequired && editOpts.showAsterisk ? h('i', {\r\n        class: 'vxe-cell--required-icon'\r\n      }) : null,\r\n      isEnableConf(editRender) && editOpts.showIcon ? h('i', {\r\n        class: ['vxe-cell--edit-icon', editOpts.icon || GlobalConfig.icon.TABLE_EDIT]\r\n      }) : null\r\n    ].concat(Cell.renderDefaultHeader(h, params))\r\n      .concat(sortable || remoteSort ? Cell.renderSortIcon(h, params) : [])\r\n      .concat(filters ? Cell.renderFilterIcon(h, params) : [])\r\n  },\r\n  // 行格编辑模式\r\n  renderRowEdit (h, params) {\r\n    const { $table, column } = params\r\n    const { editRender } = column\r\n    const { actived } = $table.editStore\r\n    return Cell.runRenderer(h, params, this, isEnableConf(editRender) && actived && actived.row === params.row)\r\n  },\r\n  renderTreeRowEdit (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderRowEdit(h, params))\r\n  },\r\n  // 单元格编辑模式\r\n  renderCellEdit (h, params) {\r\n    const { $table, column } = params\r\n    const { editRender } = column\r\n    const { actived } = $table.editStore\r\n    return Cell.runRenderer(h, params, this, isEnableConf(editRender) && actived && actived.row === params.row && actived.column === params.column)\r\n  },\r\n  renderTreeCellEdit (h, params) {\r\n    return Cell.renderTreeIcon(h, params, Cell.renderCellEdit(h, params))\r\n  },\r\n  runRenderer (h, params, _vm, isEdit) {\r\n    const { $table, column } = params\r\n    const { slots, editRender, formatter } = column\r\n    const compConf = VXETable.renderer.get(editRender.name)\r\n    if (isEdit) {\r\n      if (slots && slots.edit) {\r\n        return $table.callSlot(slots.edit, params, h)\r\n      }\r\n      return compConf && compConf.renderEdit ? compConf.renderEdit.call($table, h, editRender, Object.assign({ $type: 'edit' }, params)) : []\r\n    }\r\n    if (slots && slots.default) {\r\n      return $table.callSlot(slots.default, params, h)\r\n    }\r\n    if (formatter) {\r\n      return [\r\n        h('span', {\r\n          class: 'vxe-cell--label'\r\n        }, [getDefaultCellLabel(params)])\r\n      ]\r\n    }\r\n    return Cell.renderDefaultCell.call(_vm, h, params)\r\n  }\r\n}\r\n\r\nexport default Cell\r\n"]}]}