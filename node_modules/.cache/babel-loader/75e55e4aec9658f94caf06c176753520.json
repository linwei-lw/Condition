{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Checkbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Checkbox.vue","mtime":1661156214083},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 单个使用例子\n* <Checkbox v-model=\"rmb\" label=\"记住账号\" @change=\"onCheckChg\"/>\n* \n*  data: {rmb: false},\n*  methods: {\n*    onCheckChg(value) {// value值是true或false\n*    }\n*  }\n* ======================================================\n* 组合使用例子\n* <Checkbox label=\"吃饭\" :val=\"1\" v-model=\"likes\" @change=\"onCheckChg\"/>\n* <Checkbox label=\"睡觉\" :val=\"2\" v-model=\"likes\" @change=\"onCheckChg\"/>\n* \n*  data: {likes: [1,2]},\n*  methods: {\n*    onCheckChg(val, checked, likes) {\n*    }\n*  }\n*/\nexport default {\n  name: \"Checkbox\",\n  props: {\n    value: {\n      default: false\n    },\n    // 当前值(v-model)\n    true: {\n      default: true\n    },\n    // 选中的值　（组合使用无效）\n    false: {\n      default: false\n    },\n    // 不选中的值（组合使用无效）\n    label: String,\n    // 文本内容\n    val: {\n      default: null\n    },\n    // 组合使用时，当前checkbox的值\n    labelStyle: {\n      default: null\n    },\n    checkedColor: {\n      type: String,\n      default: null\n    },\n    // 选中图标颜色\n    checkedHoverColor: {\n      type: String,\n      default: null\n    },\n    // 选中停留图标颜色\n    uncheckedColor: {\n      type: String,\n      default: null\n    },\n    // 未选中图标颜色\n    uncheckedHoverColor: {\n      type: String,\n      default: null\n    },\n    // 未选中停留图标颜色\n    disabled: Boolean // 是否可操作\n\n  },\n  data: function data() {\n    return {\n      values: null\n    };\n  },\n  computed: {\n    checked: function checked() {\n      return this.values ? this.values.indexOf(this.val) >= 0 : this.value === this.true;\n    }\n  },\n  watch: {\n    value: function value(v) {\n      Array.isArray(v) && (this.values = v);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    Array.isArray(this.value) && (this.values = this.value);\n    this.$nextTick(function () {\n      var lineHeight = Math.max(_this.$el.clientHeight || 16, 16);\n      _this.$el.style['line-height'] = lineHeight + 'px';\n      _this.$el.style['background-position-y'] = parseInt((lineHeight - 13) / 2) + 'px';\n    });\n  },\n  methods: {\n    change: function change(event) {\n      if (this.values) {\n        this.$emit('input', this.values);\n        this.$emit('change', this.val, this.checked, this.values);\n        return;\n      }\n\n      var checked = event.target.checked;\n      var value = checked ? this.true : this.false;\n      this.$emit('input', value);\n      this.$emit('change', value);\n    }\n  }\n};",{"version":3,"sources":["Checkbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;;;;;;;;;;;;;AAqBA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA;AACA;AACA,IAAA,IAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA;AAEA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAHA;AAGA;AACA,IAAA,KAAA,EAAA,MAJA;AAIA;AACA,IAAA,GAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KALA;AAKA;AACA,IAAA,UAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KANA;AAOA,IAAA,YAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAPA;AAOA;AACA,IAAA,iBAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KARA;AAQA;AACA,IAAA,cAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KATA;AASA;AACA,IAAA,mBAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAVA;AAUA;AACA,IAAA,QAAA,EAAA,OAXA,CAWA;;AAXA,GAFA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GAnBA;AAoBA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA,aAAA,KAAA,MAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA,GAAA,KAAA,CAAA,GAAA,KAAA,KAAA,KAAA,KAAA,IAAA;AAAA;AADA,GApBA;AAuBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,CADA,EACA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,CAAA,MAAA,KAAA,MAAA,GAAA,CAAA;AACA;AAHA,GAvBA;AA4BA,EAAA,OA5BA,qBA4BA;AAAA;;AACA,IAAA,KAAA,CAAA,OAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,GAAA,KAAA,KAAA;AACA,SAAA,SAAA,CAAA,YAAA;AACA,UAAA,UAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,aAAA,IAAA,UAAA,GAAA,IAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,uBAAA,IAAA,QAAA,CAAA,CAAA,UAAA,GAAA,EAAA,IAAA,CAAA,CAAA,GAAA,IAAA;AACA,KAJA;AAKA,GAnCA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,KADA,EACA;AACA,UAAA,KAAA,MAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA,MAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,KAAA,GAAA,EAAA,KAAA,OAAA,EAAA,KAAA,MAAA;AACA;AACA;;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,MAAA,CAAA,OAAA;AACA,UAAA,KAAA,GAAA,OAAA,GAAA,KAAA,IAAA,GAAA,KAAA,KAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA;AAXA;AApCA,CAAA","sourcesContent":["<template>\r\n  <label :class=\"[$style.container, disabled && $style.disabled]\" >\r\n    <i style=\"font-size:13px\" :class=\"[checked ?[$style.checked,'el-icon-yixuan1'] : [$style.unchecked,'el-icon-weixuan']]\" :style=\"{'--checkedColor': checkedColor||theme.color,'--checkedHoverColor': checkedHoverColor||theme.color,'--uncheckedColor': uncheckedColor,'--uncheckedHoverColor': uncheckedHoverColor||theme.color}\"></i>\r\n    <input v-if=\"!values\"\r\n      type=\"checkbox\"\r\n      style=\"display:none;\"\r\n      :disabled=\"disabled\"\r\n      :checked=\"checked\"\r\n      @change=\"!disabled && change($event)\">\r\n    <input v-else\r\n      type=\"checkbox\"\r\n      style=\"display:none;\"\r\n      :disabled=\"disabled\"\r\n      :value=\"val\"\r\n      v-model=\"values\"\r\n      @change=\"!disabled && change($event)\">\r\n\r\n    <slot><span style=\"margin-left:4px;color:#fff\" :style=\"[labelStyle,{color:checked?checkedColor||theme.color:''}]\">{{ label }}</span></slot>\r\n  </label>\r\n\r\n</template>\r\n\r\n<script>\r\n  /*\r\n  * 单个使用例子\r\n  * <Checkbox v-model=\"rmb\" label=\"记住账号\" @change=\"onCheckChg\"/>\r\n  * \r\n  *  data: {rmb: false},\r\n  *  methods: {\r\n  *    onCheckChg(value) {// value值是true或false\r\n  *    }\r\n  *  }\r\n  * ======================================================\r\n  * 组合使用例子\r\n  * <Checkbox label=\"吃饭\" :val=\"1\" v-model=\"likes\" @change=\"onCheckChg\"/>\r\n  * <Checkbox label=\"睡觉\" :val=\"2\" v-model=\"likes\" @change=\"onCheckChg\"/>\r\n  * \r\n  *  data: {likes: [1,2]},\r\n  *  methods: {\r\n  *    onCheckChg(val, checked, likes) {\r\n  *    }\r\n  *  }\r\n  */\r\n\r\n  export default {\r\n    name: \"Checkbox\",\r\n    props: {\r\n      value: { default: false },   // 当前值(v-model)\r\n      true:  { default: true  },   // 选中的值　（组合使用无效）\r\n      false: { default: false },   // 不选中的值（组合使用无效）\r\n      label: String,               // 文本内容\r\n      val:   { default: null},     // 组合使用时，当前checkbox的值\r\n      labelStyle: { default: null },\r\n      checkedColor: { type: String, default: null },                // 选中图标颜色\r\n      checkedHoverColor: { type: String, default: null },           // 选中停留图标颜色\r\n      uncheckedColor: { type: String, default: null },              // 未选中图标颜色\r\n      uncheckedHoverColor: { type: String, default: null },         // 未选中停留图标颜色\r\n      disabled: Boolean            // 是否可操作\r\n    },\r\n    data() {\r\n      return { \r\n        values: null ,\r\n      }\r\n    },\r\n    computed: {\r\n      checked()   { return this.values ? this.values.indexOf(this.val) >= 0 : this.value === this.true; }\r\n    },\r\n    watch: {\r\n      value (v) {\r\n        Array.isArray(v) && (this.values = v);\r\n      }\r\n    },\r\n    mounted() {\r\n      Array.isArray(this.value) && (this.values = this.value);\r\n      this.$nextTick(() => {\r\n        let lineHeight = Math.max(this.$el.clientHeight || 16, 16);\r\n        this.$el.style['line-height'] = lineHeight + 'px';\r\n        this.$el.style['background-position-y'] = parseInt((lineHeight-13)/2) + 'px';\r\n      });\r\n    },\r\n    methods: {\r\n      change(event) {\r\n        if (this.values) {\r\n          this.$emit('input', this.values);\r\n          this.$emit('change',this.val, this.checked, this.values);\r\n          return;\r\n        }\r\n        let checked = event.target.checked;\r\n        let value = checked ? this.true : this.false;\r\n        this.$emit('input',  value);\r\n        this.$emit('change', value);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .checked         { color: var(--checkedColor); }\r\n  .checked:hover   { color: var(--checkedHoverColor); }\r\n  .unchecked       { color: var(--uncheckedColor); }\r\n  .unchecked:hover { color: var(--uncheckedHoverColor); }\r\n\r\n  .container {\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    cursor: pointer;\r\n    background-repeat: no-repeat;\r\n    /*background-position: 0 center;*/\r\n  }\r\n  .disabled {\r\n    opacity: 0.5;\r\n    filter: alpha(opacity=50); \r\n    cursor: not-allowed;\r\n  }\r\n</style>"],"sourceRoot":"src/components"}]}