{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\modal\\index.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\modal\\index.js","mtime":1635230121051},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport XEUtils from 'xe-utils';\nimport VXEModal, { allActivedModals } from \"./src/modal\";\nimport VXETable from \"../v-x-e-table\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nvar ModalClass = null;\n\nfunction openModal(opts) {\n  var options = Object.assign({}, opts, {\n    transfer: true\n  });\n  return new Promise(function (resolve) {\n    if (options && options.id && allActivedModals.some(function (comp) {\n      return comp.id === options.id;\n    })) {\n      resolve('exist');\n    } else {\n      var events = options.events || {};\n      options.events = Object.assign({}, events, {\n        hide: function hide(params) {\n          if (events.hide) {\n            events.hide.call(this, params);\n          }\n\n          setTimeout(function () {\n            return $modal.$destroy();\n          }, $modal.isMsg ? 500 : 100);\n          resolve(params.type);\n        }\n      });\n      var $modal = new ModalClass({\n        el: document.createElement('div'),\n        propsData: options\n      });\n      setTimeout(function () {\n        if ($modal.isDestroy) {\n          $modal.close();\n        } else {\n          $modal.open();\n        }\n      });\n    }\n  });\n}\n/**\r\n * 全局关闭动态的活动窗口（只能用于关闭动态的创建的活动窗口）\r\n * 如果传 id 则关闭指定的窗口\r\n * 如果不传则关闭所有窗口\r\n */\n\n\nfunction closeModal(id) {\n  var modals = arguments.length ? [getModal(id)] : allActivedModals;\n  modals.forEach(function ($modal) {\n    if ($modal) {\n      $modal.isDestroy = true;\n      $modal.close('close');\n    }\n  });\n  return Promise.resolve();\n}\n\nfunction getModal(id) {\n  return XEUtils.find(allActivedModals, function ($modal) {\n    return $modal.id === id;\n  });\n}\n\nvar ModalController = {\n  get: getModal,\n  close: closeModal,\n  open: openModal\n};\nexport var modal = ModalController;\nvar shortcutTypes = ['alert', 'confirm', 'message'];\nshortcutTypes.forEach(function (type, index) {\n  var defOpts = index === 2 ? {\n    mask: false,\n    lockView: false,\n    showHeader: false\n  } : {\n    showFooter: true\n  };\n  defOpts.type = type;\n  defOpts.dblclickZoom = false;\n\n  if (index === 1) {\n    defOpts.status = 'question';\n  }\n\n  ModalController[type] = function (content, title, options) {\n    var opts = {};\n\n    if (XEUtils.isObject(content)) {\n      opts = content;\n    } else {\n      if (title) {\n        opts = index === 2 ? {\n          status: title\n        } : {\n          title: title\n        };\n      }\n\n      opts.content = XEUtils.toString(content);\n    }\n\n    return openModal(Object.assign({\n      type: type\n    }, defOpts, opts, options));\n  };\n});\nexport var Modal = Object.assign(VXEModal, {\n  install: function install(Vue) {\n    VXETable._modal = 1;\n    Vue.component(VXEModal.name, VXEModal);\n    ModalClass = Vue.extend(VXEModal);\n    VXETable.modal = ModalController;\n\n    if (!Vue.prototype.$vxe) {\n      Vue.prototype.$vxe = {\n        modal: ModalController\n      };\n    } else {\n      Vue.prototype.$vxe.modal = ModalController;\n    }\n  }\n});\nexport default Modal;",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\modal\\index.js"],"names":["ModalClass","options","transfer","comp","resolve","events","hide","setTimeout","$modal","params","el","document","propsData","modals","arguments","getModal","Promise","ModalController","get","close","open","openModal","modal","shortcutTypes","defOpts","mask","lockView","showHeader","showFooter","index","opts","XEUtils","status","title","type","Modal","install","VXETable","Vue","VXEModal"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport VXEModal, { allActivedModals } from './src/modal'\r\nimport VXETable from '../v-x-e-table'\r\n\r\n/* eslint-disable @typescript-eslint/no-use-before-define */\r\n\r\nlet ModalClass = null\r\n\r\nfunction openModal (opts) {\r\n  const options = Object.assign({}, opts, { transfer: true })\r\n  return new Promise(resolve => {\r\n    if (options && options.id && allActivedModals.some(comp => comp.id === options.id)) {\r\n      resolve('exist')\r\n    } else {\r\n      const events = options.events || {}\r\n      options.events = Object.assign({}, events, {\r\n        hide (params) {\r\n          if (events.hide) {\r\n            events.hide.call(this, params)\r\n          }\r\n          setTimeout(() => $modal.$destroy(), $modal.isMsg ? 500 : 100)\r\n          resolve(params.type)\r\n        }\r\n      })\r\n      const $modal = new ModalClass({\r\n        el: document.createElement('div'),\r\n        propsData: options\r\n      })\r\n      setTimeout(() => {\r\n        if ($modal.isDestroy) {\r\n          $modal.close()\r\n        } else {\r\n          $modal.open()\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 全局关闭动态的活动窗口（只能用于关闭动态的创建的活动窗口）\r\n * 如果传 id 则关闭指定的窗口\r\n * 如果不传则关闭所有窗口\r\n */\r\nfunction closeModal (id) {\r\n  const modals = arguments.length ? [getModal(id)] : allActivedModals\r\n  modals.forEach($modal => {\r\n    if ($modal) {\r\n      $modal.isDestroy = true\r\n      $modal.close('close')\r\n    }\r\n  })\r\n  return Promise.resolve()\r\n}\r\n\r\nfunction getModal (id) {\r\n  return XEUtils.find(allActivedModals, $modal => $modal.id === id)\r\n}\r\n\r\nconst ModalController = {\r\n  get: getModal,\r\n  close: closeModal,\r\n  open: openModal\r\n}\r\n\r\nexport const modal = ModalController\r\n\r\nconst shortcutTypes = ['alert', 'confirm', 'message']\r\n\r\nshortcutTypes.forEach((type, index) => {\r\n  const defOpts = index === 2 ? {\r\n    mask: false,\r\n    lockView: false,\r\n    showHeader: false\r\n  } : {\r\n    showFooter: true\r\n  }\r\n  defOpts.type = type\r\n  defOpts.dblclickZoom = false\r\n  if (index === 1) {\r\n    defOpts.status = 'question'\r\n  }\r\n  ModalController[type] = function (content, title, options) {\r\n    let opts = {}\r\n    if (XEUtils.isObject(content)) {\r\n      opts = content\r\n    } else {\r\n      if (title) {\r\n        opts = index === 2 ? { status: title } : { title }\r\n      }\r\n      opts.content = XEUtils.toString(content)\r\n    }\r\n    return openModal(Object.assign({ type }, defOpts, opts, options))\r\n  }\r\n})\r\n\r\nexport const Modal = Object.assign(VXEModal, {\r\n  install (Vue) {\r\n    VXETable._modal = 1\r\n    Vue.component(VXEModal.name, VXEModal)\r\n    ModalClass = Vue.extend(VXEModal)\r\n    VXETable.modal = ModalController\r\n    if (!Vue.prototype.$vxe) {\r\n      Vue.prototype.$vxe = { modal: ModalController }\r\n    } else {\r\n      Vue.prototype.$vxe.modal = ModalController\r\n    }\r\n  }\r\n})\r\n\r\nexport default Modal\r\n"]}]}