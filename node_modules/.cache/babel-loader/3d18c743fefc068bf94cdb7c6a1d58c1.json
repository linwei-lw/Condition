{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Window.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Window.vue","mtime":1612227987644},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 使用例子 MyWindow.vue\n*\n* <Window title=\"我是标题\" :width=\"100\" @closed=\"onWindowClosed\">\n*   <div v-slot:default>\n*     我是内容\n*   </div>\n*   <template v-slot:footer>\n*     <Button style=\"margin:5px;\"> 取消 </Button>\n*     <Button style=\"margin:5px;\" type=\"primary\"> 保存 </Button>\n*   </template>\n* </Window>\n* \n* let w = $_popup.open(MyWindow, {data});//打开MyWindow窗口\n* w.close();//关闭MyWindow窗口\n*/\nimport { labelWidthFit } from '@/components/util/LabelWidth.js';\nvar divX, divY;\nexport default {\n  name: \"Window\",\n  props: {\n    title: String,\n    // 头部标题文字\n    titleHeight: {\n      type: Number,\n      default: 35\n    },\n    // 标题高度\n    titleColor: {\n      type: String,\n      default: null\n    },\n    // 标题颜色\n    width: {\n      type: Number,\n      default: 0\n    },\n    // 窗体宽度数值，单位px\n    fitLabel: {\n      type: Boolean,\n      default: true\n    },\n    // 是否对齐标题宽度\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    // 是否模态\n    waiting: Boolean,\n    // 是否等待中\n    showClose: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示关闭按钮,\n    showHead: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示标题栏,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    // 是否可移动\n    showFullScreen: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示关闭按钮,\n    beforeClose: Function,\n    afterFullScreen: Function,\n    afterRestoreScreen: Function,\n    contentStyle: {\n      default: null\n    }\n  },\n  _modalDom: null,\n  // 模态层dom对象\n  data: function data() {\n    return {\n      left: 0,\n      // 窗体x坐标(移动窗口用的)\n      top: 0,\n      // 窗体y坐标(移动窗口用的)\n      isFullScreen: false //是否全屏\n\n    };\n  },\n  beforeMount: function beforeMount() {\n    if (this.modal) {\n      this._modalDom = document.createElement(\"div\");\n      this._modalDom.className = this.$style.modal;\n      this._modalDom.style['z-index'] = $_theme.zindex();\n      document.body.appendChild(this._modalDom);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // 将dom对象加到document文档流中\n    //判断是否超高\n    this.$nextTick(function () {\n      _this.left = parseInt(_this.$el.style.left.replace('px', ''));\n      _this.top = parseInt(_this.$el.style.top.replace('px', ''));\n      var maxHeight;\n\n      if (_this.contentStyle && _this.contentStyle.maxHeight) {\n        _this._oldMaxHeight = maxHeight = parseInt(_this.contentStyle.maxHeight.replace('px', ''));\n      } else {\n        _this._oldMaxHeight = maxHeight = document.documentElement.clientHeight - _this.titleHeight - (_this.$slots.footer ? _this.$refs.footer.clientHeight : 0) - _this.top;\n        _this.$refs.content.style['max-height'] = maxHeight + 'px';\n      }\n\n      if (_this.$refs.content.clientHeight > maxHeight) {\n        _this.width += 16;\n        _this.left -= 8;\n      }\n\n      _this.fitLabel && labelWidthFit(_this.$refs.content);\n    });\n  },\n  methods: {\n    close: function close() {\n      // 关闭窗体\n      if (this.beforeClose && this.beforeClose() === false) return;\n      document.body.removeChild(this.$el);\n\n      if (this._modalDom != null) {\n        document.body.removeChild(this._modalDom);\n        this._modalDom = null;\n      }\n\n      this.$emit('closed');\n      this.$parent.$destroy();\n    },\n    fullScreen: function fullScreen() {\n      this._oldLeft = this.left;\n      this._oldTop = this.top;\n      this.left = 0;\n      this.top = 0;\n      this.isFullScreen = true;\n      var maxHeight = document.documentElement.clientHeight - this.titleHeight - (this.$slots.footer ? this.$refs.footer.clientHeight : 0);\n      this.$refs.content.style['max-height'] = maxHeight + 'px';\n      this.afterFullScreen && this.$nextTick(this.afterFullScreen);\n    },\n    restoreScreen: function restoreScreen() {\n      this.left = this._oldLeft;\n      this.top = this._oldTop;\n      this.isFullScreen = false;\n      this.$refs.content.style['max-height'] = this._oldMaxHeight + 'px';\n      this.afterRestoreScreen && this.$nextTick(this.afterRestoreScreen);\n    },\n    onDragStart: function onDragStart(e) {\n      // 窗体开始拖动前\n      divX = e.clientX - this.$el.offsetLeft;\n      divY = e.clientY - this.$el.offsetTop;\n      document.addEventListener('mousemove', this.onDraging);\n      document.addEventListener('mouseup', this.onDragEnd);\n    },\n    onDraging: function onDraging(e) {\n      // 窗体正在拖动\n      this.left = e.clientX - divX;\n      this.top = e.clientY - divY;\n    },\n    onDragEnd: function onDragEnd() {\n      // 窗体结束拖动\n      document.removeEventListener('mousemove', this.onDraging);\n      document.removeEventListener('mouseup', this.onDragEnd);\n      this.left = Math.max(this.left, 0);\n      this.top = Math.max(this.top, 0);\n\n      if (this.left + 100 > document.documentElement.clientWidth) {\n        this.left = document.documentElement.clientWidth - this.$el.clientWidth;\n      }\n\n      if (this.top + 30 > document.documentElement.clientHeight) {\n        this.top = document.documentElement.clientHeight - this.$el.clientHeight;\n      }\n    }\n  }\n};",{"version":3,"sources":["Window.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"[$style.container,isFullScreen&&$style.fullScreen]\" :style=\"{width: width>0 && (width+'px'), left:left+'px', top:top+'px'}\">\r\n    \r\n    <!--弹出窗的头部-->\r\n    <div :style=\"{backgroundColor:titleColor||theme.color, height:titleHeight+'px', cursor:movable?'move':''}\" @mousedown=\"movable && onDragStart($event)\" v-if=\"showHead\" style=\"z-index: 2;\">\r\n      <!--头部标题-->\r\n      <slot name=\"title\"> <span :class=\"$style.title\" :style=\"{lineHeight:titleHeight+'px'}\">{{ title }}</span> </slot>\r\n      <!--头部关闭按钮-->\r\n      <button type=\"button\" :class=\"$style.closebtn\" :style=\"{width:titleHeight+'px'}\" v-if=\"showClose\" @click=\"close\">\r\n        <i class=\"el-icon-close\"></i>\r\n      </button>\r\n      <!--头部最大化按钮-->\r\n      <button type=\"button\" :class=\"$style.fullScreenbtn\" :style=\"{width:titleHeight+'px'}\" v-if=\"showFullScreen\" @click=\"isFullScreen?restoreScreen():fullScreen()\" :title=\"isFullScreen?'还原':'最大化'\">\r\n        <i :class=\"isFullScreen?'el-icon-copy-document':'el-icon-full-screen'\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <!--窗体内容-->\r\n    <div ref=\"content\" style=\"background-color:#fff;overflow:auto;\" :style=\"contentStyle\"><slot></slot></div>\r\n\r\n    <!--窗体底部-->\r\n    <div ref=\"footer\" v-if=\"$slots.footer\" :class=\"$style.footer\" :style=\"{backgroundColor:theme.bg_color, borderTopColor:theme.border_color_light}\">\r\n      <slot name=\"footer\"></slot>\r\n    </div>\r\n\r\n    <div v-if=\"waiting\" :class=\"$style.waiting\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  /*\r\n  * 使用例子 MyWindow.vue\r\n  *\r\n  * <Window title=\"我是标题\" :width=\"100\" @closed=\"onWindowClosed\">\r\n  *   <div v-slot:default>\r\n  *     我是内容\r\n  *   </div>\r\n  *   <template v-slot:footer>\r\n  *     <Button style=\"margin:5px;\"> 取消 </Button>\r\n  *     <Button style=\"margin:5px;\" type=\"primary\"> 保存 </Button>\r\n  *   </template>\r\n  * </Window>\r\n  * \r\n  * let w = $_popup.open(MyWindow, {data});//打开MyWindow窗口\r\n  * w.close();//关闭MyWindow窗口\r\n  */\r\n  \r\n  import { labelWidthFit } from '@/components/util/LabelWidth.js';\r\n\r\n  let divX, divY;\r\n\r\n  export default {\r\n    name: \"Window\",\r\n    props: {\r\n      title: String,                                   // 头部标题文字\r\n      titleHeight: { type: Number,  default: 35 },     // 标题高度\r\n      titleColor:  {type: String, default: null},      // 标题颜色\r\n      width:       { type: Number,  default: 0 },      // 窗体宽度数值，单位px\r\n      fitLabel:    { type: Boolean, default: true},    // 是否对齐标题宽度\r\n      modal:       { type: Boolean, default: true },   // 是否模态\r\n      waiting : Boolean,                               // 是否等待中\r\n      showClose:   { type: Boolean, default: true },   // 是否显示关闭按钮,\r\n      showHead:   { type: Boolean, default: true },   // 是否显示标题栏,\r\n      movable:     { type: Boolean, default: true },   // 是否可移动\r\n      showFullScreen:   { type: Boolean, default: false },   // 是否显示关闭按钮,\r\n      beforeClose: Function,\r\n      afterFullScreen: Function,\r\n      afterRestoreScreen: Function,\r\n      contentStyle: { default: null}\r\n    },\r\n\r\n    _modalDom: null,  // 模态层dom对象\r\n\r\n    data() {\r\n      return {\r\n        left: 0,    // 窗体x坐标(移动窗口用的)\r\n        top: 0,      // 窗体y坐标(移动窗口用的)\r\n        isFullScreen: false, //是否全屏\r\n      };\r\n    },\r\n\r\n    beforeMount() {\r\n      if (this.modal) {\r\n        this._modalDom = document.createElement(\"div\");\r\n        this._modalDom.className = this.$style.modal;\r\n        this._modalDom.style['z-index'] = $_theme.zindex();\r\n        document.body.appendChild(this._modalDom);\r\n      }\r\n    },\r\n\r\n    mounted() {// 将dom对象加到document文档流中\r\n      //判断是否超高\r\n      this.$nextTick(()=>{\r\n        this.left = parseInt(this.$el.style.left.replace('px',''));\r\n        this.top = parseInt(this.$el.style.top.replace('px',''));\r\n        \r\n        let maxHeight;\r\n        if (this.contentStyle && this.contentStyle.maxHeight) {\r\n          this._oldMaxHeight = maxHeight = parseInt(this.contentStyle.maxHeight.replace('px',''));\r\n        } else {\r\n          this._oldMaxHeight = maxHeight = document.documentElement.clientHeight - this.titleHeight - (this.$slots.footer ? this.$refs.footer.clientHeight : 0) - this.top;\r\n          this.$refs.content.style['max-height'] = maxHeight + 'px';\r\n        }\r\n        if (this.$refs.content.clientHeight > maxHeight) {\r\n          this.width += 16;\r\n          this.left -= 8;\r\n        }\r\n        \r\n        this.fitLabel && labelWidthFit(this.$refs.content);\r\n      });\r\n    },\r\n\r\n    methods: {\r\n      close() {// 关闭窗体\r\n        if (this.beforeClose && this.beforeClose() === false) return;\r\n        document.body.removeChild(this.$el);\r\n        if (this._modalDom != null) {\r\n          document.body.removeChild(this._modalDom);\r\n          this._modalDom = null;\r\n        }\r\n        this.$emit('closed');\r\n        this.$parent.$destroy();\r\n      },\r\n      fullScreen(){\r\n        this._oldLeft = this.left;\r\n        this._oldTop = this.top;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.isFullScreen = true;\r\n        let maxHeight = document.documentElement.clientHeight - this.titleHeight - (this.$slots.footer ? this.$refs.footer.clientHeight : 0);\r\n        this.$refs.content.style['max-height'] = maxHeight + 'px';\r\n        this.afterFullScreen && this.$nextTick(this.afterFullScreen);\r\n      },\r\n      restoreScreen(){\r\n        this.left = this._oldLeft;\r\n        this.top = this._oldTop;\r\n        this.isFullScreen = false;\r\n        this.$refs.content.style['max-height'] = this._oldMaxHeight + 'px';\r\n        this.afterRestoreScreen && this.$nextTick(this.afterRestoreScreen);\r\n      },\r\n      onDragStart(e) {// 窗体开始拖动前\r\n        divX = e.clientX - this.$el.offsetLeft;\r\n        divY = e.clientY - this.$el.offsetTop;\r\n        document.addEventListener('mousemove', this.onDraging);\r\n        document.addEventListener('mouseup', this.onDragEnd);\r\n      },\r\n      onDraging(e) {// 窗体正在拖动\r\n        this.left = e.clientX - divX;\r\n        this.top = e.clientY - divY;\r\n      },\r\n      onDragEnd() {// 窗体结束拖动\r\n        document.removeEventListener('mousemove', this.onDraging);\r\n        document.removeEventListener('mouseup', this.onDragEnd);\r\n\r\n        this.left = Math.max(this.left, 0);\r\n        this.top = Math.max(this.top, 0);\r\n        if (this.left + 100 > document.documentElement.clientWidth) {\r\n          this.left = document.documentElement.clientWidth - this.$el.clientWidth;\r\n        }\r\n        if (this.top + 30 > document.documentElement.clientHeight) {\r\n          this.top = document.documentElement.clientHeight - this.$el.clientHeight;\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    position: fixed;\r\n    min-width: 150px;\r\n    background: #fff;\r\n    box-shadow: 0px 0px 10px 0px RGBA(0, 0, 0, 0.2);\r\n  }\r\n  .fullScreen{\r\n    width: 100% !important;\r\n    height: 100% !important;\r\n  }\r\n  .title {\r\n    padding-left: 10px;\r\n    color: #fff;\r\n    font-size: 13px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .closebtn {\r\n    color:#fff;\r\n    font-size: 16px;\r\n    float: right;\r\n    height: 100%;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n  }\r\n  .fullScreenbtn {\r\n    color:#fff;\r\n    font-size: 16px;\r\n    float: right;\r\n    height: 100%;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    transform:rotate(180deg);\r\n    -ms-transform:rotate(180deg); \t/* IE 9 */\r\n    -moz-transform:rotate(180deg); \t/* Firefox */\r\n    -webkit-transform:rotate(180deg); /* Safari 和 Chrome */\r\n    -o-transform:rotate(180deg); \t/* Opera */\r\n  }\r\n  .closebtn:hover, .fullScreenbtn:hover {\r\n    background-color: rgba(255,255,255,0.2);\r\n  }\r\n  .closebtn:active, .fullScreenbtn:active {\r\n    background-color:rgba(0,0,0,0.2);\r\n  }\r\n  .footer {\r\n    min-height: 40px;\r\n    text-align: center;\r\n    border-top-style: solid;\r\n    border-top-width: 1px;\r\n  }\r\n  .modal {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.4);\r\n    opacity: 0.4;\r\n    filter: alpha(opacity=40); \r\n  }\r\n  /* 等待禁止操作 */\r\n  .waiting {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-image: url(\"@/assets/icon/loading.gif\");\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}