{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\modules\\mnt\\MntVideoPlaybackModule\\PlaybackPlayerForSkip.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\modules\\mnt\\MntVideoPlaybackModule\\PlaybackPlayerForSkip.vue","mtime":1675239736121},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { parseDate, apartSeconds, dateFormat, secondsToHMS } from '@/common/util/Dates.js';\nimport { getPlayTip } from '@/common/Vars.js';\nimport '@/common/flv.min.js';\nexport default {\n  data: function data() {\n    return {\n      uuid: null,\n      ratio: 0,\n      //长宽比率 0(满画面) 2/1 16/9 4/3 1/1 3/4 9/16 1/2\n      width: 0,\n      file: null,\n      //正常播放的文件\n      stime: null,\n      title: null,\n      playing: false,\n      //是否正在播放\n      loading: false,\n      //是否正在加载\n      reply: false,\n      //是否应答\n      pause: false,\n      voice: false,\n      tip: null,\n      record: {\n        show: false,\n        ing: false,\n        time: null,\n        second: 0,\n        interval: null\n      },\n      //录像\n      flow: {\n        total: 0,\n        kbs: 0\n      },\n      //流量\n      seeker: {\n        max: 0,\n        value: 0,\n        ing: false\n      } //播放进度\n\n    };\n  },\n  watch: {\n    voice: function voice(v) {\n      this._audio && (this._audio.muted = !v);\n    },\n    'seeker.value': function seekerValue(v) {\n      this.$emit('time', v);\n    }\n  },\n  computed: {\n    backgroundImage: function backgroundImage() {\n      if ($_cache.userCfg.VIDEO_BG) {\n        return {\n          backgroundImage: \"url(\" + $_main.domain.WEB_PATH + 'rs/img/h5/video/' + $_cache.userCfg.VIDEO_BG + \")\"\n        };\n      }\n\n      return {\n        backgroundImage: \"url(\" + $_main.domain.WEB_PATH + 'login?img=video_bg&cmpId=' + $_cache.user.cmpId + \")\"\n      }; // return null\n    }\n  },\n  deactivated: function deactivated() {\n    this.playing && this.close();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.playing && this.close();\n    removeResizeListener(this.$el, this._onResize);\n  },\n  mounted: function mounted() {\n    this._date = new Date();\n    addResizeListener(this.$el, this._onResize);\n  },\n  methods: {\n    setSocket: function setSocket(socket) {\n      this._socket = socket;\n\n      this._socket.addListener('his_tmn_play', this._on_his_tmn_play);\n\n      this._socket.addListener('play_flow', this._on_play_flow);\n\n      this._socket.addListener('record_start', this._on_record_start);\n    },\n    seekTo: function seekTo(v) {\n      this._timer && (clearInterval(this._timer), this._timer = null);\n      !this.file.file && this._socket.send({\n        cmd: 'his_tmn_ctr',\n        uuid: this.uuid,\n        carId: this.file.carId,\n        channel: this.file.channel,\n        ctr: 2,\n        multiple: 0,\n        seek: this.YYMMDDJJNNSS(this.stime)\n      });\n      this._player && (this._player.destroy(), this._player = null);\n      this._audio && (this._audio.destroy(), this._audio = null);\n      this.seeker.ing = false;\n\n      this._date.setTime(this._stime + v * 1000);\n\n      var time = dateFormat(this._date, 'YYYY-MM-DD HH:NN:SS');\n      this.loading = true;\n      this.reply = false;\n      this.flow.total = this.flow.kbs = 0;\n      this.tip = null;\n      this.uuid = $_uuid($_main.sessionId);\n      var url = '/his_tmn_play/' + [this._socket.getId(), encodeURI($_main.userId), this.uuid, this.file.carId, this.file.channel, this.file.avType, this.file.streamType, this.file.storeType, 0, 0, this.YYMMDDJJNNSS(time), this.file.endTime].join('/');\n      this.flvjsplay(url, true);\n      this.$emit('seek', time);\n    },\n    play: function play(file, stime) {\n      var _this = this;\n\n      this.playing && this.close();\n      this._timer && (clearInterval(this._timer), this._timer = null);\n      this.file = file;\n      this.file.play = true;\n      this.stime = stime;\n      this._stime = parseDate(stime).getTime();\n      this.title = file.plate + ' - ' + file.chnName + ' [' + stime + ' -> ' + file.etime + ']';\n      this.playing = this.loading = true;\n      this.reply = false;\n      this.tip = null;\n      this.flow.total = this.flow.kbs = 0;\n      this.seeker.max = apartSeconds(stime, file.etime);\n      this.seeker.value = 0;\n      this.uuid = $_uuid($_main.sessionId);\n      this.record.show = !file.file;\n      this.$nextTick(function () {\n        _this._onResize();\n\n        if (file.file) {\n          //服务器文件\n          var name = file.fileName.split(/\\*|\\//)[0];\n          var is_audio = name.indexOf(\"M2\") > 0 || name.indexOf(\"M3\") > 0 || name.indexOf(\"M4\") > 0;\n          is_audio && (_this.voice = true);\n\n          _this.flvjsplay('/his_srv_play/' + file.carId + '/' + file.fileName, false, is_audio);\n        } else {\n          var url = '/his_tmn_play/' + [_this._socket.getId(), encodeURI($_main.userId), _this.uuid, file.carId, file.channel, file.avType, file.streamType, file.storeType, 0, 0, _this.YYMMDDJJNNSS(stime), file.endTime].join('/');\n\n          _this.flvjsplay(url, true);\n        }\n\n        _this.$emit('play', _this);\n      });\n    },\n    flvjsplay: function flvjsplay(uri, tmn) {\n      var _this2 = this;\n\n      var is_audio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var url = ($_main.domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + $_cache.videoHost + uri;\n      this._player = flvjs.createPlayer({\n        type: 'flv',\n        isLive: true,\n        hasAudio: !tmn,\n        hasVideo: !is_audio,\n        cors: true,\n        url: url\n      }, {\n        enableStashBuffer: false,\n        fixAudioTimestampGap: false\n      });\n\n      this._player.attachMediaElement(this.$refs.video);\n\n      this._player.load();\n\n      this._player.play();\n\n      this._player.on(flvjs.Events.METADATA_ARRIVED, function () {\n        _this2.loading = false;\n        _this2.reply = true;\n        tmn && _this2.flvjsaudio();\n        var sv = _this2.seeker.value;\n        !_this2._timer && (_this2._timer = setInterval(function () {\n          return !_this2.pause && !_this2.seeker.ing && (_this2.seeker.value = parseInt(sv + _this2._player.currentTime));\n        }, 1000));\n      });\n    },\n    flvjsaudio: function flvjsaudio() {\n      var url = ($_main.domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + $_cache.videoHost + '/his_tmn_audio/' + this.uuid;\n      this._audio = flvjs.createPlayer({\n        type: 'flv',\n        isLive: true,\n        hasAudio: true,\n        hasVideo: false,\n        cors: true,\n        url: url\n      }, {\n        enableStashBuffer: false,\n        fixAudioTimestampGap: false\n      });\n\n      this._audio.attachMediaElement(this.$refs.audio);\n\n      this._audio.load();\n\n      this._audio.play();\n\n      this._audio.muted = !this.voice;\n    },\n    YYMMDDJJNNSS: function YYMMDDJJNNSS(time) {\n      return time.substr(2).split(/[-| |:]/).join('');\n    },\n    getSeekerTime: function getSeekerTime(v) {\n      if (!this._date) return v;\n\n      this._date.setTime(this._stime + v * 1000);\n\n      return dateFormat(this._date, 'YYYY-MM-DD HH:NN:SS');\n    },\n    _on_his_tmn_play: function _on_his_tmn_play(result) {\n      if (result.uuid != this.uuid) return;\n      this.reply = true;\n\n      if (result.ret !== 0) {\n        //失败\n        this.loading = false;\n        var tip = getPlayTip(result.ret);\n        this.clear();\n        this.tip = tip;\n      }\n    },\n    _on_play_flow: function _on_play_flow(result) {\n      if (result.uuid == this.uuid) {\n        this.flow.kbs = result.flow - this.flow.total;\n        this.flow.total = result.flow;\n        result.flow > 0 && (this.reply = true);\n      }\n    },\n    tooglePause: function tooglePause() {\n      this.pause = !this.pause;\n      this.pause ? this.$refs.video.pause() : this.$refs.video.play();\n    },\n    snapshot: function snapshot() {\n      var canvas = document.createElement('canvas'),\n          video = this.$refs.video;\n      video.pause();\n      canvas.width = video.width;\n      canvas.height = video.height;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, video.width, video.height);\n      var img64 = canvas.toDataURL(); //转化成base64为图片\n\n      var a = document.createElement('a');\n      a.href = img64;\n      a.download = this.file.plate + '-' + this.file.chnName;\n      a.click(); //下载到本地\n\n      video.play();\n    },\n    fullScreen: function fullScreen() {\n      // 全屏显示视频窗口\n      var el = this.$refs.show_video,\n          method = el.requestFullscreen || el.webkitRequestFullscreen || el.mozRequestFullScreen || el.msRequestFullscreen;\n      method && method.call(el);\n    },\n    toogleRecord: function toogleRecord() {\n      var _this3 = this;\n\n      if (!this.record.ing) {\n        this._socket.send({\n          cmd: 'record_start',\n          uuid: this.uuid\n        });\n      } else {\n        this.record.ing = false;\n        this.record.interval && (clearInterval(this.record.interval), this.record.interval = null);\n\n        var callback = function callback(_ref) {\n          var downloadPort = _ref.downloadPort;\n\n          _this3._socket.removeListener('cfg', callback);\n\n          var url = $_main.domain.WEB_HTTP + '://' + $_cache.videoHost.split(':')[0] + ':' + downloadPort + '/download/92&' + _this3.uuid + '/' + _this3.file.plate + '_' + _this3.file.chnName + '(' + _this3.record.stime.replace(' ', '_') + ')(' + _this3.record.second + ').flv';\n          window.open(url);\n        };\n\n        this._socket.addListener('cfg', callback);\n\n        this._socket.send({\n          cmd: 'cfg'\n        });\n      }\n    },\n    _on_record_start: function _on_record_start() {\n      var _this4 = this;\n\n      this.record.second = 0;\n      this.record.time = '00:00:00';\n      this.record.ing = true;\n      this.record.stime = this.getSeekerTime(this.seeker.value);\n      this.record.interval = setInterval(function () {\n        if (_this4.pause) return;\n        _this4.record.second += 1;\n        _this4.record.time = secondsToHMS(_this4.record.second);\n      }, 1000);\n    },\n    close: function close() {\n      if (!this.playing) return;\n      this.file.play = false;\n      !this.file.file && this._socket.send({\n        cmd: 'his_tmn_ctr',\n        uuid: this.uuid,\n        carId: this.file.carId,\n        channel: this.file.channel,\n        ctr: 2,\n        multiple: 0,\n        seek: this.YYMMDDJJNNSS(this.stime)\n      });\n      this._player && (this._player.destroy(), this._player = null);\n      this._audio && (this._audio.destroy(), this._audio = null);\n      this.clear();\n    },\n    clear: function clear() {\n      this._timer && (clearInterval(this._timer), this._timer = null);\n      this.file && (this.file.play = false, this.file = null);\n      this.playing = this.loading = this.reply = false;\n      this.tip = null;\n      this.pause = false;\n      this.voice = false;\n      this.flow.total = this.flow.kbs = 0;\n      this.seeker = {\n        max: 0,\n        value: 0,\n        ing: false\n      };\n\n      if (this.record.ing) {\n        clearInterval(this.record.interval);\n        this.record.ing = false;\n        this.record.interval = null;\n      }\n\n      this.record.show = false;\n      this.$emit('close');\n    },\n    _onResize: function _onResize() {\n      this.width = this.$el.clientWidth;\n      if (!this.$refs.show_video) return;\n\n      var _this$_getRatioAjust = this._getRatioAjust(this.$el.clientWidth, this.$el.clientHeight),\n          _this$_getRatioAjust2 = _slicedToArray(_this$_getRatioAjust, 4),\n          width = _this$_getRatioAjust2[0],\n          height = _this$_getRatioAjust2[1],\n          left = _this$_getRatioAjust2[2],\n          top = _this$_getRatioAjust2[3];\n\n      this.$refs.show_video.style.width = width + 'px';\n      this.$refs.show_video.style.height = height + 'px';\n      this.$refs.show_video.style.left = left;\n      this.$refs.show_video.style.top = top;\n    },\n    _getRatioAjust: function _getRatioAjust(width, height) {\n      // 计算视频窗口的大小\n      height -= 70;\n      if (this.ratio == 0) return [width, height, '0px', '32px'];\n      var wh = width / height;\n      if (this.ratio == wh) return [width, height, '0px', '32px'];\n\n      if (wh > this.ratio) {\n        wh = height * this.ratio;\n        var left = (width - wh) / 2;\n        return [wh, height, left + 'px', '32px'];\n      } else {\n        wh = width / this.ratio;\n        var top = (height - width / this.ratio) / 2 + 32;\n        return [width, wh, '0px', top + 'px'];\n      }\n    }\n  }\n};",{"version":3,"sources":["PlaybackPlayerForSkip.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"$style.container\" :style=\"[backgroundImage, playing && reply && {backgroundColor: '#000',backgroundSize:'0,0'}]\">\r\n    <!-- 顶部显示头 -->\r\n    <div v-show=\"playing\" :class=\"$style.bar\" style=\"top:0;\">\r\n      <!-- 标题文本 -->\r\n      <span>{{title}}</span>\r\n      <!-- 关闭按钮 -->\r\n      <i class=\"el-icon-close\" @dblclick.stop=\"close()\" @click.stop=\"close()\" :title=\"$_L.get('关闭播放')\" :class=\"$style.bar_icon\" style=\"right:7px;\"></i>\r\n    </div>\r\n\r\n    <!-- 视频显示组件 -->\r\n    <div ref=\"show_video\" style=\"position: absolute;top: 32px;\" v-if=\"playing\">\r\n      <video ref=\"video\" :muted=\"!voice\" autoplay=\"autoplay\" style=\"width: 100%;height: 100%;position: relative;object-fit: fill;\"/>\r\n    </div>\r\n    <audio ref=\"audio\" autoplay=\"autoplay\" style=\"display:none\"/>\r\n    <span v-show=\"tip\" style=\"color:#fff;position:absolute;top:calc(50% - 13px);text-align:center;width:100%;\">{{tip}}</span>\r\n    \r\n    <span style=\"position:absolute;right:8px;bottom:45px;\">\r\n      <!-- 流量显示 -->\r\n      <span v-show=\"playing && reply && !file.file\" style=\"margin-right:5px;color:#fff;display:inline-block;\"> {{parseInt(flow.kbs/1024)}}KB/S | {{parseInt(flow.total/1024)}}KB</span>\r\n      <span v-if=\"record.ing\" style=\"padding:2px;background-color:#000;color:#f00;display:inline-block;\">{{record.time}}</span>\r\n    </span>\r\n\r\n    <!-- 底部工具栏 -->\r\n    <Toolbar :class=\"$style.toolbar\" :mini=\"true\" :disabled=\"!playing || loading\" style=\"overflow:unset;\">\r\n      <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"tooglePause()\" :title=\"pause?$_L.get('恢复播放'):$_L.get('暂停播放')\" :icon=\"pause?'el-icon-video-play':'el-icon-video-pause'\"/>\r\n      <Slider :disabled=\"file&&file.file\" v-model=\"seeker.value\" :max=\"seeker.max\" style=\"margin-left:12px;margin-top:0px;\" @change=\"seekTo\" @dragstart=\"seeker.ing=true\" :getTooltip=\"getSeekerTime\" :style=\"{width:(width-(record.show?250:225))+'px'}\"/>\r\n      <template slot=\"right\">\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"voice=!voice\" :icon=\"voice?'el-icon-sound-on':'el-icon-sound-off'\"/>\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"snapshot()\" :title=\"$_L.get('视频截图')\" icon=\"el-icon-camera\"/>\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"toogleRecord()\" :title=\"record.ing?$_L.get('停止录像'):$_L.get('开始录像')\" icon=\"el-icon-video-camera\" v-if=\"record.show\"/>\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"fullScreen()\" icon=\"el-icon-full-screen\"/>\r\n        <InputSelect :border=\"false\" :height=\"30\" v-model=\"ratio\" @change=\"_onResize()\" :style=\"{backgroundColor:theme.bg_color}\" style=\"text-align:center;\" :listStyle=\"{paddingRight:'10px',textAlign:'right'}\" :options=\"[{label:$_L.get('满画面'),value:0},{label:$_L.get('{0} 显示','2:1'),value:2/1},{label:$_L.get('{0} 显示','16:9'),value:16/9},{label:$_L.get('{0} 显示','4:3'),value:4/3},{label:$_L.get('{0} 显示','1:1'),value:1/1},{label:$_L.get('{0} 显示','3:4'),value:3/4},{label:$_L.get('{0} 显示','9:16'),value:9/16},{label:$_L.get('{0} 显示','1:2'),value:1/2}]\"/>\r\n      </template>\r\n    </Toolbar>\r\n    \r\n    <i class=\"el-icon-loading\" v-show=\"loading\" style=\"color:#ddd;font-size:40px;position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);\"></i>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {parseDate, apartSeconds, dateFormat, secondsToHMS} from '@/common/util/Dates.js';\r\n  import {getPlayTip} from '@/common/Vars.js';\r\n  import '@/common/flv.min.js'\r\n\r\n  export default {\r\n    data () {\r\n      return {\r\n        uuid: null,\r\n        ratio: 0,       //长宽比率 0(满画面) 2/1 16/9 4/3 1/1 3/4 9/16 1/2\r\n        width: 0,\r\n\r\n        file: null,     //正常播放的文件\r\n        stime: null,\r\n        title: null,\r\n        playing: false, //是否正在播放\r\n        loading: false, //是否正在加载\r\n        reply: false,   //是否应答\r\n        pause: false,\r\n        voice: false,\r\n        tip: null,\r\n        record: {show:false, ing:false, time:null, second:0, interval:null},//录像\r\n\r\n        flow: {total:0, kbs:0},   //流量\r\n        seeker: {max:0, value:0, ing:false}, //播放进度\r\n      }\r\n    },\r\n    watch: {\r\n      voice: function(v) {\r\n        this._audio && (this._audio.muted = !v);\r\n      },\r\n      'seeker.value': function(v) {\r\n        this.$emit('time', v);\r\n      },\r\n    },\r\n    computed: {\r\n      backgroundImage() {\r\n        if ($_cache.userCfg.VIDEO_BG) {\r\n          return {backgroundImage: \"url(\" + $_main.domain.WEB_PATH+'rs/img/h5/video/'+$_cache.userCfg.VIDEO_BG + \")\"};\r\n        }\r\n        return {backgroundImage: \"url(\" + $_main.domain.WEB_PATH+'login?img=video_bg&cmpId='+$_cache.user.cmpId + \")\"};\r\n        // return null\r\n      }\r\n    },\r\n    deactivated() {\r\n      this.playing && this.close();\r\n    },\r\n    beforeDestroy() {\r\n      this.playing && this.close();\r\n      removeResizeListener(this.$el, this._onResize);\r\n    },\r\n    mounted() {\r\n      this._date = new Date();\r\n      addResizeListener(this.$el, this._onResize);\r\n    },\r\n    methods: {\r\n      setSocket(socket) {\r\n        this._socket = socket;\r\n        this._socket.addListener('his_tmn_play', this._on_his_tmn_play);\r\n        this._socket.addListener('play_flow', this._on_play_flow);\r\n        this._socket.addListener('record_start', this._on_record_start);\r\n      },\r\n      \r\n      seekTo(v) {\r\n        this._timer && (clearInterval(this._timer), this._timer = null);\r\n\r\n        !this.file.file && this._socket.send({cmd:'his_tmn_ctr', uuid:this.uuid, carId:this.file.carId, channel:this.file.channel, ctr:2, multiple:0, seek:this.YYMMDDJJNNSS(this.stime)});\r\n        this._player && (this._player.destroy(), this._player = null);\r\n        this._audio && (this._audio.destroy(), this._audio = null);\r\n        \r\n        this.seeker.ing = false;\r\n        this._date.setTime(this._stime + v * 1000);\r\n        let time = dateFormat(this._date, 'YYYY-MM-DD HH:NN:SS');\r\n        this.loading = true;\r\n        this.reply = false;\r\n        this.flow.total = this.flow.kbs = 0;\r\n        this.tip = null;\r\n        this.uuid = $_uuid($_main.sessionId);\r\n\r\n        let url = '/his_tmn_play/' + [this._socket.getId(),encodeURI($_main.userId),this.uuid,this.file.carId,this.file.channel,this.file.avType,this.file.streamType,this.file.storeType,0,0,this.YYMMDDJJNNSS(time),this.file.endTime].join('/');\r\n        this.flvjsplay(url, true);\r\n        this.$emit('seek', time);\r\n      },\r\n\r\n      play(file, stime) {\r\n        this.playing && this.close();\r\n        this._timer && (clearInterval(this._timer), this._timer = null);\r\n        this.file = file;\r\n        this.file.play = true;\r\n        this.stime = stime;\r\n        this._stime = parseDate(stime).getTime();\r\n        this.title = file.plate+' - '+file.chnName+' ['+stime+' -> '+file.etime+']';\r\n        this.playing = this.loading = true;\r\n        this.reply = false;\r\n        this.tip = null;\r\n        this.flow.total = this.flow.kbs = 0;\r\n        this.seeker.max = apartSeconds(stime, file.etime);\r\n        this.seeker.value = 0;\r\n        this.uuid = $_uuid($_main.sessionId);\r\n        this.record.show = !file.file;\r\n\r\n        this.$nextTick(() => {\r\n          this._onResize();\r\n          if (file.file) {//服务器文件\r\n            let name = file.fileName.split(/\\*|\\//)[0];\r\n            let is_audio = name.indexOf(\"M2\") > 0 || name.indexOf(\"M3\") > 0 || name.indexOf(\"M4\") > 0;\r\n            is_audio && (this.voice = true);\r\n            this.flvjsplay('/his_srv_play/' + file.carId + '/' + file.fileName, false, is_audio);\r\n          } else {\r\n            let url = '/his_tmn_play/' + [this._socket.getId(),encodeURI($_main.userId),this.uuid,file.carId,file.channel,file.avType,file.streamType,file.storeType,0,0,this.YYMMDDJJNNSS(stime),file.endTime].join('/');\r\n            this.flvjsplay(url, true);\r\n          }\r\n          this.$emit('play', this);\r\n        });\r\n      },\r\n\r\n      flvjsplay(uri, tmn, is_audio=false) {\r\n        let url = ($_main.domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + $_cache.videoHost + uri;\r\n        this._player = flvjs.createPlayer({type:'flv', isLive:true, hasAudio:!tmn, hasVideo:!is_audio, cors:true, url:url}, {enableStashBuffer:false, fixAudioTimestampGap:false});\r\n        this._player.attachMediaElement(this.$refs.video);\r\n        this._player.load();\r\n        this._player.play();\r\n        this._player.on(flvjs.Events.METADATA_ARRIVED,()=>{\r\n          this.loading = false;\r\n          this.reply = true;\r\n          tmn && this.flvjsaudio();\r\n          let sv = this.seeker.value;\r\n          !this._timer && (this._timer = setInterval(() => !this.pause && !this.seeker.ing && (this.seeker.value = parseInt(sv+this._player.currentTime)), 1000));\r\n        });\r\n      },\r\n      \r\n      flvjsaudio() {\r\n        let url = ($_main.domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + $_cache.videoHost + '/his_tmn_audio/' + this.uuid;\r\n        this._audio = flvjs.createPlayer({type:'flv', isLive:true, hasAudio:true, hasVideo:false, cors:true, url:url}, {enableStashBuffer:false, fixAudioTimestampGap:false});\r\n        this._audio.attachMediaElement(this.$refs.audio);\r\n        this._audio.load();\r\n        this._audio.play();\r\n        this._audio.muted = !this.voice;\r\n      },\r\n\r\n      YYMMDDJJNNSS(time) {\r\n        return time.substr(2).split(/[-| |:]/).join('');\r\n      },\r\n\r\n      getSeekerTime(v) {\r\n        if (!this._date) return v;\r\n        this._date.setTime(this._stime + v * 1000);\r\n        return dateFormat(this._date, 'YYYY-MM-DD HH:NN:SS');\r\n      },\r\n      \r\n      _on_his_tmn_play(result) {\r\n        if (result.uuid != this.uuid) return;\r\n        this.reply = true;\r\n        if (result.ret !== 0) {//失败\r\n          this.loading = false;\r\n          let tip = getPlayTip(result.ret);\r\n          this.clear();\r\n          this.tip = tip;\r\n        }\r\n      },\r\n      _on_play_flow(result) {\r\n        if (result.uuid == this.uuid) {\r\n          this.flow.kbs = result.flow - this.flow.total;\r\n          this.flow.total = result.flow;\r\n          result.flow > 0 && (this.reply = true);\r\n        }\r\n      },\r\n\r\n      tooglePause() {\r\n        this.pause = !this.pause;\r\n        this.pause ? this.$refs.video.pause() : this.$refs.video.play();\r\n      },\r\n\r\n      snapshot() {\r\n        let canvas = document.createElement('canvas'), video = this.$refs.video;\r\n        video.pause();\r\n        canvas.width = video.width;\r\n        canvas.height = video.height;\r\n        let ctx =canvas.getContext('2d');\r\n        ctx.drawImage(video,0,0,video.width, video.height);\r\n        let img64 = canvas.toDataURL(); //转化成base64为图片\r\n        let a = document.createElement('a');\r\n        a.href = img64;\r\n        a.download = this.file.plate+'-'+this.file.chnName;\r\n        a.click();  //下载到本地\r\n        video.play();\r\n      },\r\n      fullScreen() {// 全屏显示视频窗口\r\n        let el = this.$refs.show_video, method = el.requestFullscreen || el.webkitRequestFullscreen || el.mozRequestFullScreen || el.msRequestFullscreen;\r\n        method && method.call(el);\r\n      },\r\n      toogleRecord() {\r\n        if (!this.record.ing) {\r\n          this._socket.send({cmd:'record_start',uuid:this.uuid});\r\n        } else {\r\n          this.record.ing = false;\r\n          this.record.interval && (clearInterval(this.record.interval), this.record.interval = null);\r\n          let callback = ({downloadPort}) => {\r\n            this._socket.removeListener('cfg', callback);\r\n            let url = $_main.domain.WEB_HTTP+'://'+$_cache.videoHost.split(':')[0]+':'+downloadPort+'/download/92&'+this.uuid+'/'+this.file.plate+'_'+this.file.chnName+'('+this.record.stime.replace(' ','_')+')('+this.record.second+').flv';\r\n            window.open(url);\r\n          };\r\n          this._socket.addListener('cfg', callback);\r\n          this._socket.send({cmd:'cfg'});\r\n        }\r\n      },\r\n      _on_record_start() {\r\n        this.record.second = 0;\r\n        this.record.time = '00:00:00';\r\n        this.record.ing = true;\r\n        this.record.stime = this.getSeekerTime(this.seeker.value);\r\n        this.record.interval = setInterval(() => {\r\n          if (this.pause) return;\r\n          this.record.second += 1;\r\n          this.record.time = secondsToHMS(this.record.second);\r\n        }, 1000);\r\n      },\r\n\r\n      close() {\r\n        if (!this.playing) return;\r\n        this.file.play = false;\r\n        !this.file.file && this._socket.send({cmd:'his_tmn_ctr', uuid:this.uuid, carId:this.file.carId, channel:this.file.channel, ctr:2, multiple:0, seek:this.YYMMDDJJNNSS(this.stime)});\r\n        this._player && (this._player.destroy(), this._player = null);\r\n        this._audio && (this._audio.destroy(), this._audio = null);\r\n        this.clear();\r\n      },\r\n\r\n      clear() {\r\n        this._timer && (clearInterval(this._timer), this._timer = null);\r\n        this.file && (this.file.play = false, this.file = null);\r\n        this.playing = this.loading = this.reply = false;\r\n        this.tip = null;\r\n        this.pause = false;\r\n        this.voice = false;\r\n        this.flow.total = this.flow.kbs = 0;\r\n        this.seeker = {max:0, value:0, ing:false};\r\n        if (this.record.ing) {\r\n          clearInterval(this.record.interval);\r\n          this.record.ing = false;\r\n          this.record.interval = null;\r\n        }\r\n        this.record.show = false;\r\n        this.$emit('close');\r\n      },\r\n\r\n      _onResize() {\r\n        this.width = this.$el.clientWidth;\r\n        if (!this.$refs.show_video) return;\r\n        let [width, height, left, top] = this._getRatioAjust(this.$el.clientWidth, this.$el.clientHeight);\r\n        this.$refs.show_video.style.width = width + 'px';\r\n        this.$refs.show_video.style.height = height + 'px';\r\n        this.$refs.show_video.style.left = left;\r\n        this.$refs.show_video.style.top = top;\r\n      },\r\n      _getRatioAjust(width, height) {// 计算视频窗口的大小\r\n        height -= 70;\r\n        if (this.ratio == 0) return [width, height, '0px', '32px'];\r\n        let wh = width/height;\r\n        if (this.ratio == wh) return [width, height, '0px', '32px'];\r\n        if (wh > this.ratio) {\r\n          wh = height * this.ratio;\r\n          let left = (width - wh) / 2;\r\n          return [wh, height, left+'px', '32px'];\r\n        } else {\r\n          wh = width / this.ratio;\r\n          let top = (height - width / this.ratio) / 2 + 32;\r\n          return [width, wh, '0px', top+'px'];\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    position: relative;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    display: flex;\r\n  }\r\n  .bar {\r\n    height: 32px;\r\n    line-height: 32px;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    background-color:#202020;\r\n    text-align: center;\r\n    color:#fff;\r\n  }\r\n  .bar_icon {\r\n    font-size: 18px;\r\n    line-height: 32px!important;\r\n    cursor: pointer;\r\n    position: absolute;\r\n  }\r\n  .toolbar {\r\n    position: absolute;\r\n    overflow: initial;\r\n    width: 100%;\r\n    bottom: 0;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/modules/mnt/MntVideoPlaybackModule"}]}