{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\common\\util\\Objects.js","dependencies":[{"path":"D:\\cdRule\\src\\common\\util\\Objects.js","mtime":1612227987770},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\r\n * 把对象所有属性复制给另一个对象\r\n * @param {Map} fromMap 被复制对象\r\n * @param {Map} destMap 目标对象\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Map} 返回目标对象\r\n */\nexport function objCopyTo(fromMap, destMap) {\n  var excludeKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (!destMap || !fromMap) return destMap;\n\n  for (var key in fromMap) {\n    if (excludeKeys && excludeKeys.has(key)) continue;\n    destMap[key] = fromMap[key];\n  }\n\n  return destMap;\n}\n/**\r\n * 把对象复制一份\r\n * @param {Map} map 被复制对象\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Map} 复制对象\r\n */\n\nexport function objClone(map) {\n  var excludeKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (!map) return map;\n  var destMap = {};\n\n  for (var key in map) {\n    if (excludeKeys && excludeKeys.has(key)) continue;\n    destMap[key] = map[key];\n  }\n\n  return destMap;\n}\n/**\r\n * 把数组每个对象复制一份\r\n * @param {Array} array 被复制对象\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Array} 复制数组对象\r\n */\n\nexport function objsClone(array) {\n  var excludeKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (!array || array.length == 0) return array;\n  var _array = [];\n\n  for (var i = 0, len = array.length; i < len; i++) {\n    _array.push(objClone(array[i], excludeKeys));\n  }\n\n  return _array;\n}\n/**\r\n * 判断对象是否为空\r\n * @param {Map} map MAP对象\r\n * @param {Boolean} [allowBlank] 是否允许值为空\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Boolean}\r\n */\n\nexport function objIsEmpty(map) {\n  var allowBlank = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var excludeKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (!map) return true;\n  var value;\n\n  for (var key in map) {\n    if (excludeKeys && excludeKeys.has(key)) continue;\n    if (allowBlank) return false;\n    value = map[key];\n\n    if (value !== null && value !== '' && value != undefined) {\n      return false;\n    }\n  }\n\n  return true;\n}",{"version":3,"sources":["D:\\cdRule\\src\\common\\util\\Objects.js"],"names":["excludeKeys","destMap","fromMap","map","array","_array","i","len","objClone","allowBlank","value"],"mappings":"AACA;;;;;;;AAOA,OAAO,SAAA,SAAA,CAAA,OAAA,EAAA,OAAA,EAAuD;AAAA,MAAlBA,WAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,IAAM;AAC5D,MAAI,CAAA,OAAA,IAAY,CAAhB,OAAA,EAA0B,OAAA,OAAA;;AAC1B,OAAK,IAAL,GAAA,IAAA,OAAA,EAAyB;AACvB,QAAIA,WAAW,IAAIA,WAAW,CAAXA,GAAAA,CAAnB,GAAmBA,CAAnB,EAAyC;AACzCC,IAAAA,OAAO,CAAPA,GAAO,CAAPA,GAAeC,OAAO,CAAtBD,GAAsB,CAAtBA;AACD;;AACD,SAAA,OAAA;AACD;AAED;;;;;;;AAMA,OAAO,SAAA,QAAA,CAAA,GAAA,EAAyC;AAAA,MAAlBD,WAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,IAAM;AAC9C,MAAI,CAAJ,GAAA,EAAU,OAAA,GAAA;AACV,MAAIC,OAAO,GAAX,EAAA;;AACA,OAAK,IAAL,GAAA,IAAA,GAAA,EAAqB;AACnB,QAAID,WAAW,IAAIA,WAAW,CAAXA,GAAAA,CAAnB,GAAmBA,CAAnB,EAAyC;AACzCC,IAAAA,OAAO,CAAPA,GAAO,CAAPA,GAAeE,GAAG,CAAlBF,GAAkB,CAAlBA;AACD;;AACD,SAAA,OAAA;AACD;AAED;;;;;;;AAMA,OAAO,SAAA,SAAA,CAAA,KAAA,EAA4C;AAAA,MAAlBD,WAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,IAAM;AACjD,MAAI,CAAA,KAAA,IAAUI,KAAK,CAALA,MAAAA,IAAd,CAAA,EAAiC,OAAA,KAAA;AACjC,MAAIC,MAAM,GAAV,EAAA;;AACA,OAAK,IAAIC,CAAC,GAAL,CAAA,EAAQC,GAAG,GAACH,KAAK,CAAtB,MAAA,EAA+BE,CAAC,GAAhC,GAAA,EAAsCA,CAAtC,EAAA,EAA2C;AACzCD,IAAAA,MAAM,CAANA,IAAAA,CAAYG,QAAQ,CAACJ,KAAK,CAAN,CAAM,CAAN,EAApBC,WAAoB,CAApBA;AACD;;AACD,SAAA,MAAA;AACD;AAED;;;;;;;;AAOA,OAAO,SAAA,UAAA,CAAA,GAAA,EAA6D;AAAA,MAApCI,UAAoC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAzB,KAAyB;AAAA,MAAlBT,WAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,IAAM;AAClE,MAAI,CAAJ,GAAA,EAAU,OAAA,IAAA;AACV,MAAA,KAAA;;AACA,OAAK,IAAL,GAAA,IAAA,GAAA,EAAqB;AACnB,QAAIA,WAAW,IAAIA,WAAW,CAAXA,GAAAA,CAAnB,GAAmBA,CAAnB,EAAyC;AACzC,QAAA,UAAA,EAAgB,OAAA,KAAA;AAChBU,IAAAA,KAAK,GAAGP,GAAG,CAAXO,GAAW,CAAXA;;AACA,QAAIA,KAAK,KAALA,IAAAA,IAAkBA,KAAK,KAAvBA,EAAAA,IAAkCA,KAAK,IAA3C,SAAA,EAA0D;AACxD,aAAA,KAAA;AACD;AACF;;AACD,SAAA,IAAA;AACD","sourcesContent":["\r\n/**\r\n * 把对象所有属性复制给另一个对象\r\n * @param {Map} fromMap 被复制对象\r\n * @param {Map} destMap 目标对象\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Map} 返回目标对象\r\n */\r\nexport function objCopyTo(fromMap, destMap, excludeKeys=null) {\r\n  if (!destMap || !fromMap) return destMap;\r\n  for (let key in fromMap) {\r\n    if (excludeKeys && excludeKeys.has(key)) continue;\r\n    destMap[key] = fromMap[key];\r\n  }\r\n  return destMap;\r\n}\r\n\r\n/**\r\n * 把对象复制一份\r\n * @param {Map} map 被复制对象\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Map} 复制对象\r\n */\r\nexport function objClone(map, excludeKeys=null) {\r\n  if (!map) return map;\r\n  let destMap = {};\r\n  for (let key in map) {\r\n    if (excludeKeys && excludeKeys.has(key)) continue;\r\n    destMap[key] = map[key];\r\n  }\r\n  return destMap;\r\n}\r\n\r\n/**\r\n * 把数组每个对象复制一份\r\n * @param {Array} array 被复制对象\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Array} 复制数组对象\r\n */\r\nexport function objsClone(array, excludeKeys=null) {\r\n  if (!array || array.length == 0) return array;\r\n  let _array = [];\r\n  for (let i=0,len=array.length; i<len; i++) {\r\n    _array.push(objClone(array[i], excludeKeys));\r\n  }\r\n  return _array;\r\n}\r\n\r\n/**\r\n * 判断对象是否为空\r\n * @param {Map} map MAP对象\r\n * @param {Boolean} [allowBlank] 是否允许值为空\r\n * @param {Set} [excludeKeys] 被排除的属性\r\n * @return {Boolean}\r\n */\r\nexport function objIsEmpty(map, allowBlank=false, excludeKeys=null) {\r\n  if (!map) return true;\r\n  let value;\r\n  for (let key in map) {\r\n    if (excludeKeys && excludeKeys.has(key)) continue;\r\n    if (allowBlank) return false;\r\n    value = map[key];\r\n    if (value !== null && value !== '' && value != undefined) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n"]}]}