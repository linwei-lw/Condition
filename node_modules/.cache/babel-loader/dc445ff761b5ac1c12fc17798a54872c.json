{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Slider.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Slider.vue","mtime":1638496827581},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 使用例子\n* <Slider tooltip=\"{}秒\" :min=\"0\" :max=\"59\" :signs=\"[0,30,59]\" v-model=\"second\" @change=\"onSecondChg()\"/>  \n* \n*  data: {second: 0},\n*  methods: {\n*    onSecondChg(second) {\n*    }\n*  }\n*/\nexport default {\n  name: \"Slider\",\n  props: {\n    value: {\n      type: [String, Number],\n      default: 0\n    },\n    // 当前值(v-model)\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    signs: Array,\n    showtip: {\n      type: Boolean,\n      default: true\n    },\n    tooltip: {\n      type: String,\n      default: '{}'\n    },\n    getTooltip: Function,\n    barColor: {\n      type: String,\n      default: null\n    },\n    valueColor: {\n      type: String,\n      default: null\n    },\n    disabled: Boolean,\n    // 是否可操作\n    showValueBar: {\n      type: Boolean,\n      default: true\n    } //\n\n  },\n  data: function data() {\n    return {\n      buttonTipWidth: 0,\n      showButtonTip: false,\n      buttonValue: 0,\n      mouseTipWidth: 0,\n      showMouseTip: false,\n      mouseValue: 0,\n      draging: false,\n      reg: new RegExp(\"\\\\{\\\\}\", \"g\")\n    };\n  },\n  mounted: function mounted() {\n    this.buttonValue = this.validValue(Number(this.value || this.min));\n  },\n  watch: {\n    value: function value(v) {\n      this.buttonValue = this.validValue(v);\n    },\n    buttonValue: function buttonValue(v) {\n      this.$nextTick(this.setButtonTipWidth);\n    },\n    showButtonTip: function showButtonTip(v) {\n      v && this.$nextTick(this.setButtonTipWidth);\n    },\n    mouseValue: function mouseValue(v) {\n      this.$nextTick(this.setMouseTipWidth);\n    },\n    showMouseTip: function showMouseTip(v) {\n      v && this.$nextTick(this.setMouseTipWidth);\n    }\n  },\n  methods: {\n    onSignClick: function onSignClick(v) {\n      var oldValue = this.buttonValue;\n      this.buttonValue = this.validValue(v);\n      this.$emit('input', this.buttonValue);\n      this.$emit('change', this.buttonValue, oldValue);\n    },\n    wheelBar: function wheelBar(event) {\n      this.showButtonTip = true;\n      this.showMouseTip = false;\n      var oldValue = this.buttonValue;\n      this.buttonValue = this.validValue(event.deltaY < 0 ? this.buttonValue - this.step : this.buttonValue + this.step);\n\n      if (oldValue != this.buttonValue) {\n        this.$emit('input', this.buttonValue);\n        this.$emit('change', this.buttonValue, oldValue);\n      }\n    },\n    onDragStart: function onDragStart(event) {\n      this.draging = true;\n      document.addEventListener('mousemove', this.onDragging);\n      document.addEventListener('mouseup', this.onDragEnd);\n      this.$emit('dragstart', this._oldValue = this.buttonValue);\n    },\n    onDragging: function onDragging(event) {\n      var w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\n      this.buttonValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min) / this.step) * this.step);\n      this.$emit('dragging', this.buttonValue);\n    },\n    onDragEnd: function onDragEnd(event) {\n      this.draging = this.showButtonTip = false;\n      document.removeEventListener('mousemove', this.onDragging);\n      document.removeEventListener('mouseup', this.onDragEnd);\n      this.$emit('input', this.buttonValue);\n      this.$emit('change', this.buttonValue, this._oldValue);\n      this.$emit('dragend', this.buttonValue, this._oldValue);\n    },\n    onBarClick: function onBarClick(event) {\n      var oldValue = this.buttonValue;\n      var w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\n      this.buttonValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min) / this.step) * this.step);\n      this.$emit('input', this.buttonValue);\n      this.$emit('change', this.buttonValue, oldValue);\n    },\n    onMouseMove: function onMouseMove(event) {\n      if (this.showButtonTip) return;\n      var w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\n      this.mouseValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min) / this.step) * this.step);\n      this.showMouseTip = true;\n    },\n    setButtonTipWidth: function setButtonTipWidth() {\n      this.buttonTipWidth = this.$refs.buttonTip.clientWidth;\n    },\n    setMouseTipWidth: function setMouseTipWidth() {\n      this.mouseTipWidth = this.$refs.mouseTip.clientWidth;\n    },\n    validValue: function validValue(v) {\n      v = Number(v.toFixed(5));\n      return v < this.min ? this.min : v > this.max ? this.max : v;\n    }\n  },\n  computed: {\n    brate: function brate() {\n      return this.rang == 0 ? 0 : (this.buttonValue - this.min) * 100 / this.rang;\n    },\n    mrate: function mrate() {\n      return this.rang == 0 ? 0 : (this.mouseValue - this.min) * 100 / this.rang;\n    },\n    rang: function rang() {\n      return this.max - this.min;\n    }\n  }\n};",{"version":3,"sources":["Slider.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"$style.container\" @click=\"onBarClick($event)\" @wheel.prevent=\"wheelBar($event)\" @mousemove=\"showtip && onMouseMove($event)\" @mouseleave=\"showMouseTip=false\">\r\n    <div :class=\"$style.bar\" :style=\"{backgroundColor: barColor||theme.border_color_light}\" ref=\"bar\">\r\n      <div :class=\"$style.value_bar\" :style=\"{width: brate+'%', backgroundColor: valueColor||theme.color}\" v-if=\"showValueBar\"></div>\r\n     \r\n      <div :class=\"$style.sign\" v-for=\"v in signs\" :key=\"v\" @mousemove.stop=\"!showButtonTip && (showMouseTip=true) && (mouseValue=v)\" @click.stop=\"onSignClick(v)\" :style=\"{left:((v-min)*100/rang)+'%', borderColor: barColor||theme.border_color_light}\"></div>\r\n\r\n      <div :class=\"$style.btn\" :style=\"{left: brate+'%', borderColor: theme.color}\" @mousedown=\"onDragStart($event)\" @mouseenter=\"showButtonTip=true;showMouseTip=false\" @mouseleave=\"!draging&&(showButtonTip=false)\"></div>\r\n\r\n      <span @mousemove.stop=\"showMouseTip=false\" :class=\"$style.tooltip\" ref=\"buttonTip\" :style=\"{left: `calc(${brate}% - ${buttonTipWidth/2}px)`, borderColor: valueColor||theme.color}\" v-show=\"showtip && showButtonTip\"> {{getTooltip ? getTooltip(buttonValue) : tooltip.replace(reg,buttonValue)}} </span>\r\n      <span @mousemove.stop=\"showMouseTip=false\" :class=\"$style.tooltip\" ref=\"mouseTip\"  :style=\"{left: `calc(${mrate}% - ${mouseTipWidth/2}px)`, borderColor: valueColor||theme.color}\"  v-show=\"showtip && showMouseTip\">  {{getTooltip ? getTooltip(mouseValue) : tooltip.replace(reg,mouseValue)}} </span>\r\n    </div>\r\n\r\n    <!--禁止操作层-->\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  /*\r\n  * 使用例子\r\n  * <Slider tooltip=\"{}秒\" :min=\"0\" :max=\"59\" :signs=\"[0,30,59]\" v-model=\"second\" @change=\"onSecondChg()\"/>  \r\n  * \r\n  *  data: {second: 0},\r\n  *  methods: {\r\n  *    onSecondChg(second) {\r\n  *    }\r\n  *  }\r\n  */\r\n\r\n  export default {\r\n    name: \"Slider\",\r\n    props: {\r\n      value: { type: [String, Number],  default: 0 },            // 当前值(v-model)\r\n      min:   { type: Number,  default: 0 },\r\n      max:   { type: Number,  default: 100 },\r\n      step:   { type: Number,  default: 1 },\r\n      signs: Array,\r\n      showtip: { type: Boolean,  default: true },\r\n      tooltip: { type: String, default: '{}'},\r\n      getTooltip: Function,\r\n      barColor: { type: String, default: null},\r\n      valueColor: { type: String, default: null},\r\n      disabled: Boolean,                               // 是否可操作\r\n      showValueBar: { type: Boolean, default: true},   //\r\n    },\r\n    data() {\r\n      return {\r\n        buttonTipWidth: 0,\r\n        showButtonTip: false,\r\n        buttonValue: 0,\r\n        mouseTipWidth: 0,\r\n        showMouseTip: false,\r\n        mouseValue: 0,\r\n        draging: false,\r\n        reg: new RegExp(\"\\\\{\\\\}\",\"g\")\r\n      };\r\n    },\r\n    mounted() {\r\n      this.buttonValue = this.validValue(Number(this.value||this.min));\r\n    },\r\n    watch: {\r\n      value: function(v) {\r\n        this.buttonValue = this.validValue(v);\r\n      },\r\n      buttonValue: function(v) {\r\n        this.$nextTick(this.setButtonTipWidth);\r\n      },\r\n      showButtonTip: function(v) {\r\n        v && this.$nextTick(this.setButtonTipWidth);\r\n      },\r\n      mouseValue: function(v) {\r\n        this.$nextTick(this.setMouseTipWidth);\r\n      },\r\n      showMouseTip: function(v) {\r\n        v && this.$nextTick(this.setMouseTipWidth);\r\n      },\r\n      \r\n    },\r\n    methods: {\r\n      onSignClick(v) {\r\n        let oldValue = this.buttonValue;\r\n        this.buttonValue = this.validValue(v);\r\n        this.$emit('input', this.buttonValue);\r\n        this.$emit('change', this.buttonValue, oldValue);\r\n      },\r\n      wheelBar(event) {\r\n        this.showButtonTip = true;\r\n        this.showMouseTip = false;\r\n        let oldValue = this.buttonValue;\r\n        this.buttonValue = this.validValue(event.deltaY < 0 ? (this.buttonValue - this.step) : (this.buttonValue + this.step));\r\n        if (oldValue != this.buttonValue) {\r\n          this.$emit('input', this.buttonValue);\r\n          this.$emit('change', this.buttonValue, oldValue);\r\n        }\r\n      },\r\n      onDragStart(event) {\r\n        this.draging = true;\r\n        document.addEventListener('mousemove', this.onDragging);\r\n        document.addEventListener('mouseup', this.onDragEnd);\r\n        this.$emit('dragstart', this._oldValue = this.buttonValue);\r\n      },\r\n      onDragging(event) {\r\n        let w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\r\n        this.buttonValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min)/this.step) * this.step);\r\n        this.$emit('dragging', this.buttonValue);\r\n      },\r\n      onDragEnd(event) {\r\n        this.draging = this.showButtonTip = false;\r\n        document.removeEventListener('mousemove', this.onDragging);\r\n        document.removeEventListener('mouseup', this.onDragEnd);\r\n        this.$emit('input', this.buttonValue);\r\n        this.$emit('change', this.buttonValue, this._oldValue);\r\n        this.$emit('dragend', this.buttonValue, this._oldValue);\r\n      },\r\n      onBarClick(event) {\r\n        let oldValue = this.buttonValue;\r\n        let w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\r\n        this.buttonValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min)/this.step) * this.step);\r\n        this.$emit('input', this.buttonValue);\r\n        this.$emit('change', this.buttonValue, oldValue);\r\n      },\r\n      onMouseMove(event) {\r\n        if (this.showButtonTip) return;\r\n        let w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\r\n        this.mouseValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min)/this.step) * this.step);\r\n        this.showMouseTip = true;\r\n      },\r\n      setButtonTipWidth() {\r\n        this.buttonTipWidth = this.$refs.buttonTip.clientWidth;\r\n      },\r\n      setMouseTipWidth() {\r\n        this.mouseTipWidth = this.$refs.mouseTip.clientWidth;\r\n      },\r\n      validValue(v) {\r\n        v = Number(v.toFixed(5));\r\n        return v < this.min ? this.min : (v > this.max ? this.max : v);\r\n      }\r\n    },\r\n    computed: {\r\n      brate() {\r\n        return this.rang == 0 ? 0 : ((this.buttonValue - this.min) * 100 / this.rang);\r\n      },\r\n      mrate() {\r\n        return this.rang == 0 ? 0 : ((this.mouseValue - this.min) * 100 / this.rang);\r\n      },\r\n      rang() {\r\n        return this.max - this.min;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    position: relative;\r\n    line-height: normal;\r\n    cursor: pointer;\r\n    height: 20px;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .bar {\r\n    top: 8px;\r\n    width: 100%;\r\n    height: 4px;\r\n    vertical-align: middle;\r\n    position: relative;\r\n  }\r\n  .value_bar {\r\n    height: 4px;\r\n    /*border-radius: 3px;*/\r\n    position: absolute\r\n  }\r\n  .btn {\r\n    position: absolute;\r\n    margin-left: -6px;\r\n    top: -4px;\r\n    width: 12px;\r\n    height: 12px;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    outline: 0;\r\n  }\r\n  .sign {\r\n    position: absolute;\r\n    margin-left: -5px;\r\n    top: -3px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    outline: 0;\r\n  }\r\n  .tooltip {\r\n    position: absolute;\r\n    top: -35px;\r\n    padding: 4px 6px;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    white-space: nowrap;\r\n    background-color: #FCF0C1;\r\n    z-index: 99999;\r\n  }\r\n  /* 禁止操作 */\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}