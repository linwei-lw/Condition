{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\footer\\src\\footer.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\footer\\src\\footer.js","mtime":1635230121168},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.fixed\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.string.fixed\";\nimport XEUtils from 'xe-utils';\nimport { UtilTools, DomTools } from \"../../tools\";\nvar cellType = 'footer';\n\nfunction mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex) {\n  for (var mIndex = 0; mIndex < mergeFooterList.length; mIndex++) {\n    var _mergeFooterList$mInd = mergeFooterList[mIndex],\n        mergeRowIndex = _mergeFooterList$mInd.row,\n        mergeColIndex = _mergeFooterList$mInd.col,\n        mergeRowspan = _mergeFooterList$mInd.rowspan,\n        mergeColspan = _mergeFooterList$mInd.colspan;\n\n    if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\n      if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\n        return {\n          rowspan: mergeRowspan,\n          colspan: mergeColspan\n        };\n      }\n\n      if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\n        return {\n          rowspan: 0,\n          colspan: 0\n        };\n      }\n    }\n  }\n}\n\nexport default {\n  name: 'VxeTableFooter',\n  props: {\n    footerTableData: Array,\n    tableColumn: Array,\n    fixedColumn: Array,\n    fixedType: String,\n    size: String\n  },\n  mounted: function mounted() {\n    var $xetable = this.$parent,\n        $el = this.$el,\n        $refs = this.$refs,\n        fixedType = this.fixedType;\n    var elemStore = $xetable.elemStore;\n    var prefix = \"\".concat(fixedType || 'main', \"-footer-\");\n    elemStore[\"\".concat(prefix, \"wrapper\")] = $el;\n    elemStore[\"\".concat(prefix, \"table\")] = $refs.table;\n    elemStore[\"\".concat(prefix, \"colgroup\")] = $refs.colgroup;\n    elemStore[\"\".concat(prefix, \"list\")] = $refs.tfoot;\n    elemStore[\"\".concat(prefix, \"xSpace\")] = $refs.xSpace;\n  },\n  render: function render(h) {\n    var _e = this._e,\n        $xetable = this.$parent,\n        fixedType = this.fixedType,\n        fixedColumn = this.fixedColumn,\n        tableColumn = this.tableColumn,\n        footerTableData = this.footerTableData;\n    var tableListeners = $xetable.$listeners,\n        tId = $xetable.tId,\n        footerRowClassName = $xetable.footerRowClassName,\n        footerCellClassName = $xetable.footerCellClassName,\n        footerRowStyle = $xetable.footerRowStyle,\n        footerCellStyle = $xetable.footerCellStyle,\n        allFooterAlign = $xetable.footerAlign,\n        mergeFooterList = $xetable.mergeFooterList,\n        footerSpanMethod = $xetable.footerSpanMethod,\n        allAlign = $xetable.align,\n        scrollXLoad = $xetable.scrollXLoad,\n        columnKey = $xetable.columnKey,\n        allColumnFooterOverflow = $xetable.showFooterOverflow,\n        currentColumn = $xetable.currentColumn,\n        overflowX = $xetable.overflowX,\n        scrollbarWidth = $xetable.scrollbarWidth,\n        tooltipOpts = $xetable.tooltipOpts; // 如果是使用优化模式\n\n    if (fixedType) {\n      if ((!mergeFooterList.length || !footerSpanMethod) && (scrollXLoad || allColumnFooterOverflow)) {\n        tableColumn = fixedColumn;\n      }\n    }\n\n    return h('div', {\n      class: ['vxe-table--footer-wrapper', fixedType ? \"fixed-\".concat(fixedType, \"--wrapper\") : 'body--wrapper'],\n      attrs: {\n        xid: tId\n      },\n      on: {\n        scroll: this.scrollEvent\n      }\n    }, [fixedType ? _e() : h('div', {\n      class: 'vxe-body--x-space',\n      ref: 'xSpace'\n    }), h('table', {\n      class: 'vxe-table--footer',\n      attrs: {\n        xid: tId,\n        cellspacing: 0,\n        cellpadding: 0,\n        border: 0\n      },\n      ref: 'table'\n    }, [\n    /**\r\n     * 列宽\r\n     */\n    h('colgroup', {\n      ref: 'colgroup'\n    }, tableColumn.map(function (column, $columnIndex) {\n      return h('col', {\n        attrs: {\n          name: column.id\n        },\n        key: $columnIndex\n      });\n    }).concat(scrollbarWidth ? [h('col', {\n      attrs: {\n        name: 'col_gutter'\n      }\n    })] : [])),\n    /**\r\n     * 底部\r\n     */\n    h('tfoot', {\n      ref: 'tfoot'\n    }, footerTableData.map(function (list, _rowIndex) {\n      var $rowIndex = _rowIndex;\n      return h('tr', {\n        class: ['vxe-footer--row', footerRowClassName ? XEUtils.isFunction(footerRowClassName) ? footerRowClassName({\n          $table: $xetable,\n          _rowIndex: _rowIndex,\n          $rowIndex: $rowIndex,\n          fixed: fixedType,\n          type: cellType\n        }) : footerRowClassName : ''],\n        style: footerRowStyle ? XEUtils.isFunction(footerRowStyle) ? footerRowStyle({\n          $table: $xetable,\n          _rowIndex: _rowIndex,\n          $rowIndex: $rowIndex,\n          fixed: fixedType,\n          type: cellType\n        }) : footerRowStyle : null\n      }, tableColumn.map(function (column, $columnIndex) {\n        var _ref2;\n\n        var type = column.type,\n            showFooterOverflow = column.showFooterOverflow,\n            footerAlign = column.footerAlign,\n            align = column.align,\n            footerClassName = column.footerClassName;\n        var showAllTip = tooltipOpts.showAll || tooltipOpts.enabled;\n        var isColGroup = column.children && column.children.length;\n        var fixedHiddenColumn = fixedType ? column.fixed !== fixedType && !isColGroup : column.fixed && overflowX;\n        var footOverflow = XEUtils.isUndefined(showFooterOverflow) || XEUtils.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow;\n        var footAlign = footerAlign || align || allFooterAlign || allAlign;\n        var showEllipsis = footOverflow === 'ellipsis';\n        var showTitle = footOverflow === 'title';\n        var showTooltip = footOverflow === true || footOverflow === 'tooltip';\n        var hasEllipsis = showTitle || showTooltip || showEllipsis;\n        var attrs = {\n          colid: column.id\n        };\n        var tfOns = {};\n        var columnIndex = $xetable.getColumnIndex(column);\n\n        var _columnIndex = $xetable.getVTColumnIndex(column);\n\n        var itemIndex = _columnIndex;\n        var params = {\n          $table: $xetable,\n          _rowIndex: _rowIndex,\n          $rowIndex: $rowIndex,\n          column: column,\n          columnIndex: columnIndex,\n          $columnIndex: $columnIndex,\n          _columnIndex: _columnIndex,\n          itemIndex: itemIndex,\n          items: list,\n          fixed: fixedType,\n          type: cellType,\n          data: footerTableData // 虚拟滚动不支持动态高度\n\n        };\n\n        if (scrollXLoad && !hasEllipsis) {\n          showEllipsis = hasEllipsis = true;\n        }\n\n        if (showTitle || showTooltip || showAllTip) {\n          tfOns.mouseenter = function (evnt) {\n            if (showTitle) {\n              DomTools.updateCellTitle(evnt.currentTarget, column);\n            } else if (showTooltip || showAllTip) {\n              $xetable.triggerFooterTooltipEvent(evnt, params);\n            }\n          };\n        }\n\n        if (showTooltip || showAllTip) {\n          tfOns.mouseleave = function (evnt) {\n            if (showTooltip || showAllTip) {\n              $xetable.handleTargetLeaveEvent(evnt);\n            }\n          };\n        }\n\n        if (tableListeners['footer-cell-click']) {\n          tfOns.click = function (evnt) {\n            $xetable.emitEvent('footer-cell-click', Object.assign({\n              cell: evnt.currentTarget\n            }, params), evnt);\n          };\n        }\n\n        if (tableListeners['footer-cell-dblclick']) {\n          tfOns.dblclick = function (evnt) {\n            $xetable.emitEvent('footer-cell-dblclick', Object.assign({\n              cell: evnt.currentTarget\n            }, params), evnt);\n          };\n        } // 合并行或列\n\n\n        if (mergeFooterList.length) {\n          var spanRest = mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex);\n\n          if (spanRest) {\n            var rowspan = spanRest.rowspan,\n                colspan = spanRest.colspan;\n\n            if (!rowspan || !colspan) {\n              return null;\n            }\n\n            if (rowspan > 1) {\n              attrs.rowspan = rowspan;\n            }\n\n            if (colspan > 1) {\n              attrs.colspan = colspan;\n            }\n          }\n        } else if (footerSpanMethod) {\n          // 自定义合并方法\n          var _ref = footerSpanMethod(params) || {},\n              _ref$rowspan = _ref.rowspan,\n              _rowspan = _ref$rowspan === void 0 ? 1 : _ref$rowspan,\n              _ref$colspan = _ref.colspan,\n              _colspan = _ref$colspan === void 0 ? 1 : _ref$colspan;\n\n          if (!_rowspan || !_colspan) {\n            return null;\n          }\n\n          if (_rowspan > 1) {\n            attrs.rowspan = _rowspan;\n          }\n\n          if (_colspan > 1) {\n            attrs.colspan = _colspan;\n          }\n        }\n\n        return h('td', {\n          class: ['vxe-footer--column', column.id, (_ref2 = {}, _defineProperty(_ref2, \"col--\".concat(footAlign), footAlign), _defineProperty(_ref2, \"col--\".concat(type), type), _defineProperty(_ref2, 'col--last', $columnIndex === tableColumn.length - 1), _defineProperty(_ref2, 'fixed--hidden', fixedHiddenColumn), _defineProperty(_ref2, 'col--ellipsis', hasEllipsis), _defineProperty(_ref2, 'col--current', currentColumn === column), _ref2), UtilTools.getClass(footerClassName, params), UtilTools.getClass(footerCellClassName, params)],\n          attrs: attrs,\n          style: footerCellStyle ? XEUtils.isFunction(footerCellStyle) ? footerCellStyle(params) : footerCellStyle : null,\n          on: tfOns,\n          key: columnKey ? column.id : $columnIndex\n        }, [h('div', {\n          class: ['vxe-cell', {\n            'c--title': showTitle,\n            'c--tooltip': showTooltip,\n            'c--ellipsis': showEllipsis\n          }]\n        }, column.renderFooter(h, params))]);\n      }).concat(scrollbarWidth ? [h('td', {\n        class: 'vxe-footer--gutter col--gutter'\n      })] : []));\n    }))])]);\n  },\n  methods: {\n    /**\r\n     * 滚动处理\r\n     * 如果存在列固定左侧，同步更新滚动状态\r\n     * 如果存在列固定右侧，同步更新滚动状态\r\n     */\n    scrollEvent: function scrollEvent(evnt) {\n      var $xetable = this.$parent,\n          fixedType = this.fixedType;\n      var $refs = $xetable.$refs,\n          scrollXLoad = $xetable.scrollXLoad,\n          triggerScrollXEvent = $xetable.triggerScrollXEvent,\n          lastScrollLeft = $xetable.lastScrollLeft;\n      var tableHeader = $refs.tableHeader,\n          tableBody = $refs.tableBody,\n          tableFooter = $refs.tableFooter,\n          validTip = $refs.validTip;\n      var headerElem = tableHeader ? tableHeader.$el : null;\n      var footerElem = tableFooter ? tableFooter.$el : null;\n      var bodyElem = tableBody.$el;\n      var scrollLeft = footerElem ? footerElem.scrollLeft : 0;\n      var isX = scrollLeft !== lastScrollLeft;\n      $xetable.lastScrollLeft = scrollLeft;\n      $xetable.lastScrollTime = Date.now();\n\n      if (headerElem) {\n        headerElem.scrollLeft = scrollLeft;\n      }\n\n      if (bodyElem) {\n        bodyElem.scrollLeft = scrollLeft;\n      }\n\n      if (scrollXLoad && isX) {\n        triggerScrollXEvent(evnt);\n      }\n\n      if (isX && validTip && validTip.visible) {\n        validTip.updatePlacement();\n      }\n\n      $xetable.emitEvent('scroll', {\n        type: cellType,\n        fixed: fixedType,\n        scrollTop: bodyElem.scrollTop,\n        scrollLeft: scrollLeft,\n        isX: isX,\n        isY: false\n      }, evnt);\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\footer\\src\\footer.js"],"names":["cellType","mIndex","mergeFooterList","mergeRowIndex","mergeColIndex","mergeRowspan","mergeColspan","rowspan","colspan","_rowIndex","_columnIndex","name","props","footerTableData","tableColumn","fixedColumn","fixedType","size","String","mounted","$xetable","$el","$refs","elemStore","prefix","render","_e","tableListeners","tId","footerRowClassName","footerCellClassName","footerRowStyle","footerCellStyle","allFooterAlign","footerSpanMethod","allAlign","scrollXLoad","columnKey","allColumnFooterOverflow","currentColumn","overflowX","scrollbarWidth","tooltipOpts","h","class","attrs","xid","on","scroll","scrollEvent","ref","cellspacing","cellpadding","border","column","id","key","$columnIndex","$rowIndex","$table","fixed","type","style","showFooterOverflow","footerAlign","align","footerClassName","showAllTip","isColGroup","fixedHiddenColumn","footOverflow","XEUtils","footAlign","showEllipsis","showTitle","showTooltip","hasEllipsis","colid","tfOns","columnIndex","itemIndex","params","items","data","DomTools","evnt","cell","currentTarget","spanRest","mergeFooterMethod","UtilTools","methods","triggerScrollXEvent","lastScrollLeft","tableHeader","tableBody","tableFooter","validTip","headerElem","footerElem","bodyElem","scrollLeft","isX","Date","scrollTop","isY"],"mappings":";;;AAAA,OAAA,OAAA,MAAA,UAAA;AACA,SAAA,SAAA,EAAA,QAAA;AAEA,IAAMA,QAAQ,GAAd,QAAA;;AAEA,SAAA,iBAAA,CAAA,eAAA,EAAA,SAAA,EAAA,YAAA,EAAsE;AACpE,OAAK,IAAIC,MAAM,GAAf,CAAA,EAAqBA,MAAM,GAAGC,eAAe,CAA7C,MAAA,EAAsDD,MAAtD,EAAA,EAAgE;AAAA,QAAA,qBAAA,GACmCC,eAAe,CADlD,MACkD,CADlD;AAAA,QACjDC,aADiD,GAAA,qBAAA,CAAA,GAAA;AAAA,QAC7BC,aAD6B,GAAA,qBAAA,CAAA,GAAA;AAAA,QACLC,YADK,GAAA,qBAAA,CAAA,OAAA;AAAA,QACkBC,YADlB,GAAA,qBAAA,CAAA,OAAA;;AAE9D,QAAIF,aAAa,GAAG,CAAhBA,CAAAA,IAAsBD,aAAa,GAAG,CAAtCC,CAAAA,IAAAA,YAAAA,IAAJ,YAAA,EAA8E;AAC5E,UAAID,aAAa,KAAbA,SAAAA,IAA+BC,aAAa,KAAhD,YAAA,EAAmE;AACjE,eAAO;AAAEG,UAAAA,OAAO,EAAT,YAAA;AAAyBC,UAAAA,OAAO,EAAEF;AAAlC,SAAP;AACD;;AACD,UAAIG,SAAS,IAATA,aAAAA,IAA8BA,SAAS,GAAGN,aAAa,GAAvDM,YAAAA,IAA0EC,YAAY,IAAtFD,aAAAA,IAA2GC,YAAY,GAAGN,aAAa,GAA3I,YAAA,EAA4J;AAC1J,eAAO;AAAEG,UAAAA,OAAO,EAAT,CAAA;AAAcC,UAAAA,OAAO,EAAE;AAAvB,SAAP;AACD;AACF;AACF;AACF;;AAED,eAAe;AACbG,EAAAA,IAAI,EADS,gBAAA;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EADV,KAAA;AAELC,IAAAA,WAAW,EAFN,KAAA;AAGLC,IAAAA,WAAW,EAHN,KAAA;AAILC,IAAAA,SAAS,EAJJ,MAAA;AAKLC,IAAAA,IAAI,EAAEC;AALD,GAFM;AASbC,EAAAA,OATa,EAAA,SAAA,OAAA,GASF;AAAA,QACQC,QADR,GAAA,KAAA,OAAA;AAAA,QACkBC,GADlB,GAAA,KAAA,GAAA;AAAA,QACuBC,KADvB,GAAA,KAAA,KAAA;AAAA,QAC8BN,SAD9B,GAAA,KAAA,SAAA;AAAA,QAEDO,SAFC,GAEaH,QAFb,CAAA,SAAA;AAGT,QAAMI,MAAM,GAAA,GAAA,MAAA,CAAMR,SAAS,IAAf,MAAA,EAAZ,UAAY,CAAZ;AACAO,IAAAA,SAAS,CAAA,GAAA,MAAA,CAAA,MAAA,EAATA,SAAS,CAAA,CAATA,GAAAA,GAAAA;AACAA,IAAAA,SAAS,CAAA,GAAA,MAAA,CAAA,MAAA,EAATA,OAAS,CAAA,CAATA,GAA8BD,KAAK,CAAnCC,KAAAA;AACAA,IAAAA,SAAS,CAAA,GAAA,MAAA,CAAA,MAAA,EAATA,UAAS,CAAA,CAATA,GAAiCD,KAAK,CAAtCC,QAAAA;AACAA,IAAAA,SAAS,CAAA,GAAA,MAAA,CAAA,MAAA,EAATA,MAAS,CAAA,CAATA,GAA6BD,KAAK,CAAlCC,KAAAA;AACAA,IAAAA,SAAS,CAAA,GAAA,MAAA,CAAA,MAAA,EAATA,QAAS,CAAA,CAATA,GAA+BD,KAAK,CAApCC,MAAAA;AAjBW,GAAA;AAmBbE,EAAAA,MAnBa,EAAA,SAAA,MAAA,CAAA,CAAA,EAmBF;AAAA,QACHC,EADG,GAAA,KAAA,EAAA;AAAA,QACUN,QADV,GAAA,KAAA,OAAA;AAAA,QACoBJ,SADpB,GAAA,KAAA,SAAA;AAAA,QAC+BD,WAD/B,GAAA,KAAA,WAAA;AAAA,QAC4CD,WAD5C,GAAA,KAAA,WAAA;AAAA,QACyDD,eADzD,GAAA,KAAA,eAAA;AAAA,QAGKc,cAHL,GAoBLP,QApBK,CAAA,UAAA;AAAA,QAIPQ,GAJO,GAoBLR,QApBK,CAAA,GAAA;AAAA,QAKPS,kBALO,GAoBLT,QApBK,CAAA,kBAAA;AAAA,QAMPU,mBANO,GAoBLV,QApBK,CAAA,mBAAA;AAAA,QAOPW,cAPO,GAoBLX,QApBK,CAAA,cAAA;AAAA,QAQPY,eARO,GAoBLZ,QApBK,CAAA,eAAA;AAAA,QASMa,cATN,GAoBLb,QApBK,CAAA,WAAA;AAAA,QAUPlB,eAVO,GAoBLkB,QApBK,CAAA,eAAA;AAAA,QAWPc,gBAXO,GAoBLd,QApBK,CAAA,gBAAA;AAAA,QAYAe,QAZA,GAoBLf,QApBK,CAAA,KAAA;AAAA,QAaPgB,WAbO,GAoBLhB,QApBK,CAAA,WAAA;AAAA,QAcPiB,SAdO,GAoBLjB,QApBK,CAAA,SAAA;AAAA,QAeakB,uBAfb,GAoBLlB,QApBK,CAAA,kBAAA;AAAA,QAgBPmB,aAhBO,GAoBLnB,QApBK,CAAA,aAAA;AAAA,QAiBPoB,SAjBO,GAoBLpB,QApBK,CAAA,SAAA;AAAA,QAkBPqB,cAlBO,GAoBLrB,QApBK,CAAA,cAAA;AAAA,QAmBPsB,WAnBO,GAoBLtB,QApBK,CAAA,WAAA,CAAA,CAqBT;;AACA,QAAA,SAAA,EAAe;AACb,UAAI,CAAC,CAAClB,eAAe,CAAhB,MAAA,IAA2B,CAA5B,gBAAA,MAAmDkC,WAAW,IAAlE,uBAAI,CAAJ,EAAgG;AAC9FtB,QAAAA,WAAW,GAAXA,WAAAA;AACD;AACF;;AACD,WAAO6B,CAAC,CAAA,KAAA,EAAQ;AACdC,MAAAA,KAAK,EAAE,CAAA,2BAAA,EAA8B5B,SAAS,GAAA,SAAA,MAAA,CAAA,SAAA,EAAA,WAAA,CAAA,GADhC,eACP,CADO;AAEd6B,MAAAA,KAAK,EAAE;AACLC,QAAAA,GAAG,EAAElB;AADA,OAFO;AAKdmB,MAAAA,EAAE,EAAE;AACFC,QAAAA,MAAM,EAAE,KAAKC;AADX;AALU,KAAR,EAQL,CACDjC,SAAS,GAAGU,EAAH,EAAA,GAAUiB,CAAC,CAAA,KAAA,EAAQ;AAC1BC,MAAAA,KAAK,EADqB,mBAAA;AAE1BM,MAAAA,GAAG,EAAE;AAFqB,KAAR,CADnB,EAKDP,CAAC,CAAA,OAAA,EAAU;AACTC,MAAAA,KAAK,EADI,mBAAA;AAETC,MAAAA,KAAK,EAAE;AACLC,QAAAA,GAAG,EADE,GAAA;AAELK,QAAAA,WAAW,EAFN,CAAA;AAGLC,QAAAA,WAAW,EAHN,CAAA;AAILC,QAAAA,MAAM,EAAE;AAJH,OAFE;AAQTH,MAAAA,GAAG,EAAE;AARI,KAAV,EASE;AACD;;;AAGAP,IAAAA,CAAC,CAAA,UAAA,EAAa;AACZO,MAAAA,GAAG,EAAE;AADO,KAAb,EAEE,WAAW,CAAX,GAAA,CAAgB,UAAA,MAAA,EAAA,YAAA,EAA0B;AAC3C,aAAOP,CAAC,CAAA,KAAA,EAAQ;AACdE,QAAAA,KAAK,EAAE;AACLlC,UAAAA,IAAI,EAAE2C,MAAM,CAACC;AADR,SADO;AAIdC,QAAAA,GAAG,EAAEC;AAJS,OAAR,CAAR;AADC,KAAA,EAAA,MAAA,CAOOhB,cAAc,GAAG,CACzBE,CAAC,CAAA,KAAA,EAAQ;AACPE,MAAAA,KAAK,EAAE;AACLlC,QAAAA,IAAI,EAAE;AADD;AADA,KAAR,CADwB,CAAH,GAbvB,EAME,CAFF,CAJA;AAoBD;;;AAGAgC,IAAAA,CAAC,CAAA,OAAA,EAAU;AACTO,MAAAA,GAAG,EAAE;AADI,KAAV,EAEE,eAAe,CAAf,GAAA,CAAoB,UAAA,IAAA,EAAA,SAAA,EAAqB;AAC1C,UAAMQ,SAAS,GAAf,SAAA;AACA,aAAOf,CAAC,CAAA,IAAA,EAAO;AACbC,QAAAA,KAAK,EAAE,CAAA,iBAAA,EAAoBf,kBAAkB,GAAG,OAAO,CAAP,UAAA,CAAA,kBAAA,IAAyCA,kBAAkB,CAAC;AAAE8B,UAAAA,MAAM,EAAR,QAAA;AAAoBlD,UAAAA,SAAS,EAA7B,SAAA;AAA+BiD,UAAAA,SAAS,EAAxC,SAAA;AAA0CE,UAAAA,KAAK,EAA/C,SAAA;AAA4DC,UAAAA,IAAI,EAAE7D;AAAlE,SAAD,CAA3D,GAAH,kBAAA,GADhC,EACN,CADM;AAEb8D,QAAAA,KAAK,EAAE/B,cAAc,GAAI,OAAO,CAAP,UAAA,CAAA,cAAA,IAAqCA,cAAc,CAAC;AAAE4B,UAAAA,MAAM,EAAR,QAAA;AAAoBlD,UAAAA,SAAS,EAA7B,SAAA;AAA+BiD,UAAAA,SAAS,EAAxC,SAAA;AAA0CE,UAAAA,KAAK,EAA/C,SAAA;AAA4DC,UAAAA,IAAI,EAAE7D;AAAlE,SAAD,CAAnD,GAAJ,cAAA,GAA0J;AAFlK,OAAP,EAGL,WAAW,CAAX,GAAA,CAAgB,UAAA,MAAA,EAAA,YAAA,EAA0B;AAAA,YAAA,KAAA;;AAAA,YACnC6D,IADmC,GAC+BP,MAD/B,CAAA,IAAA;AAAA,YAC7BS,kBAD6B,GAC+BT,MAD/B,CAAA,kBAAA;AAAA,YACTU,WADS,GAC+BV,MAD/B,CAAA,WAAA;AAAA,YACIW,KADJ,GAC+BX,MAD/B,CAAA,KAAA;AAAA,YACWY,eADX,GAC+BZ,MAD/B,CAAA,eAAA;AAE3C,YAAMa,UAAU,GAAGzB,WAAW,CAAXA,OAAAA,IAAuBA,WAAW,CAArD,OAAA;AACA,YAAM0B,UAAU,GAAGd,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,QAAAA,CAAtC,MAAA;AACA,YAAMe,iBAAiB,GAAGrD,SAAS,GAAGsC,MAAM,CAANA,KAAAA,KAAAA,SAAAA,IAA8B,CAAjC,UAAA,GAA+CA,MAAM,CAANA,KAAAA,IAAlF,SAAA;AACA,YAAMgB,YAAY,GAAGC,OAAO,CAAPA,WAAAA,CAAAA,kBAAAA,KAA2CA,OAAO,CAAPA,MAAAA,CAA3CA,kBAA2CA,CAA3CA,GAAAA,uBAAAA,GAArB,kBAAA;AACA,YAAMC,SAAS,GAAGR,WAAW,IAAXA,KAAAA,IAAAA,cAAAA,IAAlB,QAAA;AACA,YAAIS,YAAY,GAAGH,YAAY,KAA/B,UAAA;AACA,YAAMI,SAAS,GAAGJ,YAAY,KAA9B,OAAA;AACA,YAAMK,WAAW,GAAGL,YAAY,KAAZA,IAAAA,IAAyBA,YAAY,KAAzD,SAAA;AACA,YAAIM,WAAW,GAAGF,SAAS,IAATA,WAAAA,IAAlB,YAAA;AACA,YAAM7B,KAAK,GAAG;AAAEgC,UAAAA,KAAK,EAAEvB,MAAM,CAACC;AAAhB,SAAd;AACA,YAAMuB,KAAK,GAAX,EAAA;AACA,YAAMC,WAAW,GAAG3D,QAAQ,CAARA,cAAAA,CAApB,MAAoBA,CAApB;;AACA,YAAMV,YAAY,GAAGU,QAAQ,CAARA,gBAAAA,CAArB,MAAqBA,CAArB;;AACA,YAAM4D,SAAS,GAAf,YAAA;AACA,YAAMC,MAAM,GAAG;AAAEtB,UAAAA,MAAM,EAAR,QAAA;AAAoBlD,UAAAA,SAAS,EAA7B,SAAA;AAA+BiD,UAAAA,SAAS,EAAxC,SAAA;AAA0CJ,UAAAA,MAAM,EAAhD,MAAA;AAAkDyB,UAAAA,WAAW,EAA7D,WAAA;AAA+DtB,UAAAA,YAAY,EAA3E,YAAA;AAA6E/C,UAAAA,YAAY,EAAzF,YAAA;AAA2FsE,UAAAA,SAAS,EAApG,SAAA;AAAsGE,UAAAA,KAAK,EAA3G,IAAA;AAAmHtB,UAAAA,KAAK,EAAxH,SAAA;AAAqIC,UAAAA,IAAI,EAAzI,QAAA;AAAqJsB,UAAAA,IAAI,EAAzJ,eAAA,CACf;;AADe,SAAf;;AAEA,YAAI/C,WAAW,IAAI,CAAnB,WAAA,EAAiC;AAC/BqC,UAAAA,YAAY,GAAGG,WAAW,GAA1BH,IAAAA;AACD;;AACD,YAAIC,SAAS,IAATA,WAAAA,IAAJ,UAAA,EAA4C;AAC1CI,UAAAA,KAAK,CAALA,UAAAA,GAAmB,UAAA,IAAA,EAAQ;AACzB,gBAAA,SAAA,EAAe;AACbM,cAAAA,QAAQ,CAARA,eAAAA,CAAyBC,IAAI,CAA7BD,aAAAA,EAAAA,MAAAA;AADF,aAAA,MAEO,IAAIT,WAAW,IAAf,UAAA,EAA+B;AACpCvD,cAAAA,QAAQ,CAARA,yBAAAA,CAAAA,IAAAA,EAAAA,MAAAA;AACD;AALH0D,WAAAA;AAOD;;AACD,YAAIH,WAAW,IAAf,UAAA,EAA+B;AAC7BG,UAAAA,KAAK,CAALA,UAAAA,GAAmB,UAAA,IAAA,EAAQ;AACzB,gBAAIH,WAAW,IAAf,UAAA,EAA+B;AAC7BvD,cAAAA,QAAQ,CAARA,sBAAAA,CAAAA,IAAAA;AACD;AAHH0D,WAAAA;AAKD;;AACD,YAAInD,cAAc,CAAlB,mBAAkB,CAAlB,EAAyC;AACvCmD,UAAAA,KAAK,CAALA,KAAAA,GAAc,UAAA,IAAA,EAAQ;AACpB1D,YAAAA,QAAQ,CAARA,SAAAA,CAAAA,mBAAAA,EAAwC,MAAM,CAAN,MAAA,CAAc;AAAEkE,cAAAA,IAAI,EAAED,IAAI,CAACE;AAAb,aAAd,EAAxCnE,MAAwC,CAAxCA,EAAAA,IAAAA;AADF0D,WAAAA;AAGD;;AACD,YAAInD,cAAc,CAAlB,sBAAkB,CAAlB,EAA4C;AAC1CmD,UAAAA,KAAK,CAALA,QAAAA,GAAiB,UAAA,IAAA,EAAQ;AACvB1D,YAAAA,QAAQ,CAARA,SAAAA,CAAAA,sBAAAA,EAA2C,MAAM,CAAN,MAAA,CAAc;AAAEkE,cAAAA,IAAI,EAAED,IAAI,CAACE;AAAb,aAAd,EAA3CnE,MAA2C,CAA3CA,EAAAA,IAAAA;AADF0D,WAAAA;AA3CyC,SAAA,CA+C3C;;;AACA,YAAI5E,eAAe,CAAnB,MAAA,EAA4B;AAC1B,cAAMsF,QAAQ,GAAGC,iBAAiB,CAAA,eAAA,EAAA,SAAA,EAAlC,YAAkC,CAAlC;;AACA,cAAA,QAAA,EAAc;AAAA,gBACJlF,OADI,GACiBiF,QADjB,CAAA,OAAA;AAAA,gBACKhF,OADL,GACiBgF,QADjB,CAAA,OAAA;;AAEZ,gBAAI,CAAA,OAAA,IAAY,CAAhB,OAAA,EAA0B;AACxB,qBAAA,IAAA;AACD;;AACD,gBAAIjF,OAAO,GAAX,CAAA,EAAiB;AACfsC,cAAAA,KAAK,CAALA,OAAAA,GAAAA,OAAAA;AACD;;AACD,gBAAIrC,OAAO,GAAX,CAAA,EAAiB;AACfqC,cAAAA,KAAK,CAALA,OAAAA,GAAAA,OAAAA;AACD;AACF;AAbH,SAAA,MAcO,IAAA,gBAAA,EAAsB;AAC3B;AAD2B,cAAA,IAAA,GAEUX,gBAAgB,CAAhBA,MAAgB,CAAhBA,IAFV,EAAA;AAAA,cAAA,YAAA,GAAA,IAAA,CAAA,OAAA;AAAA,cAEnB3B,QAFmB,GAAA,YAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,YAAA;AAAA,cAAA,YAAA,GAAA,IAAA,CAAA,OAAA;AAAA,cAENC,QAFM,GAAA,YAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,YAAA;;AAG3B,cAAI,CAAA,QAAA,IAAY,CAAhB,QAAA,EAA0B;AACxB,mBAAA,IAAA;AACD;;AACD,cAAID,QAAO,GAAX,CAAA,EAAiB;AACfsC,YAAAA,KAAK,CAALA,OAAAA,GAAAA,QAAAA;AACD;;AACD,cAAIrC,QAAO,GAAX,CAAA,EAAiB;AACfqC,YAAAA,KAAK,CAALA,OAAAA,GAAAA,QAAAA;AACD;AACF;;AACD,eAAOF,CAAC,CAAA,IAAA,EAAO;AACbC,UAAAA,KAAK,EAAE,CAAA,oBAAA,EAAuBU,MAAM,CAA7B,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,EAAA,QAAA,MAAA,CAAA,SAAA,CAAA,EAAA,SAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,QAAA,MAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,WAAA,EAGQG,YAAY,KAAK3C,WAAW,CAAXA,MAAAA,GAHzB,CAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,eAAA,EAAA,iBAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,eAAA,EAAA,WAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,cAAA,EAMWyB,aAAa,KANxB,MAAA,CAAA,EAAA,KAAA,GAOJmD,SAAS,CAATA,QAAAA,CAAAA,eAAAA,EAPI,MAOJA,CAPI,EAOyCA,SAAS,CAATA,QAAAA,CAAAA,mBAAAA,EARnC,MAQmCA,CAPzC,CADM;AASb7C,UAAAA,KAAK,EATQ,KAAA;AAUbiB,UAAAA,KAAK,EAAE9B,eAAe,GAAIuC,OAAO,CAAPA,UAAAA,CAAAA,eAAAA,IAAsCvC,eAAe,CAArDuC,MAAqD,CAArDA,GAAJ,eAAA,GAVT,IAAA;AAWbxB,UAAAA,EAAE,EAXW,KAAA;AAYbS,UAAAA,GAAG,EAAEnB,SAAS,GAAGiB,MAAM,CAAT,EAAA,GAAeG;AAZhB,SAAP,EAaL,CACDd,CAAC,CAAA,KAAA,EAAQ;AACPC,UAAAA,KAAK,EAAE,CAAA,UAAA,EAAa;AAClB,wBADkB,SAAA;AAElB,0BAFkB,WAAA;AAGlB,2BAAe6B;AAHG,WAAb;AADA,SAAR,EAMEnB,MAAM,CAANA,YAAAA,CAAAA,CAAAA,EApBL,MAoBKA,CANF,CADA,CAbK,CAAR;AA3EC,OAAA,EAAA,MAAA,CAiGOb,cAAc,GAAG,CACzBE,CAAC,CAAA,IAAA,EAAO;AACNC,QAAAA,KAAK,EAAE;AADD,OAAP,CADwB,CAAH,GApGxB,EAGG,CAHK,CAAR;AAjDN,KA+CO,CAFF,CAvBA,CATF,CALA,CARK,CAAR;AA9CW,GAAA;AA4Mb+C,EAAAA,OAAO,EAAE;AACP;;;;;AAKA1C,IAAAA,WANO,EAAA,SAAA,WAAA,CAAA,IAAA,EAMY;AAAA,UACA7B,QADA,GAAA,KAAA,OAAA;AAAA,UACUJ,SADV,GAAA,KAAA,SAAA;AAAA,UAETM,KAFS,GAEmDF,QAFnD,CAAA,KAAA;AAAA,UAEFgB,WAFE,GAEmDhB,QAFnD,CAAA,WAAA;AAAA,UAEWwE,mBAFX,GAEmDxE,QAFnD,CAAA,mBAAA;AAAA,UAEgCyE,cAFhC,GAEmDzE,QAFnD,CAAA,cAAA;AAAA,UAGT0E,WAHS,GAGyCxE,KAHzC,CAAA,WAAA;AAAA,UAGIyE,SAHJ,GAGyCzE,KAHzC,CAAA,SAAA;AAAA,UAGe0E,WAHf,GAGyC1E,KAHzC,CAAA,WAAA;AAAA,UAG4B2E,QAH5B,GAGyC3E,KAHzC,CAAA,QAAA;AAIjB,UAAM4E,UAAU,GAAGJ,WAAW,GAAGA,WAAW,CAAd,GAAA,GAA9B,IAAA;AACA,UAAMK,UAAU,GAAGH,WAAW,GAAGA,WAAW,CAAd,GAAA,GAA9B,IAAA;AACA,UAAMI,QAAQ,GAAGL,SAAS,CAA1B,GAAA;AACA,UAAMM,UAAU,GAAGF,UAAU,GAAGA,UAAU,CAAb,UAAA,GAA7B,CAAA;AACA,UAAMG,GAAG,GAAGD,UAAU,KAAtB,cAAA;AACAjF,MAAAA,QAAQ,CAARA,cAAAA,GAAAA,UAAAA;AACAA,MAAAA,QAAQ,CAARA,cAAAA,GAA0BmF,IAAI,CAA9BnF,GAA0BmF,EAA1BnF;;AACA,UAAA,UAAA,EAAgB;AACd8E,QAAAA,UAAU,CAAVA,UAAAA,GAAAA,UAAAA;AACD;;AACD,UAAA,QAAA,EAAc;AACZE,QAAAA,QAAQ,CAARA,UAAAA,GAAAA,UAAAA;AACD;;AACD,UAAIhE,WAAW,IAAf,GAAA,EAAwB;AACtBwD,QAAAA,mBAAmB,CAAnBA,IAAmB,CAAnBA;AACD;;AACD,UAAIU,GAAG,IAAHA,QAAAA,IAAmBL,QAAQ,CAA/B,OAAA,EAAyC;AACvCA,QAAAA,QAAQ,CAARA,eAAAA;AACD;;AACD7E,MAAAA,QAAQ,CAARA,SAAAA,CAAAA,QAAAA,EAA6B;AAAEyC,QAAAA,IAAI,EAAN,QAAA;AAAkBD,QAAAA,KAAK,EAAvB,SAAA;AAAoC4C,QAAAA,SAAS,EAAEJ,QAAQ,CAAvD,SAAA;AAAmEC,QAAAA,UAAU,EAA7E,UAAA;AAA+EC,QAAAA,GAAG,EAAlF,GAAA;AAAoFG,QAAAA,GAAG,EAAE;AAAzF,OAA7BrF,EAAAA,IAAAA;AACD;AA9BM;AA5MI,CAAf","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport { UtilTools, DomTools } from '../../tools'\r\n\r\nconst cellType = 'footer'\r\n\r\nfunction mergeFooterMethod (mergeFooterList, _rowIndex, _columnIndex) {\r\n  for (let mIndex = 0; mIndex < mergeFooterList.length; mIndex++) {\r\n    const { row: mergeRowIndex, col: mergeColIndex, rowspan: mergeRowspan, colspan: mergeColspan } = mergeFooterList[mIndex]\r\n    if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\r\n      if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\r\n        return { rowspan: mergeRowspan, colspan: mergeColspan }\r\n      }\r\n      if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\r\n        return { rowspan: 0, colspan: 0 }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'VxeTableFooter',\r\n  props: {\r\n    footerTableData: Array,\r\n    tableColumn: Array,\r\n    fixedColumn: Array,\r\n    fixedType: String,\r\n    size: String\r\n  },\r\n  mounted () {\r\n    const { $parent: $xetable, $el, $refs, fixedType } = this\r\n    const { elemStore } = $xetable\r\n    const prefix = `${fixedType || 'main'}-footer-`\r\n    elemStore[`${prefix}wrapper`] = $el\r\n    elemStore[`${prefix}table`] = $refs.table\r\n    elemStore[`${prefix}colgroup`] = $refs.colgroup\r\n    elemStore[`${prefix}list`] = $refs.tfoot\r\n    elemStore[`${prefix}xSpace`] = $refs.xSpace\r\n  },\r\n  render (h) {\r\n    let { _e, $parent: $xetable, fixedType, fixedColumn, tableColumn, footerTableData } = this\r\n    const {\r\n      $listeners: tableListeners,\r\n      tId,\r\n      footerRowClassName,\r\n      footerCellClassName,\r\n      footerRowStyle,\r\n      footerCellStyle,\r\n      footerAlign: allFooterAlign,\r\n      mergeFooterList,\r\n      footerSpanMethod,\r\n      align: allAlign,\r\n      scrollXLoad,\r\n      columnKey,\r\n      showFooterOverflow: allColumnFooterOverflow,\r\n      currentColumn,\r\n      overflowX,\r\n      scrollbarWidth,\r\n      tooltipOpts\r\n    } = $xetable\r\n    // 如果是使用优化模式\r\n    if (fixedType) {\r\n      if ((!mergeFooterList.length || !footerSpanMethod) && (scrollXLoad || allColumnFooterOverflow)) {\r\n        tableColumn = fixedColumn\r\n      }\r\n    }\r\n    return h('div', {\r\n      class: ['vxe-table--footer-wrapper', fixedType ? `fixed-${fixedType}--wrapper` : 'body--wrapper'],\r\n      attrs: {\r\n        xid: tId\r\n      },\r\n      on: {\r\n        scroll: this.scrollEvent\r\n      }\r\n    }, [\r\n      fixedType ? _e() : h('div', {\r\n        class: 'vxe-body--x-space',\r\n        ref: 'xSpace'\r\n      }),\r\n      h('table', {\r\n        class: 'vxe-table--footer',\r\n        attrs: {\r\n          xid: tId,\r\n          cellspacing: 0,\r\n          cellpadding: 0,\r\n          border: 0\r\n        },\r\n        ref: 'table'\r\n      }, [\r\n        /**\r\n         * 列宽\r\n         */\r\n        h('colgroup', {\r\n          ref: 'colgroup'\r\n        }, tableColumn.map((column, $columnIndex) => {\r\n          return h('col', {\r\n            attrs: {\r\n              name: column.id\r\n            },\r\n            key: $columnIndex\r\n          })\r\n        }).concat(scrollbarWidth ? [\r\n          h('col', {\r\n            attrs: {\r\n              name: 'col_gutter'\r\n            }\r\n          })\r\n        ] : [])),\r\n        /**\r\n         * 底部\r\n         */\r\n        h('tfoot', {\r\n          ref: 'tfoot'\r\n        }, footerTableData.map((list, _rowIndex) => {\r\n          const $rowIndex = _rowIndex\r\n          return h('tr', {\r\n            class: ['vxe-footer--row', footerRowClassName ? XEUtils.isFunction(footerRowClassName) ? footerRowClassName({ $table: $xetable, _rowIndex, $rowIndex, fixed: fixedType, type: cellType }) : footerRowClassName : ''],\r\n            style: footerRowStyle ? (XEUtils.isFunction(footerRowStyle) ? footerRowStyle({ $table: $xetable, _rowIndex, $rowIndex, fixed: fixedType, type: cellType }) : footerRowStyle) : null\r\n          }, tableColumn.map((column, $columnIndex) => {\r\n            const { type, showFooterOverflow, footerAlign, align, footerClassName } = column\r\n            const showAllTip = tooltipOpts.showAll || tooltipOpts.enabled\r\n            const isColGroup = column.children && column.children.length\r\n            const fixedHiddenColumn = fixedType ? column.fixed !== fixedType && !isColGroup : column.fixed && overflowX\r\n            const footOverflow = XEUtils.isUndefined(showFooterOverflow) || XEUtils.isNull(showFooterOverflow) ? allColumnFooterOverflow : showFooterOverflow\r\n            const footAlign = footerAlign || align || allFooterAlign || allAlign\r\n            let showEllipsis = footOverflow === 'ellipsis'\r\n            const showTitle = footOverflow === 'title'\r\n            const showTooltip = footOverflow === true || footOverflow === 'tooltip'\r\n            let hasEllipsis = showTitle || showTooltip || showEllipsis\r\n            const attrs = { colid: column.id }\r\n            const tfOns = {}\r\n            const columnIndex = $xetable.getColumnIndex(column)\r\n            const _columnIndex = $xetable.getVTColumnIndex(column)\r\n            const itemIndex = _columnIndex\r\n            const params = { $table: $xetable, _rowIndex, $rowIndex, column, columnIndex, $columnIndex, _columnIndex, itemIndex, items: list, fixed: fixedType, type: cellType, data: footerTableData }\r\n            // 虚拟滚动不支持动态高度\r\n            if (scrollXLoad && !hasEllipsis) {\r\n              showEllipsis = hasEllipsis = true\r\n            }\r\n            if (showTitle || showTooltip || showAllTip) {\r\n              tfOns.mouseenter = evnt => {\r\n                if (showTitle) {\r\n                  DomTools.updateCellTitle(evnt.currentTarget, column)\r\n                } else if (showTooltip || showAllTip) {\r\n                  $xetable.triggerFooterTooltipEvent(evnt, params)\r\n                }\r\n              }\r\n            }\r\n            if (showTooltip || showAllTip) {\r\n              tfOns.mouseleave = evnt => {\r\n                if (showTooltip || showAllTip) {\r\n                  $xetable.handleTargetLeaveEvent(evnt)\r\n                }\r\n              }\r\n            }\r\n            if (tableListeners['footer-cell-click']) {\r\n              tfOns.click = evnt => {\r\n                $xetable.emitEvent('footer-cell-click', Object.assign({ cell: evnt.currentTarget }, params), evnt)\r\n              }\r\n            }\r\n            if (tableListeners['footer-cell-dblclick']) {\r\n              tfOns.dblclick = evnt => {\r\n                $xetable.emitEvent('footer-cell-dblclick', Object.assign({ cell: evnt.currentTarget }, params), evnt)\r\n              }\r\n            }\r\n            // 合并行或列\r\n            if (mergeFooterList.length) {\r\n              const spanRest = mergeFooterMethod(mergeFooterList, _rowIndex, _columnIndex)\r\n              if (spanRest) {\r\n                const { rowspan, colspan } = spanRest\r\n                if (!rowspan || !colspan) {\r\n                  return null\r\n                }\r\n                if (rowspan > 1) {\r\n                  attrs.rowspan = rowspan\r\n                }\r\n                if (colspan > 1) {\r\n                  attrs.colspan = colspan\r\n                }\r\n              }\r\n            } else if (footerSpanMethod) {\r\n              // 自定义合并方法\r\n              const { rowspan = 1, colspan = 1 } = footerSpanMethod(params) || {}\r\n              if (!rowspan || !colspan) {\r\n                return null\r\n              }\r\n              if (rowspan > 1) {\r\n                attrs.rowspan = rowspan\r\n              }\r\n              if (colspan > 1) {\r\n                attrs.colspan = colspan\r\n              }\r\n            }\r\n            return h('td', {\r\n              class: ['vxe-footer--column', column.id, {\r\n                [`col--${footAlign}`]: footAlign,\r\n                [`col--${type}`]: type,\r\n                'col--last': $columnIndex === tableColumn.length - 1,\r\n                'fixed--hidden': fixedHiddenColumn,\r\n                'col--ellipsis': hasEllipsis,\r\n                'col--current': currentColumn === column\r\n              }, UtilTools.getClass(footerClassName, params), UtilTools.getClass(footerCellClassName, params)],\r\n              attrs,\r\n              style: footerCellStyle ? (XEUtils.isFunction(footerCellStyle) ? footerCellStyle(params) : footerCellStyle) : null,\r\n              on: tfOns,\r\n              key: columnKey ? column.id : $columnIndex\r\n            }, [\r\n              h('div', {\r\n                class: ['vxe-cell', {\r\n                  'c--title': showTitle,\r\n                  'c--tooltip': showTooltip,\r\n                  'c--ellipsis': showEllipsis\r\n                }]\r\n              }, column.renderFooter(h, params))\r\n            ])\r\n          }).concat(scrollbarWidth ? [\r\n            h('td', {\r\n              class: 'vxe-footer--gutter col--gutter'\r\n            })\r\n          ] : []))\r\n        }))\r\n      ])\r\n    ])\r\n  },\r\n  methods: {\r\n    /**\r\n     * 滚动处理\r\n     * 如果存在列固定左侧，同步更新滚动状态\r\n     * 如果存在列固定右侧，同步更新滚动状态\r\n     */\r\n    scrollEvent (evnt) {\r\n      const { $parent: $xetable, fixedType } = this\r\n      const { $refs, scrollXLoad, triggerScrollXEvent, lastScrollLeft } = $xetable\r\n      const { tableHeader, tableBody, tableFooter, validTip } = $refs\r\n      const headerElem = tableHeader ? tableHeader.$el : null\r\n      const footerElem = tableFooter ? tableFooter.$el : null\r\n      const bodyElem = tableBody.$el\r\n      const scrollLeft = footerElem ? footerElem.scrollLeft : 0\r\n      const isX = scrollLeft !== lastScrollLeft\r\n      $xetable.lastScrollLeft = scrollLeft\r\n      $xetable.lastScrollTime = Date.now()\r\n      if (headerElem) {\r\n        headerElem.scrollLeft = scrollLeft\r\n      }\r\n      if (bodyElem) {\r\n        bodyElem.scrollLeft = scrollLeft\r\n      }\r\n      if (scrollXLoad && isX) {\r\n        triggerScrollXEvent(evnt)\r\n      }\r\n      if (isX && validTip && validTip.visible) {\r\n        validTip.updatePlacement()\r\n      }\r\n      $xetable.emitEvent('scroll', { type: cellType, fixed: fixedType, scrollTop: bodyElem.scrollTop, scrollLeft, isX, isY: false }, evnt)\r\n    }\r\n  }\r\n}\r\n"]}]}