{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\menu\\src\\panel.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\menu\\src\\panel.js","mtime":1635230121405},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { UtilTools } from '../../tools';\nexport default {\n  name: 'VxeTableContextMenu',\n  props: {\n    ctxMenuStore: Object,\n    ctxMenuOpts: Object\n  },\n\n  mounted() {\n    document.body.appendChild(this.$el);\n  },\n\n  beforeDestroy() {\n    const $el = this.$el;\n\n    if ($el.parentNode) {\n      $el.parentNode.removeChild($el);\n    }\n  },\n\n  render(h) {\n    const $xetable = this.$parent;\n    const _e = this._e,\n          ctxMenuOpts = this.ctxMenuOpts,\n          ctxMenuStore = this.ctxMenuStore;\n    return h('div', {\n      class: ['vxe-table--context-menu-wrapper', ctxMenuOpts.className],\n      style: ctxMenuStore.style\n    }, ctxMenuStore.list.map((options, gIndex) => {\n      return options.every(item => item.visible === false) ? _e() : h('ul', {\n        class: 'vxe-context-menu--option-wrapper',\n        key: gIndex\n      }, options.map((item, index) => {\n        const hasChildMenus = item.children && item.children.length;\n        return item.visible === false ? null : h('li', {\n          class: [item.className, {\n            'link--disabled': item.disabled,\n            'link--active': item === ctxMenuStore.selected\n          }],\n          key: `${gIndex}_${index}`\n        }, [h('a', {\n          class: 'vxe-context-menu--link',\n          on: {\n            click(evnt) {\n              $xetable.ctxMenuLinkEvent(evnt, item);\n            },\n\n            mouseover(evnt) {\n              $xetable.ctxMenuMouseoverEvent(evnt, item);\n            },\n\n            mouseout(evnt) {\n              $xetable.ctxMenuMouseoutEvent(evnt, item);\n            }\n\n          }\n        }, [h('i', {\n          class: ['vxe-context-menu--link-prefix', item.prefixIcon]\n        }), h('span', {\n          class: 'vxe-context-menu--link-content'\n        }, UtilTools.getFuncText(item.name)), h('i', {\n          class: ['vxe-context-menu--link-suffix', hasChildMenus ? item.suffixIcon || 'suffix--haschild' : item.suffixIcon]\n        })]), hasChildMenus ? h('ul', {\n          class: ['vxe-table--context-menu-clild-wrapper', {\n            'is--show': item === ctxMenuStore.selected && ctxMenuStore.showChild\n          }]\n        }, item.children.map((child, cIndex) => {\n          return child.visible === false ? null : h('li', {\n            class: [child.className, {\n              'link--disabled': child.disabled,\n              'link--active': child === ctxMenuStore.selectChild\n            }],\n            key: `${gIndex}_${index}_${cIndex}`\n          }, [h('a', {\n            class: 'vxe-context-menu--link',\n            on: {\n              click(evnt) {\n                $xetable.ctxMenuLinkEvent(evnt, child);\n              },\n\n              mouseover(evnt) {\n                $xetable.ctxMenuMouseoverEvent(evnt, item, child);\n              },\n\n              mouseout(evnt) {\n                $xetable.ctxMenuMouseoutEvent(evnt, item, child);\n              }\n\n            }\n          }, [h('i', {\n            class: ['vxe-context-menu--link-prefix', child.prefixIcon]\n          }), h('span', {\n            class: 'vxe-context-menu--link-content'\n          }, UtilTools.getFuncText(child.name))])]);\n        })) : null]);\n      }));\n    }));\n  }\n\n};",null]}