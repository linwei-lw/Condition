{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\resize\\src\\mixin.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\resize\\src\\mixin.js","mtime":1612227987489},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Resize from \"./resize\";\nexport default {\n  methods: {\n    bindResize: function bindResize() {\n      var _this = this;\n\n      var resizeObserver = new Resize(function () {\n        return _this.recalculate(true);\n      });\n      resizeObserver.observe(this.$el);\n      resizeObserver.observe(this.getParentElem());\n      this.$resize = resizeObserver;\n    },\n    unbindResize: function unbindResize() {\n      var $resize = this.$resize;\n\n      if ($resize) {\n        $resize.disconnect();\n      }\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\resize\\src\\mixin.js"],"names":["methods","bindResize","resizeObserver","unbindResize","$resize"],"mappings":"AAAA,OAAA,MAAA;AAEA,eAAe;AACbA,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,EAAA,SAAA,UAAA,GACO;AAAA,UAAA,KAAA,GAAA,IAAA;;AACZ,UAAMC,cAAc,GAAG,IAAA,MAAA,CAAW,YAAA;AAAA,eAAM,KAAI,CAAJ,WAAA,CAAN,IAAM,CAAN;AAAlC,OAAuB,CAAvB;AACAA,MAAAA,cAAc,CAAdA,OAAAA,CAAuB,KAAvBA,GAAAA;AACAA,MAAAA,cAAc,CAAdA,OAAAA,CAAuB,KAAvBA,aAAuB,EAAvBA;AACA,WAAA,OAAA,GAAA,cAAA;AALK,KAAA;AAOPC,IAAAA,YAPO,EAAA,SAAA,YAAA,GAOS;AACd,UAAMC,OAAO,GAAG,KAAhB,OAAA;;AACA,UAAA,OAAA,EAAa;AACXA,QAAAA,OAAO,CAAPA,UAAAA;AACD;AACF;AAZM;AADI,CAAf","sourcesContent":["import Resize from './resize'\r\n\r\nexport default {\r\n  methods: {\r\n    bindResize () {\r\n      const resizeObserver = new Resize(() => this.recalculate(true))\r\n      resizeObserver.observe(this.$el)\r\n      resizeObserver.observe(this.getParentElem())\r\n      this.$resize = resizeObserver\r\n    },\r\n    unbindResize () {\r\n      const $resize = this.$resize\r\n      if ($resize) {\r\n        $resize.disconnect()\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}