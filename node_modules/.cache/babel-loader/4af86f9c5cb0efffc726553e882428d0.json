{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\modules\\cdRule\\EditWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\modules\\cdRule\\EditWindow.vue","mtime":1681712654352},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { arrayToMap } from '@/common/util/Arrays.js';\nimport { arrayToTree } from '@/common/util/Trees.js';\nexport default {\n  data: function data() {\n    return {\n      taskName: null,\n      taskNum: null,\n      options: [],\n      carId: null,\n      cdId: null,\n      callback: null,\n      waiting: false\n    };\n  },\n\n  mounted() {\n    this.options = $_main.http.syncGet('rule/get', {\n      sessionId: $_main.sessionId,\n      userId: $_main.userId\n    }) || [];\n  },\n\n  methods: {\n    iconCssFunction(node, open) {\n      return !node.carId ? open ? 'ico_open' : 'ico_close' : null;\n    },\n\n    getTreeRoots(callback) {\n      $_main.http.get('data/getCars', {\n        sessionId: $_main.sessionId\n      }).then(result => {\n        result.carList.forEach(el => {\n          el.name = el.carName;\n        });\n        result.teamList.forEach(el => {\n          el.name = el.teamName;\n        });\n        let TEAMS = {\n          list: null,\n          map: null,\n          root: {\n            id: '0',\n            name: $_L.get('所有车辆'),\n            children: []\n          }\n        };\n        let CARS = {\n          list: null,\n          map: null,\n          root: null\n        };\n        TEAMS.list = result.teamList || [];\n        TEAMS.map = arrayToMap(TEAMS.list, \"teamId\");\n        TEAMS.tree = arrayToTree(TEAMS.list, \"teamId\", \"pid\", TEAMS.map, TEAMS.root, 'teams');\n        CARS.list = result.carList || [];\n        CARS.map = arrayToMap(CARS.list, \"carId\");\n        CARS.root = TEAMS.root;\n        CARS.root.teams && (CARS.root.children = [...CARS.root.teams]);\n\n        for (let i = 0, len = TEAMS.list.length, team; i < len; i++) {\n          team = TEAMS.list[i];\n          team.teams && (team.children = [...team.teams]);\n        }\n\n        CARS.tree = arrayToTree(CARS.list, \"carId\", \"teamId\", TEAMS.map, CARS.root, \"children\");\n        callback(CARS.root);\n      });\n    },\n\n    submit() {\n      if (!this.taskName) return $_alert.warn($_L.get('请输入任务名称！'));\n      if (!this.cdId) return $_alert.warn($_L.get('请选择工况！'));\n      if (!this.carId) return $_alert.warn($_L.get('请选择关联车辆！'));\n      if (!this.taskNum) return $_alert.warn($_L.get('请输入执行次数！'));\n      let item = {\n        cdId: this.cdId,\n        carId: this.carId,\n        taskName: this.taskName,\n        taskNum: this.taskNum,\n        auser: $_main.userId\n      };\n      $_main.http.post('info/allot', item).then(result => {\n        this.callback(result);\n        $_alert.success($_L.get('操作成功'));\n        this.$refs.w.close();\n      }).catch(error => {\n        this.waiting = false;\n      });\n    }\n\n  }\n};",null]}