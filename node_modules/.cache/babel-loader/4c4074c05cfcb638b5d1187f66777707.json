{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\column\\src\\column.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\column\\src\\column.js","mtime":1612227987184},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport Cell from \"../../cell\";\nimport { UtilTools } from \"../../tools\";\nvar props = {\n  // 渲染类型 index,radio,checkbox,expand\n  type: String,\n  // 在 v3.0 中废弃 prop\n  prop: String,\n  // 在 v3.0 中废弃 label\n  label: String,\n  // 列字段名\n  field: String,\n  // 列标题\n  title: String,\n  // 列宽度\n  width: [Number, String],\n  // 列最小宽度，把剩余宽度按比例分配\n  minWidth: [Number, String],\n  // 是否允许拖动列宽调整大小\n  resizable: {\n    type: Boolean,\n    default: null\n  },\n  // 将列固定在左侧或者右侧\n  fixed: String,\n  // 列对其方式\n  align: {\n    type: String,\n    default: 'center'\n  },\n  // 表头对齐方式\n  headerAlign: String,\n  // 表尾列的对齐方式\n  footerAlign: String,\n  // 当内容过长时显示为省略号\n  showOverflow: {\n    type: [Boolean, String],\n    default: null\n  },\n  // 当表头内容过长时显示为省略号\n  showHeaderOverflow: {\n    type: [Boolean, String],\n    default: null\n  },\n  // 当表尾内容过长时显示为省略号\n  showFooterOverflow: {\n    type: [Boolean, String],\n    default: null\n  },\n  // 给单元格附加 className\n  className: [String, Function],\n  // 给表头单元格附加 className\n  headerClassName: [String, Function],\n  // 给表尾单元格附加 className\n  footerClassName: [String, Function],\n  // 格式化显示内容\n  formatter: [Function, Array, String],\n  // 自定义索引方法\n  seqMethod: Function,\n  // 在 v3.0 中废弃 indexMethod\n  indexMethod: Function,\n  // 是否允许排序\n  sortable: {\n    type: Boolean,\n    default: true\n  },\n  // 是否服务端排序\n  remoteSort: {\n    type: Boolean,\n    default: null\n  },\n  // 自定义排序的属性\n  sortBy: [String, Array],\n  // 自定义排序方法\n  sortMethod: Function,\n  // 按格式化显示内容进行排序\n  sortByFormatter: {\n    type: Boolean,\n    default: true\n  },\n  // 配置筛选条件数组\n  filters: {\n    type: Array,\n    default: null\n  },\n  // 筛选是否允许多选\n  filterMultiple: {\n    type: Boolean,\n    default: true\n  },\n  // 自定义筛选方法\n  filterMethod: Function,\n  // 筛选模板配置项\n  filterRender: Object,\n  // 指定为树节点\n  treeNode: Boolean,\n  // 是否可视\n  visible: {\n    type: Boolean,\n    default: null\n  },\n  // 单元格渲染配置项\n  cellRender: Object,\n  // 单元格编辑渲染配置项\n  editRender: Object,\n  // 内容渲染配置项\n  contentRender: Object,\n  // 额外的参数\n  params: Object\n};\nvar watch = {};\nObject.keys(props).forEach(function (name) {\n  watch[name] = function (value) {\n    this.columnConfig.update(name, value);\n  };\n});\nexport default {\n  name: 'VxeTableColumn',\n  props: props,\n  provide: function provide() {\n    return {\n      $xecolumn: this\n    };\n  },\n  inject: {\n    $xetable: {\n      default: null\n    },\n    $xecolumn: {\n      default: null\n    }\n  },\n  watch: watch,\n  created: function created() {\n    this.columnConfig = this.createColumn(this.$xetable, this);\n  },\n  mounted: function mounted() {\n    UtilTools.assemColumn(this);\n\n    if (this.type === 'expand' && !this.$scopedSlots.content && this.$scopedSlots.default) {\n      UtilTools.warn('vxe.error.expandContent');\n    }\n  },\n  destroyed: function destroyed() {\n    UtilTools.destroyColumn(this);\n  },\n  render: function render(h) {\n    return h('div', this.$slots.default);\n  },\n  methods: Cell\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\column\\src\\column.js"],"names":["props","type","prop","label","field","title","width","minWidth","resizable","default","fixed","align","headerAlign","footerAlign","showOverflow","showHeaderOverflow","showFooterOverflow","className","headerClassName","footerClassName","formatter","seqMethod","indexMethod","sortable","remoteSort","sortBy","sortMethod","sortByFormatter","filters","filterMultiple","filterMethod","filterRender","treeNode","visible","cellRender","editRender","contentRender","params","Object","watch","name","provide","$xecolumn","inject","$xetable","created","mounted","UtilTools","destroyed","render","h","methods","Cell"],"mappings":"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","sourcesContent":["import Cell from '../../cell'\r\nimport { UtilTools } from '../../tools'\r\n\r\nconst props = {\r\n  // 渲染类型 index,radio,checkbox,expand\r\n  type: String,\r\n  // 在 v3.0 中废弃 prop\r\n  prop: String,\r\n  // 在 v3.0 中废弃 label\r\n  label: String,\r\n  // 列字段名\r\n  field: String,\r\n  // 列标题\r\n  title: String,\r\n  // 列宽度\r\n  width: [Number, String],\r\n  // 列最小宽度，把剩余宽度按比例分配\r\n  minWidth: [Number, String],\r\n  // 是否允许拖动列宽调整大小\r\n  resizable: { type: Boolean, default: null },\r\n  // 将列固定在左侧或者右侧\r\n  fixed: String,\r\n  // 列对其方式\r\n  align: { type: String, default: 'center' },\r\n  // 表头对齐方式\r\n  headerAlign: String,\r\n  // 表尾列的对齐方式\r\n  footerAlign: String,\r\n  // 当内容过长时显示为省略号\r\n  showOverflow: { type: [Boolean, String], default: null },\r\n  // 当表头内容过长时显示为省略号\r\n  showHeaderOverflow: { type: [Boolean, String], default: null },\r\n  // 当表尾内容过长时显示为省略号\r\n  showFooterOverflow: { type: [Boolean, String], default: null },\r\n  // 给单元格附加 className\r\n  className: [String, Function],\r\n  // 给表头单元格附加 className\r\n  headerClassName: [String, Function],\r\n  // 给表尾单元格附加 className\r\n  footerClassName: [String, Function],\r\n  // 格式化显示内容\r\n  formatter: [Function, Array, String],\r\n  // 自定义索引方法\r\n  seqMethod: Function,\r\n  // 在 v3.0 中废弃 indexMethod\r\n  indexMethod: Function,\r\n  // 是否允许排序\r\n  sortable: { type: Boolean, default: true },\r\n  // 是否服务端排序\r\n  remoteSort: { type: Boolean, default: null },\r\n  // 自定义排序的属性\r\n  sortBy: [String, Array],\r\n  // 自定义排序方法\r\n  sortMethod: Function,\r\n  // 按格式化显示内容进行排序\r\n  sortByFormatter: { type: Boolean, default: true },\r\n  // 配置筛选条件数组\r\n  filters: { type: Array, default: null },\r\n  // 筛选是否允许多选\r\n  filterMultiple: { type: Boolean, default: true },\r\n  // 自定义筛选方法\r\n  filterMethod: Function,\r\n  // 筛选模板配置项\r\n  filterRender: Object,\r\n  // 指定为树节点\r\n  treeNode: Boolean,\r\n  // 是否可视\r\n  visible: { type: Boolean, default: null },\r\n  // 单元格渲染配置项\r\n  cellRender: Object,\r\n  // 单元格编辑渲染配置项\r\n  editRender: Object,\r\n  // 内容渲染配置项\r\n  contentRender: Object,\r\n  // 额外的参数\r\n  params: Object\r\n}\r\n\r\nconst watch = {}\r\nObject.keys(props).forEach(name => {\r\n  watch[name] = function (value) {\r\n    this.columnConfig.update(name, value)\r\n  }\r\n})\r\n\r\nexport default {\r\n  name: 'VxeTableColumn',\r\n  props,\r\n  provide () {\r\n    return {\r\n      $xecolumn: this\r\n    }\r\n  },\r\n  inject: {\r\n    $xetable: {\r\n      default: null\r\n    },\r\n    $xecolumn: {\r\n      default: null\r\n    }\r\n  },\r\n  watch,\r\n  created () {\r\n    this.columnConfig = this.createColumn(this.$xetable, this)\r\n  },\r\n  mounted () {\r\n    UtilTools.assemColumn(this)\r\n    if (this.type === 'expand' && !this.$scopedSlots.content && this.$scopedSlots.default) {\r\n      UtilTools.warn('vxe.error.expandContent')\r\n    }\r\n  },\r\n  destroyed () {\r\n    UtilTools.destroyColumn(this)\r\n  },\r\n  render (h) {\r\n    return h('div', this.$slots.default)\r\n  },\r\n  methods: Cell\r\n}\r\n"]}]}