{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\common\\tree\\PoiTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\common\\tree\\PoiTree.vue","mtime":1656146987797},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchBox from \"@/components/Tree/SearchBox.vue\";\nimport { getPois, getDirTree, onPoiTreeAdd, onPoiTreeRemove } from '@/common/cache/CachePoi.js';\nimport { getPoiIconUrl } from '@/common/util/Urls.js';\nimport { objClone } from '@/common/util/Objects.js';\nexport default {\n  components: {\n    SearchBox: SearchBox\n  },\n  props: {\n    dir: {\n      type: Boolean,\n      default: false\n    },\n    // 是否是目录树\n    setting: {\n      default: function _default() {\n        return {\n          type: 'all-my'\n        };\n      }\n    },\n    // 参考ztree的setting配置 type=my-all:先显示我的标注，可切到所有标注;all-my:先显示所有标注，可切到我的标注;my:我的标注;all:所有标注\n    frozenRoot: {\n      type: Boolean,\n      default: false\n    },\n    // 冻结根结点，不显示根结点的+-图标\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 是否可操作\n    border: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示边框\n    borderColor: {\n      type: String,\n      default: $_theme.border_color_dark\n    },\n    // 边框颜色\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示搜索栏\n    placeholder: String,\n    miniBar: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示搜索栏\n    showSearchIcon: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示搜索图标\n    onSearchItemSelected: Function,\n    // 选中了搜索栏查出的某个结点的回调函数，参数(node)\n    onTreeInited: Function\n  },\n  _tree: null,\n  getTreeRoots: function getTreeRoots(callback) {\n    return getPois(function (cache) {\n      return callback(cache.root);\n    });\n  },\n  getNodeText: function getNodeText(node) {\n    return node.name;\n  },\n  data: function data() {\n    return {\n      treeId: 'tree_' + $_theme.zindex(),\n      loading: false,\n      type: this.setting.type || 'all-my'\n    };\n  },\n  watch: {\n    type: function type(v) {\n      this._myHideFunction = v.indexOf('my') == 0 ? this.myHideFunction : null;\n      this._type = this._myHideFunction ? 'my' : 'all';\n      this._tree && this._tree.refresh();\n    }\n  },\n  mounted: function mounted() {\n    this.loading = true;\n    this._setting = objClone(this.setting);\n    this._setting.view = this._setting.view || {};\n    this._setting.view.nameFunction = this.nameFunction;\n    this._setting.view.iconUrlFunction = this.iconUrlFunction;\n    this._setting.view.iconCssFunction = this.iconCssFunction;\n\n    if (this.dir == false) {\n      return getPois(this.onLoaded);\n    }\n\n    this._setting.data = this._setting.data || {};\n    this._setting.data.key = this._setting.data.key || {};\n    this._setting.data.key.children = 'dirs';\n    this.type = 'all';\n    getDirTree(this.onLoaded);\n  },\n  methods: {\n    onLoaded: function onLoaded(cache) {\n      cache.root[this.treeId] = {\n        open: true\n      };\n      this._hideFunction = this._setting.view.hideFunction;\n      this._setting.view.hideFunction = this.hideFunction;\n      this._myHideFunction = this.type.indexOf('my') == 0 ? this.myHideFunction : null;\n      this._type = this._myHideFunction ? 'my' : 'all';\n      this._tree = $.fn.zTree.init($(this.$refs.treeUl), this._setting, cache.root);\n      this.searchable && this.$refs.searchBox.setTree(this._tree);\n      this.loading = false;\n      onPoiTreeAdd(this.treeId, this);\n      this.onTreeInited && this.onTreeInited(cache.root, this._tree, this);\n    },\n    iconUrlFunction: function iconUrlFunction(node, open) {\n      //标注\n      return node.type == '0' ? null : getPoiIconUrl(node.icon);\n    },\n    iconCssFunction: function iconCssFunction(node, open) {\n      //目录\n      return node.type == '0' ? open ? 'ico_open' : 'ico_close' : null;\n    },\n    nameFunction: function nameFunction(node) {\n      return node.type == '0' ? node.name + ' [' + (node[this._type] || 0) + ']' : node.name;\n    },\n    hideFunction: function hideFunction(node) {\n      if (this._myHideFunction && this._myHideFunction(node)) return true;\n      return this._hideFunction ? this._hideFunction(node) : false;\n    },\n    myHideFunction: function myHideFunction(node) {\n      if (node.id == '0') return false;\n      if (node.type == '1') return node.auser != $_cache.user.userId;\n      if (node.auser == $_cache.user.userId || node.my > 0) return false;\n\n      if (node.children && node.children.length) {\n        //如果当前目录的孩子中有我创建的目录或标注，也显示当前标注\n        for (var i = 0, len = node.children.length; i < len; i++) {\n          if (!this.myHideFunction(node.children[i])) return false;\n        }\n      }\n\n      return true;\n    },\n    getCheckedNodes: function getCheckedNodes() {\n      var onlyChecked = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var onlyTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var field = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var hasOwnField = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var nodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      return this._tree.getCheckedNodes(onlyChecked, onlyTop, field, hasOwnField, nodes);\n    },\n    checkNodes: function checkNodes(nodes) {\n      var checked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var checkTypeFlag = arguments.length > 2 ? arguments[2] : undefined;\n      var callbackFlag = arguments.length > 3 ? arguments[3] : undefined;\n\n      for (var i = 0, len = nodes.length; i < len; i++) {\n        this._tree.checkNode(nodes[i], checked, checkTypeFlag, callbackFlag);\n      }\n    },\n    selectNode: function selectNode(node) {\n      var isSilent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      this._tree.selectNode(node, false, isSilent);\n    },\n    getTree: function getTree() {\n      return this._tree;\n    },\n    getTreeId: function getTreeId() {\n      return this.treeId;\n    },\n    destroy: function destroy() {\n      onPoiTreeRemove(this.treeId);\n\n      if (this._tree) {\n        this._tree.destroy();\n\n        this._tree = null;\n      }\n\n      if (this.searchable) {\n        this.$refs.searchBox.clear();\n        this.$refs.searchBox.setTree(null);\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroy();\n  }\n};",{"version":3,"sources":["PoiTree.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  \r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"{borderColor:borderColor}\">\r\n    <Toolbar v-if=\"searchable\" :border=\"false\" small :mini=\"miniBar\" style=\"border-bottom-width:1px;border-bottom-style:solid;\" :style=\"{borderColor:theme.border_color_light}\">\r\n      <SearchBox :placeholder=\"placeholder\" :style=\"{width:miniBar?'calc(100% - 6px)':'calc(100% - 10px)'}\" :height=\"miniBar?26:theme.inputHeight\" :treeBorder=\"border\" :showSearchIcon=\"showSearchIcon\" :onItemSelected=\"onSearchItemSelected\" ref=\"searchBox\">\r\n        <Button v-if=\"type.indexOf('-')>0\" @click=\"type=type=='my-all'?'all-my':'my-all'\" :padding=\"miniBar?'0 4px':'0 7px'\" :height=\"miniBar?24:(theme.inputHeight-2)\" :type=\"type=='my-all'?'primary':'plain'\" :title=\"type=='my-all'?$_L.get('点击显示所有标注'):$_L.get('点击显示我的标注')\" :border=\"false\" :icon=\"type=='my-all'?'el-icon-user-solid':'el-icon-user'\" style=\"float:right;margin:1px 1px 1px 0px;\"/>\r\n      </SearchBox>\r\n      <slot></slot>\r\n    </Toolbar>\r\n    \r\n    <div style=\"overflow: auto;\" :style=\"{height: searchable ? (miniBar ? 'calc(100% - 32px)' : 'calc(100% - 42px)') : '100%'}\">\r\n      <ul :id=\"treeId\" :class=\"['ztree', frozenRoot && 'ztree_frozen']\" ref=\"treeUl\"></ul>\r\n      <div v-if=\"disabled\" :class=\"$style.disabled\"/>\r\n      <div v-if=\"loading\" :class=\"$style.loading\"/>\r\n    </div>\r\n\r\n    <Button v-if=\"!searchable && type.indexOf('-')>0\" @click=\"type=type=='my-all'?'all-my':'my-all'\" padding=\"0 8px\" :height=\"32\" :type=\"type=='my-all'?'primary':'light'\" icon=\"el-icon-user\" radius=\"-1px\" style=\"position:absolute;bottom:-3px;right:-4px;border-top-left-radius:24px;\"/>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  import SearchBox from \"@/components/Tree/SearchBox.vue\";\r\n  import { getPois, getDirTree, onPoiTreeAdd, onPoiTreeRemove } from '@/common/cache/CachePoi.js';\r\n  import { getPoiIconUrl } from '@/common/util/Urls.js';\r\n  import { objClone } from '@/common/util/Objects.js';\r\n\r\n  export default {\r\n    components: { SearchBox },\r\n    props: {\r\n      dir:            { type: Boolean, default: false },                     // 是否是目录树\r\n      setting:        { default: ()=>{return {type:'all-my'}} },             // 参考ztree的setting配置 type=my-all:先显示我的标注，可切到所有标注;all-my:先显示所有标注，可切到我的标注;my:我的标注;all:所有标注\r\n      frozenRoot:     { type: Boolean, default: false },                     // 冻结根结点，不显示根结点的+-图标\r\n      disabled:       { type: Boolean, default: false },                     // 是否可操作\r\n      border:         { type: Boolean, default: true  },                     // 是否显示边框\r\n      borderColor:    { type: String,  default: $_theme.border_color_dark},  // 边框颜色\r\n      searchable:     { type: Boolean, default: true  },                     // 是否显示搜索栏\r\n      placeholder:    String,\r\n      miniBar:        { type: Boolean, default: false },                     // 是否显示搜索栏\r\n      showSearchIcon: { type: Boolean, default: true  },                     // 是否显示搜索图标\r\n      onSearchItemSelected: Function,                                        // 选中了搜索栏查出的某个结点的回调函数，参数(node)\r\n      onTreeInited:         Function\r\n    },\r\n\r\n    _tree: null,\r\n\r\n    getTreeRoots: callback => getPois(cache => callback(cache.root)),\r\n    getNodeText: node => node.name,\r\n    \r\n    data() {\r\n      return {\r\n        treeId: 'tree_' + $_theme.zindex(),\r\n        loading: false,\r\n        type: this.setting.type || 'all-my'\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      type: function(v) {\r\n        this._myHideFunction = v.indexOf('my') == 0 ? this.myHideFunction : null;\r\n        this._type = this._myHideFunction ? 'my' : 'all';\r\n        this._tree && this._tree.refresh();\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.loading = true;\r\n      this._setting = objClone(this.setting);\r\n      this._setting.view = this._setting.view || {};\r\n      this._setting.view.nameFunction = this.nameFunction;\r\n      this._setting.view.iconUrlFunction = this.iconUrlFunction;\r\n      this._setting.view.iconCssFunction = this.iconCssFunction;\r\n      if (this.dir == false) {\r\n        return getPois(this.onLoaded);\r\n      }\r\n      this._setting.data = this._setting.data || {};\r\n      this._setting.data.key = this._setting.data.key || {};\r\n      this._setting.data.key.children = 'dirs';\r\n      this.type = 'all';\r\n      getDirTree(this.onLoaded);\r\n    },\r\n\r\n    methods: {\r\n      onLoaded(cache) {\r\n        cache.root[this.treeId] = {open: true};\r\n\r\n        this._hideFunction = this._setting.view.hideFunction;\r\n        this._setting.view.hideFunction = this.hideFunction;\r\n        this._myHideFunction = this.type.indexOf('my') == 0 ? this.myHideFunction : null;\r\n        this._type = this._myHideFunction ? 'my' : 'all';\r\n\r\n        this._tree = $.fn.zTree.init($(this.$refs.treeUl), this._setting, cache.root);\r\n        this.searchable && this.$refs.searchBox.setTree(this._tree);\r\n        this.loading = false;\r\n        onPoiTreeAdd(this.treeId, this);\r\n        this.onTreeInited && this.onTreeInited(cache.root,this._tree,this);\r\n      },\r\n      iconUrlFunction(node, open) {//标注\r\n        return node.type == '0' ? null : getPoiIconUrl(node.icon);\r\n      },\r\n      iconCssFunction(node, open) {//目录\r\n        return node.type == '0' ? (open ? 'ico_open' : 'ico_close') : null;\r\n      },\r\n      nameFunction(node) {\r\n        return node.type == '0' ? (node.name + ' [' + (node[this._type]||0) + ']') : node.name;\r\n      },\r\n      hideFunction(node) {\r\n        if (this._myHideFunction && this._myHideFunction(node)) return true;\r\n        return this._hideFunction ? this._hideFunction(node) : false;\r\n      },\r\n      myHideFunction(node) {\r\n        if (node.id == '0') return false;\r\n        if (node.type == '1') return node.auser != $_cache.user.userId;\r\n        if (node.auser == $_cache.user.userId || node.my > 0) return false;\r\n        if (node.children && node.children.length) {//如果当前目录的孩子中有我创建的目录或标注，也显示当前标注\r\n          for (let i=0, len=node.children.length; i<len; i++) {\r\n            if (!this.myHideFunction(node.children[i])) return false;\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n      getCheckedNodes(onlyChecked=true, onlyTop=false, field=null, hasOwnField=null, nodes=null) {\r\n        return this._tree.getCheckedNodes(onlyChecked, onlyTop, field, hasOwnField, nodes);\r\n      },\r\n      checkNodes(nodes, checked=true, checkTypeFlag, callbackFlag) {\r\n        for (let i=0,len=nodes.length; i<len; i++) {\r\n          this._tree.checkNode(nodes[i], checked, checkTypeFlag, callbackFlag);\r\n        }\r\n      },\r\n      selectNode(node, isSilent=false) {\r\n        this._tree.selectNode(node, false, isSilent);\r\n      },\r\n      getTree() { return this._tree; },\r\n      getTreeId() { return this.treeId; },\r\n      destroy() {\r\n        onPoiTreeRemove(this.treeId);\r\n        if (this._tree) {\r\n          this._tree.destroy();\r\n          this._tree = null;\r\n        }\r\n        if (this.searchable) {\r\n          this.$refs.searchBox.clear();\r\n          this.$refs.searchBox.setTree(null);\r\n        }\r\n      }\r\n    },\r\n\r\n    beforeDestroy() {\r\n      this.destroy();\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .ztree_frozen li span.button.switch.level0 { display:none; }\r\n  .ztree_frozen li ul.level0 { padding:0; background:none; }\r\n</style>\r\n\r\n<style module>\r\n  .container {\r\n    position: relative;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  .loading {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    opacity: 0.3;\r\n    filter: alpha(opacity=30);\r\n    cursor: not-allowed;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-image: url(\"@/assets/icon/loading.gif\");\r\n  }\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n<style>\r\n  /* @import '../../components/Tree/zTreeStyle.css'; */\r\n</style>\r\n"],"sourceRoot":"src/common/tree"}]}