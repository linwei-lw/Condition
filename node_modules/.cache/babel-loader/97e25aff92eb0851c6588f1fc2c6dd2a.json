{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\tooltip\\src\\tooltip.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\tooltip\\src\\tooltip.js","mtime":1635230121026},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport { UtilTools, DomTools } from \"../../tools\";\n\nfunction updateTipStyle(_vm) {\n  var wrapperElem = _vm.$el,\n      tipTarget = _vm.tipTarget,\n      tipStore = _vm.tipStore;\n\n  if (tipTarget) {\n    var _DomTools$getDomNode = DomTools.getDomNode(),\n        scrollTop = _DomTools$getDomNode.scrollTop,\n        scrollLeft = _DomTools$getDomNode.scrollLeft,\n        visibleWidth = _DomTools$getDomNode.visibleWidth;\n\n    var _DomTools$getAbsolute = DomTools.getAbsolutePos(tipTarget),\n        top = _DomTools$getAbsolute.top,\n        left = _DomTools$getAbsolute.left;\n\n    var marginSize = 6;\n    var offsetHeight = wrapperElem.offsetHeight;\n    var offsetWidth = wrapperElem.offsetWidth;\n    var tipTop = top - offsetHeight - marginSize;\n    var tipLeft = Math.max(marginSize, left + Math.floor((tipTarget.offsetWidth - offsetWidth) / 2));\n\n    if (tipLeft + offsetWidth + marginSize > scrollLeft + visibleWidth) {\n      tipLeft = scrollLeft + visibleWidth - offsetWidth - marginSize;\n    }\n\n    if (top - offsetHeight < scrollTop + marginSize) {\n      tipStore.placement = 'bottom';\n      tipTop = top + tipTarget.offsetHeight + marginSize;\n    }\n\n    tipStore.style.top = \"\".concat(tipTop, \"px\");\n    tipStore.style.left = \"\".concat(tipLeft, \"px\");\n    tipStore.arrowStyle.left = \"\".concat(left - tipLeft + tipTarget.offsetWidth / 2, \"px\");\n  }\n}\n\nexport default {\n  name: 'VxeTooltip',\n  mixins: [vSize],\n  props: {\n    value: Boolean,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.tooltip.size || GlobalConfig.size;\n      }\n    },\n    trigger: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.tooltip.trigger;\n      }\n    },\n    skin: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.tooltip.skin;\n      }\n    },\n    content: [String, Number],\n    zIndex: [String, Number],\n    isArrow: {\n      type: Boolean,\n      default: true\n    },\n    enterable: Boolean,\n    leaveDelay: {\n      type: Number,\n      default: GlobalConfig.tooltip.leaveDelay\n    },\n    leaveMethod: Function\n  },\n  data: function data() {\n    return {\n      isUpdate: false,\n      isHover: false,\n      visible: false,\n      message: '',\n      tipTarget: null,\n      tipZindex: 0,\n      tipStore: {\n        style: {},\n        placement: '',\n        arrowStyle: null\n      }\n    };\n  },\n  watch: {\n    content: function content(value) {\n      this.message = value;\n    },\n    value: function value(_value) {\n      if (!this.isUpdate) {\n        this[_value ? 'open' : 'close']();\n      }\n\n      this.isUpdate = false;\n    }\n  },\n  mounted: function mounted() {\n    var $el = this.$el,\n        trigger = this.trigger,\n        content = this.content,\n        value = this.value;\n    var parentNode = $el.parentNode;\n    var target;\n    this.message = content;\n    this.tipZindex = UtilTools.nextZIndex();\n    XEUtils.arrayEach($el.children, function (elem, index) {\n      if (index > 1) {\n        parentNode.insertBefore(elem, $el);\n\n        if (!target) {\n          target = elem;\n        }\n      }\n    });\n    parentNode.removeChild($el);\n    this.target = target;\n\n    if (target) {\n      if (trigger === 'hover') {\n        target.onmouseleave = this.targetMouseleaveEvent;\n        target.onmouseenter = this.targetMouseenterEvent;\n      } else if (trigger === 'click') {\n        target.onclick = this.clickEvent;\n      }\n    }\n\n    if (value) {\n      this.open();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    var $el = this.$el,\n        target = this.target,\n        trigger = this.trigger;\n    var parentNode = $el.parentNode;\n\n    if (parentNode) {\n      parentNode.removeChild($el);\n    }\n\n    if (target) {\n      if (trigger === 'hover') {\n        target.onmouseenter = null;\n        target.onmouseleave = null;\n      } else if (trigger === 'click') {\n        target.onclick = null;\n      }\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var $scopedSlots = this.$scopedSlots,\n        vSize = this.vSize,\n        skin = this.skin,\n        message = this.message,\n        isHover = this.isHover,\n        isArrow = this.isArrow,\n        visible = this.visible,\n        tipStore = this.tipStore,\n        enterable = this.enterable;\n    var on;\n\n    if (enterable) {\n      on = {\n        mouseenter: this.wrapperMouseenterEvent,\n        mouseleave: this.wrapperMouseleaveEvent\n      };\n    }\n\n    return h('div', {\n      class: ['vxe-table--tooltip-wrapper', \"skin--\".concat(skin), (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, \"placement--\".concat(tipStore.placement), tipStore.placement), _defineProperty(_ref, 'is--enterable', enterable), _defineProperty(_ref, 'is--visible', visible), _defineProperty(_ref, 'is--arrow', isArrow), _defineProperty(_ref, 'is--hover', isHover), _ref)],\n      style: tipStore.style,\n      ref: 'tipWrapper',\n      on: on\n    }, [h('div', {\n      class: 'vxe-table--tooltip-content'\n    }, $scopedSlots.content ? $scopedSlots.content.call(this, {}) : message), h('div', {\n      class: 'vxe-table--tooltip-arrow',\n      style: tipStore.arrowStyle\n    })].concat($scopedSlots.default ? $scopedSlots.default.call(this, {}) : []));\n  },\n  methods: {\n    open: function open(target, message) {\n      return this.toVisible(target || this.target, message);\n    },\n    close: function close() {\n      this.tipTarget = null;\n      Object.assign(this.tipStore, {\n        style: {},\n        placement: '',\n        arrowStyle: null\n      });\n      this.update(false);\n      return this.$nextTick();\n    },\n    update: function update(value) {\n      if (value !== this.visible) {\n        this.visible = value;\n        this.isUpdate = true;\n\n        if (this.$listeners.input) {\n          this.$emit('input', this.visible);\n        }\n      }\n    },\n    updateZindex: function updateZindex() {\n      this.tipZindex = window.$_theme.zindex(); //加\n      //      if (this.tipZindex < UtilTools.getLastZIndex()) {//删\n      //        this.tipZindex = UtilTools.nextZIndex()\n      //      }\n    },\n    toVisible: function toVisible(target, message) {\n      this.targetActive = true;\n\n      if (target) {\n        var $el = this.$el,\n            tipStore = this.tipStore,\n            zIndex = this.zIndex;\n        var parentNode = $el.parentNode;\n\n        if (!parentNode) {\n          document.body.appendChild($el);\n        }\n\n        if (message) {\n          this.message = message;\n        }\n\n        this.tipTarget = target;\n        this.update(true);\n        this.updateZindex();\n        tipStore.placement = 'top';\n        tipStore.style = {\n          width: 'auto',\n          left: 0,\n          top: 0,\n          zIndex: zIndex || this.tipZindex\n        };\n        tipStore.arrowStyle = {\n          left: '50%'\n        };\n        return this.updatePlacement();\n      }\n\n      return this.$nextTick();\n    },\n    updatePlacement: function updatePlacement() {\n      var _this = this;\n\n      return this.$nextTick().then(function () {\n        var wrapperElem = _this.$el,\n            tipTarget = _this.tipTarget;\n\n        if (tipTarget && wrapperElem) {\n          updateTipStyle(_this);\n          return _this.$nextTick().then(function () {\n            return updateTipStyle(_this);\n          });\n        }\n      });\n    },\n    clickEvent: function clickEvent() {\n      this[this.visible ? 'close' : 'open']();\n    },\n    targetMouseenterEvent: function targetMouseenterEvent() {\n      this.open();\n    },\n    targetMouseleaveEvent: function targetMouseleaveEvent() {\n      var _this2 = this;\n\n      var trigger = this.trigger,\n          enterable = this.enterable,\n          leaveDelay = this.leaveDelay;\n      this.targetActive = false;\n\n      if (enterable && trigger === 'hover') {\n        setTimeout(function () {\n          if (!_this2.isHover) {\n            _this2.close();\n          }\n        }, leaveDelay);\n      } else {\n        this.close();\n      }\n    },\n    wrapperMouseenterEvent: function wrapperMouseenterEvent() {\n      this.isHover = true;\n    },\n    wrapperMouseleaveEvent: function wrapperMouseleaveEvent(evnt) {\n      var _this3 = this;\n\n      var leaveMethod = this.leaveMethod,\n          trigger = this.trigger,\n          enterable = this.enterable,\n          leaveDelay = this.leaveDelay;\n      this.isHover = false;\n\n      if (!leaveMethod || leaveMethod({\n        $event: evnt\n      }) !== false) {\n        if (enterable && trigger === 'hover') {\n          setTimeout(function () {\n            if (!_this3.targetActive) {\n              _this3.close();\n            }\n          }, leaveDelay);\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\tooltip\\src\\tooltip.js"],"names":["wrapperElem","tipTarget","tipStore","_vm","scrollTop","scrollLeft","visibleWidth","DomTools","top","left","marginSize","offsetHeight","offsetWidth","tipTop","tipLeft","Math","name","mixins","props","value","size","type","default","GlobalConfig","trigger","skin","content","zIndex","isArrow","enterable","leaveDelay","leaveMethod","Function","data","isUpdate","isHover","visible","message","tipZindex","style","placement","arrowStyle","watch","mounted","$el","parentNode","UtilTools","XEUtils","index","target","beforeDestroy","render","$scopedSlots","vSize","on","mouseenter","mouseleave","wrapperMouseleaveEvent","h","class","ref","methods","open","close","Object","update","updateZindex","window","toVisible","document","width","updatePlacement","updateTipStyle","clickEvent","targetMouseenterEvent","targetMouseleaveEvent","setTimeout","wrapperMouseenterEvent","$event","evnt"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\nimport { UtilTools, DomTools } from '../../tools'\r\n\r\nfunction updateTipStyle (_vm) {\r\n  const { $el: wrapperElem, tipTarget, tipStore } = _vm\r\n  if (tipTarget) {\r\n    const { scrollTop, scrollLeft, visibleWidth } = DomTools.getDomNode()\r\n    const { top, left } = DomTools.getAbsolutePos(tipTarget)\r\n    const marginSize = 6\r\n    const offsetHeight = wrapperElem.offsetHeight\r\n    const offsetWidth = wrapperElem.offsetWidth\r\n    let tipTop = top - offsetHeight - marginSize\r\n    let tipLeft = Math.max(marginSize, left + Math.floor((tipTarget.offsetWidth - offsetWidth) / 2))\r\n    if (tipLeft + offsetWidth + marginSize > scrollLeft + visibleWidth) {\r\n      tipLeft = scrollLeft + visibleWidth - offsetWidth - marginSize\r\n    }\r\n    if (top - offsetHeight < scrollTop + marginSize) {\r\n      tipStore.placement = 'bottom'\r\n      tipTop = top + tipTarget.offsetHeight + marginSize\r\n    }\r\n    tipStore.style.top = `${tipTop}px`\r\n    tipStore.style.left = `${tipLeft}px`\r\n    tipStore.arrowStyle.left = `${left - tipLeft + tipTarget.offsetWidth / 2}px`\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'VxeTooltip',\r\n  mixins: [vSize],\r\n  props: {\r\n    value: Boolean,\r\n    size: { type: String, default: () => GlobalConfig.tooltip.size || GlobalConfig.size },\r\n    trigger: { type: String, default: () => GlobalConfig.tooltip.trigger },\r\n    skin: { type: String, default: () => GlobalConfig.tooltip.skin },\r\n    content: [String, Number],\r\n    zIndex: [String, Number],\r\n    isArrow: { type: Boolean, default: true },\r\n    enterable: Boolean,\r\n    leaveDelay: { type: Number, default: GlobalConfig.tooltip.leaveDelay },\r\n    leaveMethod: Function\r\n  },\r\n  data () {\r\n    return {\r\n      isUpdate: false,\r\n      isHover: false,\r\n      visible: false,\r\n      message: '',\r\n      tipTarget: null,\r\n      tipZindex: 0,\r\n      tipStore: {\r\n        style: {},\r\n        placement: '',\r\n        arrowStyle: null\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    content (value) {\r\n      this.message = value\r\n    },\r\n    value (value) {\r\n      if (!this.isUpdate) {\r\n        this[value ? 'open' : 'close']()\r\n      }\r\n      this.isUpdate = false\r\n    }\r\n  },\r\n  mounted () {\r\n    const { $el, trigger, content, value } = this\r\n    const parentNode = $el.parentNode\r\n    let target\r\n    this.message = content\r\n    this.tipZindex = UtilTools.nextZIndex()\r\n    XEUtils.arrayEach($el.children, (elem, index) => {\r\n      if (index > 1) {\r\n        parentNode.insertBefore(elem, $el)\r\n        if (!target) {\r\n          target = elem\r\n        }\r\n      }\r\n    })\r\n    parentNode.removeChild($el)\r\n    this.target = target\r\n    if (target) {\r\n      if (trigger === 'hover') {\r\n        target.onmouseleave = this.targetMouseleaveEvent\r\n        target.onmouseenter = this.targetMouseenterEvent\r\n      } else if (trigger === 'click') {\r\n        target.onclick = this.clickEvent\r\n      }\r\n    }\r\n    if (value) {\r\n      this.open()\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    const { $el, target, trigger } = this\r\n    const parentNode = $el.parentNode\r\n    if (parentNode) {\r\n      parentNode.removeChild($el)\r\n    }\r\n    if (target) {\r\n      if (trigger === 'hover') {\r\n        target.onmouseenter = null\r\n        target.onmouseleave = null\r\n      } else if (trigger === 'click') {\r\n        target.onclick = null\r\n      }\r\n    }\r\n  },\r\n  render (h) {\r\n    const { $scopedSlots, vSize, skin, message, isHover, isArrow, visible, tipStore, enterable } = this\r\n    let on\r\n    if (enterable) {\r\n      on = {\r\n        mouseenter: this.wrapperMouseenterEvent,\r\n        mouseleave: this.wrapperMouseleaveEvent\r\n      }\r\n    }\r\n    return h('div', {\r\n      class: ['vxe-table--tooltip-wrapper', `skin--${skin}`, {\r\n        [`size--${vSize}`]: vSize,\r\n        [`placement--${tipStore.placement}`]: tipStore.placement,\r\n        'is--enterable': enterable,\r\n        'is--visible': visible,\r\n        'is--arrow': isArrow,\r\n        'is--hover': isHover\r\n      }],\r\n      style: tipStore.style,\r\n      ref: 'tipWrapper',\r\n      on\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-table--tooltip-content'\r\n      }, $scopedSlots.content ? $scopedSlots.content.call(this, {}) : message),\r\n      h('div', {\r\n        class: 'vxe-table--tooltip-arrow',\r\n        style: tipStore.arrowStyle\r\n      })\r\n    ].concat($scopedSlots.default ? $scopedSlots.default.call(this, {}) : []))\r\n  },\r\n  methods: {\r\n    open (target, message) {\r\n      return this.toVisible(target || this.target, message)\r\n    },\r\n    close () {\r\n      this.tipTarget = null\r\n      Object.assign(this.tipStore, {\r\n        style: {},\r\n        placement: '',\r\n        arrowStyle: null\r\n      })\r\n      this.update(false)\r\n      return this.$nextTick()\r\n    },\r\n    update (value) {\r\n      if (value !== this.visible) {\r\n        this.visible = value\r\n        this.isUpdate = true\r\n        if (this.$listeners.input) {\r\n          this.$emit('input', this.visible)\r\n        }\r\n      }\r\n    },\r\n    updateZindex () {\r\n      this.tipZindex = window.$_theme.zindex();//加\r\n//      if (this.tipZindex < UtilTools.getLastZIndex()) {//删\r\n//        this.tipZindex = UtilTools.nextZIndex()\r\n//      }\r\n    },\r\n    toVisible (target, message) {\r\n      this.targetActive = true\r\n      if (target) {\r\n        const { $el, tipStore, zIndex } = this\r\n        const parentNode = $el.parentNode\r\n        if (!parentNode) {\r\n          document.body.appendChild($el)\r\n        }\r\n        if (message) {\r\n          this.message = message\r\n        }\r\n        this.tipTarget = target\r\n        this.update(true)\r\n        this.updateZindex()\r\n        tipStore.placement = 'top'\r\n        tipStore.style = { width: 'auto', left: 0, top: 0, zIndex: zIndex || this.tipZindex }\r\n        tipStore.arrowStyle = { left: '50%' }\r\n        return this.updatePlacement()\r\n      }\r\n      return this.$nextTick()\r\n    },\r\n    updatePlacement () {\r\n      return this.$nextTick().then(() => {\r\n        const { $el: wrapperElem, tipTarget } = this\r\n        if (tipTarget && wrapperElem) {\r\n          updateTipStyle(this)\r\n          return this.$nextTick().then(() => updateTipStyle(this))\r\n        }\r\n      })\r\n    },\r\n    clickEvent () {\r\n      this[this.visible ? 'close' : 'open']()\r\n    },\r\n    targetMouseenterEvent () {\r\n      this.open()\r\n    },\r\n    targetMouseleaveEvent () {\r\n      const { trigger, enterable, leaveDelay } = this\r\n      this.targetActive = false\r\n      if (enterable && trigger === 'hover') {\r\n        setTimeout(() => {\r\n          if (!this.isHover) {\r\n            this.close()\r\n          }\r\n        }, leaveDelay)\r\n      } else {\r\n        this.close()\r\n      }\r\n    },\r\n    wrapperMouseenterEvent () {\r\n      this.isHover = true\r\n    },\r\n    wrapperMouseleaveEvent (evnt) {\r\n      const { leaveMethod, trigger, enterable, leaveDelay } = this\r\n      this.isHover = false\r\n      if (!leaveMethod || leaveMethod({ $event: evnt }) !== false) {\r\n        if (enterable && trigger === 'hover') {\r\n          setTimeout(() => {\r\n            if (!this.targetActive) {\r\n              this.close()\r\n            }\r\n          }, leaveDelay)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}