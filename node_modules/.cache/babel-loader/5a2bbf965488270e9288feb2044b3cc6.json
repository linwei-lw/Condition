{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\common\\cache\\CacheDriver.js","dependencies":[{"path":"D:\\cdRule\\src\\common\\cache\\CacheDriver.js","mtime":1677658521379},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { arrayToMap, arrayRemoveValue } from '@/common/util/Arrays.js';\nimport { getTeams, getCars } from \"./CacheTeamCar.js\";\nimport { objCopyTo } from '@/common/util/Objects.js';\nimport { treeToMap } from '@/common/util/Trees.js';\nvar CACHE = {\n  list: null,\n  map: null\n};\nvar loading = false;\nexport function getDrivers(callback) {\n  var refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!refresh && CACHE.list) {\n    return callback ? callback(CACHE) : CACHE;\n  }\n\n  if (callback && loading) {\n    //正在请求后台加载中，等1秒再试试\n    return setTimeout(function () {\n      return getDrivers(callback, refresh);\n    }, 1000);\n  }\n\n  loading = true;\n\n  var fun = function fun(result) {\n    loading = false;\n    initDrivers(result);\n    return callback ? callback(CACHE) : CACHE;\n  };\n\n  return callback ? window.$_main.http.get('mgr/driver?getDriverList').then(fun) : fun(window.$_main.http.syncGet('mgr/driver?getDriverList'));\n}\nexport function initDrivers(result) {\n  CACHE.list = result || [];\n  CACHE.map = arrayToMap(CACHE.list, 'id');\n}\nexport function getDriversByTeamId(teamId) {\n  !CACHE.list && getDrivers();\n\n  if (teamId == '0') {\n    return _toConsumableArray(CACHE.list);\n  }\n\n  var team = getTeams().map[teamId];\n  if (!team) return [];\n  var teams = treeToMap([team], 'id', 'teams'),\n      drivers = [];\n\n  for (var i = 0, len = CACHE.list.length, drv; i < len; i++) {\n    drv = CACHE.list[i];\n    teams[drv.teamId] && drivers.push(drv);\n  }\n\n  return drivers;\n}\nexport function getDriverById(driverId) {\n  !CACHE.map && getDrivers();\n  return CACHE.map[driverId];\n}\nexport function getNotUsedDrivers(teamId) {\n  !CACHE.list && getDrivers();\n  var drivers = [];\n\n  for (var i = 0, len = CACHE.list.length, drv; i < len; i++) {\n    drv = CACHE.list[i];\n\n    if (drv.teamId == teamId) {\n      drivers.push(drv);\n    }\n  }\n\n  return drivers;\n}\nexport function onDriverAddOrUpdate(driver) {\n  var unbindCarIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var bindCarIds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (!CACHE.list || !driver) return;\n  var old = CACHE.map[driver.id];\n\n  if (!old) {\n    CACHE.map[driver.id] = driver;\n    CACHE.list.push(driver);\n  } else {\n    objCopyTo(driver, old);\n  }\n\n  unbindCarIds && unbindCarIds.forEach(function (carId) {\n    var car = getCars()[0].map[carId];\n    if (!car || !car.driverId) return;\n    var dids = car.driverId.split(',').filter(function (v) {\n      return v != driver.id;\n    });\n    car.driverId = dids.length > 0 ? dids.join(',') : null;\n  });\n  bindCarIds && bindCarIds.forEach(function (carId) {\n    var car = getCars()[0].map[carId];\n    if (!car) return;\n    if (!car.driverId) return car.driverId = driver.id;\n\n    if (car.driverId.split(',').indexOf(driver.id) == -1) {\n      car.driverId = car.driverId + \",\" + driver.id;\n    }\n  });\n}\nexport function onDriverDelete(driverId) {\n  if (!CACHE.list || !driverId) return;\n  delete CACHE.map[driverId];\n  arrayRemoveValue(CACHE.list, 'id', driverId);\n}",{"version":3,"sources":["D:\\cdRule\\src\\common\\cache\\CacheDriver.js"],"names":["CACHE","list","map","loading","refresh","callback","setTimeout","getDrivers","fun","initDrivers","window","result","arrayToMap","teamId","team","getTeams","teams","treeToMap","drivers","i","len","drv","unbindCarIds","bindCarIds","old","driver","objCopyTo","car","getCars","dids","v","arrayRemoveValue"],"mappings":"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","sourcesContent":["import { arrayToMap, arrayRemoveValue } from '@/common/util/Arrays.js';\r\nimport { getTeams, getCars } from './CacheTeamCar.js';\r\nimport { objCopyTo } from '@/common/util/Objects.js';\r\nimport { treeToMap } from '@/common/util/Trees.js';\r\n\r\nlet CACHE = { list: null, map: null };\r\nlet loading = false;\r\n\r\nexport function getDrivers(callback,refresh=false) {\r\n    if (!refresh && CACHE.list) {\r\n        return callback ? callback(CACHE) : CACHE;\r\n    }\r\n\tif (callback && loading) {//正在请求后台加载中，等1秒再试试\r\n\t  return setTimeout(()=>getDrivers(callback,refresh), 1000);\r\n\t}\r\n\tloading = true;\r\n    let fun = result => {\r\n\t\tloading = false;\r\n        initDrivers(result);\r\n        return callback ? callback(CACHE) : CACHE;\r\n    }\r\n    return callback ? window.$_main.http.get('mgr/driver?getDriverList').then(fun) : fun(window.$_main.http.syncGet('mgr/driver?getDriverList'));\r\n}\r\n\r\nexport function initDrivers(result) {\r\n\tCACHE.list = result || [];\r\n\tCACHE.map = arrayToMap(CACHE.list, 'id');\r\n}\r\n\r\nexport function getDriversByTeamId(teamId) {\r\n    !CACHE.list && getDrivers();\r\n    if (teamId == '0') {\r\n        return [...CACHE.list];\r\n    }\r\n    let team = getTeams().map[teamId];\r\n    if (!team) return [];\r\n    let teams = treeToMap([team], 'id', 'teams'), drivers = [];\r\n    for (let i = 0, len = CACHE.list.length, drv; i < len; i++) {\r\n        drv = CACHE.list[i];\r\n        teams[drv.teamId] && drivers.push(drv);\r\n    }\r\n    return drivers;\r\n}\r\n\r\nexport function getDriverById(driverId) {\r\n    !CACHE.map && getDrivers();\r\n    return CACHE.map[driverId];\r\n}\r\n\r\nexport function getNotUsedDrivers(teamId) {\r\n\t!CACHE.list && getDrivers();\r\n\tlet drivers = [];\r\n\tfor (let i=0, len=CACHE.list.length, drv; i<len; i++) {\r\n\t\tdrv = CACHE.list[i];\r\n\t\tif (drv.teamId == teamId) {\r\n\t\t\tdrivers.push(drv);\r\n\t\t}\r\n\t}\r\n\treturn drivers;\r\n}\r\n\r\nexport function onDriverAddOrUpdate(driver, unbindCarIds=null, bindCarIds=null) {\r\n    if (!CACHE.list || !driver) return;\r\n    let old = CACHE.map[driver.id];\r\n    if (!old) {\r\n        CACHE.map[driver.id] = driver;\r\n        CACHE.list.push(driver);\r\n    } else {\r\n        objCopyTo(driver, old);\r\n    }\r\n    unbindCarIds && unbindCarIds.forEach(carId => {\r\n        let car = getCars()[0].map[carId];\r\n        if (!car || !car.driverId) return;\r\n        let dids = car.driverId.split(',').filter(v=>v!=driver.id);\r\n        car.driverId = dids.length > 0 ? dids.join(',') : null;\r\n    });\r\n    bindCarIds && bindCarIds.forEach(carId => {\r\n        let car = getCars()[0].map[carId];\r\n        if (!car) return;\r\n        if (!car.driverId) return car.driverId = driver.id;\r\n        if (car.driverId.split(',').indexOf(driver.id) == -1) {\r\n            car.driverId = car.driverId + \",\" + driver.id;\r\n        }\r\n    });\r\n}\r\n\r\nexport function onDriverDelete(driverId) {\r\n    if (!CACHE.list || !driverId) return;\r\n    delete CACHE.map[driverId];\r\n    arrayRemoveValue(CACHE.list, 'id', driverId);\r\n}\r\n"]}]}