{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\modal\\index.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\modal\\index.js","mtime":1635230121051},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport XEUtils from 'xe-utils';\nimport VXEModal, { allActivedModals } from \"./src/modal\";\nimport VXETable from \"../v-x-e-table\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nvar ModalClass = null;\n\nfunction openModal(opts) {\n  var options = Object.assign({}, opts, {\n    transfer: true\n  });\n  return new Promise(function (resolve) {\n    if (options && options.id && allActivedModals.some(function (comp) {\n      return comp.id === options.id;\n    })) {\n      resolve('exist');\n    } else {\n      var events = options.events || {};\n      options.events = Object.assign({}, events, {\n        hide: function hide(params) {\n          if (events.hide) {\n            events.hide.call(this, params);\n          }\n\n          setTimeout(function () {\n            return $modal.$destroy();\n          }, $modal.isMsg ? 500 : 100);\n          resolve(params.type);\n        }\n      });\n      var $modal = new ModalClass({\n        el: document.createElement('div'),\n        propsData: options\n      });\n      setTimeout(function () {\n        if ($modal.isDestroy) {\n          $modal.close();\n        } else {\n          $modal.open();\n        }\n      });\n    }\n  });\n}\n/**\r\n * 全局关闭动态的活动窗口（只能用于关闭动态的创建的活动窗口）\r\n * 如果传 id 则关闭指定的窗口\r\n * 如果不传则关闭所有窗口\r\n */\n\n\nfunction closeModal(id) {\n  var modals = arguments.length ? [getModal(id)] : allActivedModals;\n  modals.forEach(function ($modal) {\n    if ($modal) {\n      $modal.isDestroy = true;\n      $modal.close('close');\n    }\n  });\n  return Promise.resolve();\n}\n\nfunction getModal(id) {\n  return XEUtils.find(allActivedModals, function ($modal) {\n    return $modal.id === id;\n  });\n}\n\nvar ModalController = {\n  get: getModal,\n  close: closeModal,\n  open: openModal\n};\nexport var modal = ModalController;\nvar shortcutTypes = ['alert', 'confirm', 'message'];\nshortcutTypes.forEach(function (type, index) {\n  var defOpts = index === 2 ? {\n    mask: false,\n    lockView: false,\n    showHeader: false\n  } : {\n    showFooter: true\n  };\n  defOpts.type = type;\n  defOpts.dblclickZoom = false;\n\n  if (index === 1) {\n    defOpts.status = 'question';\n  }\n\n  ModalController[type] = function (content, title, options) {\n    var opts = {};\n\n    if (XEUtils.isObject(content)) {\n      opts = content;\n    } else {\n      if (title) {\n        opts = index === 2 ? {\n          status: title\n        } : {\n          title: title\n        };\n      }\n\n      opts.content = XEUtils.toString(content);\n    }\n\n    return openModal(Object.assign({\n      type: type\n    }, defOpts, opts, options));\n  };\n});\nexport var Modal = Object.assign(VXEModal, {\n  install: function install(Vue) {\n    VXETable._modal = 1;\n    Vue.component(VXEModal.name, VXEModal);\n    ModalClass = Vue.extend(VXEModal);\n    VXETable.modal = ModalController;\n\n    if (!Vue.prototype.$vxe) {\n      Vue.prototype.$vxe = {\n        modal: ModalController\n      };\n    } else {\n      Vue.prototype.$vxe.modal = ModalController;\n    }\n  }\n});\nexport default Modal;",null]}