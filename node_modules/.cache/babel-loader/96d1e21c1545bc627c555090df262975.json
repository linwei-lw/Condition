{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\modules\\mnt\\MntVideoPlaybackModule\\PlaybackForSkip.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\modules\\mnt\\MntVideoPlaybackModule\\PlaybackForSkip.vue","mtime":1675239859968},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\nimport Socket from '@/common/Socket.js';\nimport PlaybackPlayerForSkip from \"./PlaybackPlayerForSkip.vue\";\nimport { getCarById } from '@/common/cache/CacheTeamCar.js';\nexport default {\n  components: {\n    PlaybackPlayerForSkip: PlaybackPlayerForSkip\n  },\n  props: {\n    stime: String,\n    //YYYY-MM-DD HH:NN:SS\n    etime: String,\n    //YYYY-MM-DD HH:NN:SS\n    carId: String,\n    chn: String\n  },\n  data: function data() {\n    return {\n      socketIsOpen: false,\n      chns: []\n    };\n  },\n  _socket: null,\n  beforeDestroy: function beforeDestroy() {\n    this.$refs.player.close();\n  },\n  destroyed: function destroyed() {\n    this._socket && this._socket.destroy();\n    this._socket = null;\n  },\n  watch: {\n    carId: function carId(v) {\n      this._setChns(v);\n    },\n    socketIsOpen: function socketIsOpen(v) {\n      if (!v || this.$refs.list.selectedItem || this.chns.length == 0) return;\n      this.$refs.list.selectedItem = this.chns[0];\n\n      this._play(this.chns[0]);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.carId && this._setChns(this.carId);\n    this._socket = new Socket($_cache.videoHost + '/video', function () {\n      return _this.socketIsOpen = true;\n    }, function () {\n      return _this.socketIsOpen = false;\n    });\n\n    this._socket.connect();\n\n    this.$refs.player.setSocket(this._socket);\n  },\n  methods: {\n    close: function close() {\n      this.$refs.player.close();\n    },\n    _setChns: function _setChns(carId) {\n      var _this2 = this;\n\n      var car = getCarById(carId);\n      if (!car.videos) return this.chns = [];\n      this._plate = car.plate;\n      var vs = JSON.parse(car.videos).vs || \"\",\n          chns = [];\n      vs.split(',').forEach(function (item) {\n        var info = item.split(':'); //[通道,名称,云台]\n\n        if (_this2.chn && _this2.chn != info[0]) return;\n        chns.push({\n          name: info[1] || window.$_L.get('通道') + info[0],\n          chn: parseInt(info[0])\n        });\n      });\n      this.chns = chns;\n\n      this._play(this.chns[0]);\n    },\n    _play: function _play(chn) {\n      this.$refs.player.close();\n      var file = {\n        file: false,\n        carId: this.carId,\n        channel: chn.chn,\n        avType: 0,\n        streamType: 0,\n        storeType: 0,\n        stime: this.stime,\n        etime: this.etime,\n        startTime: this._YYMMDDJJNNSS(this.stime),\n        endTime: this._YYMMDDJJNNSS(this.etime),\n        play: false,\n        chnName: chn.name,\n        plate: this._plate\n      };\n      this.$refs.player.play(file, this.stime);\n    },\n    _YYMMDDJJNNSS: function _YYMMDDJJNNSS(time) {\n      return time.substr(2).split(/[-| |:]/).join('');\n    }\n  }\n};",{"version":3,"sources":["PlaybackForSkip.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"$style.layout\" :style=\"{backgroundColor:theme.bg_color}\">\r\n    <List ref=\"list\" v-show=\"chns.length>1\" :border=\"false\" :list=\"chns\" labelField=\"name\" @change=\"_play\" :disabled=\"!socketIsOpen\" style=\"width:80px;height:100%;\"/>\r\n    <PlaybackPlayerForSkip ref=\"player\" style=\"position:absolute;top:0;right:0;height:100%;\" :style=\"{width:chns.length>1?'calc(100% - 80px)':'100%'}\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Socket from '@/common/Socket.js';\r\n  import PlaybackPlayerForSkip from './PlaybackPlayerForSkip.vue';\r\n  import { getCarById } from '@/common/cache/CacheTeamCar.js';\r\n\r\n  export default {\r\n    components: {PlaybackPlayerForSkip},\r\n    props: {\r\n      stime: String,  //YYYY-MM-DD HH:NN:SS\r\n      etime: String,  //YYYY-MM-DD HH:NN:SS\r\n      carId: String,\r\n      chn: String,\r\n    },\r\n    data () {\r\n      return {\r\n        socketIsOpen: false,\r\n        chns: [],\r\n      }\r\n    },\r\n    _socket: null,\r\n\r\n    beforeDestroy() {\r\n      this.$refs.player.close();\r\n    },\r\n    destroyed() {\r\n      this._socket && this._socket.destroy();\r\n      this._socket = null;\r\n    },\r\n    watch: {\r\n      carId: function(v) {\r\n        this._setChns(v);\r\n      },\r\n      socketIsOpen: function(v) {\r\n        if (!v || this.$refs.list.selectedItem || this.chns.length == 0) return;\r\n        this.$refs.list.selectedItem = this.chns[0];\r\n        this._play(this.chns[0]);\r\n      }\r\n    },\r\n    mounted() {\r\n        this.carId && this._setChns(this.carId); \r\n        this._socket = new Socket($_cache.videoHost + '/video', ()=>this.socketIsOpen=true, ()=>this.socketIsOpen=false);\r\n        this._socket.connect();\r\n        this.$refs.player.setSocket(this._socket);\r\n     },\r\n    methods: {\r\n      close() {\r\n        this.$refs.player.close();\r\n      },\r\n      _setChns(carId) {\r\n        let car = getCarById(carId);\r\n        if (!car.videos) return this.chns = [];\r\n        this._plate = car.plate;\r\n        let vs = JSON.parse(car.videos).vs || \"\", chns = [];\r\n        vs.split(',').forEach(item => {\r\n          let info = item.split(':');//[通道,名称,云台]\r\n          if (this.chn && this.chn != info[0]) return;\r\n          chns.push({name:info[1] || (window.$_L.get('通道')+info[0]), chn: parseInt(info[0])});\r\n        });\r\n        this.chns = chns;\r\n        this._play(this.chns[0]);\r\n      },\r\n      _play(chn) {\r\n        this.$refs.player.close();\r\n        let file = {file:false, carId:this.carId, channel:chn.chn, avType:0, streamType:0, storeType:0, stime:this.stime, etime:this.etime, startTime:this._YYMMDDJJNNSS(this.stime), endTime:this._YYMMDDJJNNSS(this.etime), play:false, chnName:chn.name, plate:this._plate};\r\n        this.$refs.player.play(file, this.stime);\r\n      },\r\n      _YYMMDDJJNNSS(time) {\r\n        return time.substr(2).split(/[-| |:]/).join('');\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style module>\r\n  .layout {\r\n    background-color: #fff;\r\n    position: relative;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/modules/mnt/MntVideoPlaybackModule"}]}