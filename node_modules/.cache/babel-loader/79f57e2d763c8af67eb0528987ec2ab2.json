{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\tools\\src\\dom.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\tools\\src\\dom.js","mtime":1635230121384},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport XEUtils from 'xe-utils';\nimport UtilTools from \"./utils\";\nvar getRowid = UtilTools.getRowid;\nexport var browse = XEUtils.browse();\nvar reClsMap = {};\n\nfunction getClsRE(cls) {\n  if (!reClsMap[cls]) {\n    reClsMap[cls] = new RegExp(\"(?:^|\\\\s)\".concat(cls, \"(?!\\\\S)\"), 'g');\n  }\n\n  return reClsMap[cls];\n}\n\nfunction getNodeOffset(elem, container, rest) {\n  if (elem) {\n    var parentElem = elem.parentNode;\n    rest.top += elem.offsetTop;\n    rest.left += elem.offsetLeft;\n\n    if (parentElem && parentElem !== document.documentElement && parentElem !== document.body) {\n      rest.top -= parentElem.scrollTop;\n      rest.left -= parentElem.scrollLeft;\n    }\n\n    if (container && (elem === container || elem.offsetParent === container) ? 0 : elem.offsetParent) {\n      return getNodeOffset(elem.offsetParent, container, rest);\n    }\n  }\n\n  return rest;\n}\n\nfunction isScale(val) {\n  return val && /^\\d+%$/.test(val);\n}\n\nfunction hasClass(elem, cls) {\n  return elem && elem.className && elem.className.match && elem.className.match(getClsRE(cls));\n}\n\nfunction removeClass(elem, cls) {\n  if (elem && hasClass(elem, cls)) {\n    elem.className = elem.className.replace(getClsRE(cls), '');\n  }\n}\n\nfunction getDomNode() {\n  var documentElement = document.documentElement;\n  var bodyElem = document.body;\n  return {\n    scrollTop: documentElement.scrollTop || bodyElem.scrollTop,\n    scrollLeft: documentElement.scrollLeft || bodyElem.scrollLeft,\n    visibleHeight: documentElement.clientHeight || bodyElem.clientHeight,\n    visibleWidth: documentElement.clientWidth || bodyElem.clientWidth\n  };\n}\n\nexport function getOffsetHeight(elem) {\n  return elem ? elem.offsetHeight : 0;\n}\nexport function getPaddingTopBottomSize(elem) {\n  if (elem) {\n    var computedStyle = getComputedStyle(elem);\n    var paddingTop = XEUtils.toNumber(computedStyle.paddingTop);\n    var paddingBottom = XEUtils.toNumber(computedStyle.paddingBottom);\n    return paddingTop + paddingBottom;\n  }\n\n  return 0;\n}\nexport function setScrollTop(elem, scrollTop) {\n  if (elem) {\n    elem.scrollTop = scrollTop;\n  }\n}\nexport function setScrollLeft(elem, scrollLeft) {\n  if (elem) {\n    elem.scrollLeft = scrollLeft;\n  }\n}\nexport var DomTools = {\n  browse: browse,\n  isPx: function isPx(val) {\n    return val && /^\\d+(px)?$/.test(val);\n  },\n  isScale: isScale,\n  hasClass: hasClass,\n  removeClass: removeClass,\n  addClass: function addClass(elem, cls) {\n    if (elem && !hasClass(elem, cls)) {\n      removeClass(elem, cls);\n      elem.className = \"\".concat(elem.className, \" \").concat(cls);\n    }\n  },\n  updateCellTitle: function updateCellTitle(overflowElem, column) {\n    var content = column.type === 'html' ? overflowElem.innerText : overflowElem.textContent;\n\n    if (overflowElem.getAttribute('title') !== content) {\n      overflowElem.setAttribute('title', content);\n    }\n  },\n  rowToVisible: function rowToVisible($xetable, row) {\n    var bodyElem = $xetable.$refs.tableBody.$el;\n    var trElem = bodyElem.querySelector(\"[rowid=\\\"\".concat(getRowid($xetable, row), \"\\\"]\"));\n\n    if (trElem) {\n      var bodyHeight = bodyElem.clientHeight;\n      var bodySrcollTop = bodyElem.scrollTop;\n      var trOffsetTop = trElem.offsetTop + (trElem.offsetParent ? trElem.offsetParent.offsetTop : 0);\n      var trHeight = trElem.clientHeight; // 检测行是否在可视区中\n\n      if (trOffsetTop < bodySrcollTop || trOffsetTop > bodySrcollTop + bodyHeight) {\n        // 向上定位\n        return $xetable.scrollTo(null, trOffsetTop);\n      } else if (trOffsetTop + trHeight >= bodyHeight + bodySrcollTop) {\n        // 向下定位\n        return $xetable.scrollTo(null, bodySrcollTop + trHeight);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if ($xetable.scrollYLoad) {\n        return $xetable.scrollTo(null, ($xetable.afterFullData.indexOf(row) - 1) * $xetable.scrollYStore.rowHeight);\n      }\n    }\n\n    return Promise.resolve();\n  },\n  colToVisible: function colToVisible($xetable, column) {\n    var bodyElem = $xetable.$refs.tableBody.$el;\n    var tdElem = bodyElem.querySelector(\".\".concat(column.id));\n\n    if (tdElem) {\n      var bodyWidth = bodyElem.clientWidth;\n      var bodySrcollLeft = bodyElem.scrollLeft;\n      var tdOffsetLeft = tdElem.offsetLeft + (tdElem.offsetParent ? tdElem.offsetParent.offsetLeft : 0);\n      var tdWidth = tdElem.clientWidth; // 检测行是否在可视区中\n\n      if (tdOffsetLeft < bodySrcollLeft || tdOffsetLeft > bodySrcollLeft + bodyWidth) {\n        // 向左定位\n        return $xetable.scrollTo(tdOffsetLeft);\n      } else if (tdOffsetLeft + tdWidth >= bodyWidth + bodySrcollLeft) {\n        // 向右定位\n        return $xetable.scrollTo(bodySrcollLeft + tdWidth);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if ($xetable.scrollXLoad) {\n        var visibleColumn = $xetable.visibleColumn;\n        var scrollLeft = 0;\n\n        for (var index = 0; index < visibleColumn.length; index++) {\n          if (visibleColumn[index] === column) {\n            break;\n          }\n\n          scrollLeft += visibleColumn[index].renderWidth;\n        }\n\n        return $xetable.scrollTo(scrollLeft);\n      }\n    }\n\n    return Promise.resolve();\n  },\n  getDomNode: getDomNode,\n\n  /**\r\n   * 检查触发源是否属于目标节点\r\n   */\n  getEventTargetNode: function getEventTargetNode(evnt, container, queryCls, queryMethod) {\n    var targetElem;\n    var target = evnt.target;\n\n    while (target && target.nodeType && target !== document) {\n      if (queryCls && hasClass(target, queryCls) && (!queryMethod || queryMethod(target))) {\n        targetElem = target;\n      } else if (target === container) {\n        return {\n          flag: queryCls ? !!targetElem : true,\n          container: container,\n          targetElem: targetElem\n        };\n      }\n\n      target = target.parentNode;\n    }\n\n    return {\n      flag: false\n    };\n  },\n\n  /**\r\n   * 获取元素相对于 document 的位置\r\n   */\n  getOffsetPos: function getOffsetPos(elem, container) {\n    return getNodeOffset(elem, container, {\n      left: 0,\n      top: 0\n    });\n  },\n  getAbsolutePos: function getAbsolutePos(elem) {\n    var bounding = elem.getBoundingClientRect();\n    var boundingTop = bounding.top;\n    var boundingLeft = bounding.left;\n\n    var _getDomNode = getDomNode(),\n        scrollTop = _getDomNode.scrollTop,\n        scrollLeft = _getDomNode.scrollLeft,\n        visibleHeight = _getDomNode.visibleHeight,\n        visibleWidth = _getDomNode.visibleWidth;\n\n    return {\n      boundingTop: boundingTop,\n      top: scrollTop + boundingTop,\n      boundingLeft: boundingLeft,\n      left: scrollLeft + boundingLeft,\n      visibleHeight: visibleHeight,\n      visibleWidth: visibleWidth\n    };\n  },\n  scrollToView: function scrollToView(elem) {\n    var scrollIntoViewIfNeeded = 'scrollIntoViewIfNeeded';\n    var scrollIntoView = 'scrollIntoView';\n\n    if (elem) {\n      if (elem[scrollIntoViewIfNeeded]) {\n        elem[scrollIntoViewIfNeeded]();\n      } else if (elem[scrollIntoView]) {\n        elem[scrollIntoView]();\n      }\n    }\n  },\n  triggerEvent: function triggerEvent(targetElem, type) {\n    var evnt;\n\n    if (typeof Event === 'function') {\n      evnt = new Event(type);\n    } else {\n      evnt = document.createEvent('Event');\n      evnt.initEvent(type, true, true);\n    }\n\n    targetElem.dispatchEvent(evnt);\n  },\n  calcHeight: function calcHeight($xetable, key) {\n    var val = $xetable[key];\n    var num = 0;\n\n    if (val) {\n      if (val === 'auto') {\n        num = $xetable.parentHeight;\n      } else {\n        var excludeHeight = $xetable.getExcludeHeight();\n\n        if (isScale(val)) {\n          num = Math.floor((XEUtils.toInteger(val) || 1) / 100 * $xetable.parentHeight);\n        } else {\n          num = XEUtils.toNumber(val);\n        }\n\n        num = Math.max(40, num - excludeHeight);\n      }\n    }\n\n    return num;\n  }\n};\nexport default DomTools;",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\tools\\src\\dom.js"],"names":["getRowid","UtilTools","browse","XEUtils","reClsMap","parentElem","elem","rest","document","container","getNodeOffset","val","getClsRE","hasClass","documentElement","bodyElem","scrollTop","scrollLeft","visibleHeight","visibleWidth","clientWidth","computedStyle","getComputedStyle","paddingTop","paddingBottom","DomTools","isPx","isScale","removeClass","addClass","updateCellTitle","content","column","overflowElem","rowToVisible","$xetable","trElem","bodyHeight","bodySrcollTop","trOffsetTop","trHeight","Promise","colToVisible","tdElem","bodyWidth","bodySrcollLeft","tdOffsetLeft","tdWidth","visibleColumn","index","getDomNode","getEventTargetNode","target","evnt","queryCls","queryMethod","targetElem","flag","getOffsetPos","left","top","getAbsolutePos","bounding","boundingTop","boundingLeft","scrollToView","scrollIntoViewIfNeeded","scrollIntoView","triggerEvent","calcHeight","num","excludeHeight","Math"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport UtilTools from './utils'\r\n\r\nconst { getRowid } = UtilTools\r\n\r\nexport const browse = XEUtils.browse()\r\nconst reClsMap = {}\r\n\r\nfunction getClsRE (cls) {\r\n  if (!reClsMap[cls]) {\r\n    reClsMap[cls] = new RegExp(`(?:^|\\\\s)${cls}(?!\\\\S)`, 'g')\r\n  }\r\n  return reClsMap[cls]\r\n}\r\n\r\nfunction getNodeOffset (elem, container, rest) {\r\n  if (elem) {\r\n    const parentElem = elem.parentNode\r\n    rest.top += elem.offsetTop\r\n    rest.left += elem.offsetLeft\r\n    if (parentElem && parentElem !== document.documentElement && parentElem !== document.body) {\r\n      rest.top -= parentElem.scrollTop\r\n      rest.left -= parentElem.scrollLeft\r\n    }\r\n    if (container && (elem === container || elem.offsetParent === container) ? 0 : elem.offsetParent) {\r\n      return getNodeOffset(elem.offsetParent, container, rest)\r\n    }\r\n  }\r\n  return rest\r\n}\r\n\r\nfunction isScale (val) {\r\n  return val && /^\\d+%$/.test(val)\r\n}\r\n\r\nfunction hasClass (elem, cls) {\r\n  return elem && elem.className && elem.className.match && elem.className.match(getClsRE(cls))\r\n}\r\n\r\nfunction removeClass (elem, cls) {\r\n  if (elem && hasClass(elem, cls)) {\r\n    elem.className = elem.className.replace(getClsRE(cls), '')\r\n  }\r\n}\r\n\r\nfunction getDomNode () {\r\n  const documentElement = document.documentElement\r\n  const bodyElem = document.body\r\n  return {\r\n    scrollTop: documentElement.scrollTop || bodyElem.scrollTop,\r\n    scrollLeft: documentElement.scrollLeft || bodyElem.scrollLeft,\r\n    visibleHeight: documentElement.clientHeight || bodyElem.clientHeight,\r\n    visibleWidth: documentElement.clientWidth || bodyElem.clientWidth\r\n  }\r\n}\r\n\r\nexport function getOffsetHeight (elem) {\r\n  return elem ? elem.offsetHeight : 0\r\n}\r\n\r\nexport function getPaddingTopBottomSize (elem) {\r\n  if (elem) {\r\n    const computedStyle = getComputedStyle(elem)\r\n    const paddingTop = XEUtils.toNumber(computedStyle.paddingTop)\r\n    const paddingBottom = XEUtils.toNumber(computedStyle.paddingBottom)\r\n    return paddingTop + paddingBottom\r\n  }\r\n  return 0\r\n}\r\n\r\nexport function setScrollTop (elem, scrollTop) {\r\n  if (elem) {\r\n    elem.scrollTop = scrollTop\r\n  }\r\n}\r\n\r\nexport function setScrollLeft (elem, scrollLeft) {\r\n  if (elem) {\r\n    elem.scrollLeft = scrollLeft\r\n  }\r\n}\r\n\r\nexport const DomTools = {\r\n  browse,\r\n  isPx (val) {\r\n    return val && /^\\d+(px)?$/.test(val)\r\n  },\r\n  isScale,\r\n  hasClass,\r\n  removeClass,\r\n  addClass (elem, cls) {\r\n    if (elem && !hasClass(elem, cls)) {\r\n      removeClass(elem, cls)\r\n      elem.className = `${elem.className} ${cls}`\r\n    }\r\n  },\r\n  updateCellTitle (overflowElem, column) {\r\n    const content = column.type === 'html' ? overflowElem.innerText : overflowElem.textContent\r\n    if (overflowElem.getAttribute('title') !== content) {\r\n      overflowElem.setAttribute('title', content)\r\n    }\r\n  },\r\n  rowToVisible ($xetable, row) {\r\n    const bodyElem = $xetable.$refs.tableBody.$el\r\n    const trElem = bodyElem.querySelector(`[rowid=\"${getRowid($xetable, row)}\"]`)\r\n    if (trElem) {\r\n      const bodyHeight = bodyElem.clientHeight\r\n      const bodySrcollTop = bodyElem.scrollTop\r\n      const trOffsetTop = trElem.offsetTop + (trElem.offsetParent ? trElem.offsetParent.offsetTop : 0)\r\n      const trHeight = trElem.clientHeight\r\n      // 检测行是否在可视区中\r\n      if (trOffsetTop < bodySrcollTop || trOffsetTop > bodySrcollTop + bodyHeight) {\r\n        // 向上定位\r\n        return $xetable.scrollTo(null, trOffsetTop)\r\n      } else if (trOffsetTop + trHeight >= bodyHeight + bodySrcollTop) {\r\n        // 向下定位\r\n        return $xetable.scrollTo(null, bodySrcollTop + trHeight)\r\n      }\r\n    } else {\r\n      // 如果是虚拟渲染跨行滚动\r\n      if ($xetable.scrollYLoad) {\r\n        return $xetable.scrollTo(null, ($xetable.afterFullData.indexOf(row) - 1) * $xetable.scrollYStore.rowHeight)\r\n      }\r\n    }\r\n    return Promise.resolve()\r\n  },\r\n  colToVisible ($xetable, column) {\r\n    const bodyElem = $xetable.$refs.tableBody.$el\r\n    const tdElem = bodyElem.querySelector(`.${column.id}`)\r\n    if (tdElem) {\r\n      const bodyWidth = bodyElem.clientWidth\r\n      const bodySrcollLeft = bodyElem.scrollLeft\r\n      const tdOffsetLeft = tdElem.offsetLeft + (tdElem.offsetParent ? tdElem.offsetParent.offsetLeft : 0)\r\n      const tdWidth = tdElem.clientWidth\r\n      // 检测行是否在可视区中\r\n      if (tdOffsetLeft < bodySrcollLeft || tdOffsetLeft > bodySrcollLeft + bodyWidth) {\r\n        // 向左定位\r\n        return $xetable.scrollTo(tdOffsetLeft)\r\n      } else if (tdOffsetLeft + tdWidth >= bodyWidth + bodySrcollLeft) {\r\n        // 向右定位\r\n        return $xetable.scrollTo(bodySrcollLeft + tdWidth)\r\n      }\r\n    } else {\r\n      // 如果是虚拟渲染跨行滚动\r\n      if ($xetable.scrollXLoad) {\r\n        const visibleColumn = $xetable.visibleColumn\r\n        let scrollLeft = 0\r\n        for (let index = 0; index < visibleColumn.length; index++) {\r\n          if (visibleColumn[index] === column) {\r\n            break\r\n          }\r\n          scrollLeft += visibleColumn[index].renderWidth\r\n        }\r\n        return $xetable.scrollTo(scrollLeft)\r\n      }\r\n    }\r\n    return Promise.resolve()\r\n  },\r\n  getDomNode,\r\n  /**\r\n   * 检查触发源是否属于目标节点\r\n   */\r\n  getEventTargetNode (evnt, container, queryCls, queryMethod) {\r\n    let targetElem\r\n    let target = evnt.target\r\n    while (target && target.nodeType && target !== document) {\r\n      if (queryCls && hasClass(target, queryCls) && (!queryMethod || queryMethod(target))) {\r\n        targetElem = target\r\n      } else if (target === container) {\r\n        return { flag: queryCls ? !!targetElem : true, container, targetElem: targetElem }\r\n      }\r\n      target = target.parentNode\r\n    }\r\n    return { flag: false }\r\n  },\r\n  /**\r\n   * 获取元素相对于 document 的位置\r\n   */\r\n  getOffsetPos (elem, container) {\r\n    return getNodeOffset(elem, container, { left: 0, top: 0 })\r\n  },\r\n  getAbsolutePos (elem) {\r\n    const bounding = elem.getBoundingClientRect()\r\n    const boundingTop = bounding.top\r\n    const boundingLeft = bounding.left\r\n    const { scrollTop, scrollLeft, visibleHeight, visibleWidth } = getDomNode()\r\n    return { boundingTop, top: scrollTop + boundingTop, boundingLeft, left: scrollLeft + boundingLeft, visibleHeight, visibleWidth }\r\n  },\r\n  scrollToView (elem) {\r\n    const scrollIntoViewIfNeeded = 'scrollIntoViewIfNeeded'\r\n    const scrollIntoView = 'scrollIntoView'\r\n    if (elem) {\r\n      if (elem[scrollIntoViewIfNeeded]) {\r\n        elem[scrollIntoViewIfNeeded]()\r\n      } else if (elem[scrollIntoView]) {\r\n        elem[scrollIntoView]()\r\n      }\r\n    }\r\n  },\r\n  triggerEvent (targetElem, type) {\r\n    let evnt\r\n    if (typeof Event === 'function') {\r\n      evnt = new Event(type)\r\n    } else {\r\n      evnt = document.createEvent('Event')\r\n      evnt.initEvent(type, true, true)\r\n    }\r\n    targetElem.dispatchEvent(evnt)\r\n  },\r\n  calcHeight ($xetable, key) {\r\n    const val = $xetable[key]\r\n    let num = 0\r\n    if (val) {\r\n      if (val === 'auto') {\r\n        num = $xetable.parentHeight\r\n      } else {\r\n        const excludeHeight = $xetable.getExcludeHeight()\r\n        if (isScale(val)) {\r\n          num = Math.floor((XEUtils.toInteger(val) || 1) / 100 * $xetable.parentHeight)\r\n        } else {\r\n          num = XEUtils.toNumber(val)\r\n        }\r\n        num = Math.max(40, num - excludeHeight)\r\n      }\r\n    }\r\n    return num\r\n  }\r\n}\r\n\r\nexport default DomTools\r\n"]}]}