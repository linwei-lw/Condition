{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\select\\src\\option.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\select\\src\\option.js","mtime":1635230120855},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { createOption, destroyOption, assemOption } from './util';\nconst props = {\n  value: null,\n  label: {\n    type: [String, Number, Boolean],\n    default: ''\n  },\n  visible: {\n    type: Boolean,\n    default: null\n  },\n  className: [String, Function],\n  disabled: Boolean\n};\nconst watch = {};\nObject.keys(props).forEach(name => {\n  watch[name] = function (value) {\n    this.optionConfig.update(name, value);\n  };\n});\nexport default {\n  name: 'VxeOption',\n  props,\n  inject: {\n    $xeselect: {\n      default: null\n    },\n    $xeoptgroup: {\n      default: null\n    }\n  },\n  watch,\n\n  mounted() {\n    assemOption(this);\n  },\n\n  created() {\n    this.optionConfig = createOption(this.$xeselect, this);\n  },\n\n  destroyed() {\n    destroyOption(this);\n  },\n\n  render(h) {\n    return h('div');\n  }\n\n};",null]}