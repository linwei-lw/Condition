{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\tools\\src\\resize.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\tools\\src\\resize.js","mtime":1635230121388},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport \"core-js/modules/web.dom.iterable\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\n/**\r\n * 监听 resize 事件\r\n * 如果项目中已使用了 resize-observer-polyfill，那么只需要将方法定义全局，该组件就会自动使用\r\n */\n\nvar resizeTimeout;\nvar eventStore = [];\nvar defaultInterval = 500;\n\nfunction eventHandle() {\n  if (eventStore.length) {\n    eventStore.forEach(function (item) {\n      item.tarList.forEach(function (observer) {\n        var target = observer.target,\n            width = observer.width,\n            heighe = observer.heighe;\n        var clientWidth = target.clientWidth;\n        var clientHeight = target.clientHeight;\n        var rWidth = clientWidth && width !== clientWidth;\n        var rHeight = clientHeight && heighe !== clientHeight;\n\n        if (rWidth || rHeight) {\n          observer.width = clientWidth;\n          observer.heighe = clientHeight;\n          setTimeout(item.callback);\n        }\n      });\n    });\n    /* eslint-disable @typescript-eslint/no-use-before-define */\n\n    eventListener();\n  }\n}\n\nfunction eventListener() {\n  clearTimeout(resizeTimeout);\n  resizeTimeout = setTimeout(eventHandle, GlobalConfig.resizeInterval || defaultInterval);\n}\n\nvar ResizeObserverPolyfill =\n/*#__PURE__*/\nfunction () {\n  function ResizeObserverPolyfill(callback) {\n    _classCallCheck(this, ResizeObserverPolyfill);\n\n    this.tarList = [];\n    this.callback = callback;\n  }\n\n  _createClass(ResizeObserverPolyfill, [{\n    key: \"observe\",\n    value: function observe(target) {\n      var _this = this;\n\n      if (target) {\n        if (!this.tarList.some(function (observer) {\n          return observer.target === target;\n        })) {\n          this.tarList.push({\n            target: target,\n            width: target.clientWidth,\n            heighe: target.clientHeight\n          });\n        }\n\n        if (!eventStore.length) {\n          eventListener();\n        }\n\n        if (!eventStore.some(function (item) {\n          return item === _this;\n        })) {\n          eventStore.push(this);\n        }\n      }\n    }\n  }, {\n    key: \"unobserve\",\n    value: function unobserve(target) {\n      XEUtils.remove(eventStore, function (item) {\n        return item.tarList.some(function (observer) {\n          return observer.target === target;\n        });\n      });\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var _this2 = this;\n\n      XEUtils.remove(eventStore, function (item) {\n        return item === _this2;\n      });\n    }\n  }]);\n\n  return ResizeObserverPolyfill;\n}();\n\nexport function createResizeEvent(callback) {\n  if (window.ResizeObserver) {\n    return new window.ResizeObserver(callback);\n  }\n\n  return new ResizeObserverPolyfill(callback);\n}",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\tools\\src\\resize.js"],"names":["eventStore","defaultInterval","item","target","width","heighe","observer","clientWidth","clientHeight","rWidth","rHeight","setTimeout","eventListener","clearTimeout","resizeTimeout","GlobalConfig","ResizeObserverPolyfill","XEUtils","window"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\n\r\n/**\r\n * 监听 resize 事件\r\n * 如果项目中已使用了 resize-observer-polyfill，那么只需要将方法定义全局，该组件就会自动使用\r\n */\r\nlet resizeTimeout\r\nconst eventStore = []\r\nconst defaultInterval = 500\r\n\r\nfunction eventHandle () {\r\n  if (eventStore.length) {\r\n    eventStore.forEach(item => {\r\n      item.tarList.forEach(observer => {\r\n        const { target, width, heighe } = observer\r\n        const clientWidth = target.clientWidth\r\n        const clientHeight = target.clientHeight\r\n        const rWidth = clientWidth && width !== clientWidth\r\n        const rHeight = clientHeight && heighe !== clientHeight\r\n        if (rWidth || rHeight) {\r\n          observer.width = clientWidth\r\n          observer.heighe = clientHeight\r\n          setTimeout(item.callback)\r\n        }\r\n      })\r\n    })\r\n    /* eslint-disable @typescript-eslint/no-use-before-define */\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction eventListener () {\r\n  clearTimeout(resizeTimeout)\r\n  resizeTimeout = setTimeout(eventHandle, GlobalConfig.resizeInterval || defaultInterval)\r\n}\r\n\r\nclass ResizeObserverPolyfill {\r\n  constructor (callback) {\r\n    this.tarList = []\r\n    this.callback = callback\r\n  }\r\n\r\n  observe (target) {\r\n    if (target) {\r\n      if (!this.tarList.some(observer => observer.target === target)) {\r\n        this.tarList.push({\r\n          target,\r\n          width: target.clientWidth,\r\n          heighe: target.clientHeight\r\n        })\r\n      }\r\n      if (!eventStore.length) {\r\n        eventListener()\r\n      }\r\n      if (!eventStore.some(item => item === this)) {\r\n        eventStore.push(this)\r\n      }\r\n    }\r\n  }\r\n\r\n  unobserve (target) {\r\n    XEUtils.remove(eventStore, item => item.tarList.some(observer => observer.target === target))\r\n  }\r\n\r\n  disconnect () {\r\n    XEUtils.remove(eventStore, item => item === this)\r\n  }\r\n}\r\n\r\nexport function createResizeEvent (callback) {\r\n  if (window.ResizeObserver) {\r\n    return new window.ResizeObserver(callback)\r\n  }\r\n  return new ResizeObserverPolyfill(callback)\r\n}\r\n"]}]}