{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\common\\mixin\\http.js","dependencies":[{"path":"D:\\cdRule\\src\\common\\mixin\\http.js","mtime":1677661236842},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.typed.uint8-array\";\n/**\r\n * http请求后台服务模块\r\n */\n\nimport axios from 'axios';\nimport qs from 'qs';\naxios.defaults.withCredentials = true;\nvar headers = {\n  'Content-Type': 'application/json;charset=UTF-8'\n};\nvar isTimeout = false;\nvar http = {\n  authorization: function authorization(token) {\n    headers.Authorization = token;\n  },\n  get: function get(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + (params ? qs.stringify(params) + '&' : '') + new Date().getTime();\n    return axios({\n      headers: headers,\n      method: 'get',\n      url: \"\".concat(window.$_domain.WEB_PATH, \"h5\").concat(url)\n    }).then(function (r) {\n      return r.data;\n    }).then(function (r) {\n      if (r.status == 1) {\n        return r.result;\n      } else if (r.status == -1) {\n        isTimeout = true;\n        var page = r.result || 'index.html';\n        $_alert.error('您未登录或会话超时，请返回登录界面!', null, function () {\n          location.href = page;\n        }, true);\n      } else {\n        !quiet && $_alert.error(r.result);\n      }\n\n      throw r;\n    });\n  },\n  post: function post(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + new Date().getTime(); // console.log(`${window.$_domain.WEB_PATH}h5${url}`);\n\n    return axios({\n      headers: headers,\n      method: 'post',\n      url: \"\".concat(window.$_domain.WEB_PATH, \"h5\").concat(url),\n      data: params\n    }).then(function (r) {\n      return r.data;\n    }).then(function (r) {\n      if (r.status == 1) {\n        return r.result;\n      } else if (r.status == -1) {\n        isTimeout = true;\n        var page = r.result || 'index.html';\n        $_alert.error('您未登录或会话超时，请返回登录界面!', null, function () {\n          location.href = page;\n        }, true);\n      } else {\n        !quiet && $_alert.error(r.result);\n      }\n\n      throw r;\n    }).catch(function (err) {});\n  },\n  postxhyc: function postxhyc(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + new Date().getTime(); // console.log(`${window.$_domain.WEB_ROOT}${url}`);\n\n    if (url.indexOf('http://') != -1) {\n      return axios({\n        headers: headers,\n        method: 'post',\n        url: url,\n        data: params\n      }).then(function (r) {\n        // isTimeout = true;\n        // console.log(r,\"成功\");\n        return r.data;\n      }).then(function (r) {\n        if (r.status == 1) {\n          if (r.result.hasOwnProperty(encry)) {\n            return result(r.result);\n          } else {\n            return r.result;\n          } // } else if (r.status == -1) {\n          //   isTimeout = true;\n          //   let page = r.result || 'index.html';\n          //   $_alert.error('您未登录或会话超时，请返回登录界面!', null, ()=>{location.href=page}, true);\n\n        } else {\n          $_alert.error($_L.get('请求错误')); //   !quiet && $_alert.error(r.result);\n        }\n      }).catch(function (err) {// console.log(err,\"返回错误\");\n      });\n    } else {\n      return axios({\n        headers: headers,\n        method: 'post',\n        url: \"\".concat(window.$_domain.WEB_ROOT).concat(url),\n        data: params\n      }).then(function (r) {\n        // isTimeout = true;\n        // console.log(r,\"成功\");\n        return r.data;\n      }).then(function (r) {\n        return r; // if (r.status == 1) {\n        //   if(r.result.hasOwnProperty(encry)){\n        //    return result(r.result)\n        //   }else{\n        //     return r.result;\n        //   }\n        // // } else if (r.status == -1) {\n        //   // isTimeout = true;\n        // //   let page = r.result || 'index.html';\n        // //   $_alert.error('您未登录或会话超时，请返回登录界面!', null, ()=>{location.href=page}, true);\n        // } else {\n        // //   !quiet && $_alert.error(r.result);\n        //   $_alert.error($_L.get('请求错误'))\n        // }\n      }).catch(function (err) {// console.log(err,\"返回错误\");\n      });\n    }\n  },\n  getxhyc: function getxhyc(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + (params ? qs.stringify(params) + '&' : '') + new Date().getTime(); // console.log(`${window.$_domain.WEB_ROOT}${url}`);\n\n    if (url.indexOf('http://') != -1) {\n      return axios({\n        headers: headers,\n        method: 'get',\n        url: url\n      }).then(function (r) {\n        // isTimeout = true;\n        // console.log(r,\"成功\");\n        return r.data;\n      }).then(function (r) {\n        if (r.status == 1) {\n          if (r.result.hasOwnProperty(encry)) {\n            return result(r.result);\n          } else {\n            return r.result;\n          } // } else if (r.status == -1) {\n          // isTimeout = true;\n          //   let page = r.result || 'index.html';\n          //   $_alert.error('您未登录或会话超时，请返回登录界面!', null, ()=>{location.href=page}, true);\n\n        } else {\n          $_alert.error($_L.get('请求错误')); //   !quiet && $_alert.error(r.result);\n        }\n      }).catch(function (err) {// console.log(err,\"返回错误\");\n      });\n    } else {\n      return axios({\n        headers: headers,\n        method: 'get',\n        url: \"\".concat(window.$_domain.WEB_ROOT).concat(url)\n      }).then(function (r) {\n        // isTimeout = true;\n        // console.log(r,\"成功\");\n        return r.data;\n      }).then(function (r) {\n        if (r.status == 1) {\n          if (r.result.hasOwnProperty(encry)) {\n            return result(r.result);\n          } else {\n            return r.result;\n          } // } else if (r.status == -1) {\n          // isTimeout = true;\n          //   let page = r.result || 'index.html';\n          //   $_alert.error('您未登录或会话超时，请返回登录界面!', null, ()=>{location.href=page}, true);\n\n        } else {\n          $_alert.error($_L.get('请求错误')); //   !quiet && $_alert.error(r.result);\n        }\n      }).catch(function (err) {// console.log(err,\"返回错误\");\n      });\n    }\n  },\n  syncGet: function syncGet(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + (params ? qs.stringify(params) + '&' : '') + new Date().getTime();\n    return sync('GET', url, null, quiet);\n  },\n  syncPost: function syncPost(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + new Date().getTime();\n    return sync('POST', url, JSON.stringify(params), quiet);\n  }\n};\n\nfunction sync(method, url, params, quiet) {\n  var xhr = new XMLHttpRequest();\n\n  if (url.indexOf('http://') != -1) {\n    xhr.open(method, \"\".concat(url), false);\n  } else {\n    xhr.open(method, \"\".concat(window.$_domain.WEB_PATH, \"h5\").concat(url), false);\n  }\n\n  xhr.withCredentials = true;\n  xhr.setRequestHeader('Accept', 'application/json');\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.setRequestHeader('Authorization', headers.Authorization);\n  xhr.send(params);\n  var r = JSON.parse(xhr.responseText);\n\n  if (r.status == 1) {\n    if (r.result.hasOwnProperty(encry)) {\n      return result(r.result);\n    } else {\n      return r.result;\n    }\n  } else if (r.status == -1) {\n    isTimeout = true;\n    var page = r.result || 'index.html';\n    $_alert.error('您未登录或会话超时，请返回登录界面!', null, function () {\n      location.href = page;\n    }, true);\n  } else {\n    !quiet && $_alert.error(r.result);\n  }\n\n  throw r;\n}\n\nfunction result(_ref) {\n  var encry = _ref.encry,\n      result = _ref.result;\n  if (!encry || !result) return result;\n  var array = [];\n\n  for (var i = 0, len = result.length; i < len; i++) {\n    array.push(result.charCodeAt(i));\n  }\n\n  return JSON.parse(pako.ungzip(new Uint8Array(array), {\n    to: 'string'\n  }));\n}\n\nwindow.$_http = http;",null]}