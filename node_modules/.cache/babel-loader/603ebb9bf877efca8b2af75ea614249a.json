{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\select\\src\\select.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\select\\src\\select.js","mtime":1657011267820},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find\";\nimport XEUtils from 'xe-utils';\nimport VxeInput from \"../../input/src/input\";\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport { UtilTools, DomTools, GlobalEvent } from \"../../tools\";\n\nfunction isOptionVisible(option) {\n  return option.visible !== false;\n}\n\nfunction getOptUniqueId() {\n  return XEUtils.uniqueId('opt_');\n}\n\nfunction getOptkey(_vm) {\n  return _vm.optionId || '_XID';\n}\n\nfunction getOptid(_vm, option) {\n  var optid = option[getOptkey(_vm)];\n  return optid ? encodeURIComponent(optid) : '';\n}\n\nfunction findOffsetOption(_vm, optionValue, isUpArrow) {\n  var isGroup = _vm.isGroup,\n      visibleOptionList = _vm.visibleOptionList,\n      visibleGroupList = _vm.visibleGroupList,\n      valueField = _vm.valueField,\n      groupOptionsField = _vm.groupOptionsField;\n  var firstOption;\n  var prevOption;\n  var nextOption;\n  var currOption;\n\n  if (isGroup) {\n    for (var gIndex = 0; gIndex < visibleGroupList.length; gIndex++) {\n      var group = visibleGroupList[gIndex];\n      var groupOptionList = group[groupOptionsField];\n      var isGroupDisabled = group.disabled;\n\n      if (groupOptionList) {\n        for (var index = 0; index < groupOptionList.length; index++) {\n          var option = groupOptionList[index];\n          var isVisible = isOptionVisible(option);\n          var isDisabled = isGroupDisabled || option.disabled;\n\n          if (!firstOption && !isDisabled) {\n            firstOption = option;\n          }\n\n          if (currOption) {\n            if (isVisible && !isDisabled) {\n              nextOption = option;\n\n              if (!isUpArrow) {\n                return {\n                  offsetOption: nextOption\n                };\n              }\n            }\n          }\n\n          if (optionValue === option[valueField]) {\n            currOption = option;\n\n            if (isUpArrow) {\n              return {\n                offsetOption: prevOption\n              };\n            }\n          } else {\n            if (isVisible && !isDisabled) {\n              prevOption = option;\n            }\n          }\n        }\n      }\n    }\n  } else {\n    for (var _index = 0; _index < visibleOptionList.length; _index++) {\n      var _option = visibleOptionList[_index];\n      var _isDisabled = _option.disabled;\n\n      if (!firstOption && !_isDisabled) {\n        firstOption = _option;\n      }\n\n      if (currOption) {\n        if (!_isDisabled) {\n          nextOption = _option;\n\n          if (!isUpArrow) {\n            return {\n              offsetOption: nextOption\n            };\n          }\n        }\n      }\n\n      if (optionValue === _option[valueField]) {\n        currOption = _option;\n\n        if (isUpArrow) {\n          return {\n            offsetOption: prevOption\n          };\n        }\n      } else {\n        if (!_isDisabled) {\n          prevOption = _option;\n        }\n      }\n    }\n  }\n\n  return {\n    firstOption: firstOption\n  };\n}\n\nfunction findOption(_vm, optionValue) {\n  var isGroup = _vm.isGroup,\n      fullOptionList = _vm.fullOptionList,\n      fullGroupList = _vm.fullGroupList,\n      valueField = _vm.valueField;\n\n  if (isGroup) {\n    for (var gIndex = 0; gIndex < fullGroupList.length; gIndex++) {\n      var group = fullGroupList[gIndex];\n\n      if (group.options) {\n        for (var index = 0; index < group.options.length; index++) {\n          var option = group.options[index];\n\n          if (optionValue === option[valueField]) {\n            return option;\n          }\n        }\n      }\n    }\n  }\n\n  return fullOptionList.find(function (item) {\n    return optionValue === item[valueField];\n  });\n}\n\nfunction getSelectLabel(_vm, value) {\n  var item = findOption(_vm, value);\n  return XEUtils.toString(item ? item[_vm.labelField] : value);\n}\n\nexport function renderOption(h, _vm, list, group) {\n  var isGroup = _vm.isGroup,\n      labelField = _vm.labelField,\n      valueField = _vm.valueField,\n      optionKey = _vm.optionKey,\n      value = _vm.value,\n      multiple = _vm.multiple,\n      currentValue = _vm.currentValue;\n  return list.map(function (option, cIndex) {\n    var isVisible = !isGroup || isOptionVisible(option);\n    var isDisabled = group && group.disabled || option.disabled;\n    var optionValue = option[valueField];\n    var optid = getOptid(_vm, option);\n    return isVisible ? h('div', {\n      key: optionKey ? optid : cIndex,\n      class: ['vxe-select-option', option.className, {\n        'is--disabled': isDisabled,\n        'is--selected': multiple ? value && value.indexOf(optionValue) > -1 : value === optionValue,\n        'is--hover': currentValue === optionValue\n      }],\n      attrs: {\n        optid: optid\n      },\n      on: {\n        mousedown: _vm.mousedownOptionEvent,\n        click: function click(evnt) {\n          if (!isDisabled) {\n            _vm.changeOptionEvent(evnt, optionValue);\n          }\n        },\n        mouseenter: function mouseenter() {\n          if (!isDisabled) {\n            _vm.setCurrentOption(option);\n          }\n        }\n      }\n    }, UtilTools.formatText(UtilTools.getFuncText(option[labelField]))) : null;\n  });\n}\nexport function renderOptgroup(h, _vm) {\n  var optionKey = _vm.optionKey,\n      visibleGroupList = _vm.visibleGroupList,\n      groupLabelField = _vm.groupLabelField,\n      groupOptionsField = _vm.groupOptionsField;\n  return visibleGroupList.map(function (group, gIndex) {\n    var optid = getOptid(_vm, group);\n    var isGroupDisabled = group.disabled;\n    return h('div', {\n      key: optionKey ? optid : gIndex,\n      class: ['vxe-optgroup', group.className, {\n        'is--disabled': isGroupDisabled\n      }],\n      attrs: {\n        optid: optid\n      }\n    }, [h('div', {\n      class: 'vxe-optgroup--title'\n    }, UtilTools.getFuncText(group[groupLabelField])), h('div', {\n      class: 'vxe-optgroup--wrapper'\n    }, renderOption(h, _vm, group[groupOptionsField], group))]);\n  });\n}\n\nfunction renderOpts(h, _vm) {\n  var isGroup = _vm.isGroup,\n      visibleGroupList = _vm.visibleGroupList,\n      visibleOptionList = _vm.visibleOptionList;\n\n  if (isGroup) {\n    if (visibleGroupList.length) {\n      return renderOptgroup(h, _vm);\n    }\n  } else {\n    if (visibleOptionList.length) {\n      return renderOption(h, _vm, visibleOptionList);\n    }\n  }\n\n  return [h('div', {\n    class: 'vxe-select--empty-placeholder'\n  }, _vm.emptyText || GlobalConfig.i18n('vxe.select.emptyText'))];\n}\n\nexport default {\n  name: 'VxeSelect',\n  mixins: [vSize],\n  props: {\n    value: null,\n    clearable: Boolean,\n    placeholder: String,\n    loading: Boolean,\n    disabled: Boolean,\n    multiple: Boolean,\n    multiCharOverflow: {\n      type: [Number, String],\n      default: function _default() {\n        return GlobalConfig.select.multiCharOverflow;\n      }\n    },\n    prefixIcon: String,\n    placement: String,\n    options: Array,\n    optionProps: Object,\n    optionGroups: Array,\n    optionGroupProps: Object,\n    className: [String, Function],\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.select.size || GlobalConfig.size;\n      }\n    },\n    emptyText: String,\n    optionId: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.select.optionId;\n      }\n    },\n    optionKey: Boolean,\n    transfer: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.select.transfer;\n      }\n    }\n  },\n  components: {\n    VxeInput: VxeInput\n  },\n  provide: function provide() {\n    return {\n      $xeselect: this\n    };\n  },\n  data: function data() {\n    return {\n      inited: false,\n      collectOption: [],\n      fullGroupList: [],\n      fullOptionList: [],\n      visibleGroupList: [],\n      visibleOptionList: [],\n      panelIndex: 0,\n      panelStyle: null,\n      panelPlacement: null,\n      currentValue: null,\n      visiblePanel: false,\n      animatVisible: false,\n      isActivated: false\n    };\n  },\n  computed: {\n    propsOpts: function propsOpts() {\n      return this.optionProps || {};\n    },\n    groupPropsOpts: function groupPropsOpts() {\n      return this.optionGroupProps || {};\n    },\n    labelField: function labelField() {\n      return this.propsOpts.label || 'label';\n    },\n    valueField: function valueField() {\n      return this.propsOpts.value || 'value';\n    },\n    groupLabelField: function groupLabelField() {\n      return this.groupPropsOpts.label || 'label';\n    },\n    groupOptionsField: function groupOptionsField() {\n      return this.groupPropsOpts.options || 'options';\n    },\n    isGroup: function isGroup() {\n      return this.fullGroupList.some(function (item) {\n        return item.options && item.options.length;\n      });\n    },\n    multiMaxCharNum: function multiMaxCharNum() {\n      return XEUtils.toNumber(this.multiCharOverflow);\n    },\n    selectLabel: function selectLabel() {\n      var _this = this;\n\n      var value = this.value,\n          multiple = this.multiple,\n          multiMaxCharNum = this.multiMaxCharNum;\n\n      if (value && multiple) {\n        return value.map(function (val) {\n          var label = getSelectLabel(_this, val);\n\n          if (multiMaxCharNum > 0 && label.length > multiMaxCharNum) {\n            return \"\".concat(label.substring(0, multiMaxCharNum), \"...\");\n          }\n\n          return label;\n        }).join(', ');\n      }\n\n      return getSelectLabel(this, value);\n    }\n  },\n  watch: {\n    collectOption: function collectOption(value) {\n      if (value.some(function (item) {\n        return item.options && item.options.length;\n      })) {\n        this.fullOptionList = [];\n        this.fullGroupList = value;\n      } else {\n        this.fullGroupList = [];\n        this.fullOptionList = value;\n      }\n\n      this.updateCache();\n    },\n    options: function options(value) {\n      this.fullGroupList = [];\n      this.fullOptionList = value;\n      this.updateCache();\n    },\n    optionGroups: function optionGroups(value) {\n      this.fullOptionList = [];\n      this.fullGroupList = value;\n      this.updateCache();\n    }\n  },\n  created: function created() {\n    var options = this.options,\n        optionGroups = this.optionGroups;\n\n    if (optionGroups) {\n      this.fullGroupList = optionGroups;\n    } else if (options) {\n      this.fullOptionList = options;\n    }\n\n    this.updateCache();\n    GlobalEvent.on(this, 'mousewheel', this.handleGlobalMousewheelEvent);\n    GlobalEvent.on(this, 'mousedown', this.handleGlobalMousedownEvent);\n    GlobalEvent.on(this, 'keydown', this.handleGlobalKeydownEvent);\n    GlobalEvent.on(this, 'blur', this.handleGlobalBlurEvent);\n  },\n  beforeDestroy: function beforeDestroy() {\n    var panelElem = this.$refs.panel;\n\n    if (panelElem && panelElem.parentNode) {\n      panelElem.parentNode.removeChild(panelElem);\n    }\n  },\n  destroyed: function destroyed() {\n    GlobalEvent.off(this, 'mousewheel');\n    GlobalEvent.off(this, 'mousedown');\n    GlobalEvent.off(this, 'keydown');\n    GlobalEvent.off(this, 'blur');\n  },\n  render: function render(h) {\n    var _ref, _ref2;\n\n    var $scopedSlots = this.$scopedSlots,\n        vSize = this.vSize,\n        className = this.className,\n        inited = this.inited,\n        isActivated = this.isActivated,\n        loading = this.loading,\n        disabled = this.disabled,\n        visiblePanel = this.visiblePanel;\n    var prefixSlot = $scopedSlots.prefix;\n    return h('div', {\n      class: ['vxe-select', className ? XEUtils.isFunction(className) ? className({\n        $select: this\n      }) : className : '', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--visivle', visiblePanel), _defineProperty(_ref, 'is--disabled', disabled), _defineProperty(_ref, 'is--active', isActivated), _ref)]\n    }, [h('div', {\n      class: 'vxe-select-slots',\n      ref: 'hideOption'\n    }, this.$slots.default), h('vxe-input', {\n      ref: 'input',\n      props: {\n        clearable: this.clearable,\n        placeholder: this.placeholder,\n        readonly: true,\n        disabled: disabled,\n        type: 'text',\n        prefixIcon: this.prefixIcon,\n        suffixIcon: loading ? GlobalConfig.icon.SELECT_LOADED : visiblePanel ? GlobalConfig.icon.SELECT_OPEN : GlobalConfig.icon.SELECT_CLOSE,\n        value: this.selectLabel\n      },\n      on: {\n        clear: this.clearEvent,\n        click: this.togglePanelEvent,\n        focus: this.focusEvent,\n        blur: this.blurEvent,\n        'suffix-click': this.togglePanelEvent\n      },\n      scopedSlots: prefixSlot ? {\n        prefix: function prefix() {\n          return prefixSlot({});\n        }\n      } : {}\n    }), h('div', {\n      ref: 'panel',\n      class: ['vxe-table--ignore-clear vxe-select--panel', (_ref2 = {}, _defineProperty(_ref2, \"size--\".concat(vSize), vSize), _defineProperty(_ref2, 'is--transfer', this.transfer), _defineProperty(_ref2, 'animat--leave', !loading && this.animatVisible), _defineProperty(_ref2, 'animat--enter', !loading && visiblePanel), _ref2)],\n      attrs: {\n        placement: this.panelPlacement\n      },\n      style: this.panelStyle\n    }, inited ? [h('div', {\n      ref: 'optWrapper',\n      class: 'vxe-select-option--wrapper'\n    }, renderOpts(h, this))] : null)]);\n  },\n  methods: {\n    updateCache: function updateCache() {\n      var _this2 = this;\n\n      var fullOptionList = this.fullOptionList,\n          fullGroupList = this.fullGroupList,\n          groupOptionsField = this.groupOptionsField;\n      var optkey = getOptkey(this);\n\n      var handleOptis = function handleOptis(item) {\n        if (!getOptid(_this2, item)) {\n          item[optkey] = getOptUniqueId();\n        }\n      };\n\n      if (fullGroupList.length) {\n        fullGroupList.forEach(function (group) {\n          handleOptis(group);\n\n          if (group[groupOptionsField]) {\n            group[groupOptionsField].forEach(handleOptis);\n          }\n        });\n      } else if (fullOptionList.length) {\n        fullOptionList.forEach(handleOptis);\n      }\n\n      this.refreshOption();\n    },\n\n    /**\r\n     * 刷新选项，当选项被动态显示/隐藏时可能会用到\r\n     */\n    refreshOption: function refreshOption() {\n      var isGroup = this.isGroup,\n          fullOptionList = this.fullOptionList,\n          fullGroupList = this.fullGroupList;\n\n      if (isGroup) {\n        this.visibleGroupList = fullGroupList.filter(isOptionVisible);\n      } else {\n        this.visibleOptionList = fullOptionList.filter(isOptionVisible);\n      }\n\n      return this.$nextTick();\n    },\n    setCurrentOption: function setCurrentOption(option) {\n      if (option) {\n        this.currentValue = option[this.valueField];\n      }\n    },\n    scrollToOption: function scrollToOption(option, isAlignBottom) {\n      var _this3 = this;\n\n      return this.$nextTick().then(function () {\n        if (option) {\n          var $refs = _this3.$refs;\n          var optWrapperElem = $refs.optWrapper;\n          var optElem = $refs.panel.querySelector(\"[optid='\".concat(getOptid(_this3, option), \"']\"));\n\n          if (optWrapperElem && optElem) {\n            var wrapperHeight = optWrapperElem.offsetHeight;\n            var offsetPadding = 5;\n\n            if (isAlignBottom) {\n              if (optElem.offsetTop + optElem.offsetHeight - optWrapperElem.scrollTop > wrapperHeight) {\n                optWrapperElem.scrollTop = optElem.offsetTop + optElem.offsetHeight - wrapperHeight;\n              }\n            } else {\n              if (optElem.offsetTop + offsetPadding < optWrapperElem.scrollTop || optElem.offsetTop + offsetPadding > optWrapperElem.scrollTop + optWrapperElem.clientHeight) {\n                optWrapperElem.scrollTop = optElem.offsetTop - offsetPadding;\n              }\n            }\n          }\n        }\n      });\n    },\n    clearEvent: function clearEvent(params, evnt) {\n      this.clearValueEvent(evnt, null);\n      this.hideOptionPanel();\n    },\n    clearValueEvent: function clearValueEvent(evnt, selectValue) {\n      this.changeEvent(evnt, selectValue);\n      this.$emit('clear', {\n        value: selectValue,\n        $event: evnt\n      });\n    },\n    changeEvent: function changeEvent(evnt, selectValue) {\n      if (selectValue !== this.value) {\n        this.$emit('input', selectValue);\n        this.$emit('change', {\n          value: selectValue,\n          $event: evnt\n        });\n      }\n    },\n    mousedownOptionEvent: function mousedownOptionEvent(evnt) {\n      var isLeftBtn = evnt.button === 0;\n\n      if (isLeftBtn) {\n        evnt.stopPropagation();\n      }\n    },\n    changeOptionEvent: function changeOptionEvent(evnt, selectValue) {\n      var value = this.value,\n          multiple = this.multiple;\n\n      if (multiple) {\n        var multipleValue;\n\n        if (value) {\n          if (value.indexOf(selectValue) === -1) {\n            multipleValue = value.concat([selectValue]);\n          } else {\n            multipleValue = value.filter(function (val) {\n              return val !== selectValue;\n            });\n          }\n        } else {\n          multipleValue = [selectValue];\n        }\n\n        this.changeEvent(evnt, multipleValue);\n      } else {\n        this.changeEvent(evnt, selectValue);\n        this.hideOptionPanel();\n      }\n    },\n    handleGlobalMousewheelEvent: function handleGlobalMousewheelEvent(evnt) {\n      var $refs = this.$refs,\n          disabled = this.disabled,\n          visiblePanel = this.visiblePanel;\n\n      if (!disabled) {\n        if (visiblePanel) {\n          if (DomTools.getEventTargetNode(evnt, $refs.panel).flag) {\n            this.updatePlacement();\n          } else {\n            this.hideOptionPanel();\n          }\n        }\n      }\n    },\n    handleGlobalMousedownEvent: function handleGlobalMousedownEvent(evnt) {\n      var $refs = this.$refs,\n          $el = this.$el,\n          disabled = this.disabled,\n          visiblePanel = this.visiblePanel;\n\n      if (!disabled) {\n        this.isActivated = DomTools.getEventTargetNode(evnt, $el).flag || DomTools.getEventTargetNode(evnt, $refs.panel).flag;\n\n        if (visiblePanel && !this.isActivated) {\n          this.hideOptionPanel();\n        }\n      }\n    },\n    handleGlobalKeydownEvent: function handleGlobalKeydownEvent(evnt) {\n      var visiblePanel = this.visiblePanel,\n          currentValue = this.currentValue,\n          clearable = this.clearable,\n          disabled = this.disabled;\n\n      if (!disabled) {\n        var keyCode = evnt.keyCode;\n        var isTab = keyCode === 9;\n        var isEnter = keyCode === 13;\n        var isEsc = keyCode === 27;\n        var isUpArrow = keyCode === 38;\n        var isDwArrow = keyCode === 40;\n        var isDel = keyCode === 46;\n        var isSpacebar = keyCode === 32;\n\n        if (isTab) {\n          this.isActivated = false;\n        }\n\n        if (visiblePanel) {\n          if (isEsc || isTab) {\n            this.hideOptionPanel();\n          } else if (isEnter) {\n            evnt.preventDefault();\n            evnt.stopPropagation();\n            this.changeOptionEvent(evnt, currentValue);\n          } else if (isUpArrow || isDwArrow) {\n            evnt.preventDefault();\n\n            var _findOffsetOption = findOffsetOption(this, currentValue, isUpArrow),\n                firstOption = _findOffsetOption.firstOption,\n                offsetOption = _findOffsetOption.offsetOption;\n\n            if (!offsetOption && !findOption(this, currentValue)) {\n              offsetOption = firstOption;\n            }\n\n            this.setCurrentOption(offsetOption);\n            this.scrollToOption(offsetOption, isDwArrow);\n          } else if (isSpacebar) {\n            evnt.preventDefault();\n          }\n        } else if ((isUpArrow || isDwArrow || isEnter || isSpacebar) && this.isActivated) {\n          evnt.preventDefault();\n          this.showOptionPanel();\n        }\n\n        if (this.isActivated) {\n          if (isDel && clearable) {\n            this.clearValueEvent(evnt, null);\n          }\n        }\n      }\n    },\n    handleGlobalBlurEvent: function handleGlobalBlurEvent() {\n      this.hideOptionPanel();\n    },\n    updateZindex: function updateZindex() {\n      if (this.panelIndex < UtilTools.getLastZIndex()) {\n        this.panelIndex = UtilTools.nextZIndex();\n      }\n    },\n    focusEvent: function focusEvent() {\n      if (!this.disabled) {\n        this.isActivated = true;\n      }\n    },\n    blurEvent: function blurEvent() {\n      this.isActivated = false;\n    },\n    isPanelVisible: function isPanelVisible() {\n      return this.visiblePanel;\n    },\n    togglePanel: function togglePanel() {\n      if (this.visiblePanel) {\n        this.hideOptionPanel();\n      } else {\n        this.showOptionPanel();\n      }\n\n      this.$nextTick();\n    },\n    hidePanel: function hidePanel() {\n      if (this.visiblePanel) {\n        this.hideOptionPanel();\n      }\n\n      this.$nextTick();\n    },\n    showPanel: function showPanel() {\n      if (!this.visiblePanel) {\n        this.showOptionPanel();\n      }\n\n      this.$nextTick();\n    },\n    togglePanelEvent: function togglePanelEvent(params) {\n      var $event = params.$event;\n      $event.preventDefault();\n\n      if (this.visiblePanel) {\n        this.hideOptionPanel();\n      } else {\n        this.showOptionPanel();\n      }\n    },\n    showOptionPanel: function showOptionPanel() {\n      var _this4 = this;\n\n      var loading = this.loading,\n          disabled = this.disabled;\n\n      if (!loading && !disabled) {\n        clearTimeout(this.hidePanelTimeout);\n\n        if (!this.inited) {\n          this.inited = true;\n\n          if (this.transfer) {\n            document.body.appendChild(this.$refs.panel);\n          }\n        }\n\n        this.isActivated = true;\n        this.animatVisible = true;\n        setTimeout(function () {\n          var value = _this4.value,\n              multiple = _this4.multiple;\n          var currOption = findOption(_this4, multiple && value ? value[0] : value);\n          _this4.visiblePanel = true;\n\n          if (currOption) {\n            _this4.setCurrentOption(currOption);\n\n            _this4.scrollToOption(currOption);\n          }\n        }, 10);\n        this.updateZindex();\n        this.updatePlacement();\n      }\n    },\n    hideOptionPanel: function hideOptionPanel() {\n      var _this5 = this;\n\n      this.visiblePanel = false;\n      this.hidePanelTimeout = setTimeout(function () {\n        _this5.animatVisible = false;\n      }, 350);\n    },\n    updatePlacement: function updatePlacement() {\n      var _this6 = this;\n\n      return this.$nextTick().then(function () {\n        var $refs = _this6.$refs,\n            transfer = _this6.transfer,\n            placement = _this6.placement,\n            panelIndex = _this6.panelIndex;\n        var targetElem = $refs.input.$el;\n        var panelElem = $refs.panel;\n\n        if (panelElem && targetElem) {\n          var targetHeight = targetElem.offsetHeight;\n          var targetWidth = targetElem.offsetWidth;\n          var panelHeight = panelElem.offsetHeight;\n          var panelWidth = panelElem.offsetWidth;\n          var marginSize = 5;\n          var panelStyle = {\n            zIndex: panelIndex\n          };\n\n          var _DomTools$getAbsolute = DomTools.getAbsolutePos(targetElem),\n              boundingTop = _DomTools$getAbsolute.boundingTop,\n              boundingLeft = _DomTools$getAbsolute.boundingLeft,\n              visibleHeight = _DomTools$getAbsolute.visibleHeight,\n              visibleWidth = _DomTools$getAbsolute.visibleWidth;\n\n          var panelPlacement = 'bottom';\n\n          if (transfer) {\n            var left = boundingLeft;\n            var top = boundingTop + targetHeight;\n\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              top = boundingTop - panelHeight;\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (top + panelHeight + marginSize > visibleHeight) {\n                panelPlacement = 'top';\n                top = boundingTop - panelHeight;\n              } // 如果上面不够放，则向下（优先）\n\n\n              if (top < marginSize) {\n                panelPlacement = 'bottom';\n                top = boundingTop + targetHeight;\n              }\n            } // 如果溢出右边\n\n\n            if (left + panelWidth + marginSize > visibleWidth) {\n              left -= left + panelWidth + marginSize - visibleWidth;\n            } // 如果溢出左边\n\n\n            if (left < marginSize) {\n              left = marginSize;\n            }\n\n            Object.assign(panelStyle, {\n              left: \"\".concat(left, \"px\"),\n              top: \"\".concat(top, \"px\"),\n              minWidth: \"\".concat(targetWidth, \"px\")\n            });\n          } else {\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              panelStyle.bottom = \"\".concat(targetHeight, \"px\");\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                // 如果上面不够放，则向下（优先）\n                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                  panelPlacement = 'top';\n                  panelStyle.bottom = \"\".concat(targetHeight, \"px\");\n                }\n              }\n            }\n          }\n\n          _this6.panelStyle = panelStyle;\n          _this6.panelPlacement = panelPlacement;\n          return _this6.$nextTick();\n        }\n      });\n    },\n    focus: function focus() {\n      this.isActivated = true;\n      this.$refs.input.focus();\n      return this.$nextTick();\n    },\n    blur: function blur() {\n      this.hideOptionPanel();\n      this.$refs.input.blur();\n      return this.$nextTick();\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\select\\src\\select.js"],"names":["option","XEUtils","_vm","optid","getOptkey","encodeURIComponent","isGroup","visibleOptionList","visibleGroupList","valueField","groupOptionsField","gIndex","group","groupOptionList","isGroupDisabled","index","isVisible","isOptionVisible","isDisabled","firstOption","nextOption","offsetOption","optionValue","currOption","prevOption","fullOptionList","fullGroupList","item","findOption","labelField","optionKey","value","multiple","currentValue","getOptid","h","key","class","attrs","on","mousedown","click","mouseenter","UtilTools","groupLabelField","renderOption","renderOptgroup","GlobalConfig","name","mixins","props","clearable","placeholder","loading","disabled","multiCharOverflow","type","default","prefixIcon","placement","options","optionProps","optionGroups","optionGroupProps","className","size","emptyText","optionId","transfer","components","VxeInput","provide","$xeselect","data","inited","collectOption","panelIndex","panelStyle","panelPlacement","visiblePanel","animatVisible","isActivated","computed","propsOpts","groupPropsOpts","multiMaxCharNum","selectLabel","label","getSelectLabel","watch","created","GlobalEvent","beforeDestroy","panelElem","destroyed","render","$scopedSlots","vSize","prefixSlot","$select","ref","readonly","suffixIcon","clear","focus","blur","togglePanelEvent","scopedSlots","prefix","style","renderOpts","methods","updateCache","optkey","handleOptis","getOptUniqueId","refreshOption","setCurrentOption","scrollToOption","$refs","optWrapperElem","optElem","wrapperHeight","offsetPadding","clearEvent","clearValueEvent","$event","evnt","changeEvent","selectValue","mousedownOptionEvent","isLeftBtn","changeOptionEvent","multipleValue","val","handleGlobalMousewheelEvent","DomTools","handleGlobalMousedownEvent","$el","handleGlobalKeydownEvent","keyCode","isTab","isEnter","isEsc","isUpArrow","isDwArrow","isDel","isSpacebar","findOffsetOption","handleGlobalBlurEvent","updateZindex","focusEvent","blurEvent","isPanelVisible","togglePanel","hidePanel","showPanel","params","showOptionPanel","clearTimeout","document","setTimeout","hideOptionPanel","updatePlacement","targetElem","targetHeight","targetWidth","panelHeight","panelWidth","marginSize","zIndex","boundingTop","boundingLeft","visibleHeight","visibleWidth","left","top","Object","minWidth"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport VxeInput from '../../input/src/input'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\nimport { UtilTools, DomTools, GlobalEvent } from '../../tools'\r\n\r\nfunction isOptionVisible (option) {\r\n  return option.visible !== false\r\n}\r\n\r\nfunction getOptUniqueId () {\r\n  return XEUtils.uniqueId('opt_')\r\n}\r\n\r\nfunction getOptkey (_vm) {\r\n  return _vm.optionId || '_XID'\r\n}\r\n\r\nfunction getOptid (_vm, option) {\r\n  const optid = option[getOptkey(_vm)]\r\n  return optid ? encodeURIComponent(optid) : ''\r\n}\r\n\r\nfunction findOffsetOption (_vm, optionValue, isUpArrow) {\r\n  const { isGroup, visibleOptionList, visibleGroupList, valueField, groupOptionsField } = _vm\r\n  let firstOption\r\n  let prevOption\r\n  let nextOption\r\n  let currOption\r\n  if (isGroup) {\r\n    for (let gIndex = 0; gIndex < visibleGroupList.length; gIndex++) {\r\n      const group = visibleGroupList[gIndex]\r\n      const groupOptionList = group[groupOptionsField]\r\n      const isGroupDisabled = group.disabled\r\n      if (groupOptionList) {\r\n        for (let index = 0; index < groupOptionList.length; index++) {\r\n          const option = groupOptionList[index]\r\n          const isVisible = isOptionVisible(option)\r\n          const isDisabled = isGroupDisabled || option.disabled\r\n          if (!firstOption && !isDisabled) {\r\n            firstOption = option\r\n          }\r\n          if (currOption) {\r\n            if (isVisible && !isDisabled) {\r\n              nextOption = option\r\n              if (!isUpArrow) {\r\n                return { offsetOption: nextOption }\r\n              }\r\n            }\r\n          }\r\n          if (optionValue === option[valueField]) {\r\n            currOption = option\r\n            if (isUpArrow) {\r\n              return { offsetOption: prevOption }\r\n            }\r\n          } else {\r\n            if (isVisible && !isDisabled) {\r\n              prevOption = option\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    for (let index = 0; index < visibleOptionList.length; index++) {\r\n      const option = visibleOptionList[index]\r\n      const isDisabled = option.disabled\r\n      if (!firstOption && !isDisabled) {\r\n        firstOption = option\r\n      }\r\n      if (currOption) {\r\n        if (!isDisabled) {\r\n          nextOption = option\r\n          if (!isUpArrow) {\r\n            return { offsetOption: nextOption }\r\n          }\r\n        }\r\n      }\r\n      if (optionValue === option[valueField]) {\r\n        currOption = option\r\n        if (isUpArrow) {\r\n          return { offsetOption: prevOption }\r\n        }\r\n      } else {\r\n        if (!isDisabled) {\r\n          prevOption = option\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return { firstOption }\r\n}\r\n\r\nfunction findOption (_vm, optionValue) {\r\n  const { isGroup, fullOptionList, fullGroupList, valueField } = _vm\r\n  if (isGroup) {\r\n    for (let gIndex = 0; gIndex < fullGroupList.length; gIndex++) {\r\n      const group = fullGroupList[gIndex]\r\n      if (group.options) {\r\n        for (let index = 0; index < group.options.length; index++) {\r\n          const option = group.options[index]\r\n          if (optionValue === option[valueField]) {\r\n            return option\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return fullOptionList.find(item => optionValue === item[valueField])\r\n}\r\n\r\nfunction getSelectLabel (_vm, value) {\r\n  const item = findOption(_vm, value)\r\n  return XEUtils.toString(item ? item[_vm.labelField] : value)\r\n}\r\n\r\nexport function renderOption (h, _vm, list, group) {\r\n  const { isGroup, labelField, valueField, optionKey, value, multiple, currentValue } = _vm\r\n  return list.map((option, cIndex) => {\r\n    const isVisible = !isGroup || isOptionVisible(option)\r\n    const isDisabled = (group && group.disabled) || option.disabled\r\n    const optionValue = option[valueField]\r\n    const optid = getOptid(_vm, option)\r\n    return isVisible ? h('div', {\r\n      key: optionKey ? optid : cIndex,\r\n      class: ['vxe-select-option', option.className, {\r\n        'is--disabled': isDisabled,\r\n        'is--selected': multiple ? (value && value.indexOf(optionValue) > -1) : value === optionValue,\r\n        'is--hover': currentValue === optionValue\r\n      }],\r\n      attrs: {\r\n        optid: optid\r\n      },\r\n      on: {\r\n        mousedown: _vm.mousedownOptionEvent,\r\n        click: (evnt) => {\r\n          if (!isDisabled) {\r\n            _vm.changeOptionEvent(evnt, optionValue)\r\n          }\r\n        },\r\n        mouseenter: () => {\r\n          if (!isDisabled) {\r\n            _vm.setCurrentOption(option)\r\n          }\r\n        }\r\n      }\r\n    }, UtilTools.formatText(UtilTools.getFuncText(option[labelField]))) : null\r\n  })\r\n}\r\n\r\nexport function renderOptgroup (h, _vm) {\r\n  const { optionKey, visibleGroupList, groupLabelField, groupOptionsField } = _vm\r\n  return visibleGroupList.map((group, gIndex) => {\r\n    const optid = getOptid(_vm, group)\r\n    const isGroupDisabled = group.disabled\r\n    return h('div', {\r\n      key: optionKey ? optid : gIndex,\r\n      class: ['vxe-optgroup', group.className, {\r\n        'is--disabled': isGroupDisabled\r\n      }],\r\n      attrs: {\r\n        optid: optid\r\n      }\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-optgroup--title'\r\n      }, UtilTools.getFuncText(group[groupLabelField])),\r\n      h('div', {\r\n        class: 'vxe-optgroup--wrapper'\r\n      }, renderOption(h, _vm, group[groupOptionsField], group))\r\n    ])\r\n  })\r\n}\r\n\r\nfunction renderOpts (h, _vm) {\r\n  const { isGroup, visibleGroupList, visibleOptionList } = _vm\r\n  if (isGroup) {\r\n    if (visibleGroupList.length) {\r\n      return renderOptgroup(h, _vm)\r\n    }\r\n  } else {\r\n    if (visibleOptionList.length) {\r\n      return renderOption(h, _vm, visibleOptionList)\r\n    }\r\n  }\r\n  return [\r\n    h('div', {\r\n      class: 'vxe-select--empty-placeholder'\r\n    }, _vm.emptyText || GlobalConfig.i18n('vxe.select.emptyText'))\r\n  ]\r\n}\r\n\r\nexport default {\r\n  name: 'VxeSelect',\r\n  mixins: [vSize],\r\n  props: {\r\n    value: null,\r\n    clearable: Boolean,\r\n    placeholder: String,\r\n    loading: Boolean,\r\n    disabled: Boolean,\r\n    multiple: Boolean,\r\n    multiCharOverflow: { type: [Number, String], default: () => GlobalConfig.select.multiCharOverflow },\r\n    prefixIcon: String,\r\n    placement: String,\r\n    options: Array,\r\n    optionProps: Object,\r\n    optionGroups: Array,\r\n    optionGroupProps: Object,\r\n    className: [String, Function],\r\n    size: { type: String, default: () => GlobalConfig.select.size || GlobalConfig.size },\r\n    emptyText: String,\r\n    optionId: { type: String, default: () => GlobalConfig.select.optionId },\r\n    optionKey: Boolean,\r\n    transfer: { type: Boolean, default: () => GlobalConfig.select.transfer }\r\n  },\r\n  components: {\r\n    VxeInput\r\n  },\r\n  provide () {\r\n    return {\r\n      $xeselect: this\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      inited: false,\r\n      collectOption: [],\r\n      fullGroupList: [],\r\n      fullOptionList: [],\r\n      visibleGroupList: [],\r\n      visibleOptionList: [],\r\n      panelIndex: 0,\r\n      panelStyle: null,\r\n      panelPlacement: null,\r\n      currentValue: null,\r\n      visiblePanel: false,\r\n      animatVisible: false,\r\n      isActivated: false\r\n    }\r\n  },\r\n  computed: {\r\n    propsOpts () {\r\n      return this.optionProps || {}\r\n    },\r\n    groupPropsOpts () {\r\n      return this.optionGroupProps || {}\r\n    },\r\n    labelField () {\r\n      return this.propsOpts.label || 'label'\r\n    },\r\n    valueField () {\r\n      return this.propsOpts.value || 'value'\r\n    },\r\n    groupLabelField () {\r\n      return this.groupPropsOpts.label || 'label'\r\n    },\r\n    groupOptionsField () {\r\n      return this.groupPropsOpts.options || 'options'\r\n    },\r\n    isGroup () {\r\n      return this.fullGroupList.some(item => item.options && item.options.length)\r\n    },\r\n    multiMaxCharNum () {\r\n      return XEUtils.toNumber(this.multiCharOverflow)\r\n    },\r\n    selectLabel () {\r\n      const { value, multiple, multiMaxCharNum } = this\r\n      if (value && multiple) {\r\n        return value.map(val => {\r\n          const label = getSelectLabel(this, val)\r\n          if (multiMaxCharNum > 0 && label.length > multiMaxCharNum) {\r\n            return `${label.substring(0, multiMaxCharNum)}...`\r\n          }\r\n          return label\r\n        }).join(', ')\r\n      }\r\n      return getSelectLabel(this, value)\r\n    }\r\n  },\r\n  watch: {\r\n    collectOption (value) {\r\n      if (value.some(item => item.options && item.options.length)) {\r\n        this.fullOptionList = []\r\n        this.fullGroupList = value\r\n      } else {\r\n        this.fullGroupList = []\r\n        this.fullOptionList = value\r\n      }\r\n      this.updateCache()\r\n    },\r\n    options (value) {\r\n      this.fullGroupList = []\r\n      this.fullOptionList = value\r\n      this.updateCache()\r\n    },\r\n    optionGroups (value) {\r\n      this.fullOptionList = []\r\n      this.fullGroupList = value\r\n      this.updateCache()\r\n    }\r\n  },\r\n  created () {\r\n    const { options, optionGroups } = this\r\n    if (optionGroups) {\r\n      this.fullGroupList = optionGroups\r\n    } else if (options) {\r\n      this.fullOptionList = options\r\n    }\r\n    this.updateCache()\r\n    GlobalEvent.on(this, 'mousewheel', this.handleGlobalMousewheelEvent)\r\n    GlobalEvent.on(this, 'mousedown', this.handleGlobalMousedownEvent)\r\n    GlobalEvent.on(this, 'keydown', this.handleGlobalKeydownEvent)\r\n    GlobalEvent.on(this, 'blur', this.handleGlobalBlurEvent)\r\n  },\r\n  beforeDestroy () {\r\n    const panelElem = this.$refs.panel\r\n    if (panelElem && panelElem.parentNode) {\r\n      panelElem.parentNode.removeChild(panelElem)\r\n    }\r\n  },\r\n  destroyed () {\r\n    GlobalEvent.off(this, 'mousewheel')\r\n    GlobalEvent.off(this, 'mousedown')\r\n    GlobalEvent.off(this, 'keydown')\r\n    GlobalEvent.off(this, 'blur')\r\n  },\r\n  render (h) {\r\n    const { $scopedSlots, vSize, className, inited, isActivated, loading, disabled, visiblePanel } = this\r\n    const prefixSlot = $scopedSlots.prefix\r\n    return h('div', {\r\n      class: ['vxe-select', className ? (XEUtils.isFunction(className) ? className({ $select: this }) : className) : '', {\r\n        [`size--${vSize}`]: vSize,\r\n        'is--visivle': visiblePanel,\r\n        'is--disabled': disabled,\r\n        'is--active': isActivated\r\n      }]\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-select-slots',\r\n        ref: 'hideOption'\r\n      }, this.$slots.default),\r\n      h('vxe-input', {\r\n        ref: 'input',\r\n        props: {\r\n          clearable: this.clearable,\r\n          placeholder: this.placeholder,\r\n          readonly: true,\r\n          disabled: disabled,\r\n          type: 'text',\r\n          prefixIcon: this.prefixIcon,\r\n          suffixIcon: loading ? GlobalConfig.icon.SELECT_LOADED : (visiblePanel ? GlobalConfig.icon.SELECT_OPEN : GlobalConfig.icon.SELECT_CLOSE),\r\n          value: this.selectLabel\r\n        },\r\n        on: {\r\n          clear: this.clearEvent,\r\n          click: this.togglePanelEvent,\r\n          focus: this.focusEvent,\r\n          blur: this.blurEvent,\r\n          'suffix-click': this.togglePanelEvent\r\n        },\r\n        scopedSlots: prefixSlot ? {\r\n          prefix: () => prefixSlot({})\r\n        } : {}\r\n      }),\r\n      h('div', {\r\n        ref: 'panel',\r\n        class: ['vxe-table--ignore-clear vxe-select--panel', {\r\n          [`size--${vSize}`]: vSize,\r\n          'is--transfer': this.transfer,\r\n          'animat--leave': !loading && this.animatVisible,\r\n          'animat--enter': !loading && visiblePanel\r\n        }],\r\n        attrs: {\r\n          placement: this.panelPlacement\r\n        },\r\n        style: this.panelStyle\r\n      }, inited ? [\r\n        h('div', {\r\n          ref: 'optWrapper',\r\n          class: 'vxe-select-option--wrapper'\r\n        }, renderOpts(h, this))\r\n      ] : null)\r\n    ])\r\n  },\r\n  methods: {\r\n    updateCache () {\r\n      const { fullOptionList, fullGroupList, groupOptionsField } = this\r\n      const optkey = getOptkey(this)\r\n      const handleOptis = (item) => {\r\n        if (!getOptid(this, item)) {\r\n          item[optkey] = getOptUniqueId()\r\n        }\r\n      }\r\n      if (fullGroupList.length) {\r\n        fullGroupList.forEach(group => {\r\n          handleOptis(group)\r\n          if (group[groupOptionsField]) {\r\n            group[groupOptionsField].forEach(handleOptis)\r\n          }\r\n        })\r\n      } else if (fullOptionList.length) {\r\n        fullOptionList.forEach(handleOptis)\r\n      }\r\n      this.refreshOption()\r\n    },\r\n    /**\r\n     * 刷新选项，当选项被动态显示/隐藏时可能会用到\r\n     */\r\n    refreshOption () {\r\n      const { isGroup, fullOptionList, fullGroupList } = this\r\n      if (isGroup) {\r\n        this.visibleGroupList = fullGroupList.filter(isOptionVisible)\r\n      } else {\r\n        this.visibleOptionList = fullOptionList.filter(isOptionVisible)\r\n      }\r\n      return this.$nextTick()\r\n    },\r\n    setCurrentOption (option) {\r\n      if (option) {\r\n        this.currentValue = option[this.valueField]\r\n      }\r\n    },\r\n    scrollToOption (option, isAlignBottom) {\r\n      return this.$nextTick().then(() => {\r\n        if (option) {\r\n          const { $refs } = this\r\n          const optWrapperElem = $refs.optWrapper\r\n          const optElem = $refs.panel.querySelector(`[optid='${getOptid(this, option)}']`)\r\n          if (optWrapperElem && optElem) {\r\n            const wrapperHeight = optWrapperElem.offsetHeight\r\n            const offsetPadding = 5\r\n            if (isAlignBottom) {\r\n              if (optElem.offsetTop + optElem.offsetHeight - optWrapperElem.scrollTop > wrapperHeight) {\r\n                optWrapperElem.scrollTop = optElem.offsetTop + optElem.offsetHeight - wrapperHeight\r\n              }\r\n            } else {\r\n              if (optElem.offsetTop + offsetPadding < optWrapperElem.scrollTop || optElem.offsetTop + offsetPadding > optWrapperElem.scrollTop + optWrapperElem.clientHeight) {\r\n                optWrapperElem.scrollTop = optElem.offsetTop - offsetPadding\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n    clearEvent (params, evnt) {\r\n      this.clearValueEvent(evnt, null)\r\n      this.hideOptionPanel()\r\n    },\r\n    clearValueEvent (evnt, selectValue) {\r\n      this.changeEvent(evnt, selectValue)\r\n      this.$emit('clear', { value: selectValue, $event: evnt })\r\n    },\r\n    changeEvent (evnt, selectValue) {\r\n      if (selectValue !== this.value) {\r\n        this.$emit('input', selectValue)\r\n        this.$emit('change', { value: selectValue, $event: evnt })\r\n      }\r\n    },\r\n    mousedownOptionEvent (evnt) {\r\n      const isLeftBtn = evnt.button === 0\r\n      if (isLeftBtn) {\r\n        evnt.stopPropagation()\r\n      }\r\n    },\r\n    changeOptionEvent (evnt, selectValue) {\r\n      const { value, multiple } = this\r\n      if (multiple) {\r\n        let multipleValue\r\n        if (value) {\r\n          if (value.indexOf(selectValue) === -1) {\r\n            multipleValue = value.concat([selectValue])\r\n          } else {\r\n            multipleValue = value.filter(val => val !== selectValue)\r\n          }\r\n        } else {\r\n          multipleValue = [selectValue]\r\n        }\r\n        this.changeEvent(evnt, multipleValue)\r\n      } else {\r\n        this.changeEvent(evnt, selectValue)\r\n        this.hideOptionPanel()\r\n      }\r\n    },\r\n    handleGlobalMousewheelEvent (evnt) {\r\n      const { $refs, disabled, visiblePanel } = this\r\n      if (!disabled) {\r\n        if (visiblePanel) {\r\n          if (DomTools.getEventTargetNode(evnt, $refs.panel).flag) {\r\n            this.updatePlacement()\r\n          } else {\r\n            this.hideOptionPanel()\r\n          }\r\n        }\r\n      }\r\n    },\r\n    handleGlobalMousedownEvent (evnt) {\r\n      const { $refs, $el, disabled, visiblePanel } = this\r\n      if (!disabled) {\r\n        this.isActivated = DomTools.getEventTargetNode(evnt, $el).flag || DomTools.getEventTargetNode(evnt, $refs.panel).flag\r\n        if (visiblePanel && !this.isActivated) {\r\n          this.hideOptionPanel()\r\n        }\r\n      }\r\n    },\r\n    handleGlobalKeydownEvent (evnt) {\r\n      const { visiblePanel, currentValue, clearable, disabled } = this\r\n      if (!disabled) {\r\n        const keyCode = evnt.keyCode\r\n        const isTab = keyCode === 9\r\n        const isEnter = keyCode === 13\r\n        const isEsc = keyCode === 27\r\n        const isUpArrow = keyCode === 38\r\n        const isDwArrow = keyCode === 40\r\n        const isDel = keyCode === 46\r\n        const isSpacebar = keyCode === 32\r\n        if (isTab) {\r\n          this.isActivated = false\r\n        }\r\n        if (visiblePanel) {\r\n          if (isEsc || isTab) {\r\n            this.hideOptionPanel()\r\n          } else if (isEnter) {\r\n            evnt.preventDefault()\r\n            evnt.stopPropagation()\r\n            this.changeOptionEvent(evnt, currentValue)\r\n          } else if (isUpArrow || isDwArrow) {\r\n            evnt.preventDefault()\r\n            let { firstOption, offsetOption } = findOffsetOption(this, currentValue, isUpArrow)\r\n            if (!offsetOption && !findOption(this, currentValue)) {\r\n              offsetOption = firstOption\r\n            }\r\n            this.setCurrentOption(offsetOption)\r\n            this.scrollToOption(offsetOption, isDwArrow)\r\n          } else if (isSpacebar) {\r\n            evnt.preventDefault()\r\n          }\r\n        } else if ((isUpArrow || isDwArrow || isEnter || isSpacebar) && this.isActivated) {\r\n          evnt.preventDefault()\r\n          this.showOptionPanel()\r\n        }\r\n        if (this.isActivated) {\r\n          if (isDel && clearable) {\r\n            this.clearValueEvent(evnt, null)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    handleGlobalBlurEvent () {\r\n      this.hideOptionPanel()\r\n    },\r\n    updateZindex () {\r\n      if (this.panelIndex < UtilTools.getLastZIndex()) {\r\n        this.panelIndex = UtilTools.nextZIndex()\r\n      }\r\n    },\r\n    focusEvent () {\r\n      if (!this.disabled) {\r\n        this.isActivated = true\r\n      }\r\n    },\r\n    blurEvent () {\r\n      this.isActivated = false\r\n    },\r\n    isPanelVisible () {\r\n      return this.visiblePanel\r\n    },\r\n    togglePanel () {\r\n      if (this.visiblePanel) {\r\n        this.hideOptionPanel()\r\n      } else {\r\n        this.showOptionPanel()\r\n      }\r\n      this.$nextTick()\r\n    },\r\n    hidePanel () {\r\n      if (this.visiblePanel) {\r\n        this.hideOptionPanel()\r\n      }\r\n      this.$nextTick()\r\n    },\r\n    showPanel () {\r\n      if (!this.visiblePanel) {\r\n        this.showOptionPanel()\r\n      }\r\n      this.$nextTick()\r\n    },\r\n    togglePanelEvent (params) {\r\n      const { $event } = params\r\n      $event.preventDefault()\r\n      if (this.visiblePanel) {\r\n        this.hideOptionPanel()\r\n      } else {\r\n        this.showOptionPanel()\r\n      }\r\n    },\r\n    showOptionPanel () {\r\n      const { loading, disabled } = this\r\n      if (!loading && !disabled) {\r\n        clearTimeout(this.hidePanelTimeout)\r\n        if (!this.inited) {\r\n          this.inited = true\r\n          if (this.transfer) {\r\n            document.body.appendChild(this.$refs.panel)\r\n          }\r\n        }\r\n        this.isActivated = true\r\n        this.animatVisible = true\r\n        setTimeout(() => {\r\n          const { value, multiple } = this\r\n          const currOption = findOption(this, multiple && value ? value[0] : value)\r\n          this.visiblePanel = true\r\n          if (currOption) {\r\n            this.setCurrentOption(currOption)\r\n            this.scrollToOption(currOption)\r\n          }\r\n        }, 10)\r\n        this.updateZindex()\r\n        this.updatePlacement()\r\n      }\r\n    },\r\n    hideOptionPanel () {\r\n      this.visiblePanel = false\r\n      this.hidePanelTimeout = setTimeout(() => {\r\n        this.animatVisible = false\r\n      }, 350)\r\n    },\r\n    updatePlacement () {\r\n      return this.$nextTick().then(() => {\r\n        const { $refs, transfer, placement, panelIndex } = this\r\n        const targetElem = $refs.input.$el\r\n        const panelElem = $refs.panel\r\n        if (panelElem && targetElem) {\r\n          const targetHeight = targetElem.offsetHeight\r\n          const targetWidth = targetElem.offsetWidth\r\n          const panelHeight = panelElem.offsetHeight\r\n          const panelWidth = panelElem.offsetWidth\r\n          const marginSize = 5\r\n          const panelStyle = {\r\n            zIndex: panelIndex\r\n          }\r\n          const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = DomTools.getAbsolutePos(targetElem)\r\n          let panelPlacement = 'bottom'\r\n          if (transfer) {\r\n            let left = boundingLeft\r\n            let top = boundingTop + targetHeight\r\n            if (placement === 'top') {\r\n              panelPlacement = 'top'\r\n              top = boundingTop - panelHeight\r\n            } else if (!placement) {\r\n              // 如果下面不够放，则向上\r\n              if (top + panelHeight + marginSize > visibleHeight) {\r\n                panelPlacement = 'top'\r\n                top = boundingTop - panelHeight\r\n              }\r\n              // 如果上面不够放，则向下（优先）\r\n              if (top < marginSize) {\r\n                panelPlacement = 'bottom'\r\n                top = boundingTop + targetHeight\r\n              }\r\n            }\r\n            // 如果溢出右边\r\n            if (left + panelWidth + marginSize > visibleWidth) {\r\n              left -= left + panelWidth + marginSize - visibleWidth\r\n            }\r\n            // 如果溢出左边\r\n            if (left < marginSize) {\r\n              left = marginSize\r\n            }\r\n            Object.assign(panelStyle, {\r\n              left: `${left}px`,\r\n              top: `${top}px`,\r\n              minWidth: `${targetWidth}px`\r\n            })\r\n          } else {\r\n            if (placement === 'top') {\r\n              panelPlacement = 'top'\r\n              panelStyle.bottom = `${targetHeight}px`\r\n            } else if (!placement) {\r\n              // 如果下面不够放，则向上\r\n              if (boundingTop + targetHeight + panelHeight > visibleHeight) {\r\n                // 如果上面不够放，则向下（优先）\r\n                if (boundingTop - targetHeight - panelHeight > marginSize) {\r\n                  panelPlacement = 'top'\r\n                  panelStyle.bottom = `${targetHeight}px`\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.panelStyle = panelStyle\r\n          this.panelPlacement = panelPlacement\r\n          return this.$nextTick()\r\n        }\r\n      })\r\n    },\r\n    focus () {\r\n      this.isActivated = true\r\n      this.$refs.input.focus()\r\n      return this.$nextTick()\r\n    },\r\n    blur () {\r\n      this.hideOptionPanel()\r\n      this.$refs.input.blur()\r\n      return this.$nextTick()\r\n    }\r\n  }\r\n}\r\n"]}]}