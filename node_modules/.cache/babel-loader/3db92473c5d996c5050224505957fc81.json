{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\List.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\List.vue","mtime":1653871584119},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\r\n* 使用例子\r\n* <List :list=\"[{label:'吃饭'},{label:'睡觉'}]\" labelField=\"label\" :iconUrlFunction=\"getIconUrl\" @click=\"onItemClick\" @change=\"onSelectChg\" @dragend=\"onDragEnd\" divider draggable/>\r\n*\r\n*  methods: {\r\n*    getIconUrl(item) {// item是列表项对象\r\n*      return 'http://xxxxxxxx.png';\r\n*    },\r\n*    onItemClick(item)) {// 点击某项触发，item是列表项对象\r\n*    },\r\n*    onSelectChg(item)) {// 选择不同项触发，item是列表项对象\r\n*    },\r\n*    onDragEnd(dragItem, newIndex, oldIndex) {// 拖动某项结束后触发\r\n*    }\r\n*  }\r\n*/\nimport { domTop } from '@/components/util/Dom.js';\nvar drags;\nexport default {\n  name: \"List\",\n  props: {\n    list: {\n      type: Array,\n      default: []\n    },\n    // 数据列表\n    labelField: {\n      type: String,\n      default: ''\n    },\n    // 文本字段\n    labelFunction: Function,\n    // 文本函数\n    iconUrlFunction: Function,\n    // 图标地址函数\n    iconCssFunction: Function,\n    // 图标样式函数\n    border: {\n      type: Boolean,\n      default: true\n    },\n    // 是否有边框\n    divider: {\n      type: Boolean,\n      default: false\n    },\n    // 是否有分割线\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    // 是否可拖动排序\n    closable: {\n      type: Boolean,\n      default: false\n    },\n    // 按钮是否可关闭\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 是否可操作\n    lineHeight: {\n      type: Number,\n      default: $_theme.inputHeight\n    },\n    // 每行高度数值，单位是px\n    itemStyle: {\n      default: null\n    },\n    iconStyle: {\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      selectedItem: null,\n      selectedIndex: -1,\n      hoverItem: null\n    };\n  },\n  watch: {\n    selectedItem: function selectedItem(v) {\n      this.selectedIndex = this.list.indexOf(v);\n    }\n  },\n  created: function created() {\n    this._dragend = this._dragging = false;\n  },\n  methods: {\n    wxClick: function wxClick(item) {\n      this.$emit('wxCopy', item);\n    },\n    blur: function blur() {\n      this.$emit(\"blur\");\n    },\n    _itemStyle: function _itemStyle(item, index) {\n      // 每项的背景颜色\n      if (item == this.selectedItem || index == this.selectedIndex) return {\n        backgroundColor: this.theme.selected_color\n      };\n      if (item == this.hoverItem) return {\n        backgroundColor: this.theme.list_hover_color\n      };\n      return {\n        backgroundColor: this.theme.alternate_colors[index % 2]\n      };\n    },\n    itemClick: function itemClick(item, index) {\n      var click = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      // 点击该项处理\n      var oitem = this.selectedItem;\n\n      if (this.selectedItem != item) {\n        this.selectedItem = item;\n        this.selectedIndex = index;\n        click && this.$emit('click', item, oitem, index);\n        this.$emit('change', item, oitem, index);\n      } else {\n        click && this.$emit('click', item, oitem, index);\n      }\n    },\n    itemDbClick: function itemDbClick(item, index) {\n      this.$emit('dbclick', item, index);\n    },\n    onDragStart: function onDragStart(_ref, item, index) {\n      var target = _ref.target;\n      // 开始拖动处理\n      this._dragging = true;\n      this._dragend = false;\n      this.hoverItem = null;\n      this.selectedItem = item;\n      this.selectedIndex = -1;\n      drags = {\n        dom: target,\n        y: domTop(this.$el),\n        oldIndex: index,\n        newIndex: index\n      };\n    },\n    onDrag: function onDrag(e) {\n      // 拖动中处理\n      var newIndex = this.getIndex(e);\n\n      if (newIndex != drags.newIndex) {\n        this.list.splice(newIndex, 0, this.list.splice(drags.newIndex, 1)[0]);\n        drags.newIndex = newIndex;\n      }\n\n      e.preventDefault();\n    },\n    onDragEnd: function onDragEnd() {\n      // 拖动结束处理\n      this._dragend = true;\n      this._dragging = false;\n\n      if (drags.oldIndex != drags.newIndex) {\n        this.$emit('dragend', this.selectedItem, drags.newIndex, drags.oldIndex);\n      }\n\n      drags = null;\n    },\n    getIndex: function getIndex(e) {\n      // 根据Y位置，算出是第几个项\n      var y = e.clientY || e.y;\n      var index = Math.floor((y + this.$el.scrollTop - drags.y) / drags.dom.offsetHeight);\n      return index < 0 ? 0 : Math.min(index, this.list.length - 1);\n    }\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" @dragover=\"onDrag($event);\" :style=\"{borderColor:theme.border_color_dark}\" tabindex=\"0\" @blur=\"blur()\">\r\n    <!--transition-group :class=\"$style.ul\" tag=\"ul\", _dragging && $style.move-->\r\n    <ul :class=\"$style.ul\">\r\n      <li :draggable=\"draggable\" v-for=\"(item, index) in list\" :key=\"index\" :class=\"$style.item\" :style=\"[{lineHeight: `${lineHeight}px`}, \r\n       divider ? {borderBottomColor: theme.border_color_light, borderBottomWidth: '1px'} : null, _itemStyle(item, index, selectedIndex), itemStyle]\" @dragstart=\"onDragStart($event,item,index)\" @dragend=\"onDragEnd\" @mouseenter=\"_dragend ? (_dragend=false) : _dragging ? null : (hoverItem = item)\" @mouseleave=\"hoverItem = null\" @mousedown=\"draggable && itemClick(item, index, false)\" @click=\"itemClick(item, index)\" @dblclick=\"itemDbClick(item, index)\">\r\n\r\n        <!--URL的图标显示-->\r\n        <img v-if=\"iconUrlFunction\" :src=\"iconUrlFunction(item)\" :class=\"$style.icon_url\" :style=\"iconStyle\" draggable=\"false\" />\r\n        <!--CSS的图标显示-->\r\n        <span v-if=\"iconCssFunction\" :class=\"[iconCssFunction(item), $style.icon_css]\" :style=\"iconStyle\">&nbsp;</span>\r\n        <!--文本显示-->\r\n        <span v-html=\"labelFunction ? labelFunction(item) : labelField ? item[labelField] : item\"></span>\r\n\r\n        <div v-if=\"item.disabled\" :class=\"$style.disabled\" />\r\n        <!--鼠标经过显示关闭按钮-->\r\n        <div v-if=\"closable && hoverItem==item\" :class=\"$style.btn_close\" @click.stop=\"$emit('close', item)\" />\r\n      </li>\r\n    </ul>\r\n\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/*\r\n* 使用例子\r\n* <List :list=\"[{label:'吃饭'},{label:'睡觉'}]\" labelField=\"label\" :iconUrlFunction=\"getIconUrl\" @click=\"onItemClick\" @change=\"onSelectChg\" @dragend=\"onDragEnd\" divider draggable/>\r\n*\r\n*  methods: {\r\n*    getIconUrl(item) {// item是列表项对象\r\n*      return 'http://xxxxxxxx.png';\r\n*    },\r\n*    onItemClick(item)) {// 点击某项触发，item是列表项对象\r\n*    },\r\n*    onSelectChg(item)) {// 选择不同项触发，item是列表项对象\r\n*    },\r\n*    onDragEnd(dragItem, newIndex, oldIndex) {// 拖动某项结束后触发\r\n*    }\r\n*  }\r\n*/\r\n\r\nimport { domTop } from '@/components/util/Dom.js';\r\n\r\nlet drags;\r\n\r\nexport default {\r\n  name: \"List\",\r\n  props: {\r\n    list: { type: Array, default: [] },              // 数据列表\r\n    labelField: { type: String, default: '' },              // 文本字段\r\n    labelFunction: Function,                                  // 文本函数\r\n    iconUrlFunction: Function,                                  // 图标地址函数\r\n    iconCssFunction: Function,                                  // 图标样式函数\r\n    border: { type: Boolean, default: true },              // 是否有边框\r\n    divider: { type: Boolean, default: false },              // 是否有分割线\r\n    draggable: { type: Boolean, default: false },              // 是否可拖动排序\r\n    closable: { type: Boolean, default: false },              // 按钮是否可关闭\r\n    disabled: { type: Boolean, default: false },              // 是否可操作\r\n    lineHeight: { type: Number, default: $_theme.inputHeight },// 每行高度数值，单位是px\r\n    itemStyle: { default: null },\r\n    iconStyle: { default: null },\r\n  },\r\n  data() {\r\n    return {\r\n      selectedItem: null,\r\n      selectedIndex: -1,\r\n      hoverItem: null,\r\n    }\r\n  },\r\n  watch: {\r\n    selectedItem: function (v) {\r\n      this.selectedIndex = this.list.indexOf(v);\r\n    },\r\n  },\r\n  created() {\r\n    this._dragend = this._dragging = false;\r\n  },\r\n  methods: {\r\n    wxClick(item) {\r\n      this.$emit('wxCopy', item)\r\n    },\r\n    blur() {\r\n      this.$emit(\"blur\");\r\n    },\r\n    _itemStyle(item, index) {// 每项的背景颜色\r\n      if (item == this.selectedItem || index == this.selectedIndex) return { backgroundColor: this.theme.selected_color };\r\n      if (item == this.hoverItem) return { backgroundColor: this.theme.list_hover_color };\r\n      return { backgroundColor: this.theme.alternate_colors[index % 2] };\r\n    },\r\n    itemClick(item, index, click = true) {// 点击该项处理\r\n      let oitem = this.selectedItem;\r\n      if (this.selectedItem != item) {\r\n        this.selectedItem = item;\r\n        this.selectedIndex = index;\r\n        click && this.$emit('click', item, oitem, index);\r\n        this.$emit('change', item, oitem, index);\r\n      } else {\r\n        click && this.$emit('click', item, oitem, index);\r\n      }\r\n    },\r\n    itemDbClick(item, index) {\r\n      this.$emit('dbclick', item, index);\r\n    },\r\n    onDragStart({ target }, item, index) {// 开始拖动处理\r\n      this._dragging = true;\r\n      this._dragend = false;\r\n      this.hoverItem = null;\r\n      this.selectedItem = item;\r\n      this.selectedIndex = -1;\r\n      drags = { dom: target, y: domTop(this.$el), oldIndex: index, newIndex: index };\r\n    },\r\n    onDrag(e) {// 拖动中处理\r\n      let newIndex = this.getIndex(e);\r\n      if (newIndex != drags.newIndex) {\r\n        this.list.splice(newIndex, 0, this.list.splice(drags.newIndex, 1)[0]);\r\n        drags.newIndex = newIndex;\r\n      }\r\n      e.preventDefault();\r\n    },\r\n    onDragEnd() {// 拖动结束处理\r\n      this._dragend = true;\r\n      this._dragging = false;\r\n      if (drags.oldIndex != drags.newIndex) {\r\n        this.$emit('dragend', this.selectedItem, drags.newIndex, drags.oldIndex);\r\n      }\r\n      drags = null;\r\n    },\r\n    getIndex(e) {// 根据Y位置，算出是第几个项\r\n      let y = e.clientY || e.y;\r\n      let index = Math.floor((y + this.$el.scrollTop - drags.y) / drags.dom.offsetHeight);\r\n      return index < 0 ? 0 : Math.min(index, this.list.length - 1);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style module>\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #fff;\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.border {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n}\r\n.ul {\r\n  display: inline-block;\r\n  min-width: 100%;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n.item {\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  padding: 0 10px;\r\n  border: 0;\r\n  border-bottom-style: solid;\r\n  position: relative;\r\n}\r\n.wxImg {\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 3px;\r\n  right: 0;\r\n  width: 42px;\r\n  height: 25px;\r\n  margin-right: 3px;\r\n  z-index: 99999;\r\n}\r\n/*\r\n  .move {\r\n    transition: all 0.3s;\r\n  }*/\r\n.icon_url {\r\n  vertical-align: middle;\r\n  padding-right: 10px;\r\n  margin: 5px 0;\r\n  width: auto;\r\n}\r\n.icon_css {\r\n  display: inline-block;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  margin-right: 10px;\r\n}\r\n.btn_close {\r\n  position: absolute;\r\n  height: 12px;\r\n  width: 16px;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  background: url(\"@/assets/main/menu-close.png\") no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n/* 禁止操作 */\r\n.disabled {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  opacity: 0.6;\r\n  filter: alpha(opacity=60);\r\n  cursor: not-allowed;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}