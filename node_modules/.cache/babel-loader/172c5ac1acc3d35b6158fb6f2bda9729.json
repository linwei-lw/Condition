{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\select\\src\\util.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\select\\src\\util.js","mtime":1635230120857},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport XEUtils from 'xe-utils';\n\nvar OptionConfig =\n/*#__PURE__*/\nfunction () {\n  function OptionConfig($xeselect, _vm) {\n    _classCallCheck(this, OptionConfig);\n\n    Object.assign(this, {\n      value: _vm.value,\n      label: _vm.label,\n      visible: _vm.visible,\n      className: _vm.className,\n      disabled: _vm.disabled\n    });\n  }\n\n  _createClass(OptionConfig, [{\n    key: \"update\",\n    value: function update(name, value) {\n      this[name] = value;\n    }\n  }]);\n\n  return OptionConfig;\n}();\n\nexport function isOption(option) {\n  return option instanceof OptionConfig;\n}\nexport function getOptionConfig($xeselect, _vm, options) {\n  return isOption(_vm) ? _vm : new OptionConfig($xeselect, _vm, options);\n}\nexport function createOption($xeselect, _vm) {\n  return getOptionConfig($xeselect, _vm);\n}\nexport function destroyOption(_vm) {\n  var $xeselect = _vm.$xeselect,\n      optionConfig = _vm.optionConfig;\n  var matchObj = XEUtils.findTree($xeselect.collectOption, function (option) {\n    return option === optionConfig;\n  });\n\n  if (matchObj) {\n    matchObj.items.splice(matchObj.index, 1);\n  }\n}\nexport function assemOption(_vm) {\n  var $el = _vm.$el,\n      $xeselect = _vm.$xeselect,\n      $xeoptgroup = _vm.$xeoptgroup,\n      optionConfig = _vm.optionConfig;\n  var groupConfig = $xeoptgroup ? $xeoptgroup.optionConfig : null;\n  optionConfig.slots = _vm.$scopedSlots;\n\n  if (groupConfig) {\n    if (!groupConfig.options) {\n      groupConfig.options = [];\n    }\n\n    groupConfig.options.splice([].indexOf.call($xeoptgroup.$el.children, $el), 0, optionConfig);\n  } else {\n    $xeselect.collectOption.splice([].indexOf.call($xeselect.$refs.hideOption.children, $el), 0, optionConfig);\n  }\n}",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\select\\src\\util.js"],"names":["OptionConfig","Object","value","_vm","label","visible","className","disabled","name","option","isOption","getOptionConfig","$xeselect","optionConfig","matchObj","$el","$xeoptgroup","groupConfig"],"mappings":";;AAAA,OAAA,OAAA,MAAA,UAAA;;IAEMA,Y;;;AACJ,WAAA,YAAA,CAAA,SAAA,EAAA,GAAA,EAA6B;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AAC3BC,IAAAA,MAAM,CAANA,MAAAA,CAAAA,IAAAA,EAAoB;AAClBC,MAAAA,KAAK,EAAEC,GAAG,CADQ,KAAA;AAElBC,MAAAA,KAAK,EAAED,GAAG,CAFQ,KAAA;AAGlBE,MAAAA,OAAO,EAAEF,GAAG,CAHM,OAAA;AAIlBG,MAAAA,SAAS,EAAEH,GAAG,CAJI,SAAA;AAKlBI,MAAAA,QAAQ,EAAEJ,GAAG,CAACI;AALI,KAApBN;AAOD;;;;2BAEOO,I,EAAMN,K,EAAO;AACnB,WAAA,IAAA,IAAA,KAAA;AACD;;;;;;AAGH,OAAO,SAAA,QAAA,CAAA,MAAA,EAA2B;AAChC,SAAOO,MAAM,YAAb,YAAA;AACD;AAED,OAAO,SAAA,eAAA,CAAA,SAAA,EAAA,GAAA,EAAA,OAAA,EAAmD;AACxD,SAAOC,QAAQ,CAARA,GAAQ,CAARA,GAAAA,GAAAA,GAAsB,IAAA,YAAA,CAAA,SAAA,EAAA,GAAA,EAA7B,OAA6B,CAA7B;AACD;AAED,OAAO,SAAA,YAAA,CAAA,SAAA,EAAA,GAAA,EAAuC;AAC5C,SAAOC,eAAe,CAAA,SAAA,EAAtB,GAAsB,CAAtB;AACD;AAED,OAAO,SAAA,aAAA,CAAA,GAAA,EAA6B;AAAA,MAC1BC,SAD0B,GACET,GADF,CAAA,SAAA;AAAA,MACfU,YADe,GACEV,GADF,CAAA,YAAA;AAElC,MAAMW,QAAQ,GAAG,OAAO,CAAP,QAAA,CAAiBF,SAAS,CAA1B,aAAA,EAA0C,UAAA,MAAA,EAAM;AAAA,WAAIH,MAAM,KAAV,YAAA;AAAjE,GAAiB,CAAjB;;AACA,MAAA,QAAA,EAAc;AACZK,IAAAA,QAAQ,CAARA,KAAAA,CAAAA,MAAAA,CAAsBA,QAAQ,CAA9BA,KAAAA,EAAAA,CAAAA;AACD;AACF;AAED,OAAO,SAAA,WAAA,CAAA,GAAA,EAA2B;AAAA,MACxBC,GADwB,GACsBZ,GADtB,CAAA,GAAA;AAAA,MACnBS,SADmB,GACsBT,GADtB,CAAA,SAAA;AAAA,MACRa,WADQ,GACsBb,GADtB,CAAA,WAAA;AAAA,MACKU,YADL,GACsBV,GADtB,CAAA,YAAA;AAEhC,MAAMc,WAAW,GAAGD,WAAW,GAAGA,WAAW,CAAd,YAAA,GAA/B,IAAA;AACAH,EAAAA,YAAY,CAAZA,KAAAA,GAAqBV,GAAG,CAAxBU,YAAAA;;AACA,MAAA,WAAA,EAAiB;AACf,QAAI,CAACI,WAAW,CAAhB,OAAA,EAA0B;AACxBA,MAAAA,WAAW,CAAXA,OAAAA,GAAAA,EAAAA;AACD;;AACDA,IAAAA,WAAW,CAAXA,OAAAA,CAAAA,MAAAA,CAA2B,GAAA,OAAA,CAAA,IAAA,CAAgBD,WAAW,CAAXA,GAAAA,CAAhB,QAAA,EAA3BC,GAA2B,CAA3BA,EAAAA,CAAAA,EAAAA,YAAAA;AAJF,GAAA,MAKO;AACLL,IAAAA,SAAS,CAATA,aAAAA,CAAAA,MAAAA,CAA+B,GAAA,OAAA,CAAA,IAAA,CAAgBA,SAAS,CAATA,KAAAA,CAAAA,UAAAA,CAAhB,QAAA,EAA/BA,GAA+B,CAA/BA,EAAAA,CAAAA,EAAAA,YAAAA;AACD;AACF","sourcesContent":["import XEUtils from 'xe-utils'\r\n\r\nclass OptionConfig {\r\n  constructor ($xeselect, _vm) {\r\n    Object.assign(this, {\r\n      value: _vm.value,\r\n      label: _vm.label,\r\n      visible: _vm.visible,\r\n      className: _vm.className,\r\n      disabled: _vm.disabled\r\n    })\r\n  }\r\n\r\n  update (name, value) {\r\n    this[name] = value\r\n  }\r\n}\r\n\r\nexport function isOption (option) {\r\n  return option instanceof OptionConfig\r\n}\r\n\r\nexport function getOptionConfig ($xeselect, _vm, options) {\r\n  return isOption(_vm) ? _vm : new OptionConfig($xeselect, _vm, options)\r\n}\r\n\r\nexport function createOption ($xeselect, _vm) {\r\n  return getOptionConfig($xeselect, _vm)\r\n}\r\n\r\nexport function destroyOption (_vm) {\r\n  const { $xeselect, optionConfig } = _vm\r\n  const matchObj = XEUtils.findTree($xeselect.collectOption, option => option === optionConfig)\r\n  if (matchObj) {\r\n    matchObj.items.splice(matchObj.index, 1)\r\n  }\r\n}\r\n\r\nexport function assemOption (_vm) {\r\n  const { $el, $xeselect, $xeoptgroup, optionConfig } = _vm\r\n  const groupConfig = $xeoptgroup ? $xeoptgroup.optionConfig : null\r\n  optionConfig.slots = _vm.$scopedSlots\r\n  if (groupConfig) {\r\n    if (!groupConfig.options) {\r\n      groupConfig.options = []\r\n    }\r\n    groupConfig.options.splice([].indexOf.call($xeoptgroup.$el.children, $el), 0, optionConfig)\r\n  } else {\r\n    $xeselect.collectOption.splice([].indexOf.call($xeselect.$refs.hideOption.children, $el), 0, optionConfig)\r\n  }\r\n}\r\n"]}]}