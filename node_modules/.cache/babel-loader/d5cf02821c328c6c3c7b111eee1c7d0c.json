{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\form\\src\\form.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\form\\src\\form.js","mtime":1635230121847},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _classCallCheck from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport VXETable from \"../../v-x-e-table\";\nimport { UtilTools, isEnableConf } from \"../../tools\";\nimport { createItem } from \"./util\";\nimport { eqEmptyValue } from \"../../tools/src/utils\";\nimport { browse } from \"../../tools/src/dom\";\n\nvar Rule =\n/*#__PURE__*/\nfunction () {\n  function Rule(rule) {\n    _classCallCheck(this, Rule);\n\n    Object.assign(this, {\n      $options: rule,\n      required: rule.required,\n      min: rule.min,\n      max: rule.min,\n      type: rule.type,\n      pattern: rule.pattern,\n      validator: rule.validator,\n      trigger: rule.trigger,\n      maxWidth: rule.maxWidth\n    });\n  }\n\n  _createClass(Rule, [{\n    key: \"message\",\n    get: function get() {\n      return UtilTools.getFuncText(this.$options.message);\n    }\n  }]);\n\n  return Rule;\n}();\n\nfunction validErrorRuleValue(rule, val) {\n  var type = rule.type,\n      min = rule.min,\n      max = rule.max,\n      pattern = rule.pattern;\n  var isNumType = type === 'number';\n  var numVal = isNumType ? XEUtils.toNumber(val) : XEUtils.getSize(val); // 判断数值\n\n  if (isNumType && isNaN(val)) {\n    return true;\n  } // 如果存在 min，判断最小值\n\n\n  if (!XEUtils.eqNull(min) && numVal < XEUtils.toNumber(min)) {\n    return true;\n  } // 如果存在 max，判断最大值\n\n\n  if (!XEUtils.eqNull(max) && numVal > XEUtils.toNumber(max)) {\n    return true;\n  } // 如果存在 pattern，正则校验\n\n\n  if (pattern && !(XEUtils.isRegExp(pattern) ? pattern : new RegExp(pattern)).test(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getResetValue(value, resetValue) {\n  if (XEUtils.isArray(value)) {\n    resetValue = [];\n  }\n\n  return resetValue;\n}\n\nfunction callSlot(_vm, slotFunc, params, h) {\n  if (slotFunc) {\n    var $scopedSlots = _vm.$scopedSlots;\n\n    if (XEUtils.isString(slotFunc)) {\n      slotFunc = $scopedSlots[slotFunc] || null;\n    }\n\n    if (XEUtils.isFunction(slotFunc)) {\n      return slotFunc.call(_vm, params, h);\n    }\n  }\n\n  return [];\n}\n\nfunction renderPrefixIcon(h, titlePrefix) {\n  return h('span', {\n    class: 'vxe-form--item-title-prefix'\n  }, [h('i', {\n    class: titlePrefix.icon || GlobalConfig.icon.FORM_PREFIX\n  })]);\n}\n\nfunction renderSuffixIcon(h, titleSuffix) {\n  return h('span', {\n    class: 'vxe-form--item-title-suffix'\n  }, [h('i', {\n    class: titleSuffix.icon || GlobalConfig.icon.FORM_SUFFIX\n  })]);\n}\n\nfunction renderTitle(h, _vm, item) {\n  var data = _vm.data;\n  var slots = item.slots,\n      field = item.field,\n      itemRender = item.itemRender,\n      titlePrefix = item.titlePrefix,\n      titleSuffix = item.titleSuffix;\n  var compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null;\n  var params = {\n    data: data,\n    property: field,\n    item: item,\n    $form: _vm\n  };\n  var tss = [];\n\n  if (titlePrefix) {\n    tss.push(titlePrefix.message ? h('vxe-tooltip', {\n      props: {\n        content: UtilTools.getFuncText(titlePrefix.message),\n        enterable: titlePrefix.enterable,\n        skin: titlePrefix.skin\n      }\n    }, [renderPrefixIcon(h, titlePrefix)]) : renderPrefixIcon(h, titlePrefix));\n  }\n\n  tss.push(h('span', {\n    class: 'vxe-form--item-title-label'\n  }, compConf && compConf.renderItemTitle ? compConf.renderItemTitle(itemRender, params) : slots && slots.title ? callSlot(_vm, slots.title, params, h) : UtilTools.getFuncText(item.title)));\n\n  if (titleSuffix) {\n    tss.push(titleSuffix.message ? h('vxe-tooltip', {\n      props: {\n        content: UtilTools.getFuncText(titleSuffix.message),\n        enterable: titleSuffix.enterable,\n        skin: titleSuffix.skin\n      }\n    }, [renderSuffixIcon(h, titleSuffix)]) : renderSuffixIcon(h, titleSuffix));\n  }\n\n  return tss;\n}\n\nfunction renderItems(h, _vm, itemList) {\n  var _e = _vm._e,\n      rules = _vm.rules,\n      data = _vm.data,\n      collapseAll = _vm.collapseAll,\n      validOpts = _vm.validOpts,\n      allTitleOverflow = _vm.titleOverflow;\n  return itemList.map(function (item, index) {\n    var slots = item.slots,\n        title = item.title,\n        folding = item.folding,\n        visible = item.visible,\n        visibleMethod = item.visibleMethod,\n        field = item.field,\n        collapseNode = item.collapseNode,\n        itemRender = item.itemRender,\n        showError = item.showError,\n        errRule = item.errRule,\n        className = item.className,\n        titleOverflow = item.titleOverflow,\n        children = item.children;\n    var compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null;\n    var span = item.span || _vm.span;\n    var align = item.align || _vm.align;\n    var titleAlign = item.titleAlign || _vm.titleAlign;\n    var titleWidth = item.titleWidth || _vm.titleWidth;\n    var itemVisibleMethod = visibleMethod;\n    var itemOverflow = XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow) ? allTitleOverflow : titleOverflow;\n    var showEllipsis = itemOverflow === 'ellipsis';\n    var showTitle = itemOverflow === 'title';\n    var showTooltip = itemOverflow === true || itemOverflow === 'tooltip';\n    var hasEllipsis = showTitle || showTooltip || showEllipsis;\n    var params = {\n      data: data,\n      property: field,\n      item: item,\n      $form: _vm\n    };\n    var isRequired;\n\n    if (visible === false) {\n      return _e();\n    } // 如果为项集合\n\n\n    var isGather = children && children.length > 0;\n\n    if (isGather) {\n      var childVNs = renderItems(h, _vm, item.children);\n      return childVNs.length ? h('div', {\n        class: ['vxe-form--gather vxe-row', item.id, span ? \"vxe-col--\".concat(span, \" is--span\") : '', className ? XEUtils.isFunction(className) ? className(params) : className : '']\n      }, childVNs) : _e();\n    }\n\n    if (!itemVisibleMethod && compConf && compConf.itemVisibleMethod) {\n      itemVisibleMethod = compConf.itemVisibleMethod;\n    }\n\n    if (rules) {\n      var itemRules = rules[field];\n\n      if (itemRules) {\n        isRequired = itemRules.some(function (rule) {\n          return rule.required;\n        });\n      }\n    }\n\n    var contentVNs = [];\n\n    if (slots && slots.default) {\n      contentVNs = callSlot(_vm, slots.default, params, h);\n    } else if (compConf && compConf.renderItemContent) {\n      contentVNs = compConf.renderItemContent.call(_vm, h, itemRender, params);\n    } else if (compConf && compConf.renderItem) {\n      contentVNs = compConf.renderItem.call(_vm, h, itemRender, params);\n    } else if (field) {\n      contentVNs = [\"\".concat(XEUtils.get(data, field))];\n    }\n\n    var ons = showTooltip ? {\n      mouseenter: function mouseenter(evnt) {\n        _vm.triggerHeaderHelpEvent(evnt, params);\n      },\n      mouseleave: _vm.handleTargetLeaveEvent\n    } : {};\n    return h('div', {\n      class: ['vxe-form--item', item.id, span ? \"vxe-col--\".concat(span, \" is--span\") : null, className ? XEUtils.isFunction(className) ? className(params) : className : '', {\n        'is--title': title,\n        'is--required': isRequired,\n        'is--hidden': folding && collapseAll,\n        'is--active': !itemVisibleMethod || itemVisibleMethod(params),\n        'is--error': showError\n      }],\n      key: index\n    }, [h('div', {\n      class: 'vxe-form--item-inner'\n    }, [title || slots && slots.title ? h('div', {\n      class: ['vxe-form--item-title', titleAlign ? \"align--\".concat(titleAlign) : null, {\n        'is--ellipsis': hasEllipsis\n      }],\n      style: titleWidth ? {\n        width: isNaN(titleWidth) ? titleWidth : \"\".concat(titleWidth, \"px\")\n      } : null,\n      attrs: {\n        title: showTitle ? UtilTools.getFuncText(title) : null\n      },\n      on: ons\n    }, renderTitle(h, _vm, item)) : null, h('div', {\n      class: ['vxe-form--item-content', align ? \"align--\".concat(align) : null]\n    }, contentVNs.concat([collapseNode ? h('div', {\n      class: 'vxe-form--item-trigger-node',\n      on: {\n        click: _vm.toggleCollapseEvent\n      }\n    }, [h('span', {\n      class: 'vxe-form--item-trigger-text'\n    }, collapseAll ? GlobalConfig.i18n('vxe.form.unfolding') : GlobalConfig.i18n('vxe.form.folding')), h('i', {\n      class: ['vxe-form--item-trigger-icon', collapseAll ? GlobalConfig.icon.FORM_FOLDING : GlobalConfig.icon.FORM_UNFOLDING]\n    })]) : null, errRule && validOpts.showMessage ? h('div', {\n      class: 'vxe-form--item-valid',\n      style: errRule.maxWidth ? {\n        width: \"\".concat(errRule.maxWidth, \"px\")\n      } : null\n    }, errRule.message) : null]))])]);\n  });\n}\n\nexport default {\n  name: 'VxeForm',\n  mixins: [vSize],\n  props: {\n    loading: Boolean,\n    data: Object,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.form.size || GlobalConfig.size;\n      }\n    },\n    span: [String, Number],\n    align: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.form.align;\n      }\n    },\n    titleAlign: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.form.titleAlign;\n      }\n    },\n    titleWidth: [String, Number],\n    titleColon: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.form.titleColon;\n      }\n    },\n    titleAsterisk: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.form.titleAsterisk;\n      }\n    },\n    titleOverflow: {\n      type: [Boolean, String],\n      default: null\n    },\n    className: [String, Function],\n    items: Array,\n    rules: Object,\n    preventSubmit: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.form.preventSubmit;\n      }\n    },\n    validConfig: Object\n  },\n  data: function data() {\n    return {\n      collapseAll: true,\n      staticItems: [],\n      formItems: [],\n      tooltipTimeout: null,\n      tooltipActive: false,\n      tooltipStore: {\n        item: null,\n        visible: false\n      }\n    };\n  },\n  provide: function provide() {\n    return {\n      $xeform: this\n    };\n  },\n  computed: {\n    validOpts: function validOpts() {\n      return Object.assign({}, GlobalConfig.form.validConfig, this.validConfig);\n    },\n    tooltipOpts: function tooltipOpts() {\n      var opts = Object.assign({\n        leaveDelay: 300\n      }, GlobalConfig.form.tooltipConfig, this.tooltipConfig);\n\n      if (opts.enterable) {\n        opts.leaveMethod = this.handleTooltipLeaveMethod;\n      }\n\n      return opts;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      var items = _this.items;\n\n      if (items) {\n        _this.loadItem(items);\n      }\n    });\n  },\n  watch: {\n    staticItems: function staticItems(value) {\n      this.formItems = value;\n    },\n    items: function items(value) {\n      this.loadItem(value);\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var _e = this._e,\n        loading = this.loading,\n        className = this.className,\n        data = this.data,\n        vSize = this.vSize,\n        tooltipOpts = this.tooltipOpts,\n        formItems = this.formItems;\n    var hasUseTooltip = VXETable._tooltip;\n    return h('form', {\n      class: ['vxe-form', className ? XEUtils.isFunction(className) ? className({\n        items: formItems,\n        data: data,\n        $form: this\n      }) : className : '', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--colon', this.titleColon), _defineProperty(_ref, 'is--asterisk', this.titleAsterisk), _defineProperty(_ref, 'is--loading', loading), _ref)],\n      on: {\n        submit: this.submitEvent,\n        reset: this.resetEvent\n      }\n    }, [h('div', {\n      class: 'vxe-form--wrapper vxe-row'\n    }, renderItems(h, this, formItems)), h('div', {\n      class: 'vxe-form-slots',\n      ref: 'hideItem'\n    }, this.$slots.default), h('div', {\n      class: ['vxe-loading', {\n        'is--visible': loading\n      }]\n    }, [h('div', {\n      class: 'vxe-loading--spinner'\n    })]),\n    /**\r\n     * 工具提示\r\n     */\n    hasUseTooltip ? h('vxe-tooltip', _objectSpread({\n      ref: 'tooltip'\n    }, tooltipOpts)) : _e()]);\n  },\n  methods: {\n    loadItem: function loadItem(list) {\n      var _this2 = this;\n\n      if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n        var $scopedSlots = this.$scopedSlots;\n        list.forEach(function (item) {\n          if (item.slots) {\n            XEUtils.each(item.slots, function (func) {\n              if (!XEUtils.isFunction(func)) {\n                if (!$scopedSlots[func]) {\n                  UtilTools.error('vxe.error.notSlot', [func]);\n                }\n              }\n            });\n          }\n        });\n      }\n\n      this.staticItems = XEUtils.mapTree(list, function (item) {\n        return createItem(_this2, item);\n      }, {\n        children: 'children'\n      });\n      return this.$nextTick();\n    },\n    getItems: function getItems() {\n      var itemList = [];\n      XEUtils.eachTree(this.formItems, function (item) {\n        itemList.push(item);\n      }, {\n        children: 'children'\n      });\n      return itemList;\n    },\n    toggleCollapse: function toggleCollapse() {\n      this.collapseAll = !this.collapseAll;\n      return this.$nextTick();\n    },\n    toggleCollapseEvent: function toggleCollapseEvent(evnt) {\n      this.toggleCollapse();\n      this.$emit('toggle-collapse', {\n        collapse: !this.collapseAll,\n        data: this.data,\n        $form: this,\n        $event: evnt\n      }, evnt);\n    },\n    submitEvent: function submitEvent(evnt) {\n      var _this3 = this;\n\n      evnt.preventDefault();\n\n      if (!this.preventSubmit) {\n        this.beginValidate().then(function () {\n          _this3.$emit('submit', {\n            data: _this3.data,\n            $form: _this3,\n            $event: evnt\n          });\n        }).catch(function (errMap) {\n          _this3.$emit('submit-invalid', {\n            data: _this3.data,\n            errMap: errMap,\n            $form: _this3,\n            $event: evnt\n          });\n        });\n      }\n    },\n    reset: function reset() {\n      var _this4 = this;\n\n      var data = this.data;\n\n      if (data) {\n        var itemList = this.getItems();\n        itemList.forEach(function (item) {\n          var field = item.field,\n              resetValue = item.resetValue,\n              itemRender = item.itemRender;\n\n          if (isEnableConf(itemRender)) {\n            var compConf = VXETable.renderer.get(itemRender.name);\n\n            if (compConf && compConf.itemResetMethod) {\n              compConf.itemResetMethod({\n                data: data,\n                property: field,\n                item: item,\n                $form: _this4\n              });\n            } else if (field) {\n              XEUtils.set(data, field, resetValue === null ? getResetValue(XEUtils.get(data, field), undefined) : resetValue);\n            }\n          }\n        });\n      }\n\n      return this.clearValidate();\n    },\n    resetEvent: function resetEvent(evnt) {\n      evnt.preventDefault();\n      this.reset();\n      this.$emit('reset', {\n        data: this.data,\n        $form: this,\n        $event: evnt\n      });\n    },\n    handleTooltipLeaveMethod: function handleTooltipLeaveMethod() {\n      var _this5 = this;\n\n      var tooltipOpts = this.tooltipOpts;\n      setTimeout(function () {\n        if (!_this5.tooltipActive) {\n          _this5.closeTooltip();\n        }\n      }, tooltipOpts.leaveDelay);\n      return false;\n    },\n    closeTooltip: function closeTooltip() {\n      var tooltipStore = this.tooltipStore;\n      var $tooltip = this.$refs.tooltip;\n\n      if (tooltipStore.visible) {\n        Object.assign(tooltipStore, {\n          item: null,\n          visible: false\n        });\n\n        if ($tooltip) {\n          $tooltip.close();\n        }\n      }\n\n      return this.$nextTick();\n    },\n    triggerHeaderHelpEvent: function triggerHeaderHelpEvent(evnt, params) {\n      var item = params.item;\n      var tooltipStore = this.tooltipStore;\n      var $tooltip = this.$refs.tooltip;\n      var overflowElem = evnt.currentTarget;\n      var content = (overflowElem.textContent || '').trim();\n      var isCellOverflow = overflowElem.scrollWidth > overflowElem.clientWidth;\n      clearTimeout(this.tooltipTimeout);\n      this.tooltipActive = true;\n      this.closeTooltip();\n\n      if (content && isCellOverflow) {\n        Object.assign(tooltipStore, {\n          item: item,\n          visible: true\n        });\n\n        if ($tooltip) {\n          $tooltip.open(overflowElem, content);\n        }\n      }\n    },\n    handleTargetLeaveEvent: function handleTargetLeaveEvent() {\n      var _this6 = this;\n\n      var tooltipOpts = this.tooltipOpts;\n      this.tooltipActive = false;\n\n      if (tooltipOpts.enterable) {\n        this.tooltipTimeout = setTimeout(function () {\n          var $tooltip = _this6.$refs.tooltip;\n\n          if ($tooltip && !$tooltip.isHover) {\n            _this6.closeTooltip();\n          }\n        }, tooltipOpts.leaveDelay);\n      } else {\n        this.closeTooltip();\n      }\n    },\n    clearValidate: function clearValidate(field) {\n      var itemList = this.getItems();\n\n      if (field) {\n        var item = itemList.find(function (item) {\n          return item.field === field;\n        });\n\n        if (item) {\n          item.showError = false;\n        }\n      } else {\n        itemList.forEach(function (item) {\n          item.showError = false;\n        });\n      }\n\n      return this.$nextTick();\n    },\n    validate: function validate(callback) {\n      return this.beginValidate('', callback);\n    },\n    beginValidate: function beginValidate(type, callback) {\n      var _this7 = this;\n\n      var data = this.data,\n          formRules = this.rules,\n          validOpts = this.validOpts;\n      var validRest = {};\n      var validFields = [];\n      var itemValids = [];\n      var itemList = this.getItems();\n      this.clearValidate();\n      clearTimeout(this.showErrTime);\n\n      if (data && formRules) {\n        itemList.forEach(function (item) {\n          var field = item.field;\n\n          if (field) {\n            itemValids.push(_this7.validItemRules(type || 'all', field).then(function () {\n              item.errRule = null;\n            }).catch(function (_ref2) {\n              var rule = _ref2.rule,\n                  rules = _ref2.rules;\n              var rest = {\n                rule: rule,\n                rules: rules,\n                data: data,\n                property: field,\n                $form: _this7\n              };\n\n              if (!validRest[field]) {\n                validRest[field] = [];\n              }\n\n              validRest[field].push(rest);\n              validFields.push(field);\n              item.errRule = rule;\n              return Promise.reject(rest);\n            }));\n          }\n        });\n        return Promise.all(itemValids).then(function () {\n          if (callback) {\n            callback();\n          }\n        }).catch(function () {\n          return new Promise(function (resolve, reject) {\n            _this7.showErrTime = setTimeout(function () {\n              itemList.forEach(function (item) {\n                if (item.errRule) {\n                  item.showError = true;\n                }\n              });\n            }, 20);\n\n            if (validOpts.autoPos) {\n              _this7.$nextTick(function () {\n                _this7.handleFocus(validFields);\n              });\n            }\n\n            if (callback) {\n              callback(validRest);\n              resolve();\n            } else {\n              reject(validRest);\n            }\n          });\n        });\n      }\n\n      if (callback) {\n        callback();\n      }\n\n      return Promise.resolve();\n    },\n\n    /**\r\n     * 校验数据\r\n     * 按表格行、列顺序依次校验（同步或异步）\r\n     * 校验规则根据索引顺序依次校验，如果是异步则会等待校验完成才会继续校验下一列\r\n     * 如果校验失败则，触发回调或者 Promise<(ErrMap 校验不通过列的信息)>\r\n     * 如果是传回调方式这返回一个 (ErrMap 校验不通过列的信息)\r\n     *\r\n     * rule 配置：\r\n     *  required=Boolean 是否必填\r\n     *  min=Number 最小长度\r\n     *  max=Number 最大长度\r\n     *  validator=Function({ itemValue, rule, rules, data, property }) 自定义校验，接收一个 Promise\r\n     *  trigger=change 触发方式\r\n     */\n    validItemRules: function validItemRules(validType, property, val) {\n      var _this8 = this;\n\n      var data = this.data,\n          formRules = this.rules;\n      var errorRules = [];\n      var syncVailds = [];\n\n      if (property && formRules) {\n        var rules = XEUtils.get(formRules, property);\n\n        if (rules) {\n          var itemValue = XEUtils.isUndefined(val) ? XEUtils.get(data, property) : val;\n          rules.forEach(function (rule) {\n            var type = rule.type,\n                trigger = rule.trigger,\n                required = rule.required;\n\n            if (validType === 'all' || !trigger || validType === rule.trigger) {\n              if (XEUtils.isFunction(rule.validator)) {\n                var customValid = rule.validator({\n                  itemValue: itemValue,\n                  rule: rule,\n                  rules: rules,\n                  data: data,\n                  property: property,\n                  $form: _this8\n                });\n\n                if (customValid) {\n                  if (XEUtils.isError(customValid)) {\n                    errorRules.push(new Rule({\n                      type: 'custom',\n                      trigger: trigger,\n                      message: customValid.message,\n                      rule: new Rule(rule)\n                    }));\n                  } else if (customValid.catch) {\n                    // 如果为异步校验（注：异步校验是并发无序的）\n                    syncVailds.push(customValid.catch(function (e) {\n                      errorRules.push(new Rule({\n                        type: 'custom',\n                        trigger: trigger,\n                        message: e ? e.message : rule.message,\n                        rule: new Rule(rule)\n                      }));\n                    }));\n                  }\n                }\n              } else {\n                var isArrType = type === 'array';\n                var hasEmpty = isArrType ? !XEUtils.isArray(itemValue) || !itemValue.length : eqEmptyValue(itemValue);\n\n                if (required ? hasEmpty || validErrorRuleValue(rule, itemValue) : !hasEmpty && validErrorRuleValue(rule, itemValue)) {\n                  errorRules.push(new Rule(rule));\n                }\n              }\n            }\n          });\n        }\n      }\n\n      return Promise.all(syncVailds).then(function () {\n        if (errorRules.length) {\n          var rest = {\n            rules: errorRules,\n            rule: errorRules[0]\n          };\n          return Promise.reject(rest);\n        }\n      });\n    },\n    handleFocus: function handleFocus(fields) {\n      var $el = this.$el;\n      var itemList = this.getItems();\n      fields.some(function (property) {\n        var item = itemList.find(function (item) {\n          return item.field === property;\n        });\n\n        if (item && isEnableConf(item.itemRender)) {\n          var itemRender = item.itemRender;\n          var compConf = VXETable.renderer.get(itemRender.name);\n          var inputElem; // 如果指定了聚焦 class\n\n          if (itemRender.autofocus) {\n            inputElem = $el.querySelector(\".\".concat(item.id, \" \").concat(itemRender.autofocus));\n          } // 渲染器的聚焦处理\n\n\n          if (!inputElem && compConf && compConf.autofocus) {\n            inputElem = $el.querySelector(\".\".concat(item.id, \" \").concat(compConf.autofocus));\n          }\n\n          if (inputElem) {\n            inputElem.focus(); // 保持一致行为，光标移到末端\n\n            if (browse.msie) {\n              var textRange = inputElem.createTextRange();\n              textRange.collapse(false);\n              textRange.select();\n            }\n\n            return true;\n          }\n        }\n      });\n    },\n\n    /**\r\n     * 更新项状态\r\n     * 如果组件值 v-model 发生 change 时，调用改函数用于更新某一项编辑状态\r\n     * 如果单元格配置了校验规则，则会进行校验\r\n     */\n    updateStatus: function updateStatus(scope, itemValue) {\n      var _this9 = this;\n\n      var property = scope.property;\n\n      if (property) {\n        this.validItemRules('change', property, itemValue).then(function () {\n          _this9.clearValidate(property);\n        }).catch(function (_ref3) {\n          var rule = _ref3.rule;\n\n          var itemList = _this9.getItems();\n\n          var item = itemList.find(function (item) {\n            return item.field === property;\n          });\n\n          if (item) {\n            item.showError = true;\n            item.errRule = rule;\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\form\\src\\form.js"],"names":["Rule","Object","$options","required","rule","min","max","type","pattern","validator","trigger","maxWidth","UtilTools","isNumType","numVal","XEUtils","isNaN","resetValue","$scopedSlots","_vm","slotFunc","h","class","titlePrefix","GlobalConfig","FORM_PREFIX","titleSuffix","FORM_SUFFIX","data","slots","field","itemRender","item","compConf","isEnableConf","VXETable","params","property","$form","tss","props","content","enterable","skin","renderPrefixIcon","callSlot","renderSuffixIcon","_e","rules","collapseAll","validOpts","allTitleOverflow","title","folding","visible","visibleMethod","collapseNode","showError","errRule","className","titleOverflow","children","span","align","titleAlign","titleWidth","itemVisibleMethod","itemOverflow","showEllipsis","showTitle","showTooltip","hasEllipsis","isGather","childVNs","renderItems","itemRules","isRequired","contentVNs","ons","mouseenter","mouseleave","handleTargetLeaveEvent","key","index","style","width","attrs","on","renderTitle","click","toggleCollapseEvent","name","mixins","loading","size","default","titleColon","titleAsterisk","items","preventSubmit","validConfig","staticItems","formItems","tooltipTimeout","tooltipActive","tooltipStore","provide","$xeform","computed","tooltipOpts","opts","leaveDelay","created","watch","render","vSize","hasUseTooltip","submit","reset","resetEvent","ref","methods","loadItem","process","list","createItem","getItems","itemList","toggleCollapse","collapse","$event","evnt","submitEvent","errMap","getResetValue","handleTooltipLeaveMethod","setTimeout","closeTooltip","$tooltip","triggerHeaderHelpEvent","overflowElem","isCellOverflow","clearTimeout","clearValidate","validate","beginValidate","formRules","validRest","validFields","itemValids","rest","Promise","callback","resolve","reject","validItemRules","errorRules","syncVailds","itemValue","validType","customValid","message","e","isArrType","hasEmpty","eqEmptyValue","validErrorRuleValue","handleFocus","$el","fields","inputElem","browse","textRange","updateStatus","scope"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\nimport VXETable from '../../v-x-e-table'\r\nimport { UtilTools, isEnableConf } from '../../tools'\r\nimport { createItem } from './util'\r\nimport { eqEmptyValue } from '../../tools/src/utils'\r\nimport { browse } from '../../tools/src/dom'\r\n\r\nclass Rule {\r\n  constructor (rule) {\r\n    Object.assign(this, {\r\n      $options: rule,\r\n      required: rule.required,\r\n      min: rule.min,\r\n      max: rule.min,\r\n      type: rule.type,\r\n      pattern: rule.pattern,\r\n      validator: rule.validator,\r\n      trigger: rule.trigger,\r\n      maxWidth: rule.maxWidth\r\n    })\r\n  }\r\n\r\n  get message () {\r\n    return UtilTools.getFuncText(this.$options.message)\r\n  }\r\n}\r\n\r\nfunction validErrorRuleValue (rule, val) {\r\n  const { type, min, max, pattern } = rule\r\n  const isNumType = type === 'number'\r\n  const numVal = isNumType ? XEUtils.toNumber(val) : XEUtils.getSize(val)\r\n  // 判断数值\r\n  if (isNumType && isNaN(val)) {\r\n    return true\r\n  }\r\n  // 如果存在 min，判断最小值\r\n  if (!XEUtils.eqNull(min) && numVal < XEUtils.toNumber(min)) {\r\n    return true\r\n  }\r\n  // 如果存在 max，判断最大值\r\n  if (!XEUtils.eqNull(max) && numVal > XEUtils.toNumber(max)) {\r\n    return true\r\n  }\r\n  // 如果存在 pattern，正则校验\r\n  if (pattern && !(XEUtils.isRegExp(pattern) ? pattern : new RegExp(pattern)).test(val)) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nfunction getResetValue (value, resetValue) {\r\n  if (XEUtils.isArray(value)) {\r\n    resetValue = []\r\n  }\r\n  return resetValue\r\n}\r\n\r\nfunction callSlot (_vm, slotFunc, params, h) {\r\n  if (slotFunc) {\r\n    const { $scopedSlots } = _vm\r\n    if (XEUtils.isString(slotFunc)) {\r\n      slotFunc = $scopedSlots[slotFunc] || null\r\n    }\r\n    if (XEUtils.isFunction(slotFunc)) {\r\n      return slotFunc.call(_vm, params, h)\r\n    }\r\n  }\r\n  return []\r\n}\r\n\r\nfunction renderPrefixIcon (h, titlePrefix) {\r\n  return h('span', {\r\n    class: 'vxe-form--item-title-prefix'\r\n  }, [\r\n    h('i', {\r\n      class: titlePrefix.icon || GlobalConfig.icon.FORM_PREFIX\r\n    })\r\n  ])\r\n}\r\n\r\nfunction renderSuffixIcon (h, titleSuffix) {\r\n  return h('span', {\r\n    class: 'vxe-form--item-title-suffix'\r\n  }, [\r\n    h('i', {\r\n      class: titleSuffix.icon || GlobalConfig.icon.FORM_SUFFIX\r\n    })\r\n  ])\r\n}\r\n\r\nfunction renderTitle (h, _vm, item) {\r\n  const { data } = _vm\r\n  const { slots, field, itemRender, titlePrefix, titleSuffix } = item\r\n  const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null\r\n  const params = { data, property: field, item, $form: _vm }\r\n  const tss = []\r\n  if (titlePrefix) {\r\n    tss.push(\r\n      titlePrefix.message\r\n        ? h('vxe-tooltip', {\r\n          props: {\r\n            content: UtilTools.getFuncText(titlePrefix.message),\r\n            enterable: titlePrefix.enterable,\r\n            skin: titlePrefix.skin\r\n          }\r\n        }, [\r\n          renderPrefixIcon(h, titlePrefix)\r\n        ])\r\n        : renderPrefixIcon(h, titlePrefix)\r\n    )\r\n  }\r\n  tss.push(\r\n    h('span', {\r\n      class: 'vxe-form--item-title-label'\r\n    }, compConf && compConf.renderItemTitle ? compConf.renderItemTitle(itemRender, params) : (slots && slots.title ? callSlot(_vm, slots.title, params, h) : UtilTools.getFuncText(item.title)))\r\n  )\r\n  if (titleSuffix) {\r\n    tss.push(\r\n      titleSuffix.message\r\n        ? h('vxe-tooltip', {\r\n          props: {\r\n            content: UtilTools.getFuncText(titleSuffix.message),\r\n            enterable: titleSuffix.enterable,\r\n            skin: titleSuffix.skin\r\n          }\r\n        }, [\r\n          renderSuffixIcon(h, titleSuffix)\r\n        ])\r\n        : renderSuffixIcon(h, titleSuffix)\r\n    )\r\n  }\r\n  return tss\r\n}\r\n\r\nfunction renderItems (h, _vm, itemList) {\r\n  const { _e, rules, data, collapseAll, validOpts, titleOverflow: allTitleOverflow } = _vm\r\n  return itemList.map((item, index) => {\r\n    const { slots, title, folding, visible, visibleMethod, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, children } = item\r\n    const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null\r\n    const span = item.span || _vm.span\r\n    const align = item.align || _vm.align\r\n    const titleAlign = item.titleAlign || _vm.titleAlign\r\n    const titleWidth = item.titleWidth || _vm.titleWidth\r\n    let itemVisibleMethod = visibleMethod\r\n    const itemOverflow = (XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow)) ? allTitleOverflow : titleOverflow\r\n    const showEllipsis = itemOverflow === 'ellipsis'\r\n    const showTitle = itemOverflow === 'title'\r\n    const showTooltip = itemOverflow === true || itemOverflow === 'tooltip'\r\n    const hasEllipsis = showTitle || showTooltip || showEllipsis\r\n    const params = { data, property: field, item, $form: _vm }\r\n    let isRequired\r\n    if (visible === false) {\r\n      return _e()\r\n    }\r\n    // 如果为项集合\r\n    const isGather = children && children.length > 0\r\n    if (isGather) {\r\n      const childVNs = renderItems(h, _vm, item.children)\r\n      return childVNs.length ? h('div', {\r\n        class: ['vxe-form--gather vxe-row', item.id, span ? `vxe-col--${span} is--span` : '', className ? (XEUtils.isFunction(className) ? className(params) : className) : '']\r\n      }, childVNs) : _e()\r\n    }\r\n    if (!itemVisibleMethod && compConf && compConf.itemVisibleMethod) {\r\n      itemVisibleMethod = compConf.itemVisibleMethod\r\n    }\r\n    if (rules) {\r\n      const itemRules = rules[field]\r\n      if (itemRules) {\r\n        isRequired = itemRules.some(rule => rule.required)\r\n      }\r\n    }\r\n    let contentVNs = []\r\n    if (slots && slots.default) {\r\n      contentVNs = callSlot(_vm, slots.default, params, h)\r\n    } else if (compConf && compConf.renderItemContent) {\r\n      contentVNs = compConf.renderItemContent.call(_vm, h, itemRender, params)\r\n    } else if (compConf && compConf.renderItem) {\r\n      contentVNs = compConf.renderItem.call(_vm, h, itemRender, params)\r\n    } else if (field) {\r\n      contentVNs = [`${XEUtils.get(data, field)}`]\r\n    }\r\n    const ons = showTooltip ? {\r\n      mouseenter (evnt) {\r\n        _vm.triggerHeaderHelpEvent(evnt, params)\r\n      },\r\n      mouseleave: _vm.handleTargetLeaveEvent\r\n    } : {}\r\n    return h('div', {\r\n      class: ['vxe-form--item', item.id, span ? `vxe-col--${span} is--span` : null, className ? (XEUtils.isFunction(className) ? className(params) : className) : '', {\r\n        'is--title': title,\r\n        'is--required': isRequired,\r\n        'is--hidden': folding && collapseAll,\r\n        'is--active': !itemVisibleMethod || itemVisibleMethod(params),\r\n        'is--error': showError\r\n      }],\r\n      key: index\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-form--item-inner'\r\n      }, [\r\n        title || (slots && slots.title) ? h('div', {\r\n          class: ['vxe-form--item-title', titleAlign ? `align--${titleAlign}` : null, {\r\n            'is--ellipsis': hasEllipsis\r\n          }],\r\n          style: titleWidth ? {\r\n            width: isNaN(titleWidth) ? titleWidth : `${titleWidth}px`\r\n          } : null,\r\n          attrs: {\r\n            title: showTitle ? UtilTools.getFuncText(title) : null\r\n          },\r\n          on: ons\r\n        }, renderTitle(h, _vm, item)) : null,\r\n        h('div', {\r\n          class: ['vxe-form--item-content', align ? `align--${align}` : null]\r\n        }, contentVNs.concat(\r\n          [\r\n            collapseNode ? h('div', {\r\n              class: 'vxe-form--item-trigger-node',\r\n              on: {\r\n                click: _vm.toggleCollapseEvent\r\n              }\r\n            }, [\r\n              h('span', {\r\n                class: 'vxe-form--item-trigger-text'\r\n              }, collapseAll ? GlobalConfig.i18n('vxe.form.unfolding') : GlobalConfig.i18n('vxe.form.folding')),\r\n              h('i', {\r\n                class: ['vxe-form--item-trigger-icon', collapseAll ? GlobalConfig.icon.FORM_FOLDING : GlobalConfig.icon.FORM_UNFOLDING]\r\n              })\r\n            ]) : null,\r\n            errRule && validOpts.showMessage ? h('div', {\r\n              class: 'vxe-form--item-valid',\r\n              style: errRule.maxWidth ? {\r\n                width: `${errRule.maxWidth}px`\r\n              } : null\r\n            }, errRule.message) : null\r\n          ])\r\n        )\r\n      ])\r\n    ])\r\n  })\r\n}\r\n\r\nexport default {\r\n  name: 'VxeForm',\r\n  mixins: [vSize],\r\n  props: {\r\n    loading: Boolean,\r\n    data: Object,\r\n    size: { type: String, default: () => GlobalConfig.form.size || GlobalConfig.size },\r\n    span: [String, Number],\r\n    align: { type: String, default: () => GlobalConfig.form.align },\r\n    titleAlign: { type: String, default: () => GlobalConfig.form.titleAlign },\r\n    titleWidth: [String, Number],\r\n    titleColon: { type: Boolean, default: () => GlobalConfig.form.titleColon },\r\n    titleAsterisk: { type: Boolean, default: () => GlobalConfig.form.titleAsterisk },\r\n    titleOverflow: { type: [Boolean, String], default: null },\r\n    className: [String, Function],\r\n    items: Array,\r\n    rules: Object,\r\n    preventSubmit: { type: Boolean, default: () => GlobalConfig.form.preventSubmit },\r\n    validConfig: Object\r\n  },\r\n  data () {\r\n    return {\r\n      collapseAll: true,\r\n      staticItems: [],\r\n      formItems: [],\r\n\r\n      tooltipTimeout: null,\r\n      tooltipActive: false,\r\n      tooltipStore: {\r\n        item: null,\r\n        visible: false\r\n      }\r\n    }\r\n  },\r\n  provide () {\r\n    return {\r\n      $xeform: this\r\n    }\r\n  },\r\n  computed: {\r\n    validOpts () {\r\n      return Object.assign({}, GlobalConfig.form.validConfig, this.validConfig)\r\n    },\r\n    tooltipOpts () {\r\n      const opts = Object.assign({ leaveDelay: 300 }, GlobalConfig.form.tooltipConfig, this.tooltipConfig)\r\n      if (opts.enterable) {\r\n        opts.leaveMethod = this.handleTooltipLeaveMethod\r\n      }\r\n      return opts\r\n    }\r\n  },\r\n  created () {\r\n    this.$nextTick(() => {\r\n      const { items } = this\r\n      if (items) {\r\n        this.loadItem(items)\r\n      }\r\n    })\r\n  },\r\n  watch: {\r\n    staticItems (value) {\r\n      this.formItems = value\r\n    },\r\n    items (value) {\r\n      this.loadItem(value)\r\n    }\r\n  },\r\n  render (h) {\r\n    const { _e, loading, className, data, vSize, tooltipOpts, formItems } = this\r\n    const hasUseTooltip = VXETable._tooltip\r\n    return h('form', {\r\n      class: ['vxe-form', className ? (XEUtils.isFunction(className) ? className({ items: formItems, data, $form: this }) : className) : '', {\r\n        [`size--${vSize}`]: vSize,\r\n        'is--colon': this.titleColon,\r\n        'is--asterisk': this.titleAsterisk,\r\n        'is--loading': loading\r\n      }],\r\n      on: {\r\n        submit: this.submitEvent,\r\n        reset: this.resetEvent\r\n      }\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-form--wrapper vxe-row'\r\n      }, renderItems(h, this, formItems)),\r\n      h('div', {\r\n        class: 'vxe-form-slots',\r\n        ref: 'hideItem'\r\n      }, this.$slots.default),\r\n      h('div', {\r\n        class: ['vxe-loading', {\r\n          'is--visible': loading\r\n        }]\r\n      }, [\r\n        h('div', {\r\n          class: 'vxe-loading--spinner'\r\n        })\r\n      ]),\r\n      /**\r\n       * 工具提示\r\n       */\r\n      hasUseTooltip ? h('vxe-tooltip', {\r\n        ref: 'tooltip',\r\n        ...tooltipOpts\r\n      }) : _e()\r\n    ])\r\n  },\r\n  methods: {\r\n    loadItem (list) {\r\n      if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\r\n        const { $scopedSlots } = this\r\n        list.forEach(item => {\r\n          if (item.slots) {\r\n            XEUtils.each(item.slots, (func) => {\r\n              if (!XEUtils.isFunction(func)) {\r\n                if (!$scopedSlots[func]) {\r\n                  UtilTools.error('vxe.error.notSlot', [func])\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n      this.staticItems = XEUtils.mapTree(list, item => createItem(this, item), { children: 'children' })\r\n      return this.$nextTick()\r\n    },\r\n    getItems () {\r\n      const itemList = []\r\n      XEUtils.eachTree(this.formItems, item => {\r\n        itemList.push(item)\r\n      }, { children: 'children' })\r\n      return itemList\r\n    },\r\n    toggleCollapse () {\r\n      this.collapseAll = !this.collapseAll\r\n      return this.$nextTick()\r\n    },\r\n    toggleCollapseEvent (evnt) {\r\n      this.toggleCollapse()\r\n      this.$emit('toggle-collapse', { collapse: !this.collapseAll, data: this.data, $form: this, $event: evnt }, evnt)\r\n    },\r\n    submitEvent (evnt) {\r\n      evnt.preventDefault()\r\n      if (!this.preventSubmit) {\r\n        this.beginValidate().then(() => {\r\n          this.$emit('submit', { data: this.data, $form: this, $event: evnt })\r\n        }).catch(errMap => {\r\n          this.$emit('submit-invalid', { data: this.data, errMap, $form: this, $event: evnt })\r\n        })\r\n      }\r\n    },\r\n    reset () {\r\n      const { data } = this\r\n      if (data) {\r\n        const itemList = this.getItems()\r\n        itemList.forEach(item => {\r\n          const { field, resetValue, itemRender } = item\r\n          if (isEnableConf(itemRender)) {\r\n            const compConf = VXETable.renderer.get(itemRender.name)\r\n            if (compConf && compConf.itemResetMethod) {\r\n              compConf.itemResetMethod({ data, property: field, item, $form: this })\r\n            } else if (field) {\r\n              XEUtils.set(data, field, resetValue === null ? getResetValue(XEUtils.get(data, field), undefined) : resetValue)\r\n            }\r\n          }\r\n        })\r\n      }\r\n      return this.clearValidate()\r\n    },\r\n    resetEvent (evnt) {\r\n      evnt.preventDefault()\r\n      this.reset()\r\n      this.$emit('reset', { data: this.data, $form: this, $event: evnt })\r\n    },\r\n    handleTooltipLeaveMethod () {\r\n      const { tooltipOpts } = this\r\n      setTimeout(() => {\r\n        if (!this.tooltipActive) {\r\n          this.closeTooltip()\r\n        }\r\n      }, tooltipOpts.leaveDelay)\r\n      return false\r\n    },\r\n    closeTooltip () {\r\n      const { tooltipStore } = this\r\n      const $tooltip = this.$refs.tooltip\r\n      if (tooltipStore.visible) {\r\n        Object.assign(tooltipStore, {\r\n          item: null,\r\n          visible: false\r\n        })\r\n        if ($tooltip) {\r\n          $tooltip.close()\r\n        }\r\n      }\r\n      return this.$nextTick()\r\n    },\r\n    triggerHeaderHelpEvent (evnt, params) {\r\n      const { item } = params\r\n      const { tooltipStore } = this\r\n      const $tooltip = this.$refs.tooltip\r\n      const overflowElem = evnt.currentTarget\r\n      const content = (overflowElem.textContent || '').trim()\r\n      const isCellOverflow = overflowElem.scrollWidth > overflowElem.clientWidth\r\n      clearTimeout(this.tooltipTimeout)\r\n      this.tooltipActive = true\r\n      this.closeTooltip()\r\n      if (content && isCellOverflow) {\r\n        Object.assign(tooltipStore, {\r\n          item,\r\n          visible: true\r\n        })\r\n        if ($tooltip) {\r\n          $tooltip.open(overflowElem, content)\r\n        }\r\n      }\r\n    },\r\n    handleTargetLeaveEvent () {\r\n      const { tooltipOpts } = this\r\n      this.tooltipActive = false\r\n      if (tooltipOpts.enterable) {\r\n        this.tooltipTimeout = setTimeout(() => {\r\n          const $tooltip = this.$refs.tooltip\r\n          if ($tooltip && !$tooltip.isHover) {\r\n            this.closeTooltip()\r\n          }\r\n        }, tooltipOpts.leaveDelay)\r\n      } else {\r\n        this.closeTooltip()\r\n      }\r\n    },\r\n    clearValidate (field) {\r\n      const itemList = this.getItems()\r\n      if (field) {\r\n        const item = itemList.find(item => item.field === field)\r\n        if (item) {\r\n          item.showError = false\r\n        }\r\n      } else {\r\n        itemList.forEach(item => {\r\n          item.showError = false\r\n        })\r\n      }\r\n      return this.$nextTick()\r\n    },\r\n    validate (callback) {\r\n      return this.beginValidate('', callback)\r\n    },\r\n    beginValidate (type, callback) {\r\n      const { data, rules: formRules, validOpts } = this\r\n      const validRest = {}\r\n      const validFields = []\r\n      const itemValids = []\r\n      const itemList = this.getItems()\r\n      this.clearValidate()\r\n      clearTimeout(this.showErrTime)\r\n      if (data && formRules) {\r\n        itemList.forEach(item => {\r\n          const { field } = item\r\n          if (field) {\r\n            itemValids.push(\r\n              this.validItemRules(type || 'all', field).then(() => {\r\n                item.errRule = null\r\n              }).catch(({ rule, rules }) => {\r\n                const rest = { rule, rules, data, property: field, $form: this }\r\n                if (!validRest[field]) {\r\n                  validRest[field] = []\r\n                }\r\n                validRest[field].push(rest)\r\n                validFields.push(field)\r\n                item.errRule = rule\r\n                return Promise.reject(rest)\r\n              })\r\n            )\r\n          }\r\n        })\r\n        return Promise.all(itemValids).then(() => {\r\n          if (callback) {\r\n            callback()\r\n          }\r\n        }).catch(() => {\r\n          return new Promise((resolve, reject) => {\r\n            this.showErrTime = setTimeout(() => {\r\n              itemList.forEach(item => {\r\n                if (item.errRule) {\r\n                  item.showError = true\r\n                }\r\n              })\r\n            }, 20)\r\n            if (validOpts.autoPos) {\r\n              this.$nextTick(() => {\r\n                this.handleFocus(validFields)\r\n              })\r\n            }\r\n            if (callback) {\r\n              callback(validRest)\r\n              resolve()\r\n            } else {\r\n              reject(validRest)\r\n            }\r\n          })\r\n        })\r\n      }\r\n      if (callback) {\r\n        callback()\r\n      }\r\n      return Promise.resolve()\r\n    },\r\n    /**\r\n     * 校验数据\r\n     * 按表格行、列顺序依次校验（同步或异步）\r\n     * 校验规则根据索引顺序依次校验，如果是异步则会等待校验完成才会继续校验下一列\r\n     * 如果校验失败则，触发回调或者 Promise<(ErrMap 校验不通过列的信息)>\r\n     * 如果是传回调方式这返回一个 (ErrMap 校验不通过列的信息)\r\n     *\r\n     * rule 配置：\r\n     *  required=Boolean 是否必填\r\n     *  min=Number 最小长度\r\n     *  max=Number 最大长度\r\n     *  validator=Function({ itemValue, rule, rules, data, property }) 自定义校验，接收一个 Promise\r\n     *  trigger=change 触发方式\r\n     */\r\n    validItemRules (validType, property, val) {\r\n      const { data, rules: formRules } = this\r\n      const errorRules = []\r\n      const syncVailds = []\r\n      if (property && formRules) {\r\n        const rules = XEUtils.get(formRules, property)\r\n        if (rules) {\r\n          const itemValue = XEUtils.isUndefined(val) ? XEUtils.get(data, property) : val\r\n          rules.forEach(rule => {\r\n            const { type, trigger, required } = rule\r\n            if (validType === 'all' || !trigger || validType === rule.trigger) {\r\n              if (XEUtils.isFunction(rule.validator)) {\r\n                const customValid = rule.validator({\r\n                  itemValue,\r\n                  rule,\r\n                  rules,\r\n                  data,\r\n                  property,\r\n                  $form: this\r\n                })\r\n                if (customValid) {\r\n                  if (XEUtils.isError(customValid)) {\r\n                    errorRules.push(new Rule({ type: 'custom', trigger, message: customValid.message, rule: new Rule(rule) }))\r\n                  } else if (customValid.catch) {\r\n                    // 如果为异步校验（注：异步校验是并发无序的）\r\n                    syncVailds.push(\r\n                      customValid.catch(e => {\r\n                        errorRules.push(new Rule({ type: 'custom', trigger, message: e ? e.message : rule.message, rule: new Rule(rule) }))\r\n                      })\r\n                    )\r\n                  }\r\n                }\r\n              } else {\r\n                const isArrType = type === 'array'\r\n                const hasEmpty = isArrType ? (!XEUtils.isArray(itemValue) || !itemValue.length) : eqEmptyValue(itemValue)\r\n                if (required ? (hasEmpty || validErrorRuleValue(rule, itemValue)) : (!hasEmpty && validErrorRuleValue(rule, itemValue))) {\r\n                  errorRules.push(new Rule(rule))\r\n                }\r\n              }\r\n            }\r\n          })\r\n        }\r\n      }\r\n      return Promise.all(syncVailds).then(() => {\r\n        if (errorRules.length) {\r\n          const rest = { rules: errorRules, rule: errorRules[0] }\r\n          return Promise.reject(rest)\r\n        }\r\n      })\r\n    },\r\n    handleFocus (fields) {\r\n      const { $el } = this\r\n      const itemList = this.getItems()\r\n      fields.some(property => {\r\n        const item = itemList.find(item => item.field === property)\r\n        if (item && isEnableConf(item.itemRender)) {\r\n          const { itemRender } = item\r\n          const compConf = VXETable.renderer.get(itemRender.name)\r\n          let inputElem\r\n          // 如果指定了聚焦 class\r\n          if (itemRender.autofocus) {\r\n            inputElem = $el.querySelector(`.${item.id} ${itemRender.autofocus}`)\r\n          }\r\n          // 渲染器的聚焦处理\r\n          if (!inputElem && compConf && compConf.autofocus) {\r\n            inputElem = $el.querySelector(`.${item.id} ${compConf.autofocus}`)\r\n          }\r\n          if (inputElem) {\r\n            inputElem.focus()\r\n            // 保持一致行为，光标移到末端\r\n            if (browse.msie) {\r\n              const textRange = inputElem.createTextRange()\r\n              textRange.collapse(false)\r\n              textRange.select()\r\n            }\r\n            return true\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 更新项状态\r\n     * 如果组件值 v-model 发生 change 时，调用改函数用于更新某一项编辑状态\r\n     * 如果单元格配置了校验规则，则会进行校验\r\n     */\r\n    updateStatus (scope, itemValue) {\r\n      const { property } = scope\r\n      if (property) {\r\n        this.validItemRules('change', property, itemValue)\r\n          .then(() => {\r\n            this.clearValidate(property)\r\n          })\r\n          .catch(({ rule }) => {\r\n            const itemList = this.getItems()\r\n            const item = itemList.find(item => item.field === property)\r\n            if (item) {\r\n              item.showError = true\r\n              item.errRule = rule\r\n            }\r\n          })\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}