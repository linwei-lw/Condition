{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\pager\\src\\pager.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\pager\\src\\pager.js","mtime":1635230121125},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nexport default {\n  name: 'VxePager',\n  mixins: [vSize],\n  props: {\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.pager.size || GlobalConfig.size;\n      }\n    },\n    // 自定义布局\n    layouts: {\n      type: Array,\n      default: function _default() {\n        return GlobalConfig.pager.layouts || ['PrevJump', 'PrevPage', 'Jump', 'PageCount', 'NextPage', 'NextJump', 'Sizes', 'Total'];\n      }\n    },\n    // 当前页\n    currentPage: {\n      type: Number,\n      default: 1\n    },\n    // 加载中\n    loading: Boolean,\n    // 每页大小\n    pageSize: {\n      type: Number,\n      default: function _default() {\n        return GlobalConfig.pager.pageSize || 10;\n      }\n    },\n    // 总条数\n    total: {\n      type: Number,\n      default: 0\n    },\n    // 显示页码按钮的数量\n    pagerCount: {\n      type: Number,\n      default: function _default() {\n        return GlobalConfig.pager.pagerCount || 7;\n      }\n    },\n    // 每页大小选项列表\n    pageSizes: {\n      type: Array,\n      default: function _default() {\n        return GlobalConfig.pager.pageSizes || [10, 15, 20, 50, 100];\n      }\n    },\n    // 列对其方式\n    align: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.pager.align;\n      }\n    },\n    // 带边框\n    border: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.pager.border;\n      }\n    },\n    // 带背景颜色\n    background: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.pager.background;\n      }\n    },\n    // 配套的样式\n    perfect: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.pager.perfect;\n      }\n    },\n    // 当只有一页时隐藏\n    autoHidden: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.pager.autoHidden;\n      }\n    },\n    transfer: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.pager.transfer;\n      }\n    },\n    className: [String, Function],\n    // 自定义图标\n    iconPrevPage: String,\n    iconJumpPrev: String,\n    iconJumpNext: String,\n    iconNextPage: String,\n    iconJumpMore: String\n  },\n  inject: {\n    $xegrid: {\n      default: null\n    }\n  },\n  computed: {\n    isSizes: function isSizes() {\n      return this.layouts.some(function (name) {\n        return name === 'Sizes';\n      });\n    },\n    pageCount: function pageCount() {\n      return this.getPageCount(this.total, this.pageSize);\n    },\n    numList: function numList() {\n      var len = this.pageCount > this.pagerCount ? this.pagerCount - 2 : this.pagerCount;\n      var rest = [];\n\n      for (var index = 0; index < len; index++) {\n        rest.push(index);\n      }\n\n      return rest;\n    },\n    offsetNumber: function offsetNumber() {\n      return Math.floor((this.pagerCount - 2) / 2);\n    },\n    sizeList: function sizeList() {\n      return this.pageSizes.map(function (item) {\n        if (XEUtils.isNumber(item)) {\n          return {\n            value: item,\n            label: \"\".concat(GlobalConfig.i18n('vxe.pager.pagesize', [item]))\n          };\n        }\n\n        return _objectSpread({\n          value: '',\n          label: ''\n        }, item);\n      });\n    }\n  },\n  render: function render(h) {\n    var _this = this,\n        _ref;\n\n    var $scopedSlots = this.$scopedSlots,\n        $xegrid = this.$xegrid,\n        vSize = this.vSize,\n        align = this.align,\n        className = this.className;\n    var childNodes = [];\n\n    if ($scopedSlots.left) {\n      childNodes.push(h('span', {\n        class: 'vxe-pager--left-wrapper'\n      }, $scopedSlots.left.call(this, {\n        $grid: $xegrid\n      })));\n    }\n\n    this.layouts.forEach(function (name) {\n      childNodes.push(_this[\"render\".concat(name)](h));\n    });\n\n    if ($scopedSlots.right) {\n      childNodes.push(h('span', {\n        class: 'vxe-pager--right-wrapper'\n      }, $scopedSlots.right.call(this, {\n        $grid: $xegrid\n      })));\n    }\n\n    return h('div', {\n      class: ['vxe-pager', className ? XEUtils.isFunction(className) ? className({\n        $pager: this\n      }) : className : '', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, \"align--\".concat(align), align), _defineProperty(_ref, 'is--border', this.border), _defineProperty(_ref, 'is--background', this.background), _defineProperty(_ref, 'is--perfect', this.perfect), _defineProperty(_ref, 'is--hidden', this.autoHidden && this.pageCount === 1), _defineProperty(_ref, 'is--loading', this.loading), _ref)]\n    }, [h('div', {\n      class: 'vxe-pager--wrapper'\n    }, childNodes)]);\n  },\n  methods: {\n    // 上一页\n    renderPrevPage: function renderPrevPage(h) {\n      return h('button', {\n        class: ['vxe-pager--prev-btn', {\n          'is--disabled': this.currentPage <= 1\n        }],\n        attrs: {\n          title: GlobalConfig.i18n('vxe.pager.prevPage')\n        },\n        on: {\n          click: this.prevPage\n        }\n      }, [h('i', {\n        class: ['vxe-pager--btn-icon', this.iconPrevPage || GlobalConfig.icon.PAGER_PREV_PAGE]\n      })]);\n    },\n    // 向上翻页\n    renderPrevJump: function renderPrevJump(h, tagName) {\n      return h(tagName || 'button', {\n        class: ['vxe-pager--jump-prev', {\n          'is--fixed': !tagName,\n          'is--disabled': this.currentPage <= 1\n        }],\n        attrs: {\n          title: GlobalConfig.i18n('vxe.pager.prevJump')\n        },\n        on: {\n          click: this.prevJump\n        }\n      }, [tagName ? h('i', {\n        class: ['vxe-pager--jump-more-icon', this.iconJumpMore || GlobalConfig.icon.PAGER_JUMP_MORE]\n      }) : null, h('i', {\n        class: ['vxe-pager--jump-icon', this.iconJumpPrev || GlobalConfig.icon.PAGER_JUMP_PREV]\n      })]);\n    },\n    // number\n    renderNumber: function renderNumber(h) {\n      return h('span', {\n        class: 'vxe-pager--btn-wrapper'\n      }, this.renderPageBtn(h));\n    },\n    // jumpNumber\n    renderJumpNumber: function renderJumpNumber(h) {\n      return h('span', {\n        class: 'vxe-pager--btn-wrapper'\n      }, this.renderPageBtn(h, true));\n    },\n    // 向下翻页\n    renderNextJump: function renderNextJump(h, tagName) {\n      return h(tagName || 'button', {\n        class: ['vxe-pager--jump-next', {\n          'is--fixed': !tagName,\n          'is--disabled': this.currentPage >= this.pageCount\n        }],\n        attrs: {\n          title: GlobalConfig.i18n('vxe.pager.nextJump')\n        },\n        on: {\n          click: this.nextJump\n        }\n      }, [tagName ? h('i', {\n        class: ['vxe-pager--jump-more-icon', this.iconJumpMore || GlobalConfig.icon.PAGER_JUMP_MORE]\n      }) : null, h('i', {\n        class: ['vxe-pager--jump-icon', this.iconJumpNext || GlobalConfig.icon.PAGER_JUMP_NEXT]\n      })]);\n    },\n    // 下一页\n    renderNextPage: function renderNextPage(h) {\n      return h('button', {\n        class: ['vxe-pager--next-btn', {\n          'is--disabled': this.currentPage >= this.pageCount\n        }],\n        attrs: {\n          title: GlobalConfig.i18n('vxe.pager.nextPage')\n        },\n        on: {\n          click: this.nextPage\n        }\n      }, [h('i', {\n        class: ['vxe-pager--btn-icon', this.iconNextPage || GlobalConfig.icon.PAGER_NEXT_PAGE]\n      })]);\n    },\n    // sizes\n    renderSizes: function renderSizes(h) {\n      var _this2 = this;\n\n      return h('vxe-select', {\n        class: 'vxe-pager--sizes',\n        props: {\n          value: this.pageSize,\n          placement: 'top',\n          transfer: this.transfer,\n          options: this.sizeList\n        },\n        on: {\n          change: function change(_ref2) {\n            var value = _ref2.value;\n\n            _this2.pageSizeEvent(value);\n          }\n        }\n      });\n    },\n    // FullJump\n    renderFullJump: function renderFullJump(h) {\n      return this.renderJump(h, true);\n    },\n    // Jump\n    renderJump: function renderJump(h, isFull) {\n      return h('span', {\n        class: 'vxe-pager--jump'\n      }, [isFull ? h('span', {\n        class: 'vxe-pager--goto-text'\n      }, GlobalConfig.i18n('vxe.pager.goto')) : null, h('input', {\n        class: 'vxe-pager--goto',\n        domProps: {\n          value: this.currentPage\n        },\n        attrs: {\n          type: 'text',\n          autocomplete: 'off'\n        },\n        on: {\n          keydown: this.jumpKeydownEvent,\n          blur: this.triggerJumpEvent\n        }\n      }), isFull ? h('span', {\n        class: 'vxe-pager--classifier-text'\n      }, GlobalConfig.i18n('vxe.pager.pageClassifier')) : null]);\n    },\n    // PageCount\n    renderPageCount: function renderPageCount(h) {\n      return h('span', {\n        class: 'vxe-pager--count'\n      }, [h('span', {\n        class: 'vxe-pager--separator'\n      }), h('span', this.pageCount)]);\n    },\n    // total\n    renderTotal: function renderTotal(h) {\n      return h('span', {\n        class: 'vxe-pager--total'\n      }, GlobalConfig.i18n('vxe.pager.total', [this.total]));\n    },\n    // number\n    renderPageBtn: function renderPageBtn(h, showJump) {\n      var _this3 = this;\n\n      var numList = this.numList,\n          currentPage = this.currentPage,\n          pageCount = this.pageCount,\n          pagerCount = this.pagerCount,\n          offsetNumber = this.offsetNumber;\n      var nums = [];\n      var isOv = pageCount > pagerCount;\n      var isLt = isOv && currentPage > offsetNumber + 1;\n      var isGt = isOv && currentPage < pageCount - offsetNumber;\n      var startNumber = 1;\n\n      if (isOv) {\n        if (currentPage >= pageCount - offsetNumber) {\n          startNumber = Math.max(pageCount - numList.length + 1, 1);\n        } else {\n          startNumber = Math.max(currentPage - offsetNumber, 1);\n        }\n      }\n\n      if (showJump && isLt) {\n        nums.push(h('button', {\n          class: 'vxe-pager--num-btn',\n          on: {\n            click: function click() {\n              return _this3.jumpPage(1);\n            }\n          }\n        }, 1), this.renderPrevJump(h, 'span'));\n      }\n\n      numList.forEach(function (item, index) {\n        var number = startNumber + index;\n\n        if (number <= pageCount) {\n          nums.push(h('button', {\n            class: ['vxe-pager--num-btn', {\n              'is--active': currentPage === number\n            }],\n            on: {\n              click: function click() {\n                return _this3.jumpPage(number);\n              }\n            },\n            key: number\n          }, number));\n        }\n      });\n\n      if (showJump && isGt) {\n        nums.push(this.renderNextJump(h, 'button'), h('button', {\n          class: 'vxe-pager--num-btn',\n          on: {\n            click: function click() {\n              return _this3.jumpPage(pageCount);\n            }\n          }\n        }, pageCount));\n      }\n\n      return nums;\n    },\n    getPageCount: function getPageCount(total, size) {\n      return Math.max(Math.ceil(total / size), 1);\n    },\n    prevPage: function prevPage() {\n      var currentPage = this.currentPage,\n          pageCount = this.pageCount;\n\n      if (currentPage > 1) {\n        this.jumpPage(Math.min(pageCount, Math.max(currentPage - 1, 1)));\n      }\n    },\n    nextPage: function nextPage() {\n      var currentPage = this.currentPage,\n          pageCount = this.pageCount;\n\n      if (currentPage < pageCount) {\n        this.jumpPage(Math.min(pageCount, currentPage + 1));\n      }\n    },\n    prevJump: function prevJump() {\n      this.jumpPage(Math.max(this.currentPage - this.numList.length, 1));\n    },\n    nextJump: function nextJump() {\n      this.jumpPage(Math.min(this.currentPage + this.numList.length, this.pageCount));\n    },\n    jumpPage: function jumpPage(currentPage) {\n      if (currentPage !== this.currentPage) {\n        this.$emit('update:currentPage', currentPage);\n        this.$emit('page-change', {\n          type: 'current',\n          pageSize: this.pageSize,\n          currentPage: currentPage\n        });\n      }\n    },\n    pageSizeEvent: function pageSizeEvent(pageSize) {\n      this.changePageSize(pageSize);\n    },\n    changePageSize: function changePageSize(pageSize) {\n      if (pageSize !== this.pageSize) {\n        this.$emit('update:pageSize', pageSize);\n        this.$emit('page-change', {\n          type: 'size',\n          pageSize: pageSize,\n          currentPage: Math.min(this.currentPage, this.getPageCount(this.total, pageSize))\n        });\n      }\n    },\n    jumpKeydownEvent: function jumpKeydownEvent(evnt) {\n      if (evnt.keyCode === 13) {\n        this.triggerJumpEvent(evnt);\n      } else if (evnt.keyCode === 38) {\n        evnt.preventDefault();\n        this.nextPage();\n      } else if (evnt.keyCode === 40) {\n        evnt.preventDefault();\n        this.prevPage();\n      }\n    },\n    triggerJumpEvent: function triggerJumpEvent(evnt) {\n      var value = XEUtils.toNumber(evnt.target.value);\n      var current = value <= 0 ? 1 : value >= this.pageCount ? this.pageCount : value;\n      evnt.target.value = current;\n      this.jumpPage(current);\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\pager\\src\\pager.js"],"names":["name","mixins","props","size","type","default","GlobalConfig","layouts","currentPage","loading","pageSize","total","pagerCount","pageSizes","align","border","background","perfect","autoHidden","transfer","className","iconPrevPage","iconJumpPrev","iconJumpNext","iconNextPage","iconJumpMore","String","inject","$xegrid","computed","isSizes","pageCount","numList","len","rest","index","offsetNumber","Math","sizeList","XEUtils","value","label","render","$scopedSlots","vSize","childNodes","h","class","$grid","$pager","methods","renderPrevPage","attrs","title","on","click","prevPage","renderPrevJump","tagName","prevJump","renderNumber","renderJumpNumber","renderNextJump","nextJump","renderNextPage","nextPage","renderSizes","placement","options","change","renderFullJump","renderJump","isFull","domProps","autocomplete","keydown","blur","triggerJumpEvent","renderPageCount","renderTotal","renderPageBtn","nums","isOv","isLt","isGt","startNumber","showJump","number","key","getPageCount","jumpPage","pageSizeEvent","changePageSize","jumpKeydownEvent","evnt","current"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\n\r\nexport default {\r\n  name: 'VxePager',\r\n  mixins: [vSize],\r\n  props: {\r\n    size: { type: String, default: () => GlobalConfig.pager.size || GlobalConfig.size },\r\n    // 自定义布局\r\n    layouts: { type: Array, default: () => GlobalConfig.pager.layouts || ['PrevJump', 'PrevPage', 'Jump', 'PageCount', 'NextPage', 'NextJump', 'Sizes', 'Total'] },\r\n    // 当前页\r\n    currentPage: { type: Number, default: 1 },\r\n    // 加载中\r\n    loading: Boolean,\r\n    // 每页大小\r\n    pageSize: { type: Number, default: () => GlobalConfig.pager.pageSize || 10 },\r\n    // 总条数\r\n    total: { type: Number, default: 0 },\r\n    // 显示页码按钮的数量\r\n    pagerCount: { type: Number, default: () => GlobalConfig.pager.pagerCount || 7 },\r\n    // 每页大小选项列表\r\n    pageSizes: { type: Array, default: () => GlobalConfig.pager.pageSizes || [10, 15, 20, 50, 100] },\r\n    // 列对其方式\r\n    align: { type: String, default: () => GlobalConfig.pager.align },\r\n    // 带边框\r\n    border: { type: Boolean, default: () => GlobalConfig.pager.border },\r\n    // 带背景颜色\r\n    background: { type: Boolean, default: () => GlobalConfig.pager.background },\r\n    // 配套的样式\r\n    perfect: { type: Boolean, default: () => GlobalConfig.pager.perfect },\r\n    // 当只有一页时隐藏\r\n    autoHidden: { type: Boolean, default: () => GlobalConfig.pager.autoHidden },\r\n    transfer: { type: Boolean, default: () => GlobalConfig.pager.transfer },\r\n    className: [String, Function],\r\n    // 自定义图标\r\n    iconPrevPage: String,\r\n    iconJumpPrev: String,\r\n    iconJumpNext: String,\r\n    iconNextPage: String,\r\n    iconJumpMore: String\r\n  },\r\n  inject: {\r\n    $xegrid: {\r\n      default: null\r\n    }\r\n  },\r\n  computed: {\r\n    isSizes () {\r\n      return this.layouts.some(name => name === 'Sizes')\r\n    },\r\n    pageCount () {\r\n      return this.getPageCount(this.total, this.pageSize)\r\n    },\r\n    numList () {\r\n      const len = this.pageCount > this.pagerCount ? this.pagerCount - 2 : this.pagerCount\r\n      const rest = []\r\n      for (let index = 0; index < len; index++) {\r\n        rest.push(index)\r\n      }\r\n      return rest\r\n    },\r\n    offsetNumber () {\r\n      return Math.floor((this.pagerCount - 2) / 2)\r\n    },\r\n    sizeList () {\r\n      return this.pageSizes.map(item => {\r\n        if (XEUtils.isNumber(item)) {\r\n          return {\r\n            value: item,\r\n            label: `${GlobalConfig.i18n('vxe.pager.pagesize', [item])}`\r\n          }\r\n        }\r\n        return { value: '', label: '', ...item }\r\n      })\r\n    }\r\n  },\r\n  render (h) {\r\n    const { $scopedSlots, $xegrid, vSize, align, className } = this\r\n    const childNodes = []\r\n    if ($scopedSlots.left) {\r\n      childNodes.push(\r\n        h('span', {\r\n          class: 'vxe-pager--left-wrapper'\r\n        }, $scopedSlots.left.call(this, { $grid: $xegrid }))\r\n      )\r\n    }\r\n    this.layouts.forEach(name => {\r\n      childNodes.push(this[`render${name}`](h))\r\n    })\r\n    if ($scopedSlots.right) {\r\n      childNodes.push(\r\n        h('span', {\r\n          class: 'vxe-pager--right-wrapper'\r\n        }, $scopedSlots.right.call(this, { $grid: $xegrid }))\r\n      )\r\n    }\r\n    return h('div', {\r\n      class: ['vxe-pager', className ? (XEUtils.isFunction(className) ? className({ $pager: this }) : className) : '', {\r\n        [`size--${vSize}`]: vSize,\r\n        [`align--${align}`]: align,\r\n        'is--border': this.border,\r\n        'is--background': this.background,\r\n        'is--perfect': this.perfect,\r\n        'is--hidden': this.autoHidden && this.pageCount === 1,\r\n        'is--loading': this.loading\r\n      }]\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-pager--wrapper'\r\n      }, childNodes)\r\n    ])\r\n  },\r\n  methods: {\r\n    // 上一页\r\n    renderPrevPage (h) {\r\n      return h('button', {\r\n        class: ['vxe-pager--prev-btn', {\r\n          'is--disabled': this.currentPage <= 1\r\n        }],\r\n        attrs: {\r\n          title: GlobalConfig.i18n('vxe.pager.prevPage')\r\n        },\r\n        on: {\r\n          click: this.prevPage\r\n        }\r\n      }, [\r\n        h('i', {\r\n          class: ['vxe-pager--btn-icon', this.iconPrevPage || GlobalConfig.icon.PAGER_PREV_PAGE]\r\n        })\r\n      ])\r\n    },\r\n    // 向上翻页\r\n    renderPrevJump (h, tagName) {\r\n      return h(tagName || 'button', {\r\n        class: ['vxe-pager--jump-prev', {\r\n          'is--fixed': !tagName,\r\n          'is--disabled': this.currentPage <= 1\r\n        }],\r\n        attrs: {\r\n          title: GlobalConfig.i18n('vxe.pager.prevJump')\r\n        },\r\n        on: {\r\n          click: this.prevJump\r\n        }\r\n      }, [\r\n        tagName ? h('i', {\r\n          class: ['vxe-pager--jump-more-icon', this.iconJumpMore || GlobalConfig.icon.PAGER_JUMP_MORE]\r\n        }) : null,\r\n        h('i', {\r\n          class: ['vxe-pager--jump-icon', this.iconJumpPrev || GlobalConfig.icon.PAGER_JUMP_PREV]\r\n        })\r\n      ])\r\n    },\r\n    // number\r\n    renderNumber (h) {\r\n      return h('span', {\r\n        class: 'vxe-pager--btn-wrapper'\r\n      }, this.renderPageBtn(h))\r\n    },\r\n    // jumpNumber\r\n    renderJumpNumber (h) {\r\n      return h('span', {\r\n        class: 'vxe-pager--btn-wrapper'\r\n      }, this.renderPageBtn(h, true))\r\n    },\r\n    // 向下翻页\r\n    renderNextJump (h, tagName) {\r\n      return h(tagName || 'button', {\r\n        class: ['vxe-pager--jump-next', {\r\n          'is--fixed': !tagName,\r\n          'is--disabled': this.currentPage >= this.pageCount\r\n        }],\r\n        attrs: {\r\n          title: GlobalConfig.i18n('vxe.pager.nextJump')\r\n        },\r\n        on: {\r\n          click: this.nextJump\r\n        }\r\n      }, [\r\n        tagName ? h('i', {\r\n          class: ['vxe-pager--jump-more-icon', this.iconJumpMore || GlobalConfig.icon.PAGER_JUMP_MORE]\r\n        }) : null,\r\n        h('i', {\r\n          class: ['vxe-pager--jump-icon', this.iconJumpNext || GlobalConfig.icon.PAGER_JUMP_NEXT]\r\n        })\r\n      ])\r\n    },\r\n    // 下一页\r\n    renderNextPage (h) {\r\n      return h('button', {\r\n        class: ['vxe-pager--next-btn', {\r\n          'is--disabled': this.currentPage >= this.pageCount\r\n        }],\r\n        attrs: {\r\n          title: GlobalConfig.i18n('vxe.pager.nextPage')\r\n        },\r\n        on: {\r\n          click: this.nextPage\r\n        }\r\n      }, [\r\n        h('i', {\r\n          class: ['vxe-pager--btn-icon', this.iconNextPage || GlobalConfig.icon.PAGER_NEXT_PAGE]\r\n        })\r\n      ])\r\n    },\r\n    // sizes\r\n    renderSizes (h) {\r\n      return h('vxe-select', {\r\n        class: 'vxe-pager--sizes',\r\n        props: {\r\n          value: this.pageSize,\r\n          placement: 'top',\r\n          transfer: this.transfer,\r\n          options: this.sizeList\r\n        },\r\n        on: {\r\n          change: ({ value }) => {\r\n            this.pageSizeEvent(value)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // FullJump\r\n    renderFullJump (h) {\r\n      return this.renderJump(h, true)\r\n    },\r\n    // Jump\r\n    renderJump (h, isFull) {\r\n      return h('span', {\r\n        class: 'vxe-pager--jump'\r\n      }, [\r\n        isFull ? h('span', {\r\n          class: 'vxe-pager--goto-text'\r\n        }, GlobalConfig.i18n('vxe.pager.goto')) : null,\r\n        h('input', {\r\n          class: 'vxe-pager--goto',\r\n          domProps: {\r\n            value: this.currentPage\r\n          },\r\n          attrs: {\r\n            type: 'text',\r\n            autocomplete: 'off'\r\n          },\r\n          on: {\r\n            keydown: this.jumpKeydownEvent,\r\n            blur: this.triggerJumpEvent\r\n          }\r\n        }),\r\n        isFull ? h('span', {\r\n          class: 'vxe-pager--classifier-text'\r\n        }, GlobalConfig.i18n('vxe.pager.pageClassifier')) : null\r\n      ])\r\n    },\r\n    // PageCount\r\n    renderPageCount (h) {\r\n      return h('span', {\r\n        class: 'vxe-pager--count'\r\n      }, [\r\n        h('span', {\r\n          class: 'vxe-pager--separator'\r\n        }),\r\n        h('span', this.pageCount)\r\n      ])\r\n    },\r\n    // total\r\n    renderTotal (h) {\r\n      return h('span', {\r\n        class: 'vxe-pager--total'\r\n      }, GlobalConfig.i18n('vxe.pager.total', [this.total]))\r\n    },\r\n    // number\r\n    renderPageBtn (h, showJump) {\r\n      const { numList, currentPage, pageCount, pagerCount, offsetNumber } = this\r\n      const nums = []\r\n      const isOv = pageCount > pagerCount\r\n      const isLt = isOv && currentPage > offsetNumber + 1\r\n      const isGt = isOv && currentPage < pageCount - offsetNumber\r\n      let startNumber = 1\r\n      if (isOv) {\r\n        if (currentPage >= pageCount - offsetNumber) {\r\n          startNumber = Math.max(pageCount - numList.length + 1, 1)\r\n        } else {\r\n          startNumber = Math.max(currentPage - offsetNumber, 1)\r\n        }\r\n      }\r\n      if (showJump && isLt) {\r\n        nums.push(\r\n          h('button', {\r\n            class: 'vxe-pager--num-btn',\r\n            on: {\r\n              click: () => this.jumpPage(1)\r\n            }\r\n          }, 1),\r\n          this.renderPrevJump(h, 'span')\r\n        )\r\n      }\r\n      numList.forEach((item, index) => {\r\n        const number = startNumber + index\r\n        if (number <= pageCount) {\r\n          nums.push(\r\n            h('button', {\r\n              class: ['vxe-pager--num-btn', {\r\n                'is--active': currentPage === number\r\n              }],\r\n              on: {\r\n                click: () => this.jumpPage(number)\r\n              },\r\n              key: number\r\n            }, number)\r\n          )\r\n        }\r\n      })\r\n      if (showJump && isGt) {\r\n        nums.push(\r\n          this.renderNextJump(h, 'button'),\r\n          h('button', {\r\n            class: 'vxe-pager--num-btn',\r\n            on: {\r\n              click: () => this.jumpPage(pageCount)\r\n            }\r\n          }, pageCount)\r\n        )\r\n      }\r\n      return nums\r\n    },\r\n    getPageCount (total, size) {\r\n      return Math.max(Math.ceil(total / size), 1)\r\n    },\r\n    prevPage () {\r\n      const { currentPage, pageCount } = this\r\n      if (currentPage > 1) {\r\n        this.jumpPage(Math.min(pageCount, Math.max(currentPage - 1, 1)))\r\n      }\r\n    },\r\n    nextPage () {\r\n      const { currentPage, pageCount } = this\r\n      if (currentPage < pageCount) {\r\n        this.jumpPage(Math.min(pageCount, currentPage + 1))\r\n      }\r\n    },\r\n    prevJump () {\r\n      this.jumpPage(Math.max(this.currentPage - this.numList.length, 1))\r\n    },\r\n    nextJump () {\r\n      this.jumpPage(Math.min(this.currentPage + this.numList.length, this.pageCount))\r\n    },\r\n    jumpPage (currentPage) {\r\n      if (currentPage !== this.currentPage) {\r\n        this.$emit('update:currentPage', currentPage)\r\n        this.$emit('page-change', { type: 'current', pageSize: this.pageSize, currentPage })\r\n      }\r\n    },\r\n    pageSizeEvent (pageSize) {\r\n      this.changePageSize(pageSize)\r\n    },\r\n    changePageSize (pageSize) {\r\n      if (pageSize !== this.pageSize) {\r\n        this.$emit('update:pageSize', pageSize)\r\n        this.$emit('page-change', { type: 'size', pageSize, currentPage: Math.min(this.currentPage, this.getPageCount(this.total, pageSize)) })\r\n      }\r\n    },\r\n    jumpKeydownEvent (evnt) {\r\n      if (evnt.keyCode === 13) {\r\n        this.triggerJumpEvent(evnt)\r\n      } else if (evnt.keyCode === 38) {\r\n        evnt.preventDefault()\r\n        this.nextPage()\r\n      } else if (evnt.keyCode === 40) {\r\n        evnt.preventDefault()\r\n        this.prevPage()\r\n      }\r\n    },\r\n    triggerJumpEvent (evnt) {\r\n      const value = XEUtils.toNumber(evnt.target.value)\r\n      const current = value <= 0 ? 1 : value >= this.pageCount ? this.pageCount : value\r\n      evnt.target.value = current\r\n      this.jumpPage(current)\r\n    }\r\n  }\r\n}\r\n"]}]}