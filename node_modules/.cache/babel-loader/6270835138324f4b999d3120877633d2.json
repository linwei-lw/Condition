{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\v-x-e-table\\index.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\v-x-e-table\\index.js","mtime":1635230121547},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from '../v-x-e-table/src/conf';\nimport { interceptor } from './src/interceptor';\nimport { renderer } from './src/renderer';\nimport { commands } from './src/commands';\nimport { menus } from './src/menus';\nimport { formats } from './src/formats';\nimport { setup } from './src/setup';\nimport { UtilTools } from '../tools';\nconst installedPlugins = [];\nexport function use(Plugin, options) {\n  /* eslint-disable @typescript-eslint/no-use-before-define */\n  if (Plugin && Plugin.install) {\n    if (installedPlugins.indexOf(Plugin) === -1) {\n      Plugin.install(VXETable, options);\n      installedPlugins.push(Plugin);\n    }\n  }\n\n  return VXETable;\n}\n/**\r\n * 检测模块的安装顺序是否正确\r\n */\n\nfunction reg(key) {\n  /* eslint-disable @typescript-eslint/no-use-before-define */\n  // 检测安装顺序是否正确\n  if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n    if (VXETable.Table) {\n      UtilTools.error('vxe.error.useErr', [key]);\n    }\n  }\n\n  VXETable[`_${key}`] = 1;\n}\n\nfunction getExportOrImpotType(types, flag) {\n  const rest = [];\n  XEUtils.objectEach(types, (val, type) => {\n    if (val === 0 || val === flag) {\n      rest.push(type);\n    }\n  });\n  return rest;\n}\n\nclass VXETableConfig {\n  /**\r\n   * 获取当前的 zIndex\r\n   */\n  get zIndex() {\n    return UtilTools.getLastZIndex();\n  }\n  /**\r\n   * 获取下一个 zIndex\r\n   */\n\n\n  get nextZIndex() {\n    return UtilTools.nextZIndex();\n  }\n  /**\r\n   * 获取所有导出类型\r\n   */\n\n\n  get exportTypes() {\n    return getExportOrImpotType(GlobalConfig.export.types, 1);\n  }\n  /**\r\n   * 获取所有导入类型\r\n   */\n\n\n  get importTypes() {\n    return getExportOrImpotType(GlobalConfig.export.types, 2);\n  }\n\n}\n\nexport const config = new VXETableConfig();\nexport function t(key, args) {\n  return GlobalConfig.i18n(key, args);\n}\nexport function _t(key, args) {\n  return key ? XEUtils.toString(GlobalConfig.translate ? GlobalConfig.translate(key, args) : key) : '';\n}\nexport const v = 'v3';\nexport const VXETable = {\n  v,\n  reg,\n  use,\n  setup,\n  interceptor,\n  renderer,\n  commands,\n  formats,\n  menus,\n  config,\n  t,\n  _t\n};\nexport * from './src/interceptor';\nexport * from './src/renderer';\nexport * from './src/commands';\nexport * from './src/menus';\nexport * from './src/formats';\nexport * from './src/setup';\nexport default VXETable;",null]}