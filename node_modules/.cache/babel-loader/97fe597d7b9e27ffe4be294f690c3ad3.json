{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\grid\\src\\grid.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\grid\\src\\grid.js","mtime":1635230121576},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _toConsumableArray from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport Table from \"../../table\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport VXETable from \"../../v-x-e-table\";\nimport { UtilTools, DomTools, GlobalEvent, isEnableConf } from \"../../tools\";\nimport { getOffsetHeight, getPaddingTopBottomSize } from \"../../tools/src/dom\";\nvar methods = {};\nvar propKeys = Object.keys(Table.props);\n\nfunction renderDefaultForm(h, _vm) {\n  var $scopedSlots = _vm.$scopedSlots,\n      proxyConfig = _vm.proxyConfig,\n      proxyOpts = _vm.proxyOpts,\n      formData = _vm.formData,\n      formConfig = _vm.formConfig,\n      formOpts = _vm.formOpts;\n\n  if (isEnableConf(formConfig) && formOpts.items && formOpts.items.length) {\n    var formSlots = {};\n\n    if (!formOpts.inited) {\n      formOpts.inited = true;\n      var beforeItem = proxyOpts.beforeItem;\n\n      if (proxyOpts && beforeItem) {\n        formOpts.items.forEach(function (item) {\n          beforeItem.call(_vm, {\n            $grid: _vm,\n            item: item\n          });\n        });\n      }\n    } // 处理插槽\n\n\n    formOpts.items.forEach(function (item) {\n      XEUtils.each(item.slots, function (func) {\n        if (!XEUtils.isFunction(func)) {\n          if ($scopedSlots[func]) {\n            formSlots[func] = $scopedSlots[func];\n          }\n        }\n      });\n    });\n    return [h('vxe-form', {\n      props: Object.assign({}, formOpts, {\n        data: proxyConfig && proxyOpts.form ? formData : formOpts.data\n      }),\n      on: {\n        submit: _vm.submitEvent,\n        reset: _vm.resetEvent,\n        'submit-invalid': _vm.submitInvalidEvent,\n        'toggle-collapse': _vm.togglCollapseEvent\n      },\n      scopedSlots: formSlots\n    })];\n  }\n\n  return [];\n}\n\nfunction getFuncSlot(_vm, optSlots, slotKey) {\n  var $scopedSlots = _vm.$scopedSlots;\n  var funcSlot = optSlots[slotKey];\n\n  if (funcSlot) {\n    if (XEUtils.isString(funcSlot)) {\n      if ($scopedSlots[funcSlot]) {\n        return $scopedSlots[funcSlot];\n      } else {\n        if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n          UtilTools.error('vxe.error.notSlot', [funcSlot]);\n        }\n      }\n    } else {\n      return funcSlot;\n    }\n  }\n\n  return null;\n}\n\nfunction getToolbarSlots(_vm) {\n  var $scopedSlots = _vm.$scopedSlots,\n      toolbarOpts = _vm.toolbarOpts;\n  var toolbarOptSlots = toolbarOpts.slots;\n  var buttonsSlot;\n  var toolsSlot;\n  var slots = {};\n\n  if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n    if ($scopedSlots.buttons && (!toolbarOptSlots || toolbarOptSlots.buttons !== 'buttons')) {\n      UtilTools.warn('vxe.error.reqProp', ['toolbar-config.slots.buttons']);\n    }\n\n    if ($scopedSlots.tools && (!toolbarOptSlots || toolbarOptSlots.tools !== 'tools')) {\n      UtilTools.warn('vxe.error.reqProp', ['toolbar-config.slots.tools']);\n    }\n  }\n\n  if (toolbarOptSlots) {\n    buttonsSlot = getFuncSlot(_vm, toolbarOptSlots, 'buttons');\n    toolsSlot = getFuncSlot(_vm, toolbarOptSlots, 'tools');\n\n    if (buttonsSlot) {\n      slots.buttons = buttonsSlot;\n    }\n\n    if (toolsSlot) {\n      slots.tools = toolsSlot;\n    }\n  }\n\n  return slots;\n}\n\nfunction getPagerSlots(_vm) {\n  var pagerOpts = _vm.pagerOpts;\n  var pagerOptSlots = pagerOpts.slots;\n  var slots = {};\n  var leftSlot;\n  var rightSlot;\n\n  if (pagerOptSlots) {\n    leftSlot = getFuncSlot(_vm, pagerOptSlots, 'left');\n    rightSlot = getFuncSlot(_vm, pagerOptSlots, 'right');\n\n    if (leftSlot) {\n      slots.left = leftSlot;\n    }\n\n    if (rightSlot) {\n      slots.right = rightSlot;\n    }\n  }\n\n  return slots;\n}\n\nfunction getTableOns(_vm) {\n  var $listeners = _vm.$listeners,\n      proxyConfig = _vm.proxyConfig,\n      proxyOpts = _vm.proxyOpts;\n  var ons = {};\n  XEUtils.each($listeners, function (cb, type) {\n    ons[type] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _vm.$emit.apply(_vm, [type].concat(args));\n    };\n  });\n\n  if (proxyConfig) {\n    if (proxyOpts.sort) {\n      ons['sort-change'] = _vm.sortChangeEvent;\n    }\n\n    if (proxyOpts.filter) {\n      ons['filter-change'] = _vm.filterChangeEvent;\n    }\n  }\n\n  return ons;\n}\n\nObject.keys(Table.methods).forEach(function (name) {\n  methods[name] = function () {\n    var _this$$refs$xTable;\n\n    return this.$refs.xTable && (_this$$refs$xTable = this.$refs.xTable)[name].apply(_this$$refs$xTable, arguments);\n  };\n});\nexport default {\n  name: 'VxeGrid',\n  mixins: [vSize],\n  props: _objectSpread(_objectSpread({}, Table.props), {}, {\n    columns: Array,\n    pagerConfig: [Boolean, Object],\n    proxyConfig: Object,\n    toolbar: [Boolean, Object],\n    toolbarConfig: [Boolean, Object],\n    formConfig: [Boolean, Object],\n    zoomConfig: Object,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.grid.size || GlobalConfig.size;\n      }\n    }\n  }),\n  provide: function provide() {\n    return {\n      $xegrid: this\n    };\n  },\n  data: function data() {\n    return {\n      tableLoading: false,\n      isZMax: false,\n      tableData: [],\n      pendingRecords: [],\n      filterData: [],\n      formData: {},\n      sortData: [],\n      tZindex: 0,\n      tablePage: {\n        total: 0,\n        pageSize: 10,\n        currentPage: 1\n      }\n    };\n  },\n  computed: {\n    isMsg: function isMsg() {\n      return this.proxyOpts.message !== false;\n    },\n    proxyOpts: function proxyOpts() {\n      return Object.assign({}, GlobalConfig.grid.proxyConfig, this.proxyConfig);\n    },\n    pagerOpts: function pagerOpts() {\n      return Object.assign({}, GlobalConfig.grid.pagerConfig, this.pagerConfig);\n    },\n    formOpts: function formOpts() {\n      return Object.assign({}, GlobalConfig.grid.formConfig, this.formConfig);\n    },\n    toolbarOpts: function toolbarOpts() {\n      return Object.assign({}, GlobalConfig.grid.toolbarConfig, this.toolbarConfig || this.toolbar);\n    },\n    zoomOpts: function zoomOpts() {\n      return Object.assign({}, GlobalConfig.grid.zoomConfig, this.zoomConfig);\n    },\n    renderStyle: function renderStyle() {\n      return this.isZMax ? {\n        zIndex: this.tZindex,\n        height: '100%'\n      } : {\n        height: '100%'\n      };\n    },\n    tableExtendProps: function tableExtendProps() {\n      var _this = this;\n\n      var rest = {};\n      propKeys.forEach(function (key) {\n        rest[key] = _this[key];\n      });\n      return rest;\n    },\n    tableProps: function tableProps() {\n      var isZMax = this.isZMax,\n          seqConfig = this.seqConfig,\n          pagerConfig = this.pagerConfig,\n          loading = this.loading,\n          editConfig = this.editConfig,\n          proxyConfig = this.proxyConfig,\n          proxyOpts = this.proxyOpts,\n          tableExtendProps = this.tableExtendProps,\n          tableLoading = this.tableLoading,\n          tablePage = this.tablePage,\n          tableData = this.tableData;\n      var tableProps = Object.assign({}, tableExtendProps);\n\n      if (isZMax) {\n        if (tableExtendProps.maxHeight) {\n          tableProps.maxHeight = 'auto';\n        } else {\n          tableProps.height = 'auto';\n        }\n      }\n\n      if (proxyConfig) {\n        tableProps.loading = loading || tableLoading;\n        tableProps.data = tableData;\n        tableProps.rowClassName = this.handleRowClassName;\n\n        if (proxyOpts.seq && isEnableConf(pagerConfig)) {\n          tableProps.seqConfig = Object.assign({}, seqConfig, {\n            startIndex: (tablePage.currentPage - 1) * tablePage.pageSize\n          });\n        }\n      }\n\n      if (editConfig) {\n        tableProps.editConfig = Object.assign({}, editConfig, {\n          activeMethod: this.handleActiveMethod\n        });\n      }\n\n      return tableProps;\n    }\n  },\n  watch: {\n    columns: function columns(value) {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        return _this2.loadColumn(value);\n      });\n    },\n    toolbar: function toolbar(value) {\n      if (value) {\n        this.initToolbar();\n      }\n    },\n    toolbarConfig: function toolbarConfig(value) {\n      if (value) {\n        this.initToolbar();\n      }\n    },\n    proxyConfig: function proxyConfig() {\n      this.initProxy();\n    },\n    pagerConfig: function pagerConfig() {\n      this.initPages();\n    }\n  },\n  created: function created() {\n    var data = this.data,\n        formOpts = this.formOpts,\n        proxyOpts = this.proxyOpts,\n        proxyConfig = this.proxyConfig;\n\n    if (proxyConfig && (data || proxyOpts.form && formOpts.data)) {\n      console.error('[vxe-grid] There is a conflict between the props proxy-config and data.');\n    }\n\n    if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n      if (this.toolbar) {\n        UtilTools.warn('vxe.error.delProp', ['grid.toolbar', 'grid.toolbar-config']);\n      }\n\n      if (this.toolbarConfig && !XEUtils.isObject(this.toolbarConfig)) {\n        UtilTools.warn('vxe.error.errProp', [\"grid.toolbar-config=\".concat(this.toolbarConfig), 'grid.toolbar-config={}']);\n      }\n    }\n\n    GlobalEvent.on(this, 'keydown', this.handleGlobalKeydownEvent);\n  },\n  mounted: function mounted() {\n    if (this.columns && this.columns.length) {\n      this.loadColumn(this.columns);\n    }\n\n    this.initToolbar();\n    this.initPages();\n    this.initProxy();\n  },\n  destroyed: function destroyed() {\n    GlobalEvent.off(this, 'keydown');\n  },\n  render: function render(h) {\n    var _ref;\n\n    var $scopedSlots = this.$scopedSlots,\n        vSize = this.vSize,\n        isZMax = this.isZMax;\n    var hasForm = !!($scopedSlots.form || isEnableConf(this.formConfig));\n    var hasToolbar = !!($scopedSlots.toolbar || isEnableConf(this.toolbarConfig) || this.toolbar);\n    var hasPager = !!($scopedSlots.pager || isEnableConf(this.pagerConfig));\n    return h('div', {\n      class: ['vxe-grid', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--animat', !!this.animat), _defineProperty(_ref, 'is--round', this.round), _defineProperty(_ref, 'is--maximize', isZMax), _defineProperty(_ref, 'is--loading', this.loading || this.tableLoading), _ref)],\n      style: this.renderStyle\n    }, [\n    /**\r\n     * 渲染表单\r\n     */\n    hasForm ? h('div', {\n      ref: 'formWrapper',\n      class: 'vxe-grid--form-wrapper'\n    }, $scopedSlots.form ? $scopedSlots.form.call(this, {\n      $grid: this\n    }, h) : renderDefaultForm(h, this)) : null,\n    /**\r\n     * 渲染工具栏\r\n     */\n    hasToolbar ? h('div', {\n      ref: 'toolbarWrapper',\n      class: 'vxe-grid--toolbar-wrapper'\n    }, $scopedSlots.toolbar ? $scopedSlots.toolbar.call(this, {\n      $grid: this\n    }, h) : [h('vxe-toolbar', {\n      props: this.toolbarOpts,\n      ref: 'xToolbar',\n      scopedSlots: getToolbarSlots(this)\n    })]) : null,\n    /**\r\n     * 渲染表格顶部区域\r\n     */\n    $scopedSlots.top ? h('div', {\n      ref: 'topWrapper',\n      class: 'vxe-grid--top-wrapper'\n    }, $scopedSlots.top.call(this, {\n      $grid: this\n    }, h)) : null,\n    /**\r\n     * 渲染表格\r\n     */\n    h('vxe-table', {\n      props: this.tableProps,\n      on: getTableOns(this),\n      scopedSlots: $scopedSlots,\n      ref: 'xTable'\n    }),\n    /**\r\n     * 渲染表格底部区域\r\n     */\n    $scopedSlots.bottom ? h('div', {\n      ref: 'bottomWrapper',\n      class: 'vxe-grid--bottom-wrapper'\n    }, $scopedSlots.bottom.call(this, {\n      $grid: this\n    }, h)) : null,\n    /**\r\n     * 渲染分页\r\n     */\n    hasPager ? h('div', {\n      ref: 'pagerWrapper',\n      class: 'vxe-grid--pager-wrapper'\n    }, $scopedSlots.pager ? $scopedSlots.pager.call(this, {\n      $grid: this\n    }, h) : [h('vxe-pager', {\n      props: _objectSpread(_objectSpread({}, this.pagerOpts), this.proxyConfig ? this.tablePage : {}),\n      on: {\n        'page-change': this.pageChangeEvent\n      },\n      scopedSlots: getPagerSlots(this)\n    })]) : null]);\n  },\n  methods: _objectSpread(_objectSpread({}, methods), {}, {\n    callSlot: function callSlot(slotFunc, params, h, vNodes) {\n      if (slotFunc) {\n        var $scopedSlots = this.$scopedSlots;\n\n        if (XEUtils.isString(slotFunc)) {\n          slotFunc = $scopedSlots[slotFunc] || null;\n        }\n\n        if (XEUtils.isFunction(slotFunc)) {\n          return slotFunc.call(this, params, h, vNodes);\n        }\n      }\n\n      return [];\n    },\n    getParentHeight: function getParentHeight() {\n      var $el = this.$el,\n          isZMax = this.isZMax;\n      return (isZMax ? DomTools.getDomNode().visibleHeight : XEUtils.toNumber(getComputedStyle($el.parentNode).height)) - this.getExcludeHeight();\n    },\n\n    /**\r\n     * 获取需要排除的高度\r\n     */\n    getExcludeHeight: function getExcludeHeight() {\n      var $refs = this.$refs,\n          $el = this.$el,\n          isZMax = this.isZMax,\n          height = this.height;\n      var formWrapper = $refs.formWrapper,\n          toolbarWrapper = $refs.toolbarWrapper,\n          topWrapper = $refs.topWrapper,\n          bottomWrapper = $refs.bottomWrapper,\n          pagerWrapper = $refs.pagerWrapper;\n      var parentPaddingSize = isZMax || height !== 'auto' ? 0 : getPaddingTopBottomSize($el.parentNode);\n      return parentPaddingSize + getPaddingTopBottomSize($el) + getOffsetHeight(formWrapper) + getOffsetHeight(toolbarWrapper) + getOffsetHeight(topWrapper) + getOffsetHeight(bottomWrapper) + getOffsetHeight(pagerWrapper);\n    },\n    handleRowClassName: function handleRowClassName(params) {\n      var rowClassName = this.rowClassName;\n      var clss = [];\n\n      if (this.pendingRecords.some(function (item) {\n        return item === params.row;\n      })) {\n        clss.push('row--pending');\n      }\n\n      clss.push(rowClassName ? XEUtils.isFunction(rowClassName) ? rowClassName(params) : rowClassName : '');\n      return clss;\n    },\n    handleActiveMethod: function handleActiveMethod(params) {\n      var editConfig = this.editConfig;\n      var activeMethod = editConfig ? editConfig.activeMethod : null;\n      return this.pendingRecords.indexOf(params.row) === -1 && (!activeMethod || activeMethod(params));\n    },\n    initToolbar: function initToolbar() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        var _this3$$refs = _this3.$refs,\n            xTable = _this3$$refs.xTable,\n            xToolbar = _this3$$refs.xToolbar;\n\n        if (xTable && xToolbar) {\n          xTable.connect(xToolbar);\n        }\n      });\n    },\n    initPages: function initPages() {\n      var tablePage = this.tablePage,\n          pagerConfig = this.pagerConfig,\n          pagerOpts = this.pagerOpts;\n      var currentPage = pagerOpts.currentPage,\n          pageSize = pagerOpts.pageSize;\n\n      if (pagerConfig) {\n        if (currentPage) {\n          tablePage.currentPage = currentPage;\n        }\n\n        if (pageSize) {\n          tablePage.pageSize = pageSize;\n        }\n      }\n    },\n    initProxy: function initProxy() {\n      var _this4 = this;\n\n      var proxyInited = this.proxyInited,\n          proxyConfig = this.proxyConfig,\n          proxyOpts = this.proxyOpts,\n          formConfig = this.formConfig,\n          formOpts = this.formOpts;\n\n      if (proxyConfig) {\n        if (isEnableConf(formConfig) && proxyOpts.form && formOpts.items) {\n          var formData = {};\n          formOpts.items.forEach(function (_ref2) {\n            var field = _ref2.field,\n                itemRender = _ref2.itemRender;\n\n            if (field) {\n              formData[field] = itemRender && !XEUtils.isUndefined(itemRender.defaultValue) ? itemRender.defaultValue : undefined;\n            }\n          });\n          this.formData = formData;\n        }\n\n        if (!proxyInited && proxyOpts.autoLoad !== false) {\n          this.proxyInited = true;\n          this.$nextTick(function () {\n            return _this4.commitProxy('_init');\n          });\n        }\n      }\n    },\n    handleGlobalKeydownEvent: function handleGlobalKeydownEvent(evnt) {\n      var isEsc = evnt.keyCode === 27;\n\n      if (isEsc && this.isZMax && this.zoomOpts.escRestore !== false) {\n        this.triggerZoomEvent(evnt);\n      }\n    },\n\n    /**\r\n     * 提交指令，支持 code 或 button\r\n     * @param {String/Object} code 字符串或对象\r\n     */\n    commitProxy: function commitProxy(proxyTarget) {\n      var _this5 = this;\n\n      var $refs = this.$refs,\n          toolbar = this.toolbar,\n          toolbarConfig = this.toolbarConfig,\n          toolbarOpts = this.toolbarOpts,\n          proxyOpts = this.proxyOpts,\n          tablePage = this.tablePage,\n          pagerConfig = this.pagerConfig,\n          formData = this.formData,\n          isMsg = this.isMsg;\n      var beforeQuery = proxyOpts.beforeQuery,\n          afterQuery = proxyOpts.afterQuery,\n          beforeDelete = proxyOpts.beforeDelete,\n          afterDelete = proxyOpts.afterDelete,\n          beforeSave = proxyOpts.beforeSave,\n          afterSave = proxyOpts.afterSave,\n          _proxyOpts$ajax = proxyOpts.ajax,\n          ajax = _proxyOpts$ajax === void 0 ? {} : _proxyOpts$ajax,\n          _proxyOpts$props = proxyOpts.props,\n          proxyProps = _proxyOpts$props === void 0 ? {} : _proxyOpts$props;\n      var $xetable = $refs.xTable;\n      var button;\n      var code;\n\n      if (XEUtils.isString(proxyTarget)) {\n        var matchObj = toolbarConfig || toolbar ? XEUtils.findTree(toolbarOpts.buttons, function (item) {\n          return item.code === proxyTarget;\n        }, {\n          children: 'dropdowns'\n        }) : null;\n        code = proxyTarget;\n        button = matchObj ? matchObj.item : null;\n      } else {\n        button = proxyTarget;\n        code = button.code;\n      }\n\n      var btnParams = button ? button.params : null;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      switch (code) {\n        case 'insert':\n          this.insert();\n          break;\n\n        case 'insert_actived':\n          this.insert().then(function (_ref3) {\n            var row = _ref3.row;\n            return _this5.setActiveRow(row);\n          });\n          break;\n\n        case 'mark_cancel':\n          this.triggerPendingEvent(code);\n          break;\n\n        case 'remove':\n          return this.handleDeleteRow(code, 'vxe.grid.removeSelectRecord', function () {\n            return _this5.removeCheckboxRow();\n          });\n\n        case 'import':\n          this.importData(btnParams);\n          break;\n\n        case 'open_import':\n          this.openImport(btnParams);\n          break;\n\n        case 'export':\n          this.exportData(btnParams);\n          break;\n\n        case 'open_export':\n          this.openExport(btnParams);\n          break;\n\n        case 'reset_custom':\n          this.resetColumn(true);\n          break;\n\n        case '_init':\n        case 'reload':\n        case 'query':\n          {\n            var ajaxMethods = ajax.query;\n\n            if (ajaxMethods) {\n              var isInited = code === '_init';\n              var isReload = code === 'reload';\n              var sortList = [];\n              var filterList = [];\n              var pageParams = {};\n\n              if (pagerConfig) {\n                if (isInited || isReload) {\n                  tablePage.currentPage = 1;\n                }\n\n                if (isEnableConf(pagerConfig)) {\n                  pageParams = _objectSpread({}, tablePage);\n                }\n              }\n\n              if (isInited) {\n                var sortOpts = $xetable.sortOpts;\n                var defaultSort = sortOpts.defaultSort; // 如果使用默认排序\n\n                if (defaultSort) {\n                  if (!XEUtils.isArray(defaultSort)) {\n                    defaultSort = [defaultSort];\n                  }\n\n                  sortList = defaultSort.map(function (item) {\n                    return {\n                      property: item.field,\n                      order: item.order\n                    };\n                  });\n                }\n\n                filterList = $xetable.getCheckedFilters();\n              } else {\n                if (isReload) {\n                  this.pendingRecords = [];\n                  $xetable.clearAll();\n                } else {\n                  sortList = $xetable.getSortColumns();\n                  filterList = $xetable.getCheckedFilters();\n                }\n              }\n\n              var params = {\n                code: code,\n                button: button,\n                $grid: this,\n                page: pageParams,\n                sort: sortList.length ? sortList[0] : {},\n                sorts: sortList,\n                filters: filterList,\n                form: formData,\n                options: ajaxMethods\n              };\n              this.sortData = sortList;\n              this.filterData = filterList;\n              this.tableLoading = true;\n              var applyArgs = [params].concat(args);\n              return Promise.resolve((beforeQuery || ajaxMethods).apply(void 0, _toConsumableArray(applyArgs))).catch(function (e) {\n                return e;\n              }).then(function (rest) {\n                _this5.tableLoading = false;\n\n                if (rest) {\n                  if (isEnableConf(pagerConfig)) {\n                    var total = XEUtils.get(rest, proxyProps.total || 'page.total') || 0;\n                    tablePage.total = total;\n                    _this5.tableData = XEUtils.get(rest, proxyProps.result || 'result') || []; // 检验当前页码，不能超出当前最大页数\n\n                    var pageCount = Math.max(Math.ceil(total / tablePage.pageSize), 1);\n\n                    if (tablePage.currentPage > pageCount) {\n                      tablePage.currentPage = pageCount;\n                    }\n                  } else {\n                    _this5.tableData = (proxyProps.list ? XEUtils.get(rest, proxyProps.list) : rest) || [];\n                  }\n                } else {\n                  _this5.tableData = [];\n                }\n\n                if (afterQuery) {\n                  afterQuery.apply(void 0, _toConsumableArray(applyArgs));\n                }\n              });\n            } else {\n              UtilTools.error('vxe.error.notFunc', ['query']);\n            }\n\n            break;\n          }\n\n        case 'delete':\n          {\n            var _ajaxMethods = ajax.delete;\n\n            if (_ajaxMethods) {\n              var removeRecords = this.getCheckboxRecords();\n              var body = {\n                removeRecords: removeRecords\n              };\n\n              var _applyArgs = [{\n                $grid: this,\n                code: code,\n                button: button,\n                body: body,\n                options: _ajaxMethods\n              }].concat(args);\n\n              if (removeRecords.length) {\n                return this.handleDeleteRow(code, 'vxe.grid.deleteSelectRecord', function () {\n                  _this5.tableLoading = true;\n                  return Promise.resolve((beforeDelete || _ajaxMethods).apply(void 0, _toConsumableArray(_applyArgs))).then(function (rest) {\n                    _this5.tableLoading = false;\n                    _this5.pendingRecords = _this5.pendingRecords.filter(function (row) {\n                      return removeRecords.indexOf(row) === -1;\n                    });\n\n                    if (isMsg) {\n                      VXETable.modal.message({\n                        content: _this5.getRespMsg(rest, 'vxe.grid.delSuccess'),\n                        status: 'success'\n                      });\n                    }\n\n                    if (afterDelete) {\n                      afterDelete.apply(void 0, _toConsumableArray(_applyArgs));\n                    } else {\n                      _this5.commitProxy('query');\n                    }\n                  }).catch(function (rest) {\n                    _this5.tableLoading = false;\n\n                    if (isMsg) {\n                      VXETable.modal.message({\n                        id: code,\n                        content: _this5.getRespMsg(rest, 'vxe.grid.operError'),\n                        status: 'error'\n                      });\n                    }\n                  });\n                });\n              } else {\n                if (isMsg) {\n                  VXETable.modal.message({\n                    id: code,\n                    content: GlobalConfig.i18n('vxe.grid.selectOneRecord'),\n                    status: 'warning'\n                  });\n                }\n              }\n            } else {\n              UtilTools.error('vxe.error.notFunc', [code]);\n            }\n\n            break;\n          }\n\n        case 'save':\n          {\n            var _ajaxMethods2 = ajax.save;\n\n            if (_ajaxMethods2) {\n              var _body = Object.assign({\n                pendingRecords: this.pendingRecords\n              }, this.getRecordset());\n\n              var insertRecords = _body.insertRecords,\n                  _removeRecords = _body.removeRecords,\n                  updateRecords = _body.updateRecords,\n                  pendingRecords = _body.pendingRecords;\n\n              var _applyArgs2 = [{\n                $grid: this,\n                code: code,\n                button: button,\n                body: _body,\n                options: _ajaxMethods2\n              }].concat(args); // 排除掉新增且标记为删除的数据\n\n\n              if (insertRecords.length) {\n                _body.pendingRecords = pendingRecords.filter(function (row) {\n                  return insertRecords.indexOf(row) === -1;\n                });\n              } // 排除已标记为删除的数据\n\n\n              if (pendingRecords.length) {\n                _body.insertRecords = insertRecords.filter(function (row) {\n                  return pendingRecords.indexOf(row) === -1;\n                });\n              } // 只校验新增和修改的数据\n\n\n              return this.validate(_body.insertRecords.concat(updateRecords)).then(function () {\n                if (_body.insertRecords.length || _removeRecords.length || updateRecords.length || _body.pendingRecords.length) {\n                  _this5.tableLoading = true;\n                  return Promise.resolve((beforeSave || _ajaxMethods2).apply(void 0, _toConsumableArray(_applyArgs2))).then(function (rest) {\n                    _this5.tableLoading = false;\n                    _this5.pendingRecords = [];\n\n                    if (isMsg) {\n                      VXETable.modal.message({\n                        content: _this5.getRespMsg(rest, 'vxe.grid.saveSuccess'),\n                        status: 'success'\n                      });\n                    }\n\n                    if (afterSave) {\n                      afterSave.apply(void 0, _toConsumableArray(_applyArgs2));\n                    } else {\n                      _this5.commitProxy('query');\n                    }\n                  }).catch(function (rest) {\n                    _this5.tableLoading = false;\n\n                    if (isMsg) {\n                      VXETable.modal.message({\n                        id: code,\n                        content: _this5.getRespMsg(rest, 'vxe.grid.operError'),\n                        status: 'error'\n                      });\n                    }\n                  });\n                } else {\n                  if (isMsg) {\n                    VXETable.modal.message({\n                      id: code,\n                      content: GlobalConfig.i18n('vxe.grid.dataUnchanged'),\n                      status: 'info'\n                    });\n                  }\n                }\n              }).catch(function (errMap) {\n                return errMap;\n              });\n            } else {\n              UtilTools.error('vxe.error.notFunc', [code]);\n            }\n\n            break;\n          }\n\n        default:\n          {\n            var btnMethod = VXETable.commands.get(code);\n\n            if (btnMethod) {\n              btnMethod.apply(void 0, [{\n                code: code,\n                button: button,\n                $grid: this,\n                $table: $xetable\n              }].concat(args));\n            }\n          }\n      }\n\n      return this.$nextTick();\n    },\n    getRespMsg: function getRespMsg(rest, defaultMsg) {\n      var _this$proxyOpts$props = this.proxyOpts.props,\n          proxyProps = _this$proxyOpts$props === void 0 ? {} : _this$proxyOpts$props;\n      var msg;\n\n      if (rest && proxyProps.message) {\n        msg = XEUtils.get(rest, proxyProps.message);\n      }\n\n      return msg || GlobalConfig.i18n(defaultMsg);\n    },\n    handleDeleteRow: function handleDeleteRow(code, alertKey, callback) {\n      var selectRecords = this.getCheckboxRecords();\n\n      if (this.isMsg) {\n        if (selectRecords.length) {\n          return VXETable.modal.confirm({\n            id: \"cfm_\".concat(code),\n            content: GlobalConfig.i18n(alertKey),\n            escClosable: true\n          }).then(function (type) {\n            if (type === 'confirm') {\n              callback();\n            }\n          });\n        } else {\n          VXETable.modal.message({\n            id: \"msg_\".concat(code),\n            content: GlobalConfig.i18n('vxe.grid.selectOneRecord'),\n            status: 'warning'\n          });\n        }\n      } else {\n        if (selectRecords.length) {\n          callback();\n        }\n      }\n\n      return Promise.resolve();\n    },\n    getFormItems: function getFormItems(itemIndex) {\n      var formConfig = this.formConfig,\n          formOpts = this.formOpts;\n      var itemList = [];\n      XEUtils.eachTree(isEnableConf(formConfig) && formOpts.items ? formOpts.items : [], function (item) {\n        itemList.push(item);\n      }, {\n        children: 'children'\n      });\n      return XEUtils.isUndefined(itemIndex) ? itemList : itemList[itemIndex];\n    },\n    getPendingRecords: function getPendingRecords() {\n      return this.pendingRecords;\n    },\n    triggerToolbarBtnEvent: function triggerToolbarBtnEvent(button, evnt) {\n      this.commitProxy(button, evnt);\n      this.$emit('toolbar-button-click', {\n        code: button.code,\n        button: button,\n        $grid: this,\n        $event: evnt\n      });\n    },\n    triggerToolbarTolEvent: function triggerToolbarTolEvent(tool, evnt) {\n      this.commitProxy(tool, evnt);\n      this.$emit('toolbar-tool-click', {\n        code: tool.code,\n        tool: tool,\n        $grid: this,\n        $event: evnt\n      });\n    },\n    triggerPendingEvent: function triggerPendingEvent(code) {\n      var pendingRecords = this.pendingRecords,\n          isMsg = this.isMsg;\n      var selectRecords = this.getCheckboxRecords();\n\n      if (selectRecords.length) {\n        var plus = [];\n        var minus = [];\n        selectRecords.forEach(function (data) {\n          if (pendingRecords.some(function (item) {\n            return data === item;\n          })) {\n            minus.push(data);\n          } else {\n            plus.push(data);\n          }\n        });\n\n        if (minus.length) {\n          this.pendingRecords = pendingRecords.filter(function (item) {\n            return minus.indexOf(item) === -1;\n          }).concat(plus);\n        } else if (plus.length) {\n          this.pendingRecords = pendingRecords.concat(plus);\n        }\n\n        this.clearCheckboxRow();\n      } else {\n        if (isMsg) {\n          VXETable.modal.message({\n            id: code,\n            content: GlobalConfig.i18n('vxe.grid.selectOneRecord'),\n            status: 'warning'\n          });\n        }\n      }\n    },\n    pageChangeEvent: function pageChangeEvent(params) {\n      var proxyConfig = this.proxyConfig,\n          tablePage = this.tablePage;\n      var currentPage = params.currentPage,\n          pageSize = params.pageSize;\n      tablePage.currentPage = currentPage;\n      tablePage.pageSize = pageSize;\n      this.$emit('page-change', Object.assign({\n        $grid: this\n      }, params));\n\n      if (proxyConfig) {\n        this.commitProxy('query');\n      }\n    },\n    sortChangeEvent: function sortChangeEvent(params) {\n      var $table = params.$table,\n          column = params.column,\n          sortList = params.sortList;\n      var isRemote = XEUtils.isBoolean(column.remoteSort) ? column.remoteSort : $table.sortOpts.remote; // 如果是服务端排序\n\n      if (isRemote) {\n        this.sortData = sortList;\n\n        if (this.proxyConfig) {\n          this.tablePage.currentPage = 1;\n          this.commitProxy('query');\n        }\n      }\n\n      this.$emit('sort-change', Object.assign({\n        $grid: this\n      }, params));\n    },\n    filterChangeEvent: function filterChangeEvent(params) {\n      var $table = params.$table,\n          filterList = params.filterList; // 如果是服务端过滤\n\n      if ($table.filterOpts.remote) {\n        this.filterData = filterList;\n\n        if (this.proxyConfig) {\n          this.tablePage.currentPage = 1;\n          this.commitProxy('query');\n        }\n      }\n\n      this.$emit('filter-change', Object.assign({\n        $grid: this\n      }, params));\n    },\n    submitEvent: function submitEvent(params) {\n      var proxyConfig = this.proxyConfig;\n\n      if (proxyConfig) {\n        this.commitProxy('reload');\n      }\n\n      this.$emit('form-submit', Object.assign({\n        $grid: this\n      }, params));\n    },\n    resetEvent: function resetEvent(params) {\n      var proxyConfig = this.proxyConfig;\n\n      if (proxyConfig) {\n        this.commitProxy('reload');\n      }\n\n      this.$emit('form-reset', Object.assign({\n        $grid: this\n      }, params));\n    },\n    submitInvalidEvent: function submitInvalidEvent(params) {\n      this.$emit('form-submit-invalid', Object.assign({\n        $grid: this\n      }, params));\n    },\n    togglCollapseEvent: function togglCollapseEvent(params) {\n      var _this6 = this;\n\n      this.$nextTick(function () {\n        return _this6.recalculate(true);\n      });\n      this.$emit('form-toggle-collapse', Object.assign({\n        $grid: this\n      }, params));\n    },\n    triggerZoomEvent: function triggerZoomEvent(evnt) {\n      this.zoom();\n      this.$emit('zoom', {\n        $grid: this,\n        type: this.isZMax ? 'max' : 'revert',\n        $event: evnt\n      });\n    },\n    zoom: function zoom() {\n      return this[this.isZMax ? 'revert' : 'maximize']();\n    },\n    isMaximized: function isMaximized() {\n      return this.isZMax;\n    },\n    maximize: function maximize() {\n      return this.handleZoom(true);\n    },\n    revert: function revert() {\n      return this.handleZoom();\n    },\n    handleZoom: function handleZoom(isMax) {\n      var _this7 = this;\n\n      var isZMax = this.isZMax;\n\n      if (isMax ? !isZMax : isZMax) {\n        this.isZMax = !isZMax;\n\n        if (this.tZindex < UtilTools.getLastZIndex()) {\n          this.tZindex = UtilTools.nextZIndex();\n        }\n      }\n\n      return this.$nextTick().then(function () {\n        return _this7.recalculate(true);\n      }).then(function () {\n        return _this7.isZMax;\n      });\n    },\n    getProxyInfo: function getProxyInfo() {\n      var sortData = this.sortData,\n          proxyConfig = this.proxyConfig;\n\n      if (proxyConfig) {\n        return {\n          data: this.tableData,\n          filter: this.filterData,\n          form: this.formData,\n          sort: sortData.length ? sortData[0] : {},\n          sorts: sortData,\n          pager: this.tablePage,\n          pendingRecords: this.pendingRecords\n        };\n      }\n\n      return null;\n    }\n  }, process.env.VUE_APP_VXE_TABLE_ENV === 'development' ? {\n    loadColumn: function loadColumn(columns) {\n      var $scopedSlots = this.$scopedSlots;\n      XEUtils.eachTree(columns, function (column) {\n        if (column.slots) {\n          XEUtils.each(column.slots, function (func) {\n            if (!XEUtils.isFunction(func)) {\n              if (!$scopedSlots[func]) {\n                UtilTools.error('vxe.error.notSlot', [func]);\n              }\n            }\n          });\n        }\n      });\n      return this.$refs.xTable.loadColumn(columns);\n    },\n    reloadColumn: function reloadColumn(columns) {\n      this.clearAll();\n      return this.loadColumn(columns);\n    }\n  } : null)\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\grid\\src\\grid.js"],"names":["methods","propKeys","Object","Table","$scopedSlots","proxyConfig","proxyOpts","formData","formConfig","formOpts","_vm","isEnableConf","formSlots","beforeItem","$grid","item","XEUtils","h","props","data","on","submit","reset","togglCollapseEvent","scopedSlots","funcSlot","optSlots","process","UtilTools","toolbarOpts","toolbarOptSlots","slots","buttonsSlot","getFuncSlot","toolsSlot","pagerOpts","pagerOptSlots","leftSlot","rightSlot","$listeners","ons","args","name","mixins","columns","pagerConfig","toolbar","toolbarConfig","zoomConfig","size","type","default","GlobalConfig","provide","$xegrid","tableLoading","isZMax","tableData","pendingRecords","filterData","sortData","tZindex","tablePage","total","pageSize","currentPage","computed","isMsg","zoomOpts","renderStyle","zIndex","height","tableExtendProps","rest","tableProps","seqConfig","loading","editConfig","startIndex","activeMethod","handleActiveMethod","watch","created","console","GlobalEvent","mounted","destroyed","render","vSize","hasForm","hasToolbar","hasPager","class","style","ref","renderDefaultForm","getToolbarSlots","getTableOns","pageChangeEvent","getPagerSlots","callSlot","slotFunc","getParentHeight","$el","DomTools","getComputedStyle","getExcludeHeight","$refs","formWrapper","toolbarWrapper","topWrapper","bottomWrapper","pagerWrapper","parentPaddingSize","getPaddingTopBottomSize","getOffsetHeight","handleRowClassName","rowClassName","clss","params","initToolbar","xTable","xToolbar","initPages","initProxy","proxyInited","field","itemRender","handleGlobalKeydownEvent","isEsc","evnt","commitProxy","beforeQuery","afterQuery","beforeDelete","afterDelete","beforeSave","afterSave","ajax","proxyProps","$xetable","matchObj","children","code","button","btnParams","row","ajaxMethods","isInited","isReload","sortList","filterList","pageParams","sortOpts","defaultSort","property","order","page","sort","sorts","filters","form","options","applyArgs","pageCount","Math","removeRecords","body","VXETable","content","status","id","insertRecords","updateRecords","btnMethod","$table","getRespMsg","msg","handleDeleteRow","selectRecords","escClosable","callback","Promise","getFormItems","itemList","getPendingRecords","triggerToolbarBtnEvent","$event","triggerToolbarTolEvent","tool","triggerPendingEvent","plus","minus","sortChangeEvent","column","isRemote","filterChangeEvent","submitEvent","resetEvent","submitInvalidEvent","triggerZoomEvent","zoom","isMaximized","maximize","revert","handleZoom","isMax","getProxyInfo","filter","pager","loadColumn","reloadColumn"],"mappings":"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","sourcesContent":["import Table from '../../table'\r\nimport XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\nimport VXETable from '../../v-x-e-table'\r\nimport { UtilTools, DomTools, GlobalEvent, isEnableConf } from '../../tools'\r\nimport { getOffsetHeight, getPaddingTopBottomSize } from '../../tools/src/dom'\r\n\r\nconst methods = {}\r\nconst propKeys = Object.keys(Table.props)\r\n\r\nfunction renderDefaultForm (h, _vm) {\r\n  const { $scopedSlots, proxyConfig, proxyOpts, formData, formConfig, formOpts } = _vm\r\n  if (isEnableConf(formConfig) && formOpts.items && formOpts.items.length) {\r\n    const formSlots = {}\r\n    if (!formOpts.inited) {\r\n      formOpts.inited = true\r\n      const beforeItem = proxyOpts.beforeItem\r\n      if (proxyOpts && beforeItem) {\r\n        formOpts.items.forEach(item => {\r\n          beforeItem.call(_vm, { $grid: _vm, item })\r\n        })\r\n      }\r\n    }\r\n    // 处理插槽\r\n    formOpts.items.forEach((item) => {\r\n      XEUtils.each(item.slots, (func) => {\r\n        if (!XEUtils.isFunction(func)) {\r\n          if ($scopedSlots[func]) {\r\n            formSlots[func] = $scopedSlots[func]\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return [\r\n      h('vxe-form', {\r\n        props: Object.assign({}, formOpts, {\r\n          data: proxyConfig && proxyOpts.form ? formData : formOpts.data\r\n        }),\r\n        on: {\r\n          submit: _vm.submitEvent,\r\n          reset: _vm.resetEvent,\r\n          'submit-invalid': _vm.submitInvalidEvent,\r\n          'toggle-collapse': _vm.togglCollapseEvent\r\n        },\r\n        scopedSlots: formSlots\r\n      })\r\n    ]\r\n  }\r\n  return []\r\n}\r\n\r\nfunction getFuncSlot (_vm, optSlots, slotKey) {\r\n  const { $scopedSlots } = _vm\r\n  const funcSlot = optSlots[slotKey]\r\n  if (funcSlot) {\r\n    if (XEUtils.isString(funcSlot)) {\r\n      if ($scopedSlots[funcSlot]) {\r\n        return $scopedSlots[funcSlot]\r\n      } else {\r\n        if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\r\n          UtilTools.error('vxe.error.notSlot', [funcSlot])\r\n        }\r\n      }\r\n    } else {\r\n      return funcSlot\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getToolbarSlots (_vm) {\r\n  const { $scopedSlots, toolbarOpts } = _vm\r\n  const toolbarOptSlots = toolbarOpts.slots\r\n  let buttonsSlot\r\n  let toolsSlot\r\n  const slots = {}\r\n  if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\r\n    if ($scopedSlots.buttons && (!toolbarOptSlots || toolbarOptSlots.buttons !== 'buttons')) {\r\n      UtilTools.warn('vxe.error.reqProp', ['toolbar-config.slots.buttons'])\r\n    }\r\n    if ($scopedSlots.tools && (!toolbarOptSlots || toolbarOptSlots.tools !== 'tools')) {\r\n      UtilTools.warn('vxe.error.reqProp', ['toolbar-config.slots.tools'])\r\n    }\r\n  }\r\n  if (toolbarOptSlots) {\r\n    buttonsSlot = getFuncSlot(_vm, toolbarOptSlots, 'buttons')\r\n    toolsSlot = getFuncSlot(_vm, toolbarOptSlots, 'tools')\r\n    if (buttonsSlot) {\r\n      slots.buttons = buttonsSlot\r\n    }\r\n    if (toolsSlot) {\r\n      slots.tools = toolsSlot\r\n    }\r\n  }\r\n  return slots\r\n}\r\n\r\nfunction getPagerSlots (_vm) {\r\n  const { pagerOpts } = _vm\r\n  const pagerOptSlots = pagerOpts.slots\r\n  const slots = {}\r\n  let leftSlot\r\n  let rightSlot\r\n  if (pagerOptSlots) {\r\n    leftSlot = getFuncSlot(_vm, pagerOptSlots, 'left')\r\n    rightSlot = getFuncSlot(_vm, pagerOptSlots, 'right')\r\n    if (leftSlot) {\r\n      slots.left = leftSlot\r\n    }\r\n    if (rightSlot) {\r\n      slots.right = rightSlot\r\n    }\r\n  }\r\n  return slots\r\n}\r\n\r\nfunction getTableOns (_vm) {\r\n  const { $listeners, proxyConfig, proxyOpts } = _vm\r\n  const ons = {}\r\n  XEUtils.each($listeners, (cb, type) => {\r\n    ons[type] = (...args) => {\r\n      _vm.$emit(type, ...args)\r\n    }\r\n  })\r\n  if (proxyConfig) {\r\n    if (proxyOpts.sort) {\r\n      ons['sort-change'] = _vm.sortChangeEvent\r\n    }\r\n    if (proxyOpts.filter) {\r\n      ons['filter-change'] = _vm.filterChangeEvent\r\n    }\r\n  }\r\n  return ons\r\n}\r\n\r\nObject.keys(Table.methods).forEach(name => {\r\n  methods[name] = function (...args) {\r\n    return this.$refs.xTable && this.$refs.xTable[name](...args)\r\n  }\r\n})\r\n\r\nexport default {\r\n  name: 'VxeGrid',\r\n  mixins: [vSize],\r\n  props: {\r\n    ...Table.props,\r\n    columns: Array,\r\n    pagerConfig: [Boolean, Object],\r\n    proxyConfig: Object,\r\n    toolbar: [Boolean, Object],\r\n    toolbarConfig: [Boolean, Object],\r\n    formConfig: [Boolean, Object],\r\n    zoomConfig: Object,\r\n    size: { type: String, default: () => GlobalConfig.grid.size || GlobalConfig.size }\r\n  },\r\n  provide () {\r\n    return {\r\n      $xegrid: this\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      tableLoading: false,\r\n      isZMax: false,\r\n      tableData: [],\r\n      pendingRecords: [],\r\n      filterData: [],\r\n      formData: {},\r\n      sortData: [],\r\n      tZindex: 0,\r\n      tablePage: {\r\n        total: 0,\r\n        pageSize: 10,\r\n        currentPage: 1\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isMsg () {\r\n      return this.proxyOpts.message !== false\r\n    },\r\n    proxyOpts () {\r\n      return Object.assign({}, GlobalConfig.grid.proxyConfig, this.proxyConfig)\r\n    },\r\n    pagerOpts () {\r\n      return Object.assign({}, GlobalConfig.grid.pagerConfig, this.pagerConfig)\r\n    },\r\n    formOpts () {\r\n      return Object.assign({}, GlobalConfig.grid.formConfig, this.formConfig)\r\n    },\r\n    toolbarOpts () {\r\n      return Object.assign({}, GlobalConfig.grid.toolbarConfig, this.toolbarConfig || this.toolbar)\r\n    },\r\n    zoomOpts () {\r\n      return Object.assign({}, GlobalConfig.grid.zoomConfig, this.zoomConfig)\r\n    },\r\n    renderStyle () {\r\n      return this.isZMax ? { zIndex: this.tZindex, height: '100%' } : {height: '100%'}\r\n    },\r\n    tableExtendProps () {\r\n      const rest = {}\r\n      propKeys.forEach(key => {\r\n        rest[key] = this[key]\r\n      })\r\n      return rest\r\n    },\r\n    tableProps () {\r\n      const { isZMax, seqConfig, pagerConfig, loading, editConfig, proxyConfig, proxyOpts, tableExtendProps, tableLoading, tablePage, tableData } = this\r\n      const tableProps = Object.assign({}, tableExtendProps)\r\n      if (isZMax) {\r\n        if (tableExtendProps.maxHeight) {\r\n          tableProps.maxHeight = 'auto'\r\n        } else {\r\n          tableProps.height = 'auto'\r\n        }\r\n      }\r\n      if (proxyConfig) {\r\n        tableProps.loading = loading || tableLoading\r\n        tableProps.data = tableData\r\n        tableProps.rowClassName = this.handleRowClassName\r\n        if (proxyOpts.seq && isEnableConf(pagerConfig)) {\r\n          tableProps.seqConfig = Object.assign({}, seqConfig, { startIndex: (tablePage.currentPage - 1) * tablePage.pageSize })\r\n        }\r\n      }\r\n      if (editConfig) {\r\n        tableProps.editConfig = Object.assign({}, editConfig, { activeMethod: this.handleActiveMethod })\r\n      }\r\n      return tableProps\r\n    }\r\n  },\r\n  watch: {\r\n    columns (value) {\r\n      this.$nextTick(() => this.loadColumn(value))\r\n    },\r\n    toolbar (value) {\r\n      if (value) {\r\n        this.initToolbar()\r\n      }\r\n    },\r\n    toolbarConfig (value) {\r\n      if (value) {\r\n        this.initToolbar()\r\n      }\r\n    },\r\n    proxyConfig () {\r\n      this.initProxy()\r\n    },\r\n    pagerConfig () {\r\n      this.initPages()\r\n    }\r\n  },\r\n  created () {\r\n    const { data, formOpts, proxyOpts, proxyConfig } = this\r\n    if (proxyConfig && (data || (proxyOpts.form && formOpts.data))) {\r\n      console.error('[vxe-grid] There is a conflict between the props proxy-config and data.')\r\n    }\r\n\r\n    if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\r\n      if (this.toolbar) {\r\n        UtilTools.warn('vxe.error.delProp', ['grid.toolbar', 'grid.toolbar-config'])\r\n      }\r\n      if (this.toolbarConfig && !XEUtils.isObject(this.toolbarConfig)) {\r\n        UtilTools.warn('vxe.error.errProp', [`grid.toolbar-config=${this.toolbarConfig}`, 'grid.toolbar-config={}'])\r\n      }\r\n    }\r\n\r\n    GlobalEvent.on(this, 'keydown', this.handleGlobalKeydownEvent)\r\n  },\r\n  mounted () {\r\n    if (this.columns && this.columns.length) {\r\n      this.loadColumn(this.columns)\r\n    }\r\n    this.initToolbar()\r\n    this.initPages()\r\n    this.initProxy()\r\n  },\r\n  destroyed () {\r\n    GlobalEvent.off(this, 'keydown')\r\n  },\r\n  render (h) {\r\n    const { $scopedSlots, vSize, isZMax } = this\r\n    const hasForm = !!($scopedSlots.form || isEnableConf(this.formConfig))\r\n    const hasToolbar = !!($scopedSlots.toolbar || isEnableConf(this.toolbarConfig) || this.toolbar)\r\n    const hasPager = !!($scopedSlots.pager || isEnableConf(this.pagerConfig))\r\n    return h('div', {\r\n      class: ['vxe-grid', {\r\n        [`size--${vSize}`]: vSize,\r\n        'is--animat': !!this.animat,\r\n        'is--round': this.round,\r\n        'is--maximize': isZMax,\r\n        'is--loading': this.loading || this.tableLoading\r\n      }],\r\n      style: this.renderStyle\r\n    }, [\r\n      /**\r\n       * 渲染表单\r\n       */\r\n      hasForm ? h('div', {\r\n        ref: 'formWrapper',\r\n        class: 'vxe-grid--form-wrapper'\r\n      }, $scopedSlots.form\r\n        ? $scopedSlots.form.call(this, { $grid: this }, h)\r\n        : renderDefaultForm(h, this)\r\n      ) : null,\r\n      /**\r\n       * 渲染工具栏\r\n       */\r\n      hasToolbar ? h('div', {\r\n        ref: 'toolbarWrapper',\r\n        class: 'vxe-grid--toolbar-wrapper'\r\n      }, $scopedSlots.toolbar\r\n        ? $scopedSlots.toolbar.call(this, { $grid: this }, h)\r\n        : [\r\n          h('vxe-toolbar', {\r\n            props: this.toolbarOpts,\r\n            ref: 'xToolbar',\r\n            scopedSlots: getToolbarSlots(this)\r\n          })\r\n        ]\r\n      ) : null,\r\n      /**\r\n       * 渲染表格顶部区域\r\n       */\r\n      $scopedSlots.top ? h('div', {\r\n        ref: 'topWrapper',\r\n        class: 'vxe-grid--top-wrapper'\r\n      }, $scopedSlots.top.call(this, { $grid: this }, h)) : null,\r\n      /**\r\n       * 渲染表格\r\n       */\r\n      h('vxe-table', {\r\n        props: this.tableProps,\r\n        on: getTableOns(this),\r\n        scopedSlots: $scopedSlots,\r\n        ref: 'xTable'\r\n      }),\r\n      /**\r\n       * 渲染表格底部区域\r\n       */\r\n      $scopedSlots.bottom ? h('div', {\r\n        ref: 'bottomWrapper',\r\n        class: 'vxe-grid--bottom-wrapper'\r\n      }, $scopedSlots.bottom.call(this, { $grid: this }, h)) : null,\r\n      /**\r\n       * 渲染分页\r\n       */\r\n      hasPager ? h('div', {\r\n        ref: 'pagerWrapper',\r\n        class: 'vxe-grid--pager-wrapper'\r\n      }, $scopedSlots.pager\r\n        ? $scopedSlots.pager.call(this, { $grid: this }, h)\r\n        : [\r\n          h('vxe-pager', {\r\n            props: { ...this.pagerOpts, ...(this.proxyConfig ? this.tablePage : {}) },\r\n            on: {\r\n              'page-change': this.pageChangeEvent\r\n            },\r\n            scopedSlots: getPagerSlots(this)\r\n          })\r\n        ]\r\n      ) : null\r\n    ])\r\n  },\r\n  methods: {\r\n    ...methods,\r\n    callSlot (slotFunc, params, h, vNodes) {\r\n      if (slotFunc) {\r\n        const { $scopedSlots } = this\r\n        if (XEUtils.isString(slotFunc)) {\r\n          slotFunc = $scopedSlots[slotFunc] || null\r\n        }\r\n        if (XEUtils.isFunction(slotFunc)) {\r\n          return slotFunc.call(this, params, h, vNodes)\r\n        }\r\n      }\r\n      return []\r\n    },\r\n    getParentHeight () {\r\n      const { $el, isZMax } = this\r\n      return (isZMax ? DomTools.getDomNode().visibleHeight : XEUtils.toNumber(getComputedStyle($el.parentNode).height)) - this.getExcludeHeight()\r\n    },\r\n    /**\r\n     * 获取需要排除的高度\r\n     */\r\n    getExcludeHeight () {\r\n      const { $refs, $el, isZMax, height } = this\r\n      const { formWrapper, toolbarWrapper, topWrapper, bottomWrapper, pagerWrapper } = $refs\r\n      const parentPaddingSize = isZMax || height !== 'auto' ? 0 : getPaddingTopBottomSize($el.parentNode)\r\n      return parentPaddingSize + getPaddingTopBottomSize($el) + getOffsetHeight(formWrapper) + getOffsetHeight(toolbarWrapper) + getOffsetHeight(topWrapper) + getOffsetHeight(bottomWrapper) + getOffsetHeight(pagerWrapper)\r\n    },\r\n    handleRowClassName (params) {\r\n      const rowClassName = this.rowClassName\r\n      const clss = []\r\n      if (this.pendingRecords.some(item => item === params.row)) {\r\n        clss.push('row--pending')\r\n      }\r\n      clss.push(rowClassName ? (XEUtils.isFunction(rowClassName) ? rowClassName(params) : rowClassName) : '')\r\n      return clss\r\n    },\r\n    handleActiveMethod (params) {\r\n      const { editConfig } = this\r\n      const activeMethod = editConfig ? editConfig.activeMethod : null\r\n      return this.pendingRecords.indexOf(params.row) === -1 && (!activeMethod || activeMethod(params))\r\n    },\r\n    initToolbar () {\r\n      this.$nextTick(() => {\r\n        const { xTable, xToolbar } = this.$refs\r\n        if (xTable && xToolbar) {\r\n          xTable.connect(xToolbar)\r\n        }\r\n      })\r\n    },\r\n    initPages () {\r\n      const { tablePage, pagerConfig, pagerOpts } = this\r\n      const { currentPage, pageSize } = pagerOpts\r\n      if (pagerConfig) {\r\n        if (currentPage) {\r\n          tablePage.currentPage = currentPage\r\n        }\r\n        if (pageSize) {\r\n          tablePage.pageSize = pageSize\r\n        }\r\n      }\r\n    },\r\n    initProxy () {\r\n      const { proxyInited, proxyConfig, proxyOpts, formConfig, formOpts } = this\r\n      if (proxyConfig) {\r\n        if (isEnableConf(formConfig) && proxyOpts.form && formOpts.items) {\r\n          const formData = {}\r\n          formOpts.items.forEach(({ field, itemRender }) => {\r\n            if (field) {\r\n              formData[field] = itemRender && !XEUtils.isUndefined(itemRender.defaultValue) ? itemRender.defaultValue : undefined\r\n            }\r\n          })\r\n          this.formData = formData\r\n        }\r\n        if (!proxyInited && proxyOpts.autoLoad !== false) {\r\n          this.proxyInited = true\r\n          this.$nextTick(() => this.commitProxy('_init'))\r\n        }\r\n      }\r\n    },\r\n    handleGlobalKeydownEvent (evnt) {\r\n      const isEsc = evnt.keyCode === 27\r\n      if (isEsc && this.isZMax && this.zoomOpts.escRestore !== false) {\r\n        this.triggerZoomEvent(evnt)\r\n      }\r\n    },\r\n    /**\r\n     * 提交指令，支持 code 或 button\r\n     * @param {String/Object} code 字符串或对象\r\n     */\r\n    commitProxy (proxyTarget, ...args) {\r\n      const { $refs, toolbar, toolbarConfig, toolbarOpts, proxyOpts, tablePage, pagerConfig, formData, isMsg } = this\r\n      const { beforeQuery, afterQuery, beforeDelete, afterDelete, beforeSave, afterSave, ajax = {}, props: proxyProps = {} } = proxyOpts\r\n      const $xetable = $refs.xTable\r\n      let button\r\n      let code\r\n      if (XEUtils.isString(proxyTarget)) {\r\n        const matchObj = toolbarConfig || toolbar ? XEUtils.findTree(toolbarOpts.buttons, item => item.code === proxyTarget, { children: 'dropdowns' }) : null\r\n        code = proxyTarget\r\n        button = matchObj ? matchObj.item : null\r\n      } else {\r\n        button = proxyTarget\r\n        code = button.code\r\n      }\r\n      const btnParams = button ? button.params : null\r\n      switch (code) {\r\n        case 'insert':\r\n          this.insert()\r\n          break\r\n        case 'insert_actived':\r\n          this.insert().then(({ row }) => this.setActiveRow(row))\r\n          break\r\n        case 'mark_cancel':\r\n          this.triggerPendingEvent(code)\r\n          break\r\n        case 'remove':\r\n          return this.handleDeleteRow(code, 'vxe.grid.removeSelectRecord', () => this.removeCheckboxRow())\r\n        case 'import':\r\n          this.importData(btnParams)\r\n          break\r\n        case 'open_import':\r\n          this.openImport(btnParams)\r\n          break\r\n        case 'export':\r\n          this.exportData(btnParams)\r\n          break\r\n        case 'open_export':\r\n          this.openExport(btnParams)\r\n          break\r\n        case 'reset_custom':\r\n          this.resetColumn(true)\r\n          break\r\n        case '_init':\r\n        case 'reload':\r\n        case 'query': {\r\n          const ajaxMethods = ajax.query\r\n          if (ajaxMethods) {\r\n            const isInited = code === '_init'\r\n            const isReload = code === 'reload'\r\n            let sortList = []\r\n            let filterList = []\r\n            let pageParams = {}\r\n            if (pagerConfig) {\r\n              if (isInited || isReload) {\r\n                tablePage.currentPage = 1\r\n              }\r\n              if (isEnableConf(pagerConfig)) {\r\n                pageParams = { ...tablePage }\r\n              }\r\n            }\r\n            if (isInited) {\r\n              const { sortOpts } = $xetable\r\n              let defaultSort = sortOpts.defaultSort\r\n              // 如果使用默认排序\r\n              if (defaultSort) {\r\n                if (!XEUtils.isArray(defaultSort)) {\r\n                  defaultSort = [defaultSort]\r\n                }\r\n                sortList = defaultSort.map((item) => {\r\n                  return {\r\n                    property: item.field,\r\n                    order: item.order\r\n                  }\r\n                })\r\n              }\r\n              filterList = $xetable.getCheckedFilters()\r\n            } else {\r\n              if (isReload) {\r\n                this.pendingRecords = []\r\n                $xetable.clearAll()\r\n              } else {\r\n                sortList = $xetable.getSortColumns()\r\n                filterList = $xetable.getCheckedFilters()\r\n              }\r\n            }\r\n            const params = {\r\n              code,\r\n              button,\r\n              $grid: this,\r\n              page: pageParams,\r\n              sort: sortList.length ? sortList[0] : {},\r\n              sorts: sortList,\r\n              filters: filterList,\r\n              form: formData,\r\n              options: ajaxMethods\r\n            }\r\n            this.sortData = sortList\r\n            this.filterData = filterList\r\n            this.tableLoading = true\r\n            const applyArgs = [params].concat(args)\r\n            return Promise.resolve((beforeQuery || ajaxMethods)(...applyArgs))\r\n              .catch(e => e)\r\n              .then(rest => {\r\n                this.tableLoading = false\r\n                if (rest) {\r\n                  if (isEnableConf(pagerConfig)) {\r\n                    const total = XEUtils.get(rest, proxyProps.total || 'page.total') || 0\r\n                    tablePage.total = total\r\n                    this.tableData = XEUtils.get(rest, proxyProps.result || 'result') || []\r\n                    // 检验当前页码，不能超出当前最大页数\r\n                    const pageCount = Math.max(Math.ceil(total / tablePage.pageSize), 1)\r\n                    if (tablePage.currentPage > pageCount) {\r\n                      tablePage.currentPage = pageCount\r\n                    }\r\n                  } else {\r\n                    this.tableData = (proxyProps.list ? XEUtils.get(rest, proxyProps.list) : rest) || []\r\n                  }\r\n                } else {\r\n                  this.tableData = []\r\n                }\r\n                if (afterQuery) {\r\n                  afterQuery(...applyArgs)\r\n                }\r\n              })\r\n          } else {\r\n            UtilTools.error('vxe.error.notFunc', ['query'])\r\n          }\r\n          break\r\n        }\r\n        case 'delete': {\r\n          const ajaxMethods = ajax.delete\r\n          if (ajaxMethods) {\r\n            const removeRecords = this.getCheckboxRecords()\r\n            const body = { removeRecords }\r\n            const applyArgs = [{ $grid: this, code, button, body, options: ajaxMethods }].concat(args)\r\n            if (removeRecords.length) {\r\n              return this.handleDeleteRow(code, 'vxe.grid.deleteSelectRecord', () => {\r\n                this.tableLoading = true\r\n                return Promise.resolve((beforeDelete || ajaxMethods)(...applyArgs))\r\n                  .then(rest => {\r\n                    this.tableLoading = false\r\n                    this.pendingRecords = this.pendingRecords.filter(row => removeRecords.indexOf(row) === -1)\r\n                    if (isMsg) {\r\n                      VXETable.modal.message({ content: this.getRespMsg(rest, 'vxe.grid.delSuccess'), status: 'success' })\r\n                    }\r\n                    if (afterDelete) {\r\n                      afterDelete(...applyArgs)\r\n                    } else {\r\n                      this.commitProxy('query')\r\n                    }\r\n                  })\r\n                  .catch(rest => {\r\n                    this.tableLoading = false\r\n                    if (isMsg) {\r\n                      VXETable.modal.message({ id: code, content: this.getRespMsg(rest, 'vxe.grid.operError'), status: 'error' })\r\n                    }\r\n                  })\r\n              })\r\n            } else {\r\n              if (isMsg) {\r\n                VXETable.modal.message({ id: code, content: GlobalConfig.i18n('vxe.grid.selectOneRecord'), status: 'warning' })\r\n              }\r\n            }\r\n          } else {\r\n            UtilTools.error('vxe.error.notFunc', [code])\r\n          }\r\n          break\r\n        }\r\n        case 'save': {\r\n          const ajaxMethods = ajax.save\r\n          if (ajaxMethods) {\r\n            const body = Object.assign({ pendingRecords: this.pendingRecords }, this.getRecordset())\r\n            const { insertRecords, removeRecords, updateRecords, pendingRecords } = body\r\n            const applyArgs = [{ $grid: this, code, button, body, options: ajaxMethods }].concat(args)\r\n            // 排除掉新增且标记为删除的数据\r\n            if (insertRecords.length) {\r\n              body.pendingRecords = pendingRecords.filter(row => insertRecords.indexOf(row) === -1)\r\n            }\r\n            // 排除已标记为删除的数据\r\n            if (pendingRecords.length) {\r\n              body.insertRecords = insertRecords.filter(row => pendingRecords.indexOf(row) === -1)\r\n            }\r\n            // 只校验新增和修改的数据\r\n            return this.validate(body.insertRecords.concat(updateRecords)).then(() => {\r\n              if (body.insertRecords.length || removeRecords.length || updateRecords.length || body.pendingRecords.length) {\r\n                this.tableLoading = true\r\n                return Promise.resolve((beforeSave || ajaxMethods)(...applyArgs))\r\n                  .then(rest => {\r\n                    this.tableLoading = false\r\n                    this.pendingRecords = []\r\n                    if (isMsg) {\r\n                      VXETable.modal.message({ content: this.getRespMsg(rest, 'vxe.grid.saveSuccess'), status: 'success' })\r\n                    }\r\n                    if (afterSave) {\r\n                      afterSave(...applyArgs)\r\n                    } else {\r\n                      this.commitProxy('query')\r\n                    }\r\n                  })\r\n                  .catch(rest => {\r\n                    this.tableLoading = false\r\n                    if (isMsg) {\r\n                      VXETable.modal.message({ id: code, content: this.getRespMsg(rest, 'vxe.grid.operError'), status: 'error' })\r\n                    }\r\n                  })\r\n              } else {\r\n                if (isMsg) {\r\n                  VXETable.modal.message({ id: code, content: GlobalConfig.i18n('vxe.grid.dataUnchanged'), status: 'info' })\r\n                }\r\n              }\r\n            }).catch(errMap => errMap)\r\n          } else {\r\n            UtilTools.error('vxe.error.notFunc', [code])\r\n          }\r\n          break\r\n        }\r\n        default: {\r\n          const btnMethod = VXETable.commands.get(code)\r\n          if (btnMethod) {\r\n            btnMethod({ code, button, $grid: this, $table: $xetable }, ...args)\r\n          }\r\n        }\r\n      }\r\n      return this.$nextTick()\r\n    },\r\n    getRespMsg (rest, defaultMsg) {\r\n      const { props: proxyProps = {} } = this.proxyOpts\r\n      let msg\r\n      if (rest && proxyProps.message) {\r\n        msg = XEUtils.get(rest, proxyProps.message)\r\n      }\r\n      return msg || GlobalConfig.i18n(defaultMsg)\r\n    },\r\n    handleDeleteRow (code, alertKey, callback) {\r\n      const selectRecords = this.getCheckboxRecords()\r\n      if (this.isMsg) {\r\n        if (selectRecords.length) {\r\n          return VXETable.modal.confirm({ id: `cfm_${code}`, content: GlobalConfig.i18n(alertKey), escClosable: true }).then(type => {\r\n            if (type === 'confirm') {\r\n              callback()\r\n            }\r\n          })\r\n        } else {\r\n          VXETable.modal.message({ id: `msg_${code}`, content: GlobalConfig.i18n('vxe.grid.selectOneRecord'), status: 'warning' })\r\n        }\r\n      } else {\r\n        if (selectRecords.length) {\r\n          callback()\r\n        }\r\n      }\r\n      return Promise.resolve()\r\n    },\r\n    getFormItems (itemIndex) {\r\n      const { formConfig, formOpts } = this\r\n      const itemList = []\r\n      XEUtils.eachTree(isEnableConf(formConfig) && formOpts.items ? formOpts.items : [], item => {\r\n        itemList.push(item)\r\n      }, { children: 'children' })\r\n      return XEUtils.isUndefined(itemIndex) ? itemList : itemList[itemIndex]\r\n    },\r\n    getPendingRecords () {\r\n      return this.pendingRecords\r\n    },\r\n    triggerToolbarBtnEvent (button, evnt) {\r\n      this.commitProxy(button, evnt)\r\n      this.$emit('toolbar-button-click', { code: button.code, button, $grid: this, $event: evnt })\r\n    },\r\n    triggerToolbarTolEvent (tool, evnt) {\r\n      this.commitProxy(tool, evnt)\r\n      this.$emit('toolbar-tool-click', { code: tool.code, tool, $grid: this, $event: evnt })\r\n    },\r\n    triggerPendingEvent (code) {\r\n      const { pendingRecords, isMsg } = this\r\n      const selectRecords = this.getCheckboxRecords()\r\n      if (selectRecords.length) {\r\n        const plus = []\r\n        const minus = []\r\n        selectRecords.forEach(data => {\r\n          if (pendingRecords.some(item => data === item)) {\r\n            minus.push(data)\r\n          } else {\r\n            plus.push(data)\r\n          }\r\n        })\r\n        if (minus.length) {\r\n          this.pendingRecords = pendingRecords.filter(item => minus.indexOf(item) === -1).concat(plus)\r\n        } else if (plus.length) {\r\n          this.pendingRecords = pendingRecords.concat(plus)\r\n        }\r\n        this.clearCheckboxRow()\r\n      } else {\r\n        if (isMsg) {\r\n          VXETable.modal.message({ id: code, content: GlobalConfig.i18n('vxe.grid.selectOneRecord'), status: 'warning' })\r\n        }\r\n      }\r\n    },\r\n    pageChangeEvent (params) {\r\n      const { proxyConfig, tablePage } = this\r\n      const { currentPage, pageSize } = params\r\n      tablePage.currentPage = currentPage\r\n      tablePage.pageSize = pageSize\r\n      this.$emit('page-change', Object.assign({ $grid: this }, params))\r\n      if (proxyConfig) {\r\n        this.commitProxy('query')\r\n      }\r\n    },\r\n    sortChangeEvent (params) {\r\n      const { $table, column, sortList } = params\r\n      const isRemote = XEUtils.isBoolean(column.remoteSort) ? column.remoteSort : $table.sortOpts.remote\r\n      // 如果是服务端排序\r\n      if (isRemote) {\r\n        this.sortData = sortList\r\n        if (this.proxyConfig) {\r\n          this.tablePage.currentPage = 1\r\n          this.commitProxy('query')\r\n        }\r\n      }\r\n      this.$emit('sort-change', Object.assign({ $grid: this }, params))\r\n    },\r\n    filterChangeEvent (params) {\r\n      const { $table, filterList } = params\r\n      // 如果是服务端过滤\r\n      if ($table.filterOpts.remote) {\r\n        this.filterData = filterList\r\n        if (this.proxyConfig) {\r\n          this.tablePage.currentPage = 1\r\n          this.commitProxy('query')\r\n        }\r\n      }\r\n      this.$emit('filter-change', Object.assign({ $grid: this }, params))\r\n    },\r\n    submitEvent (params) {\r\n      const { proxyConfig } = this\r\n      if (proxyConfig) {\r\n        this.commitProxy('reload')\r\n      }\r\n      this.$emit('form-submit', Object.assign({ $grid: this }, params))\r\n    },\r\n    resetEvent (params) {\r\n      const { proxyConfig } = this\r\n      if (proxyConfig) {\r\n        this.commitProxy('reload')\r\n      }\r\n      this.$emit('form-reset', Object.assign({ $grid: this }, params))\r\n    },\r\n    submitInvalidEvent (params) {\r\n      this.$emit('form-submit-invalid', Object.assign({ $grid: this }, params))\r\n    },\r\n    togglCollapseEvent (params) {\r\n      this.$nextTick(() => this.recalculate(true))\r\n      this.$emit('form-toggle-collapse', Object.assign({ $grid: this }, params))\r\n    },\r\n    triggerZoomEvent (evnt) {\r\n      this.zoom()\r\n      this.$emit('zoom', { $grid: this, type: this.isZMax ? 'max' : 'revert', $event: evnt })\r\n    },\r\n    zoom () {\r\n      return this[this.isZMax ? 'revert' : 'maximize']()\r\n    },\r\n    isMaximized () {\r\n      return this.isZMax\r\n    },\r\n    maximize () {\r\n      return this.handleZoom(true)\r\n    },\r\n    revert () {\r\n      return this.handleZoom()\r\n    },\r\n    handleZoom (isMax) {\r\n      const { isZMax } = this\r\n      if (isMax ? !isZMax : isZMax) {\r\n        this.isZMax = !isZMax\r\n        if (this.tZindex < UtilTools.getLastZIndex()) {\r\n          this.tZindex = UtilTools.nextZIndex()\r\n        }\r\n      }\r\n      return this.$nextTick().then(() => this.recalculate(true)).then(() => this.isZMax)\r\n    },\r\n    getProxyInfo () {\r\n      const { sortData, proxyConfig } = this\r\n      if (proxyConfig) {\r\n        return {\r\n          data: this.tableData,\r\n          filter: this.filterData,\r\n          form: this.formData,\r\n          sort: sortData.length ? sortData[0] : {},\r\n          sorts: sortData,\r\n          pager: this.tablePage,\r\n          pendingRecords: this.pendingRecords\r\n        }\r\n      }\r\n      return null\r\n    },\r\n    // 检查插槽\r\n    ...(process.env.VUE_APP_VXE_TABLE_ENV === 'development' ? {\r\n      loadColumn (columns) {\r\n        const { $scopedSlots } = this\r\n        XEUtils.eachTree(columns, column => {\r\n          if (column.slots) {\r\n            XEUtils.each(column.slots, (func) => {\r\n              if (!XEUtils.isFunction(func)) {\r\n                if (!$scopedSlots[func]) {\r\n                  UtilTools.error('vxe.error.notSlot', [func])\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n        return this.$refs.xTable.loadColumn(columns)\r\n      },\r\n      reloadColumn (columns) {\r\n        this.clearAll()\r\n        return this.loadColumn(columns)\r\n      }\r\n    } : null)\r\n  }\r\n}\r\n"]}]}