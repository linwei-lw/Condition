{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\export\\src\\import-panel.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\export\\src\\import-panel.js","mtime":1635230120956},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport VxeModal from \"../../modal/src/modal\";\nimport VxeRadio from \"../../radio/src/radio\";\nimport { UtilTools } from \"../../tools\";\nexport default {\n  name: 'VxeImportPanel',\n  props: {\n    defaultOptions: Object,\n    storeData: Object\n  },\n  components: {\n    VxeModal: VxeModal,\n    VxeRadio: VxeRadio\n  },\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  computed: {\n    vSize: function vSize() {\n      return this.size || this.$parent.size || this.$parent.vSize;\n    },\n    selectName: function selectName() {\n      return \"\".concat(this.storeData.filename, \".\").concat(this.storeData.type);\n    },\n    hasFile: function hasFile() {\n      return this.storeData.file && this.storeData.type;\n    },\n    parseTypeLabel: function parseTypeLabel() {\n      var storeData = this.storeData;\n      var type = storeData.type,\n          typeList = storeData.typeList;\n\n      if (type) {\n        var selectItem = XEUtils.find(typeList, function (item) {\n          return type === item.value;\n        });\n        return selectItem ? GlobalConfig.i18n(selectItem.label) : '*.*';\n      }\n\n      return \"*.\".concat(typeList.map(function (item) {\n        return item.value;\n      }).join(', *.'));\n    }\n  },\n  render: function render(h) {\n    var hasFile = this.hasFile,\n        parseTypeLabel = this.parseTypeLabel,\n        defaultOptions = this.defaultOptions,\n        storeData = this.storeData,\n        selectName = this.selectName;\n    return h('vxe-modal', {\n      res: 'modal',\n      props: {\n        value: storeData.visible,\n        title: GlobalConfig.i18n('vxe.import.impTitle'),\n        width: 440,\n        mask: true,\n        lockView: true,\n        showFooter: false,\n        escClosable: true,\n        maskClosable: true,\n        loading: this.loading\n      },\n      on: {\n        input: function input(value) {\n          storeData.visible = value;\n        },\n        show: this.showEvent\n      }\n    }, [h('div', {\n      class: 'vxe-export--panel'\n    }, [h('table', {\n      attrs: {\n        cellspacing: 0,\n        cellpadding: 0,\n        border: 0\n      }\n    }, [h('tbody', [h('tr', [h('td', GlobalConfig.i18n('vxe.import.impFile')), h('td', [hasFile ? h('div', {\n      class: 'vxe-import-selected--file',\n      attrs: {\n        title: selectName\n      }\n    }, [h('span', selectName), h('i', {\n      class: GlobalConfig.icon.INPUT_CLEAR,\n      on: {\n        click: this.clearFileEvent\n      }\n    })]) : h('button', {\n      ref: 'fileBtn',\n      class: 'vxe-import-select--file',\n      attrs: {\n        type: 'button'\n      },\n      on: {\n        click: this.selectFileEvent\n      }\n    }, GlobalConfig.i18n('vxe.import.impSelect'))])]), h('tr', [h('td', GlobalConfig.i18n('vxe.import.impType')), h('td', parseTypeLabel)]), h('tr', [h('td', GlobalConfig.i18n('vxe.import.impOpts')), h('td', [h('vxe-radio-group', {\n      props: {\n        value: defaultOptions.mode\n      },\n      on: {\n        input: function input(value) {\n          defaultOptions.mode = value;\n        }\n      }\n    }, storeData.modeList.map(function (item) {\n      return h('vxe-radio', {\n        props: {\n          label: item.value\n        }\n      }, GlobalConfig.i18n(item.label));\n    }))])])])]), h('div', {\n      class: 'vxe-export--panel-btns'\n    }, [h('vxe-button', {\n      on: {\n        click: this.cancelEvent\n      }\n    }, GlobalConfig.i18n('vxe.import.impCancel')), h('vxe-button', {\n      props: {\n        status: 'primary',\n        disabled: !hasFile\n      },\n      on: {\n        click: this.importEvent\n      }\n    }, GlobalConfig.i18n('vxe.import.impConfirm'))])])]);\n  },\n  methods: {\n    clearFileEvent: function clearFileEvent() {\n      Object.assign(this.storeData, {\n        filename: '',\n        sheetName: '',\n        type: ''\n      });\n    },\n    selectFileEvent: function selectFileEvent() {\n      var _this = this;\n\n      var $xetable = this.$parent;\n      $xetable.readFile(this.defaultOptions).then(function (params) {\n        var file = params.file;\n        Object.assign(_this.storeData, UtilTools.parseFile(file), {\n          file: file\n        });\n      }).catch(function (e) {\n        return e;\n      });\n    },\n    showEvent: function showEvent() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        var $refs = _this2.$refs;\n        var targetElem = $refs.fileBtn;\n\n        if (targetElem) {\n          targetElem.focus();\n        }\n      });\n    },\n    cancelEvent: function cancelEvent() {\n      this.storeData.visible = false;\n    },\n    importEvent: function importEvent() {\n      var _this3 = this;\n\n      var $xetable = this.$parent;\n      this.loading = true;\n      $xetable.importByFile(this.storeData.file, Object.assign({}, $xetable.importOpts, this.defaultOptions)).then(function () {\n        _this3.loading = false;\n        _this3.storeData.visible = false;\n      }).catch(function () {\n        _this3.loading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\export\\src\\import-panel.js"],"names":["name","props","defaultOptions","storeData","Object","components","VxeModal","VxeRadio","data","loading","computed","vSize","selectName","hasFile","parseTypeLabel","type","typeList","selectItem","item","GlobalConfig","render","h","res","value","title","width","mask","lockView","showFooter","escClosable","maskClosable","on","input","show","showEvent","class","attrs","cellspacing","cellpadding","border","click","clearFileEvent","ref","selectFileEvent","mode","label","cancelEvent","status","disabled","importEvent","methods","filename","sheetName","$xetable","file","params","UtilTools","$refs","targetElem"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport VxeModal from '../../modal/src/modal'\r\nimport VxeRadio from '../../radio/src/radio'\r\nimport { UtilTools } from '../../tools'\r\n\r\nexport default {\r\n  name: 'VxeImportPanel',\r\n  props: {\r\n    defaultOptions: Object,\r\n    storeData: Object\r\n  },\r\n  components: {\r\n    VxeModal,\r\n    VxeRadio\r\n  },\r\n  data () {\r\n    return {\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    vSize () {\r\n      return this.size || this.$parent.size || this.$parent.vSize\r\n    },\r\n    selectName () {\r\n      return `${this.storeData.filename}.${this.storeData.type}`\r\n    },\r\n    hasFile () {\r\n      return this.storeData.file && this.storeData.type\r\n    },\r\n    parseTypeLabel () {\r\n      const { storeData } = this\r\n      const { type, typeList } = storeData\r\n      if (type) {\r\n        const selectItem = XEUtils.find(typeList, item => type === item.value)\r\n        return selectItem ? GlobalConfig.i18n(selectItem.label) : '*.*'\r\n      }\r\n      return `*.${typeList.map(item => item.value).join(', *.')}`\r\n    }\r\n  },\r\n  render (h) {\r\n    const { hasFile, parseTypeLabel, defaultOptions, storeData, selectName } = this\r\n    return h('vxe-modal', {\r\n      res: 'modal',\r\n      props: {\r\n        value: storeData.visible,\r\n        title: GlobalConfig.i18n('vxe.import.impTitle'),\r\n        width: 440,\r\n        mask: true,\r\n        lockView: true,\r\n        showFooter: false,\r\n        escClosable: true,\r\n        maskClosable: true,\r\n        loading: this.loading\r\n      },\r\n      on: {\r\n        input (value) {\r\n          storeData.visible = value\r\n        },\r\n        show: this.showEvent\r\n      }\r\n    }, [\r\n      h('div', {\r\n        class: 'vxe-export--panel'\r\n      }, [\r\n        h('table', {\r\n          attrs: {\r\n            cellspacing: 0,\r\n            cellpadding: 0,\r\n            border: 0\r\n          }\r\n        }, [\r\n          h('tbody', [\r\n            h('tr', [\r\n              h('td', GlobalConfig.i18n('vxe.import.impFile')),\r\n              h('td', [\r\n                hasFile ? h('div', {\r\n                  class: 'vxe-import-selected--file',\r\n                  attrs: {\r\n                    title: selectName\r\n                  }\r\n                }, [\r\n                  h('span', selectName),\r\n                  h('i', {\r\n                    class: GlobalConfig.icon.INPUT_CLEAR,\r\n                    on: {\r\n                      click: this.clearFileEvent\r\n                    }\r\n                  })\r\n                ]) : h('button', {\r\n                  ref: 'fileBtn',\r\n                  class: 'vxe-import-select--file',\r\n                  attrs: {\r\n                    type: 'button'\r\n                  },\r\n                  on: {\r\n                    click: this.selectFileEvent\r\n                  }\r\n                }, GlobalConfig.i18n('vxe.import.impSelect'))\r\n              ])\r\n            ]),\r\n            h('tr', [\r\n              h('td', GlobalConfig.i18n('vxe.import.impType')),\r\n              h('td', parseTypeLabel)\r\n            ]),\r\n            h('tr', [\r\n              h('td', GlobalConfig.i18n('vxe.import.impOpts')),\r\n              h('td', [\r\n                h('vxe-radio-group', {\r\n                  props: {\r\n                    value: defaultOptions.mode\r\n                  },\r\n                  on: {\r\n                    input (value) {\r\n                      defaultOptions.mode = value\r\n                    }\r\n                  }\r\n                }, storeData.modeList.map(item => {\r\n                  return h('vxe-radio', {\r\n                    props: {\r\n                      label: item.value\r\n                    }\r\n                  }, GlobalConfig.i18n(item.label))\r\n                }))\r\n              ])\r\n            ])\r\n          ])\r\n        ]),\r\n        h('div', {\r\n          class: 'vxe-export--panel-btns'\r\n        }, [\r\n          h('vxe-button', {\r\n            on: {\r\n              click: this.cancelEvent\r\n            }\r\n          }, GlobalConfig.i18n('vxe.import.impCancel')),\r\n          h('vxe-button', {\r\n            props: {\r\n              status: 'primary',\r\n              disabled: !hasFile\r\n            },\r\n            on: {\r\n              click: this.importEvent\r\n            }\r\n          }, GlobalConfig.i18n('vxe.import.impConfirm'))\r\n        ])\r\n      ])\r\n    ])\r\n  },\r\n  methods: {\r\n    clearFileEvent () {\r\n      Object.assign(this.storeData, {\r\n        filename: '',\r\n        sheetName: '',\r\n        type: ''\r\n      })\r\n    },\r\n    selectFileEvent () {\r\n      const $xetable = this.$parent\r\n      $xetable.readFile(this.defaultOptions).then(params => {\r\n        const { file } = params\r\n        Object.assign(this.storeData, UtilTools.parseFile(file), { file })\r\n      }).catch(e => e)\r\n    },\r\n    showEvent () {\r\n      this.$nextTick(() => {\r\n        const { $refs } = this\r\n        const targetElem = $refs.fileBtn\r\n        if (targetElem) {\r\n          targetElem.focus()\r\n        }\r\n      })\r\n    },\r\n    cancelEvent () {\r\n      this.storeData.visible = false\r\n    },\r\n    importEvent () {\r\n      const $xetable = this.$parent\r\n      this.loading = true\r\n      $xetable.importByFile(this.storeData.file, Object.assign({}, $xetable.importOpts, this.defaultOptions)).then(() => {\r\n        this.loading = false\r\n        this.storeData.visible = false\r\n      }).catch(() => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n"]}]}