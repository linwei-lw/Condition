{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\util\\Widget.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\util\\Widget.js","mtime":1660534925310},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Tree from '@/components/Tree/index.vue';\nimport TeamTree from '@/common/tree/TeamTree.vue';\nimport CarTree from '@/common/tree/CarTree.vue';\nimport AlarmTree from '@/common/tree/AlarmTree.vue';\nimport { arrayToTree } from '@/common/util/Trees.js';\nimport { arrayRemoveItem } from '@/common/util/Arrays.js';\nimport { arrayRemoveFilter } from '@/common/util/Arrays.js';\nexport function create(widgets, values, refresh, type) {\n  if (!widgets || widgets.length == 0) return null;\n  var result = [],\n      cfgs = {},\n      vchgs = {},\n      echgs = {},\n      rchgs = {};\n  widgets.forEach(function (widget) {\n    if (!CFGS[widget.type]) return;\n    var cfg = CFGS[widget.type](widget, values, type);\n    setVisible(cfg, widget.visible, values, vchgs);\n    setEnabled(cfg, widget.enabled, values, echgs);\n    widget.refresh && (rchgs[cfg.id] = true);\n    result.push(cfgs[cfg.id] = cfg);\n  });\n\n  for (var id in vchgs) {\n    setOnChange(cfgs, cfgs[id], vchgs[id], echgs[id], rchgs[id] ? refresh : null);\n    delete echgs[id];\n    delete rchgs[id];\n  }\n\n  for (var _id in echgs) {\n    setOnChange(cfgs, cfgs[_id], null, echgs[_id], rchgs[_id] ? refresh : null);\n    delete rchgs[_id];\n  }\n\n  for (var _id2 in rchgs) {\n    setOnChange(cfgs, cfgs[_id2], null, null, refresh);\n  }\n\n  return result.length == 0 ? null : result;\n}\nexport function refresh(cfgs, params) {\n  //refresh为true的组件发生变化时，刷新所有可能的组件\n  cfgs.forEach(function (cfg) {\n    cfg.reset_options && cfg.reset_options(params);\n    cfg.reset_visible && cfg.reset_visible(params);\n    cfg.reset_enabled && cfg.reset_enabled(params);\n  });\n}\nexport function getValues(cfgs) {\n  var values = {};\n  cfgs.forEach(function (cfg) {\n    return values[cfg.id] = cfg.visible ? cfg.value : null;\n  });\n  return values;\n}\nexport function getExtText(bean, field, property) {\n  if (!bean || !bean[field]) return '';\n  if (typeof bean[field] == 'string') bean[field] = JSON.parse(bean[field]);\n  property = bean[field][property + '.text'] || bean[field][property]; //value\n\n  if (property == undefined || property === null) return '';\n  return property;\n} //是否在表格列显示\n\nexport function columnable(widget) {\n  return widget.type != 'IMG' && widget.type != 'FILE' && widget.type != 'LINK';\n} //是否在地图弹出窗显示\n\nexport function popupable(widget) {\n  return widget.type != 'IMG' && widget.type != 'FILE';\n}\nexport function getValueAndTexts(cfgs, olds) {\n  var result = {};\n  cfgs.forEach(function (cfg) {\n    cfg.visible ? (result[cfg.id] = cfg.value, cfg.hasOwnProperty('text') && (result[cfg.id + '.text'] = cfg.text)) : result[cfg.id] = null;\n  });\n\n  if (olds) {\n    for (var id in olds) {\n      !result.hasOwnProperty(id) && (result[id] = olds[id]);\n    }\n  }\n\n  return result;\n} //1、检查必填；2、检查唯一性\n\nexport function check(news, olds, widgets, uri, callback) {\n  checkRequired(widgets, callback) && checkUniqued(news, olds, widgets, uri, callback);\n} //提交动态组件，1、检查必填；2、检查唯一性；3、同步文件到服务器\n\nexport function submit(type, news, olds, widgets, uri, callback) {\n  var check = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n\n  if (check) {\n    checkRequired(widgets, callback) && checkUniqued(news, olds, widgets, uri, function (ok, tip) {\n      ok ? submitFile(type, news, olds, widgets, callback) : callback(ok, tip);\n    });\n  } else {\n    submitFile(type, news, olds, widgets, callback);\n  }\n}\n\nfunction checkRequired(cfgs, callback) {\n  for (var i = 0, len = cfgs.length, cfg; i < len; i++) {\n    cfg = cfgs[i];\n\n    if (cfg.visible && cfg.required && !cfg.value) {\n      callback(false, $_L.get('请填写[{0}]！', cfg.label));\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction checkUniqued(news, olds, widgets, uri, callback) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  if (!uri || widgets.length <= i) return callback(true); //到达最后，通过\n\n  var widget = widgets[i];\n\n  if (widget.uniqued != true) {\n    //如果不要求唯一，下一个\n    return checkUniqued(news, olds, widgets, uri, callback, ++i);\n  }\n\n  var value = news[widget.id];\n\n  if (!value) {\n    //如果要求唯一，但没有值，下一个\n    return checkUniqued(news, olds, widgets, uri, callback, ++i);\n  }\n\n  if (olds && olds[widget.id] == value) {\n    //如果要求唯一，但值没有变化，下一个\n    return checkUniqued(news, olds, widgets, uri, callback, ++i);\n  }\n\n  $_http.post(uri, {\n    field: widget.id,\n    value: value\n  }).then(function (flag) {\n    if (flag) return checkUniqued(news, olds, widgets, uri, callback, ++i); //确认了值是唯一的，下一个\n\n    callback(false, $_L.get('已经存在相同的[{0}]！', widget.label));\n  }).catch(function (error) {\n    return callback(false);\n  });\n}\n\nfunction submitFile(type, news, olds, widgets, callback) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  if (widgets.length <= i) return callback(true); //到达最后，通过\n\n  var widget = widgets[i];\n\n  if (widget._type != 'IMG' && widget._type != 'FILE') {\n    //如果不是文件\n    return submitFile(type, news, olds, widgets, callback, ++i);\n  }\n\n  var addfile = news[widget.id],\n      delfile = olds ? olds[widget.id] : null;\n\n  if (!addfile && !delfile) {\n    //如果没有文件\n    return submitFile(type, news, olds, widgets, callback, ++i);\n  }\n\n  if (addfile == delfile) {\n    //如果文件没变化\n    return submitFile(type, news, olds, widgets, callback, ++i);\n  }\n\n  var params = new FormData();\n  params.append(\"type\", type);\n  delfile && params.append(\"delfile\", delfile);\n  addfile && params.append(\"addfile\", addfile);\n  widget.file && params.append(\"image\", widget.file);\n  $_http.post('/widget?file', params).then(function (flag) {\n    submitFile(type, news, olds, widgets, callback, ++i);\n  }).catch(function (error) {\n    return callback(false);\n  });\n}\n\nvar CFGS = {\n  TEXT: function TEXT(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    widget.reg && (cfg.reg = new RegExp(widget.reg));\n    cfg.unit = widget.unit;\n    return cfg;\n  },\n  AREA: function AREA(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    widget.reg && (cfg.reg = new RegExp(widget.reg));\n    cfg.unit = widget.unit;\n    return cfg;\n  },\n  DATE: function DATE(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg._type = 'DT';\n    cfg.type = 'YMD';\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  DATE_TIME: function DATE_TIME(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg._type = 'DT';\n    cfg.type = 'YMDHNS';\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  TIME: function TIME(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg._type = 'DT';\n    cfg.type = 'HNS';\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  RADIO: function RADIO(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.title = widget.tip;\n    cfg.unit = widget.unit;\n    cfg.options = widget.src ? radioSrc(cfg, widget.src) : [];\n    return cfg;\n  },\n  LIST: function LIST(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.unit = widget.unit;\n    cfg.clearable = !widget.required;\n    cfg.options = widget.src ? selectSrc(cfg, widget.src, values) : [];\n    return cfg;\n  },\n  CHECK_LIST: function CHECK_LIST(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.unit = widget.unit;\n    cfg.clearable = !widget.required;\n    cfg.options = widget.src ? selectSrc(cfg, widget.src, values) : [];\n    return cfg;\n  },\n  IMG: function IMG(widget, values, type) {\n    var cfg = setCommon(widget, values);\n    cfg.value && (cfg.src = 'images?refPath=' + type + '/' + cfg.value);\n    cfg.placeholder = widget.tip;\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  TREE: function TREE(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.clearable = !widget.required;\n    widget.src && treeSrc(cfg, widget.src, values, false);\n    return cfg;\n  },\n  CHECK_TREE: function CHECK_TREE(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.clearable = !widget.required;\n    widget.src && treeSrc(cfg, widget.src, values, true);\n    return cfg;\n  },\n  LINK: function LINK(widget, values) {\n    var cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip || $_L.get('点击编辑链接');\n    cfg.clearable = !widget.required;\n    return cfg;\n  }\n};\n\nfunction setCommon(widget, values) {\n  return {\n    id: widget.id,\n    label: $_L.get(widget.name),\n    value: values ? values[widget.id] : null,\n    text: values ? values[widget.id + '.text'] : null,\n    required: widget.required,\n    uniqued: widget.uniqued,\n    _type: widget.type,\n    onChange: function onChange() {}\n  };\n}\n\nfunction radioSrc(cfg, src) {\n  cfg.labelField = 'label';\n  cfg.valueField = 'value';\n  var array = JSON.parse(src),\n      options = [];\n\n  for (var i = 0; i < array.length; i += 2) {\n    options.push({\n      label: $_L.get(array[i + 1]),\n      value: array[i]\n    });\n  }\n\n  return options;\n}\n\nfunction selectSrc(cfg, src, values) {\n  switch (src.charAt(0)) {\n    case '[':\n      return array_list(cfg, src);\n    //固定－[value1,value2,...]或[text1:value1,text2:value2,...]\n\n    case '{':\n      return cmn_list(cfg, src);\n    //通用－{通用类型ID}\n\n    case '(':\n      return bean_list(cfg, src, values);\n    //可变－(bean,method,lalbelField,valueField,0/1变参)\n\n    default:\n      return [];\n  }\n}\n\nfunction treeSrc(cfg, src, values, check) {\n  switch (src.charAt(0)) {\n    case '{':\n      return cmn_tree(cfg, src, check);\n    //通用－{通用类型ID,beforeClick或beforeCheck表达式}\n\n    case '(':\n      return bean_tree(cfg, src, values, check);\n    //可变－(bean,method,lalbelField,valueField,pidField,beforeClick或beforeCheck表达式)\n\n    default:\n      fixed_tree(cfg, src, check);\n    //TEAM / CAR / ALARM_TYPE\n  }\n}\n\nfunction array_list(cfg, src) {\n  //固定－[value1,value2,...]或[text1:value1,text2:value2,...]\n  var array = JSON.parse(src),\n      options = [];\n  if (array.length == 0) return options;\n  var text = array[0].indexOf(':') > 0;\n  cfg.labelField = text ? 'text' : 'value';\n  cfg.valueField = 'value';\n  array.forEach(function (item) {\n    if (text) {\n      item = item.split(':');\n      options.push({\n        text: item[0],\n        value: item[1]\n      });\n    } else {\n      options.push({\n        value: item\n      });\n    }\n  });\n  return options;\n}\n\nfunction cmn_list(cfg, src) {\n  //通用－{通用类型ID}\n  cfg.labelField = 'name';\n  cfg.valueField = 'id';\n  var typeId = src.substring(1, src.length - 1);\n  return $_http.syncPost('/cmn?getCmnList', {\n    typeId: typeId\n  });\n}\n\nfunction bean_list(cfg, src, values) {\n  //可变－(bean,method,labelField,valueField,0/1变参)\n  var array = src.substring(1, src.length - 1).split(',');\n  var bean = array[0],\n      method = array[1],\n      labelField = array[2],\n      valueField = array[3],\n      flag = array[4];\n  cfg.labelField = labelField;\n  cfg.valueField = valueField;\n\n  if (flag == '1') {\n    //由外面传参调用\n    cfg.reset_options = function (params) {\n      $_http.post('/widget?invoke', {\n        bean: bean,\n        method: method,\n        params: params\n      }).then(function (result) {\n        cfg.options = result || [];\n      });\n    };\n  }\n\n  return $_http.syncPost('/widget?invoke', {\n    bean: bean,\n    method: method,\n    params: values\n  });\n}\n\nfunction cmn_tree(cfg, src, check) {\n  //通用－{通用类型ID,beforeClick表达式或onCheck处理}\n  var array = src.substring(1, src.length - 1).split(',');\n  var typeId = array[0],\n      exp = array.length > 1 ? array[1] : null;\n  cfg.tree = Tree;\n  cfg.valueField = 'id';\n  cfg.setting = {\n    check: {\n      enable: check\n    },\n    callback: check ? {\n      onCheck: getOnCheck(exp)\n    } : {\n      beforeClick: getBeforeClick(exp)\n    }\n  };\n\n  cfg.getTreeRoots = function (callback) {\n    $_http.post('/cmn?getCmnTree', {\n      typeId: typeId\n    }).then(function (result) {\n      callback(arrayToTree(result));\n    });\n  };\n}\n\nfunction bean_tree(cfg, src, values, check) {\n  //可变－(bean,method,labelField,valueField,pidField,beforeClick表达式或onCheck处理)\n  var array = src.substring(1, src.length - 1).split(',');\n  var bean = array[0],\n      method = array[1],\n      labelField = array[2],\n      valueField = array[3],\n      pidField = array[4],\n      exp = array.length > 5 ? array[5] : null;\n  cfg.tree = Tree;\n  cfg.valueField = valueField;\n  cfg.setting = {\n    check: {\n      enable: check\n    },\n    data: {\n      key: {\n        name: labelField\n      }\n    },\n    callback: check ? {\n      onCheck: getOnCheck(exp)\n    } : {\n      beforeClick: getBeforeClick(exp)\n    }\n  };\n\n  cfg.getTreeRoots = function (callback) {\n    $_http.post('/widget?invoke', {\n      bean: bean,\n      method: method,\n      params: values\n    }).then(function (result) {\n      callback(arrayToTree(result, valueField, pidField));\n    });\n  };\n}\n\nfunction fixed_tree(cfg, src, check) {\n  //TEAM CAR ALARM_TYPE\n  cfg.setting = {\n    check: {\n      enable: check\n    }\n  };\n\n  if (src == 'TEAM') {\n    cfg.tree = TeamTree;\n    cfg.valueField = 'id';\n    cfg.setting = {\n      check: {\n        enable: check\n      },\n      data: {\n        key: {\n          name: 'name'\n        }\n      },\n      callback: check ? {\n        onCheck: function onCheck(node, ns) {\n          return node.id == '0' && arrayRemoveItem(ns, node);\n        }\n      } : {\n        beforeClick: function beforeClick(node) {\n          return node.id != '0';\n        }\n      }\n    };\n    return;\n  }\n\n  if (src == 'CAR') {\n    cfg.tree = CarTree;\n    cfg.valueField = 'id';\n    cfg.hasOwnField = 'plate';\n    cfg.setting = {\n      check: {\n        enable: check\n      }\n    };\n    return;\n  }\n\n  if (src == 'ALARM_TYPE') {\n    cfg.tree = AlarmTree;\n    cfg.valueField = 'id';\n    cfg.setting = {\n      check: {\n        enable: check\n      },\n      type: 'all',\n      callback: check ? {\n        onCheck: function onCheck(node, ns) {\n          return arrayRemoveFilter(ns, function (node) {\n            return node.id == '0' || node.pid == '0';\n          });\n        }\n      } : {\n        beforeClick: function beforeClick(node) {\n          return node.id != '0' && node.pid != '0';\n        }\n      }\n    };\n    return;\n  }\n}\n\nfunction setVisible(cfg, visible, values, vchgs) {\n  cfg.visible = true;\n  if (!visible) return;\n\n  if (visible.charAt(0) == '0') {\n    return cfg.visible = false;\n  }\n\n  if (visible.charAt(0) == '{') {\n    //关联{控件ID==值}\n    visible = visible.substring(1, visible.length - 1).split('==');\n    var id = visible[0],\n        value = visible[1];\n\n    if (vchgs) {\n      //{id1:{id2:value}}  当id1组件值发生变化时，去刷新id2(当前组件)的可见性，当id1组件值==value时，id2(当前组件)可见，否则不可见\n      vchgs[id] = vchgs[id] || {};\n      vchgs[id][cfg.id] = value;\n    }\n\n    return cfg.visible = values[id] == value;\n  }\n\n  if (visible.charAt(0) == '(') {\n    //后台(bean,method,0/1变参)\n    visible = visible.substring(1, visible.length - 1).split(',');\n    var bean = visible[0],\n        method = visible[1],\n        flag = visible[2];\n\n    if (flag == '1') {\n      //由外面传参调用\n      cfg.reset_visible = function (params) {\n        return $_http.post('/widget?invoke', {\n          bean: bean,\n          method: method,\n          params: params\n        }).then(function (result) {\n          return cfg.visible = result;\n        });\n      };\n    }\n\n    $_http.post('/widget?invoke', {\n      bean: bean,\n      method: method,\n      params: values\n    }).then(function (result) {\n      return cfg.visible = result;\n    });\n  }\n}\n\nfunction setEnabled(cfg, enabled, values, echgs) {\n  cfg.enabled = true;\n  if (!enabled) return;\n\n  if (enabled.charAt(0) == '0') {\n    return cfg.enabled = false;\n  }\n\n  if (enabled.charAt(0) == '{') {\n    //关联{控件ID==值}\n    enabled = enabled.substring(1, enabled.length - 1).split('==');\n    var id = enabled[0],\n        value = enabled[1];\n\n    if (echgs) {\n      //{id1:{id2:value}}  当id1组件值发生变化时，去刷新id2(当前组件)的可编译性，当id1组件值==value时，id2(当前组件)可编译，否则不可编译\n      echgs[id] = echgs[id] || {};\n      echgs[id][cfg.id] = value;\n    }\n\n    return cfg.enabled = values[id] == value;\n  }\n\n  if (enabled.charAt(0) == '(') {\n    //后台(bean,method,0/1变参)\n    enabled = enabled.substring(1, enabled.length - 1).split(',');\n    var bean = enabled[0],\n        method = enabled[1],\n        flag = enabled[2];\n\n    if (flag == '1') {\n      //由外面传参调用\n      cfg.reset_enabled = function (params) {\n        return $_http.post('/widget?invoke', {\n          bean: bean,\n          method: method,\n          params: params\n        }).then(function (result) {\n          return cfg.enabled = result;\n        });\n      };\n    }\n\n    $_http.post('/widget?invoke', {\n      bean: bean,\n      method: method,\n      params: values\n    }).then(function (result) {\n      return cfg.enabled = result;\n    });\n  }\n}\n\nfunction setOnChange(cfgs, cfg, vchg, echg, refresh) {\n  //当cfg组件值发生变化，刷新vchg可见、echg可编辑、refresh所有\n  cfg.onChange = function () {\n    if (vchg) {\n      for (var id in vchg) {\n        cfgs[id].visible = cfg.value == vchg[id];\n      }\n    }\n\n    if (echg) {\n      for (var _id3 in echg) {\n        cfgs[_id3].enabled = cfg.value == echg[_id3];\n      }\n    }\n\n    refresh && refresh();\n  };\n}\n\nfunction getBeforeClick(exp) {\n  if (!exp) return null;\n  if (TREE_BEFORE_CLICK[exp]) return TREE_BEFORE_CLICK[exp];\n  return function (node) {\n    return eval(exp);\n  };\n}\n\nfunction getOnCheck(exp) {\n  if (!exp) return null;\n  if (TREE_BEFORE_CHECK[exp]) return TREE_BEFORE_CHECK[exp];\n  return function (node, nodes) {\n    return eval(exp);\n  };\n}\n\nvar TREE_BEFORE_CLICK = {//当树点击前做些判断\n};\nvar TREE_BEFORE_CHECK = {//当树勾选前做些判断\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\util\\Widget.js"],"names":["widgets","result","cfgs","vchgs","echgs","rchgs","CFGS","widget","cfg","setVisible","setEnabled","setOnChange","values","bean","JSON","property","olds","checkRequired","checkUniqued","check","ok","submitFile","callback","i","len","$_L","value","news","$_http","field","addfile","delfile","params","TEXT","setCommon","AREA","DATE","DATE_TIME","TIME","RADIO","radioSrc","LIST","selectSrc","CHECK_LIST","IMG","TREE","treeSrc","CHECK_TREE","LINK","id","label","text","required","uniqued","_type","onChange","array","options","src","array_list","cmn_list","bean_list","cmn_tree","bean_tree","fixed_tree","item","typeId","method","labelField","valueField","flag","exp","enable","onCheck","getOnCheck","beforeClick","getBeforeClick","arrayToTree","pidField","data","key","name","node","arrayRemoveItem","type","arrayRemoveFilter","visible","enabled","vchg","echg","refresh","TREE_BEFORE_CLICK","eval","TREE_BEFORE_CHECK"],"mappings":"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","sourcesContent":["import Tree from '@/components/Tree/index.vue';\nimport TeamTree from '@/common/tree/TeamTree.vue';\nimport CarTree from '@/common/tree/CarTree.vue';\nimport AlarmTree from '@/common/tree/AlarmTree.vue';\n\nimport { arrayToTree } from '@/common/util/Trees.js';\nimport { arrayRemoveItem } from '@/common/util/Arrays.js';\nimport { arrayRemoveFilter } from '@/common/util/Arrays.js';\n\nexport function create(widgets, values, refresh, type) {\n  if (!widgets || widgets.length == 0) return null;\n  let result = [], cfgs = {}, vchgs = {}, echgs = {}, rchgs = {}\n  widgets.forEach(widget => {\n    if (!CFGS[widget.type]) return;\n    let cfg = CFGS[widget.type](widget, values, type);\n    setVisible(cfg, widget.visible, values, vchgs);\n    setEnabled(cfg, widget.enabled, values, echgs);\n    widget.refresh && (rchgs[cfg.id] = true);\n    result.push(cfgs[cfg.id] = cfg);\n  });\n  for (let id in vchgs) {\n    setOnChange(cfgs, cfgs[id], vchgs[id], echgs[id], rchgs[id] ? refresh : null);\n    delete echgs[id]; delete rchgs[id];\n  }\n  for (let id in echgs) {\n    setOnChange(cfgs, cfgs[id], null, echgs[id], rchgs[id] ? refresh : null);\n    delete rchgs[id];\n  }\n  for (let id in rchgs) {\n    setOnChange(cfgs, cfgs[id], null, null, refresh);\n  }\n  return result.length == 0 ? null : result;\n}\n\nexport function refresh(cfgs, params) {//refresh为true的组件发生变化时，刷新所有可能的组件\n  cfgs.forEach(cfg => {\n    cfg.reset_options && cfg.reset_options(params);\n    cfg.reset_visible && cfg.reset_visible(params);\n    cfg.reset_enabled && cfg.reset_enabled(params);\n  });\n}\n\nexport function getValues(cfgs) {\n  let values = {};\n  cfgs.forEach(cfg => values[cfg.id] = cfg.visible ? cfg.value : null);\n  return values;\n}\n\nexport function getExtText(bean, field, property) {\n  if (!bean || !bean[field]) return '';\n  if (typeof bean[field] == 'string') bean[field] = JSON.parse(bean[field]);\n  property = bean[field][property + '.text'] || bean[field][property];//value\n  if (property == undefined || property === null) return '';\n  return property;\n}\n\n//是否在表格列显示\nexport function columnable(widget) {\n  return widget.type != 'IMG' && widget.type != 'FILE' && widget.type != 'LINK';\n}\n\n//是否在地图弹出窗显示\nexport function popupable(widget) {\n  return widget.type != 'IMG' && widget.type != 'FILE';\n}\n\nexport function getValueAndTexts(cfgs, olds) {\n  let result = {};\n  cfgs.forEach(cfg => {\n    cfg.visible ? (result[cfg.id] = cfg.value, cfg.hasOwnProperty('text') && (result[cfg.id + '.text'] = cfg.text)) : (result[cfg.id] = null);\n  });\n  if (olds) {\n    for (let id in olds) {\n      !result.hasOwnProperty(id) && (result[id] = olds[id]);\n    }\n  }\n  return result;\n}\n\n//1、检查必填；2、检查唯一性\nexport function check(news, olds, widgets, uri, callback) {\n  checkRequired(widgets, callback) && checkUniqued(news, olds, widgets, uri, callback);\n}\n\n//提交动态组件，1、检查必填；2、检查唯一性；3、同步文件到服务器\nexport function submit(type, news, olds, widgets, uri, callback, check = true) {\n  if (check) {\n    checkRequired(widgets, callback) && checkUniqued(news, olds, widgets, uri, (ok, tip) => {\n      ok ? submitFile(type, news, olds, widgets, callback) : callback(ok, tip);\n    });\n  } else {\n    submitFile(type, news, olds, widgets, callback)\n  }\n}\n\nfunction checkRequired(cfgs, callback) {\n  for (let i = 0, len = cfgs.length, cfg; i < len; i++) {\n    cfg = cfgs[i];\n    if (cfg.visible && cfg.required && !cfg.value) {\n      callback(false, $_L.get('请填写[{0}]！', cfg.label));\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction checkUniqued(news, olds, widgets, uri, callback, i = 0) {\n  if (!uri || widgets.length <= i) return callback(true);//到达最后，通过\n  let widget = widgets[i];\n  if (widget.uniqued != true) {//如果不要求唯一，下一个\n    return checkUniqued(news, olds, widgets, uri, callback, ++i);\n  }\n  let value = news[widget.id];\n  if (!value) {//如果要求唯一，但没有值，下一个\n    return checkUniqued(news, olds, widgets, uri, callback, ++i);\n  }\n  if (olds && olds[widget.id] == value) {//如果要求唯一，但值没有变化，下一个\n    return checkUniqued(news, olds, widgets, uri, callback, ++i);\n  }\n  $_http.post(uri, { field: widget.id, value: value }).then(flag => {\n    if (flag) return checkUniqued(news, olds, widgets, uri, callback, ++i);//确认了值是唯一的，下一个\n    callback(false, $_L.get('已经存在相同的[{0}]！', widget.label));\n  }).catch(error => callback(false));\n}\n\nfunction submitFile(type, news, olds, widgets, callback, i = 0) {\n  if (widgets.length <= i) return callback(true);//到达最后，通过\n  let widget = widgets[i];\n  if (widget._type != 'IMG' && widget._type != 'FILE') {//如果不是文件\n    return submitFile(type, news, olds, widgets, callback, ++i);\n  }\n  let addfile = news[widget.id], delfile = olds ? olds[widget.id] : null;\n  if (!addfile && !delfile) {//如果没有文件\n    return submitFile(type, news, olds, widgets, callback, ++i);\n  }\n  if (addfile == delfile) {//如果文件没变化\n    return submitFile(type, news, olds, widgets, callback, ++i);\n  }\n\n  let params = new FormData();\n  params.append(\"type\", type);\n  delfile && params.append(\"delfile\", delfile);\n  addfile && params.append(\"addfile\", addfile);\n  widget.file && params.append(\"image\", widget.file);\n\n  $_http.post('/widget?file', params).then(flag => {\n    submitFile(type, news, olds, widgets, callback, ++i);\n  }).catch(error => callback(false));\n}\n\nlet CFGS = {\n  TEXT: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    widget.reg && (cfg.reg = new RegExp(widget.reg));\n    cfg.unit = widget.unit;\n    return cfg;\n  },\n  AREA: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    widget.reg && (cfg.reg = new RegExp(widget.reg));\n    cfg.unit = widget.unit;\n    return cfg;\n  },\n  DATE: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg._type = 'DT';\n    cfg.type = 'YMD';\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  DATE_TIME: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg._type = 'DT';\n    cfg.type = 'YMDHNS';\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  TIME: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg._type = 'DT';\n    cfg.type = 'HNS';\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  RADIO: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.title = widget.tip;\n    cfg.unit = widget.unit;\n    cfg.options = widget.src ? radioSrc(cfg, widget.src) : [];\n    return cfg;\n  },\n  LIST: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.unit = widget.unit;\n    cfg.clearable = !widget.required;\n    cfg.options = widget.src ? selectSrc(cfg, widget.src, values) : [];\n    return cfg;\n  },\n  CHECK_LIST: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.unit = widget.unit;\n    cfg.clearable = !widget.required;\n    cfg.options = widget.src ? selectSrc(cfg, widget.src, values) : [];\n    return cfg;\n  },\n  IMG: function (widget, values, type) {\n    let cfg = setCommon(widget, values);\n    cfg.value && (cfg.src = 'images?refPath=' + type + '/' + cfg.value);\n    cfg.placeholder = widget.tip;\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n  TREE: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.clearable = !widget.required;\n    widget.src && treeSrc(cfg, widget.src, values, false);\n    return cfg;\n  },\n  CHECK_TREE: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip;\n    cfg.clearable = !widget.required;\n    widget.src && treeSrc(cfg, widget.src, values, true);\n    return cfg;\n  },\n  LINK: function (widget, values) {\n    let cfg = setCommon(widget, values);\n    cfg.placeholder = widget.tip || $_L.get('点击编辑链接');\n    cfg.clearable = !widget.required;\n    return cfg;\n  },\n}\n\nfunction setCommon(widget, values) {\n  return {\n    id: widget.id,\n    label: $_L.get(widget.name),\n    value: values ? values[widget.id] : null,\n    text: values ? values[widget.id + '.text'] : null,\n    required: widget.required,\n    uniqued: widget.uniqued,\n    _type: widget.type,\n    onChange: () => { }\n  };\n}\n\nfunction radioSrc(cfg, src) {\n  cfg.labelField = 'label';\n  cfg.valueField = 'value';\n  let array = JSON.parse(src), options = [];\n  for (let i = 0; i < array.length; i += 2) {\n    options.push({ label: $_L.get(array[i + 1]), value: array[i] });\n  }\n  return options;\n}\n\nfunction selectSrc(cfg, src, values) {\n  switch (src.charAt(0)) {\n    case '[': return array_list(cfg, src);         //固定－[value1,value2,...]或[text1:value1,text2:value2,...]\n    case '{': return cmn_list(cfg, src);           //通用－{通用类型ID}\n    case '(': return bean_list(cfg, src, values);  //可变－(bean,method,lalbelField,valueField,0/1变参)\n    default: return [];\n  }\n}\n\nfunction treeSrc(cfg, src, values, check) {\n  switch (src.charAt(0)) {\n    case '{': return cmn_tree(cfg, src, check);             //通用－{通用类型ID,beforeClick或beforeCheck表达式}\n    case '(': return bean_tree(cfg, src, values, check);    //可变－(bean,method,lalbelField,valueField,pidField,beforeClick或beforeCheck表达式)\n    default: fixed_tree(cfg, src, check);                   //TEAM / CAR / ALARM_TYPE\n  }\n}\n\nfunction array_list(cfg, src) {//固定－[value1,value2,...]或[text1:value1,text2:value2,...]\n  let array = JSON.parse(src), options = [];\n  if (array.length == 0) return options;\n  let text = array[0].indexOf(':') > 0;\n  cfg.labelField = text ? 'text' : 'value';\n  cfg.valueField = 'value';\n  array.forEach(item => {\n    if (text) {\n      item = item.split(':');\n      options.push({ text:item[0], value:item[1] });\n    } else {\n      options.push({ value: item });\n    }\n  });\n  return options;\n}\n\nfunction cmn_list(cfg, src) {//通用－{通用类型ID}\n  cfg.labelField = 'name';\n  cfg.valueField = 'id';\n  let typeId = src.substring(1, src.length - 1);\n  return $_http.syncPost('/cmn?getCmnList', { typeId: typeId });\n}\n\nfunction bean_list(cfg, src, values) {//可变－(bean,method,labelField,valueField,0/1变参)\n  let array = src.substring(1, src.length - 1).split(',');\n  let bean = array[0], method = array[1], labelField = array[2], valueField = array[3], flag = array[4];\n  cfg.labelField = labelField;\n  cfg.valueField = valueField;\n  if (flag == '1') {//由外面传参调用\n    cfg.reset_options = params => {\n      $_http.post('/widget?invoke', { bean: bean, method: method, params: params }).then(result => {\n        cfg.options = result || [];\n      });\n    }\n  }\n  return $_http.syncPost('/widget?invoke', { bean: bean, method: method, params: values });\n}\n\nfunction cmn_tree(cfg, src, check) {//通用－{通用类型ID,beforeClick表达式或onCheck处理}\n  let array = src.substring(1, src.length - 1).split(',');\n  let typeId = array[0], exp = array.length > 1 ? array[1] : null;\n  cfg.tree = Tree;\n  cfg.valueField = 'id';\n  cfg.setting = { check:{enable:check}, callback: check ? { onCheck: getOnCheck(exp) } : { beforeClick: getBeforeClick(exp) } };\n  cfg.getTreeRoots = callback => {\n    $_http.post('/cmn?getCmnTree', { typeId: typeId }).then(result => {\n      callback(arrayToTree(result));\n    });\n  };\n}\n\nfunction bean_tree(cfg, src, values, check) {//可变－(bean,method,labelField,valueField,pidField,beforeClick表达式或onCheck处理)\n  let array = src.substring(1, src.length - 1).split(',');\n  let bean = array[0], method = array[1], labelField = array[2], valueField = array[3], pidField = array[4], exp = array.length > 5 ? array[5] : null;\n  cfg.tree = Tree;\n  cfg.valueField = valueField;\n  cfg.setting = { check:{enable:check}, data: { key: { name: labelField } }, callback: check ? { onCheck: getOnCheck(exp) } : { beforeClick: getBeforeClick(exp) } };\n  cfg.getTreeRoots = callback => {\n    $_http.post('/widget?invoke', { bean: bean, method: method, params: values }).then(result => {\n      callback(arrayToTree(result, valueField, pidField));\n    });\n  };\n}\n\nfunction fixed_tree(cfg, src, check) {//TEAM CAR ALARM_TYPE\n  cfg.setting = { check:{enable:check} };\n  if (src == 'TEAM') {\n    cfg.tree = TeamTree;\n    cfg.valueField = 'id';\n    cfg.setting = { check:{enable:check}, data: { key: { name: 'name' } }, callback: check ? { onCheck: (node, ns) => node.id=='0' && arrayRemoveItem(ns, node) } : { beforeClick: node=>node.id!='0' } };\n    return;\n  }\n  if (src == 'CAR') {\n    cfg.tree = CarTree;\n    cfg.valueField = 'id';\n    cfg.hasOwnField = 'plate';\n    cfg.setting = { check:{enable:check} };\n    return;\n  }\n  if (src == 'ALARM_TYPE') {\n    cfg.tree = AlarmTree;\n    cfg.valueField = 'id';\n    cfg.setting = { check:{enable:check}, type:'all', callback: check ? { onCheck: (node, ns) => arrayRemoveFilter(ns, node=>node.id=='0'||node.pid=='0') } : { beforeClick: node=>node.id!='0'&&node.pid!='0' } };\n    return;\n  }\n}\n\nfunction setVisible(cfg, visible, values, vchgs) {\n  cfg.visible = true;\n  if (!visible) return;\n  if (visible.charAt(0) == '0') {\n    return cfg.visible = false;\n  }\n  if (visible.charAt(0) == '{') {//关联{控件ID==值}\n    visible = visible.substring(1, visible.length - 1).split('==');\n    let id = visible[0], value = visible[1];\n    if (vchgs) {//{id1:{id2:value}}  当id1组件值发生变化时，去刷新id2(当前组件)的可见性，当id1组件值==value时，id2(当前组件)可见，否则不可见\n      vchgs[id] = vchgs[id] || {};\n      vchgs[id][cfg.id] = value;\n    }\n    return cfg.visible = values[id] == value;\n  }\n  if (visible.charAt(0) == '(') {//后台(bean,method,0/1变参)\n    visible = visible.substring(1, visible.length - 1).split(',');\n    let bean = visible[0], method = visible[1], flag = visible[2];\n    if (flag == '1') {//由外面传参调用\n      cfg.reset_visible = params => $_http.post('/widget?invoke', { bean: bean, method: method, params: params }).then(result => cfg.visible = result);\n    }\n    $_http.post('/widget?invoke', { bean: bean, method: method, params: values }).then(result => cfg.visible = result);\n  }\n}\n\nfunction setEnabled(cfg, enabled, values, echgs) {\n  cfg.enabled = true;\n  if (!enabled) return;\n  if (enabled.charAt(0) == '0') {\n    return cfg.enabled = false;\n  }\n  if (enabled.charAt(0) == '{') {//关联{控件ID==值}\n    enabled = enabled.substring(1, enabled.length - 1).split('==');\n    let id = enabled[0], value = enabled[1];\n    if (echgs) {//{id1:{id2:value}}  当id1组件值发生变化时，去刷新id2(当前组件)的可编译性，当id1组件值==value时，id2(当前组件)可编译，否则不可编译\n      echgs[id] = echgs[id] || {};\n      echgs[id][cfg.id] = value;\n    }\n    return cfg.enabled = values[id] == value;\n  }\n  if (enabled.charAt(0) == '(') {//后台(bean,method,0/1变参)\n    enabled = enabled.substring(1, enabled.length - 1).split(',');\n    let bean = enabled[0], method = enabled[1], flag = enabled[2];\n    if (flag == '1') {//由外面传参调用\n      cfg.reset_enabled = params => $_http.post('/widget?invoke', { bean: bean, method: method, params: params }).then(result => cfg.enabled = result);\n    }\n    $_http.post('/widget?invoke', { bean: bean, method: method, params: values }).then(result => cfg.enabled = result);\n  }\n}\n\nfunction setOnChange(cfgs, cfg, vchg, echg, refresh) {//当cfg组件值发生变化，刷新vchg可见、echg可编辑、refresh所有\n  cfg.onChange = () => {\n    if (vchg) {\n      for (let id in vchg) {\n        cfgs[id].visible = cfg.value == vchg[id];\n      }\n    }\n    if (echg) {\n      for (let id in echg) {\n        cfgs[id].enabled = cfg.value == echg[id];\n      }\n    }\n    refresh && refresh();\n  }\n}\n\nfunction getBeforeClick(exp) {\n  if (!exp) return null;\n  if (TREE_BEFORE_CLICK[exp]) return TREE_BEFORE_CLICK[exp];\n  return node => eval(exp);\n}\n\nfunction getOnCheck(exp) {\n  if (!exp) return null;\n  if (TREE_BEFORE_CHECK[exp]) return TREE_BEFORE_CHECK[exp];\n  return (node,nodes) => eval(exp);\n}\n\nlet TREE_BEFORE_CLICK = {//当树点击前做些判断\n};\nlet TREE_BEFORE_CHECK = {//当树勾选前做些判断\n};"]}]}