{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputRadio.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputRadio.vue","mtime":1612227987676},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 使用例子\n* <InputRadio label=\"你要选择哪一个\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"want\" @change=\"onRadioChg\"/>\n*\n*  data: {want: 1},\n*  methods: {\n*    onRadioChg(value) {// value值是1或2\n*    }\n*  }\n*/\nexport default {\n  name: \"InputRadio\",\n  props: {\n    label: String,\n    // 标题文本\n    value: [String, Number, Boolean],\n    // 当前值(v-model)\n    options: Array,\n    // 多个选项 [{lable:xxx,value:xxx}...]\n    labelField: {\n      type: String,\n      default: 'label'\n    },\n    // 显示字段\n    valueField: {\n      type: String,\n      default: 'value'\n    },\n    // 值字段\n    unit: String,\n    // 单位\n    required: Boolean,\n    // 是否必填\n    disabled: Boolean,\n    // 是否可操作\n    border: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示边框\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    // 是否垂直布局\n    height: {\n      type: Number,\n      default: $_theme.inputHeight\n    },\n    // 高度数值，单位是px\n    labelMinWidth: {\n      type: Number,\n      default: 10\n    },\n    // lable宽度最小数值，单位是px\n    groupStyle: {\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      groupName: window.$_uuid('RadioGroup'),\n      focused: false\n    };\n  },\n  methods: {\n    isChecked: function isChecked(item) {\n      item = item[this.valueField];\n      return item === this.value || \"\" + item === \"\" + this.value;\n    },\n    handleChange: function handleChange(event, item) {\n      if (this.disabled) {\n        return false;\n      }\n\n      var value = event.target.value;\n\n      if (this.valueType == 'number') {\n        value = Number(value);\n      } else if (this.valueType == 'boolean') {\n        value = value == 'true';\n      }\n\n      if (this.value !== value) {\n        this.$emit('input', value);\n        this.$emit('change', value, item);\n      }\n    }\n  },\n  computed: {\n    valueType: function valueType() {\n      if (this.options && this.options.length > 0) {\n        return _typeof(this.options[0][this.valueField]);\n      }\n\n      return null;\n    },\n    containerStyle: function containerStyle() {\n      return {\n        height: this.height + 'px',\n        borderColor: this.focused ? this.theme.color : this.theme.border_color_light,\n        zIndex: this.focused ? this.theme.zindex() : ''\n      };\n    },\n    labelStyle: function labelStyle() {\n      return {\n        minWidth: this.labelMinWidth + 'px',\n        borderRightColor: this.theme.border_color_light,\n        backgroundColor: this.theme.bg_color\n      };\n    },\n    radioLabelStyle: function radioLabelStyle() {\n      return {\n        display: this.vertical ? 'block' : 'inline-block'\n      };\n    }\n  }\n};",{"version":3,"sources":["InputRadio.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"containerStyle\" tabindex=\"0\" @focus=\"focused=true\" @blur=\"focused=false\">\r\n\r\n    <!--label显示-->\r\n    <span :class=\"$style.label\" :style=\"labelStyle\" v-if=\"label\" is-label>{{label}}</span>\r\n\r\n    <!--必填显示-->\r\n    <span :class=\"[$style.required,'el-icon-star-on']\" :style=\"{backgroundColor:theme.bg_color}\" v-if=\"required\"></span>\r\n\r\n    <!--单位显示-->\r\n    <span :class=\"$style.unit\" v-if=\"unit\">{{unit}}</span>\r\n\r\n    <!--radio分组显示-->\r\n    <div :class=\"$style.radioGroup\" :style=\"[{display:vertical?'inline-block':'flex'},groupStyle]\">\r\n      <!--遍历每个radio项-->\r\n      <label v-for=\"item in options\" :key=\"item[valueField]\"\r\n        :class=\"[$style.radioItem, isChecked(item) ? $style.checked : $style.unchecked]\"\r\n        :style=\"[{color: isChecked(item) ? theme.menubar_color : ''}, radioLabelStyle]\">\r\n        <!--radio按钮-->\r\n        <input type=\"radio\" :disabled=\"disabled\" :value=\"item[valueField]\" :checked=\"isChecked(item)\" :name=\"groupName\" @change=\"handleChange($event, item)\" style=\"display:none;\">\r\n        <!--radio后面的文字-->\r\n        <span style=\"margin-left:18px;\">{{ item[labelField] }}</span>\r\n      </label>\r\n    </div>\r\n\r\n    <slot></slot>\r\n\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n  * 使用例子\r\n  * <InputRadio label=\"你要选择哪一个\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"want\" @change=\"onRadioChg\"/>\r\n  *\r\n  *  data: {want: 1},\r\n  *  methods: {\r\n  *    onRadioChg(value) {// value值是1或2\r\n  *    }\r\n  *  }\r\n  */\r\n\r\n  export default {\r\n    name: \"InputRadio\",\r\n    props: {\r\n      label: String,                                              // 标题文本\r\n      value: [String, Number, Boolean],                           // 当前值(v-model)\r\n      options: Array,                                             // 多个选项 [{lable:xxx,value:xxx}...]\r\n      labelField: { type: String, default: 'label' },             // 显示字段\r\n      valueField: { type: String, default: 'value' },             // 值字段\r\n      unit: String,                                               // 单位\r\n      required: Boolean,                                          // 是否必填\r\n      disabled: Boolean,                                          // 是否可操作\r\n      border:   { type: Boolean, default: true },                 // 是否显示边框\r\n      vertical: { type: Boolean, default: false },                // 是否垂直布局\r\n      height:   { type: Number,  default: $_theme.inputHeight },  // 高度数值，单位是px\r\n      labelMinWidth:{ type: Number,  default: 10 },               // lable宽度最小数值，单位是px\r\n      groupStyle: { default: null },\r\n    },\r\n    data() {\r\n      return { groupName: window.$_uuid('RadioGroup'), focused: false };\r\n    },\r\n    methods: {\r\n      isChecked(item) {\r\n        item = item[this.valueField];\r\n        return item === this.value || (\"\"+item) === (\"\"+this.value);\r\n      },\r\n      handleChange(event, item) {\r\n        if (this.disabled) {\r\n          return false;\r\n        }\r\n        let value = event.target.value;\r\n        if (this.valueType == 'number') {\r\n          value = Number(value);\r\n        } else if (this.valueType == 'boolean') {\r\n          value = value == 'true';\r\n        }\r\n        if (this.value !== value) {\r\n          this.$emit('input',  value);\r\n          this.$emit('change', value, item);\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      valueType() {\r\n        if (this.options && this.options.length > 0) {\r\n          return typeof this.options[0][this.valueField];\r\n        }\r\n        return null;\r\n      },\r\n      containerStyle() {\r\n        return {\r\n          height: this.height + 'px',\r\n          borderColor: this.focused ? this.theme.color : this.theme.border_color_light,\r\n          zIndex: this.focused ? this.theme.zindex() : ''\r\n        }\r\n      },\r\n      labelStyle() {\r\n        return {\r\n          minWidth: this.labelMinWidth + 'px',\r\n          borderRightColor: this.theme.border_color_light,\r\n          backgroundColor: this.theme.bg_color\r\n        };\r\n      },\r\n      radioLabelStyle() {\r\n        return { display: this.vertical ? 'block' : 'inline-block' };\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .checked         { background-image: url(\"@/assets/check/radio-checked.png\"); }\r\n  .checked:hover   { background-image: url(\"@/assets/check/radio-checked-hover.png\"); }\r\n  .unchecked       { background-image: url(\"@/assets/check/radio-unchecked.png\"); }\r\n  .unchecked:hover { background-image: url(\"@/assets/check/radio-unchecked-hover.png\"); }\r\n\r\n  .container {\r\n    outline: none;\r\n    position: relative;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    background-color: #fff;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .container > * {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  /* 标题文本 */\r\n  .label {\r\n    float: left;\r\n    padding: 0 6px;\r\n    border-right-style: solid;\r\n    border-right-width: 0px;\r\n    white-space: nowrap;\r\n  }\r\n  /* radio组 */\r\n  .radioGroup {\r\n    overflow: hidden;\r\n    padding-left: 8px;\r\n  }\r\n  /* radio项(按钮+文字) */\r\n  .radioItem {\r\n    margin: 6px 8px 6px 0px;\r\n    white-space: nowrap;\r\n    background-repeat: no-repeat;\r\n    background-position-y: center;\r\n    cursor: pointer;\r\n  }\r\n  /* 单位 */\r\n  .unit {\r\n    float: right;\r\n    padding-right: 8px;\r\n    white-space: nowrap;\r\n  }\r\n  /* 必填 */\r\n  .required {\r\n    display: flex !important;\r\n    float: right;\r\n    padding: 0 2px;\r\n    color: #f00;\r\n  }\r\n  /* 禁止操作 */\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60);\r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}