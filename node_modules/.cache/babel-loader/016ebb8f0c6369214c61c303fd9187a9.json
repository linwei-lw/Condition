{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\v-x-e-table\\index.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\v-x-e-table\\index.js","mtime":1635230121547},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _classCallCheck from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../v-x-e-table/src/conf\";\nimport { interceptor } from \"./src/interceptor\";\nimport { renderer } from \"./src/renderer\";\nimport { commands } from \"./src/commands\";\nimport { menus } from \"./src/menus\";\nimport { formats } from \"./src/formats\";\nimport { setup } from \"./src/setup\";\nimport { UtilTools } from \"../tools\";\nvar installedPlugins = [];\nexport function use(Plugin, options) {\n  /* eslint-disable @typescript-eslint/no-use-before-define */\n  if (Plugin && Plugin.install) {\n    if (installedPlugins.indexOf(Plugin) === -1) {\n      Plugin.install(VXETable, options);\n      installedPlugins.push(Plugin);\n    }\n  }\n\n  return VXETable;\n}\n/**\r\n * 检测模块的安装顺序是否正确\r\n */\n\nfunction reg(key) {\n  /* eslint-disable @typescript-eslint/no-use-before-define */\n  // 检测安装顺序是否正确\n  if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n    if (VXETable.Table) {\n      UtilTools.error('vxe.error.useErr', [key]);\n    }\n  }\n\n  VXETable[\"_\".concat(key)] = 1;\n}\n\nfunction getExportOrImpotType(types, flag) {\n  var rest = [];\n  XEUtils.objectEach(types, function (val, type) {\n    if (val === 0 || val === flag) {\n      rest.push(type);\n    }\n  });\n  return rest;\n}\n\nvar VXETableConfig =\n/*#__PURE__*/\nfunction () {\n  function VXETableConfig() {\n    _classCallCheck(this, VXETableConfig);\n  }\n\n  _createClass(VXETableConfig, [{\n    key: \"zIndex\",\n\n    /**\r\n     * 获取当前的 zIndex\r\n     */\n    get: function get() {\n      return UtilTools.getLastZIndex();\n    }\n    /**\r\n     * 获取下一个 zIndex\r\n     */\n\n  }, {\n    key: \"nextZIndex\",\n    get: function get() {\n      return UtilTools.nextZIndex();\n    }\n    /**\r\n     * 获取所有导出类型\r\n     */\n\n  }, {\n    key: \"exportTypes\",\n    get: function get() {\n      return getExportOrImpotType(GlobalConfig.export.types, 1);\n    }\n    /**\r\n     * 获取所有导入类型\r\n     */\n\n  }, {\n    key: \"importTypes\",\n    get: function get() {\n      return getExportOrImpotType(GlobalConfig.export.types, 2);\n    }\n  }]);\n\n  return VXETableConfig;\n}();\n\nexport var config = new VXETableConfig();\nexport function t(key, args) {\n  return GlobalConfig.i18n(key, args);\n}\nexport function _t(key, args) {\n  return key ? XEUtils.toString(GlobalConfig.translate ? GlobalConfig.translate(key, args) : key) : '';\n}\nexport var v = 'v3';\nexport var VXETable = {\n  v: v,\n  reg: reg,\n  use: use,\n  setup: setup,\n  interceptor: interceptor,\n  renderer: renderer,\n  commands: commands,\n  formats: formats,\n  menus: menus,\n  config: config,\n  t: t,\n  _t: _t\n};\nexport * from \"./src/interceptor\";\nexport * from \"./src/renderer\";\nexport * from \"./src/commands\";\nexport * from \"./src/menus\";\nexport * from \"./src/formats\";\nexport * from \"./src/setup\";\nexport default VXETable;",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\v-x-e-table\\index.js"],"names":["installedPlugins","Plugin","process","VXETable","UtilTools","rest","XEUtils","val","VXETableConfig","getExportOrImpotType","GlobalConfig","config","key","v","reg","use","setup","interceptor","renderer","commands","formats","menus","t","_t"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../v-x-e-table/src/conf'\r\nimport { interceptor } from './src/interceptor'\r\nimport { renderer } from './src/renderer'\r\nimport { commands } from './src/commands'\r\nimport { menus } from './src/menus'\r\nimport { formats } from './src/formats'\r\nimport { setup } from './src/setup'\r\nimport { UtilTools } from '../tools'\r\n\r\nconst installedPlugins = []\r\n\r\nexport function use (Plugin, options) {\r\n  /* eslint-disable @typescript-eslint/no-use-before-define */\r\n  if (Plugin && Plugin.install) {\r\n    if (installedPlugins.indexOf(Plugin) === -1) {\r\n      Plugin.install(VXETable, options)\r\n      installedPlugins.push(Plugin)\r\n    }\r\n  }\r\n  return VXETable\r\n}\r\n\r\n/**\r\n * 检测模块的安装顺序是否正确\r\n */\r\nfunction reg (key) {\r\n  /* eslint-disable @typescript-eslint/no-use-before-define */\r\n  // 检测安装顺序是否正确\r\n  if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\r\n    if (VXETable.Table) {\r\n      UtilTools.error('vxe.error.useErr', [key])\r\n    }\r\n  }\r\n  VXETable[`_${key}`] = 1\r\n}\r\n\r\nfunction getExportOrImpotType (types, flag) {\r\n  const rest = []\r\n  XEUtils.objectEach(types, (val, type) => {\r\n    if (val === 0 || val === flag) {\r\n      rest.push(type)\r\n    }\r\n  })\r\n  return rest\r\n}\r\n\r\nclass VXETableConfig {\r\n  /**\r\n   * 获取当前的 zIndex\r\n   */\r\n  get zIndex () {\r\n    return UtilTools.getLastZIndex()\r\n  }\r\n\r\n  /**\r\n   * 获取下一个 zIndex\r\n   */\r\n  get nextZIndex () {\r\n    return UtilTools.nextZIndex()\r\n  }\r\n\r\n  /**\r\n   * 获取所有导出类型\r\n   */\r\n  get exportTypes () {\r\n    return getExportOrImpotType(GlobalConfig.export.types, 1)\r\n  }\r\n\r\n  /**\r\n   * 获取所有导入类型\r\n   */\r\n  get importTypes () {\r\n    return getExportOrImpotType(GlobalConfig.export.types, 2)\r\n  }\r\n}\r\nexport const config = new VXETableConfig()\r\n\r\nexport function t (key, args) {\r\n  return GlobalConfig.i18n(key, args)\r\n}\r\n\r\nexport function _t (key, args) {\r\n  return key ? XEUtils.toString(GlobalConfig.translate ? GlobalConfig.translate(key, args) : key) : ''\r\n}\r\n\r\nexport const v = 'v3'\r\n\r\nexport const VXETable = {\r\n  v,\r\n  reg,\r\n  use,\r\n  setup,\r\n  interceptor,\r\n  renderer,\r\n  commands,\r\n  formats,\r\n  menus,\r\n  config,\r\n  t,\r\n  _t\r\n}\r\n\r\nexport * from './src/interceptor'\r\nexport * from './src/renderer'\r\nexport * from './src/commands'\r\nexport * from './src/menus'\r\nexport * from './src/formats'\r\nexport * from './src/setup'\r\n\r\nexport default VXETable\r\n"]}]}