{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\tools\\src\\resize.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\tools\\src\\resize.js","mtime":1635230121388},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport \"core-js/modules/web.dom.iterable\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\n/**\r\n * 监听 resize 事件\r\n * 如果项目中已使用了 resize-observer-polyfill，那么只需要将方法定义全局，该组件就会自动使用\r\n */\n\nvar resizeTimeout;\nvar eventStore = [];\nvar defaultInterval = 500;\n\nfunction eventHandle() {\n  if (eventStore.length) {\n    eventStore.forEach(function (item) {\n      item.tarList.forEach(function (observer) {\n        var target = observer.target,\n            width = observer.width,\n            heighe = observer.heighe;\n        var clientWidth = target.clientWidth;\n        var clientHeight = target.clientHeight;\n        var rWidth = clientWidth && width !== clientWidth;\n        var rHeight = clientHeight && heighe !== clientHeight;\n\n        if (rWidth || rHeight) {\n          observer.width = clientWidth;\n          observer.heighe = clientHeight;\n          setTimeout(item.callback);\n        }\n      });\n    });\n    /* eslint-disable @typescript-eslint/no-use-before-define */\n\n    eventListener();\n  }\n}\n\nfunction eventListener() {\n  clearTimeout(resizeTimeout);\n  resizeTimeout = setTimeout(eventHandle, GlobalConfig.resizeInterval || defaultInterval);\n}\n\nvar ResizeObserverPolyfill =\n/*#__PURE__*/\nfunction () {\n  function ResizeObserverPolyfill(callback) {\n    _classCallCheck(this, ResizeObserverPolyfill);\n\n    this.tarList = [];\n    this.callback = callback;\n  }\n\n  _createClass(ResizeObserverPolyfill, [{\n    key: \"observe\",\n    value: function observe(target) {\n      var _this = this;\n\n      if (target) {\n        if (!this.tarList.some(function (observer) {\n          return observer.target === target;\n        })) {\n          this.tarList.push({\n            target: target,\n            width: target.clientWidth,\n            heighe: target.clientHeight\n          });\n        }\n\n        if (!eventStore.length) {\n          eventListener();\n        }\n\n        if (!eventStore.some(function (item) {\n          return item === _this;\n        })) {\n          eventStore.push(this);\n        }\n      }\n    }\n  }, {\n    key: \"unobserve\",\n    value: function unobserve(target) {\n      XEUtils.remove(eventStore, function (item) {\n        return item.tarList.some(function (observer) {\n          return observer.target === target;\n        });\n      });\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var _this2 = this;\n\n      XEUtils.remove(eventStore, function (item) {\n        return item === _this2;\n      });\n    }\n  }]);\n\n  return ResizeObserverPolyfill;\n}();\n\nexport function createResizeEvent(callback) {\n  if (window.ResizeObserver) {\n    return new window.ResizeObserver(callback);\n  }\n\n  return new ResizeObserverPolyfill(callback);\n}",null]}