{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\v-x-e-table\\src\\renderer.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\v-x-e-table\\src\\renderer.js","mtime":1635230121549},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport { UtilTools } from \"../../tools\";\nvar defaultCompProps = {\n  transfer: true\n};\nvar componentDefaultModelProp = 'value';\n\nfunction isEmptyValue(cellValue) {\n  return cellValue === null || cellValue === undefined || cellValue === '';\n}\n\nfunction getChangeEvent(renderOpts) {\n  switch (renderOpts.name) {\n    case 'input':\n    case 'textarea':\n    case '$input':\n    case '$textarea':\n      return 'input';\n  }\n\n  return 'change';\n}\n\nfunction parseDate(value, props) {\n  return value && props.valueFormat ? XEUtils.toStringDate(value, props.valueFormat) : value;\n}\n\nfunction getFormatDate(value, props, defaultFormat) {\n  var _props$dateConfig = props.dateConfig,\n      dateConfig = _props$dateConfig === void 0 ? {} : _props$dateConfig;\n  return XEUtils.toDateString(parseDate(value, props), dateConfig.labelFormat || defaultFormat);\n}\n\nfunction getLabelFormatDate(value, props) {\n  return getFormatDate(value, props, GlobalConfig.i18n(\"vxe.input.date.labelFormat.\".concat(props.type)));\n}\n\nfunction getDefaultComponentName(_ref) {\n  var name = _ref.name;\n  return \"vxe-\".concat(name.replace('$', ''));\n}\n\nfunction handleConfirmFilter(params, checked, option) {\n  var $panel = params.$panel;\n  $panel.changeOption({}, checked, option);\n}\n\nfunction getNativeAttrs(_ref2) {\n  var name = _ref2.name,\n      attrs = _ref2.attrs;\n\n  if (name === 'input') {\n    attrs = Object.assign({\n      type: 'text'\n    }, attrs);\n  }\n\n  return attrs;\n}\n\nfunction getInputImmediateModel(renderOpts) {\n  var name = renderOpts.name,\n      immediate = renderOpts.immediate,\n      props = renderOpts.props;\n\n  if (!immediate) {\n    if (name === '$input') {\n      var _ref3 = props || {},\n          type = _ref3.type;\n\n      return !(!type || type === 'text' || type === 'number' || type === 'integer' || type === 'float');\n    }\n\n    if (name === 'input' || name === 'textarea' || name === '$textarea') {\n      return false;\n    }\n\n    return true;\n  }\n\n  return immediate;\n}\n\nfunction isImmediateCell(renderOpts, params) {\n  return params.$type === 'cell' || getInputImmediateModel(renderOpts);\n}\n\nfunction getCellEditProps(renderOpts, params, value, defaultProps) {\n  var vSize = params.$table.vSize;\n  return XEUtils.assign({\n    immediate: getInputImmediateModel(renderOpts)\n  }, vSize ? {\n    size: vSize\n  } : {}, defaultCompProps, defaultProps, renderOpts.props, _defineProperty({}, componentDefaultModelProp, value));\n}\n\nfunction getFilterProps(renderOpts, params, value, defaultProps) {\n  var vSize = params.$table.vSize;\n  return XEUtils.assign(vSize ? {\n    size: vSize\n  } : {}, defaultCompProps, defaultProps, renderOpts.props, _defineProperty({}, componentDefaultModelProp, value));\n}\n\nfunction getItemProps(renderOpts, params, value, defaultProps) {\n  var vSize = params.$form.vSize;\n  return XEUtils.assign(vSize ? {\n    size: vSize\n  } : {}, defaultCompProps, defaultProps, renderOpts.props, _defineProperty({}, componentDefaultModelProp, value));\n}\n\nfunction getCellLabelVNs(h, renderOpts, params, cellLabel) {\n  var placeholder = renderOpts.placeholder;\n  return [h('span', {\n    class: 'vxe-cell--label'\n  }, placeholder && isEmptyValue(cellLabel) ? [h('span', {\n    class: 'vxe-cell--placeholder'\n  }, UtilTools.formatText(UtilTools.getFuncText(placeholder), 1))] : UtilTools.formatText(cellLabel, 1))];\n}\n\nfunction getNativeOns(renderOpts, params) {\n  var nativeEvents = renderOpts.nativeEvents;\n  var nativeOns = {};\n  XEUtils.objectEach(nativeEvents, function (func, key) {\n    nativeOns[key] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      func.apply(void 0, [params].concat(args));\n    };\n  });\n  return nativeOns;\n}\n\nfunction getOns(renderOpts, params, inputFunc, changeFunc) {\n  var name = renderOpts.name,\n      events = renderOpts.events;\n  var modelEvent = 'input';\n  var changeEvent = getChangeEvent(renderOpts);\n  var isSameEvent = changeEvent === modelEvent;\n  var ons = {};\n  XEUtils.objectEach(events, function (func, key) {\n    ons[key] = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      func.apply(void 0, [params].concat(args));\n    };\n  });\n\n  if (inputFunc) {\n    ons[modelEvent] = function (targetEvnt) {\n      // 对输入框进行优化\n      inputFunc(name === '$input' || name === '$textarea' ? targetEvnt.value : targetEvnt);\n\n      if (events && events[modelEvent]) {\n        events[modelEvent](params, targetEvnt);\n      }\n\n      if (isSameEvent && changeFunc) {\n        changeFunc(targetEvnt);\n      }\n    };\n  }\n\n  if (!isSameEvent && changeFunc) {\n    ons[changeEvent] = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      changeFunc.apply(void 0, args);\n\n      if (events && events[changeEvent]) {\n        events[changeEvent].apply(events, [params].concat(args));\n      }\n    };\n  }\n\n  return ons;\n}\n\nfunction getEditOns(renderOpts, params) {\n  var $table = params.$table,\n      row = params.row,\n      column = params.column;\n  var name = renderOpts.name;\n  var model = column.model;\n  var isImmediate = isImmediateCell(renderOpts, params);\n  return getOns(renderOpts, params, function (cellValue) {\n    // 处理 model 值双向绑定\n    if (isImmediate) {\n      UtilTools.setCellValue(row, column, cellValue);\n    } else {\n      model.update = true;\n      model.value = cellValue;\n    }\n  }, function (eventParams) {\n    // 处理 change 事件相关逻辑\n    if (!isImmediate && (name === '$input' || name === '$textarea')) {\n      $table.updateStatus(params, eventParams.value);\n    } else {\n      $table.updateStatus(params);\n    }\n  });\n}\n\nfunction getFilterOns(renderOpts, params, option) {\n  return getOns(renderOpts, params, function (value) {\n    // 处理 model 值双向绑定\n    option.data = value;\n  }, function () {\n    handleConfirmFilter(params, !XEUtils.eqNull(option.data), option);\n  });\n}\n\nfunction getItemOns(renderOpts, params) {\n  var $form = params.$form,\n      data = params.data,\n      property = params.property;\n  return getOns(renderOpts, params, function (value) {\n    // 处理 model 值双向绑定\n    XEUtils.set(data, property, value);\n  }, function () {\n    // 处理 change 事件相关逻辑\n    $form.updateStatus(params);\n  });\n}\n\nfunction getNativeEditOns(renderOpts, params) {\n  var $table = params.$table,\n      row = params.row,\n      column = params.column;\n  var model = column.model;\n  return getOns(renderOpts, params, function (evnt) {\n    // 处理 model 值双向绑定\n    var cellValue = evnt.target.value;\n\n    if (isImmediateCell(renderOpts, params)) {\n      UtilTools.setCellValue(row, column, cellValue);\n    } else {\n      model.update = true;\n      model.value = cellValue;\n    }\n  }, function (evnt) {\n    // 处理 change 事件相关逻辑\n    var cellValue = evnt.target.value;\n    $table.updateStatus(params, cellValue);\n  });\n}\n\nfunction getNativeFilterOns(renderOpts, params, option) {\n  return getOns(renderOpts, params, function (evnt) {\n    // 处理 model 值双向绑定\n    option.data = evnt.target.value;\n  }, function () {\n    handleConfirmFilter(params, !XEUtils.eqNull(option.data), option);\n  });\n}\n\nfunction getNativeItemOns(renderOpts, params) {\n  var $form = params.$form,\n      data = params.data,\n      property = params.property;\n  return getOns(renderOpts, params, function (evnt) {\n    // 处理 model 值双向绑定\n    var itemValue = evnt.target.value;\n    XEUtils.set(data, property, itemValue);\n  }, function () {\n    // 处理 change 事件相关逻辑\n    $form.updateStatus(params);\n  });\n}\n/**\r\n * 单元格可编辑渲染-原生的标签\r\n * input、textarea、select\r\n */\n\n\nfunction nativeEditRender(h, renderOpts, params) {\n  var row = params.row,\n      column = params.column;\n  var name = renderOpts.name;\n  var attrs = getNativeAttrs(renderOpts);\n  var cellValue = isImmediateCell(renderOpts, params) ? UtilTools.getCellValue(row, column) : column.model.value;\n  return [h(name, {\n    class: \"vxe-default-\".concat(name),\n    attrs: attrs,\n    domProps: {\n      value: cellValue\n    },\n    on: getNativeEditOns(renderOpts, params)\n  })];\n}\n\nfunction defaultEditRender(h, renderOpts, params) {\n  var row = params.row,\n      column = params.column;\n  var cellValue = UtilTools.getCellValue(row, column);\n  return [h(getDefaultComponentName(renderOpts), {\n    props: getCellEditProps(renderOpts, params, cellValue),\n    on: getEditOns(renderOpts, params),\n    nativeOn: getNativeOns(renderOpts, params)\n  })];\n}\n\nfunction defaultButtonEditRender(h, renderOpts, params) {\n  return [h('vxe-button', {\n    props: getCellEditProps(renderOpts, params),\n    on: getOns(renderOpts, params),\n    nativeOn: getNativeOns(renderOpts, params)\n  })];\n}\n\nfunction defaultButtonsEditRender(h, renderOpts, params) {\n  return renderOpts.children.map(function (childRenderOpts) {\n    return defaultButtonEditRender(h, childRenderOpts, params)[0];\n  });\n}\n\nfunction renderNativeOptgroups(h, renderOpts, params, renderOptionsMethods) {\n  var optionGroups = renderOpts.optionGroups,\n      _renderOpts$optionGro = renderOpts.optionGroupProps,\n      optionGroupProps = _renderOpts$optionGro === void 0 ? {} : _renderOpts$optionGro;\n  var groupOptions = optionGroupProps.options || 'options';\n  var groupLabel = optionGroupProps.label || 'label';\n  return optionGroups.map(function (group, gIndex) {\n    return h('optgroup', {\n      key: gIndex,\n      domProps: {\n        label: group[groupLabel]\n      }\n    }, renderOptionsMethods(h, group[groupOptions], renderOpts, params));\n  });\n}\n/**\r\n * 渲染原生的 option 标签\r\n */\n\n\nfunction renderNativeOptions(h, options, renderOpts, params) {\n  var _renderOpts$optionPro = renderOpts.optionProps,\n      optionProps = _renderOpts$optionPro === void 0 ? {} : _renderOpts$optionPro;\n  var row = params.row,\n      column = params.column;\n  var labelProp = optionProps.label || 'label';\n  var valueProp = optionProps.value || 'value';\n  var disabledProp = optionProps.disabled || 'disabled';\n  var cellValue = isImmediateCell(renderOpts, params) ? UtilTools.getCellValue(row, column) : column.model.value;\n  return options.map(function (option, oIndex) {\n    return h('option', {\n      key: oIndex,\n      attrs: {\n        value: option[valueProp],\n        disabled: option[disabledProp]\n      },\n      domProps: {\n        /* eslint-disable eqeqeq */\n        selected: option[valueProp] == cellValue\n      }\n    }, option[labelProp]);\n  });\n}\n\nfunction nativeFilterRender(h, renderOpts, params) {\n  var column = params.column;\n  var name = renderOpts.name;\n  var attrs = getNativeAttrs(renderOpts);\n  return column.filters.map(function (option, oIndex) {\n    return h(name, {\n      key: oIndex,\n      class: \"vxe-default-\".concat(name),\n      attrs: attrs,\n      domProps: {\n        value: option.data\n      },\n      on: getNativeFilterOns(renderOpts, params, option)\n    });\n  });\n}\n\nfunction defaultFilterRender(h, renderOpts, params) {\n  var column = params.column;\n  return column.filters.map(function (option, oIndex) {\n    var optionValue = option.data;\n    return h(getDefaultComponentName(renderOpts), {\n      key: oIndex,\n      props: getFilterProps(renderOpts, renderOpts, optionValue),\n      on: getFilterOns(renderOpts, params, option)\n    });\n  });\n}\n\nfunction handleFilterMethod(_ref4) {\n  var option = _ref4.option,\n      row = _ref4.row,\n      column = _ref4.column;\n  var data = option.data;\n  var cellValue = XEUtils.get(row, column.property);\n  /* eslint-disable eqeqeq */\n\n  return cellValue == data;\n}\n\nfunction nativeSelectEditRender(h, renderOpts, params) {\n  return [h('select', {\n    class: 'vxe-default-select',\n    attrs: getNativeAttrs(renderOpts),\n    on: getNativeEditOns(renderOpts, params)\n  }, renderOpts.optionGroups ? renderNativeOptgroups(h, renderOpts, params, renderNativeOptions) : renderNativeOptions(h, renderOpts.options, renderOpts, params))];\n}\n\nfunction defaultSelectEditRender(h, renderOpts, params) {\n  var row = params.row,\n      column = params.column;\n  var options = renderOpts.options,\n      optionProps = renderOpts.optionProps,\n      optionGroups = renderOpts.optionGroups,\n      optionGroupProps = renderOpts.optionGroupProps;\n  var cellValue = UtilTools.getCellValue(row, column);\n  return [h(getDefaultComponentName(renderOpts), {\n    props: getCellEditProps(renderOpts, params, cellValue, {\n      options: options,\n      optionProps: optionProps,\n      optionGroups: optionGroups,\n      optionGroupProps: optionGroupProps\n    }),\n    on: getEditOns(renderOpts, params)\n  })];\n}\n\nfunction getSelectCellValue(renderOpts, _ref5) {\n  var row = _ref5.row,\n      column = _ref5.column;\n  var _renderOpts$props = renderOpts.props,\n      props = _renderOpts$props === void 0 ? {} : _renderOpts$props,\n      options = renderOpts.options,\n      optionGroups = renderOpts.optionGroups,\n      _renderOpts$optionPro2 = renderOpts.optionProps,\n      optionProps = _renderOpts$optionPro2 === void 0 ? {} : _renderOpts$optionPro2,\n      _renderOpts$optionGro2 = renderOpts.optionGroupProps,\n      optionGroupProps = _renderOpts$optionGro2 === void 0 ? {} : _renderOpts$optionGro2;\n  var cellValue = XEUtils.get(row, column.property);\n  var selectItem;\n  var labelProp = optionProps.label || 'label';\n  var valueProp = optionProps.value || 'value';\n\n  if (!isEmptyValue(cellValue)) {\n    return XEUtils.map(props.multiple ? cellValue : [cellValue], optionGroups ? function (value) {\n      var groupOptions = optionGroupProps.options || 'options';\n\n      for (var index = 0; index < optionGroups.length; index++) {\n        /* eslint-disable eqeqeq */\n        selectItem = XEUtils.find(optionGroups[index][groupOptions], function (item) {\n          return item[valueProp] == value;\n        });\n\n        if (selectItem) {\n          break;\n        }\n      }\n\n      return selectItem ? selectItem[labelProp] : value;\n    } : function (value) {\n      /* eslint-disable eqeqeq */\n      selectItem = XEUtils.find(options, function (item) {\n        return item[valueProp] == value;\n      });\n      return selectItem ? selectItem[labelProp] : value;\n    }).join(', ');\n  }\n\n  return null;\n}\n/**\r\n * 渲染表单-项\r\n * 用于渲染原生的标签\r\n */\n\n\nfunction nativeItemRender(h, renderOpts, params) {\n  var data = params.data,\n      property = params.property;\n  var name = renderOpts.name;\n  var attrs = getNativeAttrs(renderOpts);\n  var itemValue = XEUtils.get(data, property);\n  return [h(name, {\n    class: \"vxe-default-\".concat(name),\n    attrs: attrs,\n    domProps: attrs && name === 'input' && (attrs.type === 'submit' || attrs.type === 'reset') ? null : {\n      value: itemValue\n    },\n    on: getNativeItemOns(renderOpts, params)\n  })];\n}\n\nfunction defaultItemRender(h, renderOpts, params) {\n  var data = params.data,\n      property = params.property;\n  var itemValue = XEUtils.get(data, property);\n  return [h(getDefaultComponentName(renderOpts), {\n    props: getItemProps(renderOpts, params, itemValue),\n    on: getItemOns(renderOpts, params),\n    nativeOn: getNativeOns(renderOpts, params)\n  })];\n}\n\nfunction defaultButtonItemRender(h, renderOpts, params) {\n  return [h('vxe-button', {\n    props: getItemProps(renderOpts, params),\n    on: getOns(renderOpts, params),\n    nativeOn: getNativeOns(renderOpts, params)\n  })];\n}\n\nfunction defaultButtonsItemRender(h, renderOpts, params) {\n  return renderOpts.children.map(function (childRenderOpts) {\n    return defaultButtonItemRender(h, childRenderOpts, params)[0];\n  });\n}\n/**\r\n * 渲染原生的 select 标签\r\n */\n\n\nfunction renderNativeFormOptions(h, options, renderOpts, params) {\n  var data = params.data,\n      property = params.property;\n  var _renderOpts$optionPro3 = renderOpts.optionProps,\n      optionProps = _renderOpts$optionPro3 === void 0 ? {} : _renderOpts$optionPro3;\n  var labelProp = optionProps.label || 'label';\n  var valueProp = optionProps.value || 'value';\n  var disabledProp = optionProps.disabled || 'disabled';\n  var cellValue = XEUtils.get(data, property);\n  return options.map(function (item, oIndex) {\n    return h('option', {\n      key: oIndex,\n      attrs: {\n        value: item[valueProp],\n        disabled: item[disabledProp]\n      },\n      domProps: {\n        /* eslint-disable eqeqeq */\n        selected: item[valueProp] == cellValue\n      }\n    }, item[labelProp]);\n  });\n}\n\nfunction handleExportSelectMethod(params) {\n  var row = params.row,\n      column = params.column,\n      options = params.options;\n  return options.original ? UtilTools.getCellValue(row, column) : getSelectCellValue(column.editRender || column.cellRender, params);\n}\n/**\r\n * 渲染表单-项中\r\n * 单选框和复选框\r\n */\n\n\nfunction defaultFormItemRadioAndCheckboxRender(h, renderOpts, params) {\n  var options = renderOpts.options,\n      _renderOpts$optionPro4 = renderOpts.optionProps,\n      optionProps = _renderOpts$optionPro4 === void 0 ? {} : _renderOpts$optionPro4;\n  var data = params.data,\n      property = params.property;\n  var labelProp = optionProps.label || 'label';\n  var valueProp = optionProps.value || 'value';\n  var disabledProp = optionProps.disabled || 'disabled';\n  var itemValue = XEUtils.get(data, property);\n  var name = getDefaultComponentName(renderOpts);\n  return [h(\"\".concat(name, \"-group\"), {\n    props: getItemProps(renderOpts, params, itemValue),\n    on: getItemOns(renderOpts, params),\n    nativeOn: getNativeOns(renderOpts, params)\n  }, options.map(function (item, index) {\n    return h(name, {\n      key: index,\n      props: {\n        label: item[valueProp],\n        content: item[labelProp],\n        disabled: item[disabledProp]\n      }\n    });\n  }))];\n}\n/**\r\n * 内置的组件渲染\r\n */\n\n\nvar renderMap = {\n  input: {\n    autofocus: 'input',\n    renderEdit: nativeEditRender,\n    renderDefault: nativeEditRender,\n    renderFilter: nativeFilterRender,\n    filterMethod: handleFilterMethod,\n    renderItemContent: nativeItemRender\n  },\n  textarea: {\n    autofocus: 'textarea',\n    renderEdit: nativeEditRender,\n    renderItemContent: nativeItemRender\n  },\n  select: {\n    renderEdit: nativeSelectEditRender,\n    renderDefault: nativeSelectEditRender,\n    renderCell: function renderCell(h, renderOpts, params) {\n      return getCellLabelVNs(h, renderOpts, params, getSelectCellValue(renderOpts, params));\n    },\n    renderFilter: function renderFilter(h, renderOpts, params) {\n      var column = params.column;\n      return column.filters.map(function (option, oIndex) {\n        return h('select', {\n          key: oIndex,\n          class: 'vxe-default-select',\n          attrs: getNativeAttrs(renderOpts),\n          on: getNativeFilterOns(renderOpts, params, option)\n        }, renderOpts.optionGroups ? renderNativeOptgroups(h, renderOpts, params, renderNativeOptions) : renderNativeOptions(h, renderOpts.options, renderOpts, params));\n      });\n    },\n    filterMethod: handleFilterMethod,\n    renderItemContent: function renderItemContent(h, renderOpts, params) {\n      return [h('select', {\n        class: 'vxe-default-select',\n        attrs: getNativeAttrs(renderOpts),\n        on: getNativeItemOns(renderOpts, params)\n      }, renderOpts.optionGroups ? renderNativeOptgroups(h, renderOpts, params, renderNativeFormOptions) : renderNativeFormOptions(h, renderOpts.options, renderOpts, params))];\n    },\n    cellExportMethod: handleExportSelectMethod\n  },\n  $input: {\n    autofocus: '.vxe-input--inner',\n    renderEdit: defaultEditRender,\n    renderCell: function renderCell(h, renderOpts, params) {\n      var _renderOpts$props2 = renderOpts.props,\n          props = _renderOpts$props2 === void 0 ? {} : _renderOpts$props2;\n      var row = params.row,\n          column = params.column;\n      var digits = props.digits || GlobalConfig.input.digits;\n      var cellValue = XEUtils.get(row, column.property);\n\n      if (cellValue) {\n        switch (props.type) {\n          case 'date':\n          case 'week':\n          case 'month':\n          case 'year':\n            cellValue = getLabelFormatDate(cellValue, props);\n            break;\n\n          case 'float':\n            cellValue = XEUtils.toFixed(XEUtils.floor(cellValue, digits), digits);\n            break;\n        }\n      }\n\n      return getCellLabelVNs(h, renderOpts, params, cellValue);\n    },\n    renderDefault: defaultEditRender,\n    renderFilter: defaultFilterRender,\n    filterMethod: handleFilterMethod,\n    renderItemContent: defaultItemRender\n  },\n  $textarea: {\n    autofocus: '.vxe-textarea--inner',\n    renderItemContent: defaultItemRender\n  },\n  $button: {\n    renderDefault: defaultButtonEditRender,\n    renderItemContent: defaultButtonItemRender\n  },\n  $buttons: {\n    renderDefault: defaultButtonsEditRender,\n    renderItemContent: defaultButtonsItemRender\n  },\n  $select: {\n    autofocus: '.vxe-input--inner',\n    renderEdit: defaultSelectEditRender,\n    renderDefault: defaultSelectEditRender,\n    renderCell: function renderCell(h, renderOpts, params) {\n      return getCellLabelVNs(h, renderOpts, params, getSelectCellValue(renderOpts, params));\n    },\n    renderFilter: function renderFilter(h, renderOpts, params) {\n      var column = params.column;\n      var options = renderOpts.options,\n          optionProps = renderOpts.optionProps,\n          optionGroups = renderOpts.optionGroups,\n          optionGroupProps = renderOpts.optionGroupProps;\n      var nativeOn = getNativeOns(renderOpts, params);\n      return column.filters.map(function (option, oIndex) {\n        var optionValue = option.data;\n        return h(getDefaultComponentName(renderOpts), {\n          key: oIndex,\n          props: getFilterProps(renderOpts, params, optionValue, {\n            options: options,\n            optionProps: optionProps,\n            optionGroups: optionGroups,\n            optionGroupProps: optionGroupProps\n          }),\n          on: getFilterOns(renderOpts, params, option),\n          nativeOn: nativeOn\n        });\n      });\n    },\n    filterMethod: handleFilterMethod,\n    renderItemContent: function renderItemContent(h, renderOpts, params) {\n      var data = params.data,\n          property = params.property;\n      var options = renderOpts.options,\n          optionProps = renderOpts.optionProps,\n          optionGroups = renderOpts.optionGroups,\n          optionGroupProps = renderOpts.optionGroupProps;\n      var itemValue = XEUtils.get(data, property);\n      return [h(getDefaultComponentName(renderOpts), {\n        props: getItemProps(renderOpts, params, itemValue, {\n          options: options,\n          optionProps: optionProps,\n          optionGroups: optionGroups,\n          optionGroupProps: optionGroupProps\n        }),\n        on: getItemOns(renderOpts, params),\n        nativeOn: getNativeOns(renderOpts, params)\n      })];\n    },\n    cellExportMethod: handleExportSelectMethod\n  },\n  $radio: {\n    autofocus: '.vxe-radio--input',\n    renderItemContent: defaultFormItemRadioAndCheckboxRender\n  },\n  $checkbox: {\n    autofocus: '.vxe-checkbox--input',\n    renderItemContent: defaultFormItemRadioAndCheckboxRender\n  },\n  $switch: {\n    autofocus: '.vxe-switch--button',\n    renderEdit: defaultEditRender,\n    renderDefault: defaultEditRender,\n    renderItemContent: defaultItemRender\n    /**\r\n     * 全局渲染器\r\n     */\n\n  }\n};\nexport var renderer = {\n  mixin: function mixin(map) {\n    XEUtils.each(map, function (options, name) {\n      return renderer.add(name, options);\n    });\n    return renderer;\n  },\n  get: function get(name) {\n    return renderMap[name] || null;\n  },\n  add: function add(name, options) {\n    if (name && options) {\n      var renders = renderMap[name];\n\n      if (renders) {\n        // 检测是否覆盖\n        if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n          XEUtils.each(options, function (val, key) {\n            if (!XEUtils.eqNull(renders[key]) && renders[key] !== val) {\n              UtilTools.warn('vxe.error.coverProp', [\"Renderer.\".concat(name), key]);\n            }\n          });\n        }\n\n        Object.assign(renders, options);\n      } else {\n        renderMap[name] = options;\n      }\n    }\n\n    return renderer;\n  },\n  delete: function _delete(name) {\n    delete renderMap[name];\n    return renderer;\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\v-x-e-table\\src\\renderer.js"],"names":["defaultCompProps","transfer","componentDefaultModelProp","cellValue","renderOpts","value","props","XEUtils","dateConfig","parseDate","getFormatDate","GlobalConfig","name","$panel","params","attrs","type","immediate","getInputImmediateModel","vSize","size","placeholder","h","class","isEmptyValue","UtilTools","nativeEvents","nativeOns","args","func","events","modelEvent","changeEvent","getChangeEvent","isSameEvent","ons","inputFunc","targetEvnt","changeFunc","$table","row","column","model","isImmediate","isImmediateCell","getOns","eventParams","option","handleConfirmFilter","$form","data","property","evnt","itemValue","getNativeAttrs","domProps","on","getNativeEditOns","getDefaultComponentName","getCellEditProps","getEditOns","nativeOn","getNativeOns","defaultButtonEditRender","optionGroups","optionGroupProps","groupOptions","groupLabel","key","label","group","renderOptionsMethods","optionProps","labelProp","valueProp","disabledProp","disabled","selected","getNativeFilterOns","optionValue","getFilterProps","getFilterOns","renderNativeOptgroups","renderNativeOptions","options","index","selectItem","item","getNativeItemOns","getItemProps","getItemOns","defaultButtonItemRender","getSelectCellValue","content","renderMap","input","autofocus","renderEdit","renderDefault","renderFilter","filterMethod","renderItemContent","nativeItemRender","textarea","select","renderCell","getCellLabelVNs","renderNativeFormOptions","cellExportMethod","handleExportSelectMethod","$input","digits","getLabelFormatDate","defaultItemRender","$textarea","$button","$buttons","defaultButtonsItemRender","$select","$radio","defaultFormItemRadioAndCheckboxRender","$checkbox","$switch","renderer","mixin","get","add","renders","process","Object","delete"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport { UtilTools } from '../../tools'\r\n\r\nconst defaultCompProps = { transfer: true }\r\n\r\nconst componentDefaultModelProp = 'value'\r\n\r\nfunction isEmptyValue (cellValue) {\r\n  return cellValue === null || cellValue === undefined || cellValue === ''\r\n}\r\n\r\nfunction getChangeEvent (renderOpts) {\r\n  switch (renderOpts.name) {\r\n    case 'input':\r\n    case 'textarea':\r\n    case '$input':\r\n    case '$textarea':\r\n      return 'input'\r\n  }\r\n  return 'change'\r\n}\r\n\r\nfunction parseDate (value, props) {\r\n  return value && props.valueFormat ? XEUtils.toStringDate(value, props.valueFormat) : value\r\n}\r\n\r\nfunction getFormatDate (value, props, defaultFormat) {\r\n  const { dateConfig = {} } = props\r\n  return XEUtils.toDateString(parseDate(value, props), dateConfig.labelFormat || defaultFormat)\r\n}\r\n\r\nfunction getLabelFormatDate (value, props) {\r\n  return getFormatDate(value, props, GlobalConfig.i18n(`vxe.input.date.labelFormat.${props.type}`))\r\n}\r\n\r\nfunction getDefaultComponentName ({ name }) {\r\n  return `vxe-${name.replace('$', '')}`\r\n}\r\n\r\nfunction handleConfirmFilter (params, checked, option) {\r\n  const { $panel } = params\r\n  $panel.changeOption({}, checked, option)\r\n}\r\n\r\nfunction getNativeAttrs ({ name, attrs }) {\r\n  if (name === 'input') {\r\n    attrs = Object.assign({ type: 'text' }, attrs)\r\n  }\r\n  return attrs\r\n}\r\n\r\nfunction getInputImmediateModel (renderOpts) {\r\n  const { name, immediate, props } = renderOpts\r\n  if (!immediate) {\r\n    if (name === '$input') {\r\n      const { type } = props || {}\r\n      return !(!type || type === 'text' || type === 'number' || type === 'integer' || type === 'float')\r\n    }\r\n    if (name === 'input' || name === 'textarea' || name === '$textarea') {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  return immediate\r\n}\r\n\r\nfunction isImmediateCell (renderOpts, params) {\r\n  return params.$type === 'cell' || getInputImmediateModel(renderOpts)\r\n}\r\n\r\nfunction getCellEditProps (renderOpts, params, value, defaultProps) {\r\n  const { vSize } = params.$table\r\n  return XEUtils.assign({ immediate: getInputImmediateModel(renderOpts) }, vSize ? { size: vSize } : {}, defaultCompProps, defaultProps, renderOpts.props, { [componentDefaultModelProp]: value })\r\n}\r\n\r\nfunction getFilterProps (renderOpts, params, value, defaultProps) {\r\n  const { vSize } = params.$table\r\n  return XEUtils.assign(vSize ? { size: vSize } : {}, defaultCompProps, defaultProps, renderOpts.props, { [componentDefaultModelProp]: value })\r\n}\r\n\r\nfunction getItemProps (renderOpts, params, value, defaultProps) {\r\n  const { vSize } = params.$form\r\n  return XEUtils.assign(vSize ? { size: vSize } : {}, defaultCompProps, defaultProps, renderOpts.props, { [componentDefaultModelProp]: value })\r\n}\r\n\r\nfunction getCellLabelVNs (h, renderOpts, params, cellLabel) {\r\n  const { placeholder } = renderOpts\r\n  return [\r\n    h('span', {\r\n      class: 'vxe-cell--label'\r\n    }, placeholder && isEmptyValue(cellLabel) ? [\r\n      h('span', {\r\n        class: 'vxe-cell--placeholder'\r\n      }, UtilTools.formatText(UtilTools.getFuncText(placeholder), 1))\r\n    ] : UtilTools.formatText(cellLabel, 1))\r\n  ]\r\n}\r\n\r\nfunction getNativeOns (renderOpts, params) {\r\n  const { nativeEvents } = renderOpts\r\n  const nativeOns = {}\r\n  XEUtils.objectEach(nativeEvents, (func, key) => {\r\n    nativeOns[key] = function (...args) {\r\n      func(params, ...args)\r\n    }\r\n  })\r\n  return nativeOns\r\n}\r\n\r\nfunction getOns (renderOpts, params, inputFunc, changeFunc) {\r\n  const { name, events } = renderOpts\r\n  const modelEvent = 'input'\r\n  const changeEvent = getChangeEvent(renderOpts)\r\n  const isSameEvent = changeEvent === modelEvent\r\n  const ons = {}\r\n  XEUtils.objectEach(events, (func, key) => {\r\n    ons[key] = function (...args) {\r\n      func(params, ...args)\r\n    }\r\n  })\r\n  if (inputFunc) {\r\n    ons[modelEvent] = function (targetEvnt) {\r\n      // 对输入框进行优化\r\n      inputFunc(name === '$input' || name === '$textarea' ? targetEvnt.value : targetEvnt)\r\n      if (events && events[modelEvent]) {\r\n        events[modelEvent](params, targetEvnt)\r\n      }\r\n      if (isSameEvent && changeFunc) {\r\n        changeFunc(targetEvnt)\r\n      }\r\n    }\r\n  }\r\n  if (!isSameEvent && changeFunc) {\r\n    ons[changeEvent] = function (...args) {\r\n      changeFunc(...args)\r\n      if (events && events[changeEvent]) {\r\n        events[changeEvent](params, ...args)\r\n      }\r\n    }\r\n  }\r\n  return ons\r\n}\r\n\r\nfunction getEditOns (renderOpts, params) {\r\n  const { $table, row, column } = params\r\n  const { name } = renderOpts\r\n  const { model } = column\r\n  const isImmediate = isImmediateCell(renderOpts, params)\r\n  return getOns(renderOpts, params, (cellValue) => {\r\n    // 处理 model 值双向绑定\r\n    if (isImmediate) {\r\n      UtilTools.setCellValue(row, column, cellValue)\r\n    } else {\r\n      model.update = true\r\n      model.value = cellValue\r\n    }\r\n  }, (eventParams) => {\r\n    // 处理 change 事件相关逻辑\r\n    if (!isImmediate && (name === '$input' || name === '$textarea')) {\r\n      $table.updateStatus(params, eventParams.value)\r\n    } else {\r\n      $table.updateStatus(params)\r\n    }\r\n  })\r\n}\r\n\r\nfunction getFilterOns (renderOpts, params, option) {\r\n  return getOns(renderOpts, params, (value) => {\r\n    // 处理 model 值双向绑定\r\n    option.data = value\r\n  }, () => {\r\n    handleConfirmFilter(params, !XEUtils.eqNull(option.data), option)\r\n  })\r\n}\r\n\r\nfunction getItemOns (renderOpts, params) {\r\n  const { $form, data, property } = params\r\n  return getOns(renderOpts, params, (value) => {\r\n    // 处理 model 值双向绑定\r\n    XEUtils.set(data, property, value)\r\n  }, () => {\r\n    // 处理 change 事件相关逻辑\r\n    $form.updateStatus(params)\r\n  })\r\n}\r\n\r\nfunction getNativeEditOns (renderOpts, params) {\r\n  const { $table, row, column } = params\r\n  const { model } = column\r\n  return getOns(renderOpts, params, (evnt) => {\r\n    // 处理 model 值双向绑定\r\n    const cellValue = evnt.target.value\r\n    if (isImmediateCell(renderOpts, params)) {\r\n      UtilTools.setCellValue(row, column, cellValue)\r\n    } else {\r\n      model.update = true\r\n      model.value = cellValue\r\n    }\r\n  }, (evnt) => {\r\n    // 处理 change 事件相关逻辑\r\n    const cellValue = evnt.target.value\r\n    $table.updateStatus(params, cellValue)\r\n  })\r\n}\r\n\r\nfunction getNativeFilterOns (renderOpts, params, option) {\r\n  return getOns(renderOpts, params, (evnt) => {\r\n    // 处理 model 值双向绑定\r\n    option.data = evnt.target.value\r\n  }, () => {\r\n    handleConfirmFilter(params, !XEUtils.eqNull(option.data), option)\r\n  })\r\n}\r\n\r\nfunction getNativeItemOns (renderOpts, params) {\r\n  const { $form, data, property } = params\r\n  return getOns(renderOpts, params, (evnt) => {\r\n    // 处理 model 值双向绑定\r\n    const itemValue = evnt.target.value\r\n    XEUtils.set(data, property, itemValue)\r\n  }, () => {\r\n    // 处理 change 事件相关逻辑\r\n    $form.updateStatus(params)\r\n  })\r\n}\r\n\r\n/**\r\n * 单元格可编辑渲染-原生的标签\r\n * input、textarea、select\r\n */\r\nfunction nativeEditRender (h, renderOpts, params) {\r\n  const { row, column } = params\r\n  const { name } = renderOpts\r\n  const attrs = getNativeAttrs(renderOpts)\r\n  const cellValue = isImmediateCell(renderOpts, params) ? UtilTools.getCellValue(row, column) : column.model.value\r\n  return [\r\n    h(name, {\r\n      class: `vxe-default-${name}`,\r\n      attrs,\r\n      domProps: {\r\n        value: cellValue\r\n      },\r\n      on: getNativeEditOns(renderOpts, params)\r\n    })\r\n  ]\r\n}\r\n\r\nfunction defaultEditRender (h, renderOpts, params) {\r\n  const { row, column } = params\r\n  const cellValue = UtilTools.getCellValue(row, column)\r\n  return [\r\n    h(getDefaultComponentName(renderOpts), {\r\n      props: getCellEditProps(renderOpts, params, cellValue),\r\n      on: getEditOns(renderOpts, params),\r\n      nativeOn: getNativeOns(renderOpts, params)\r\n    })\r\n  ]\r\n}\r\n\r\nfunction defaultButtonEditRender (h, renderOpts, params) {\r\n  return [\r\n    h('vxe-button', {\r\n      props: getCellEditProps(renderOpts, params),\r\n      on: getOns(renderOpts, params),\r\n      nativeOn: getNativeOns(renderOpts, params)\r\n    })\r\n  ]\r\n}\r\n\r\nfunction defaultButtonsEditRender (h, renderOpts, params) {\r\n  return renderOpts.children.map(childRenderOpts => defaultButtonEditRender(h, childRenderOpts, params)[0])\r\n}\r\n\r\nfunction renderNativeOptgroups (h, renderOpts, params, renderOptionsMethods) {\r\n  const { optionGroups, optionGroupProps = {} } = renderOpts\r\n  const groupOptions = optionGroupProps.options || 'options'\r\n  const groupLabel = optionGroupProps.label || 'label'\r\n  return optionGroups.map((group, gIndex) => {\r\n    return h('optgroup', {\r\n      key: gIndex,\r\n      domProps: {\r\n        label: group[groupLabel]\r\n      }\r\n    }, renderOptionsMethods(h, group[groupOptions], renderOpts, params))\r\n  })\r\n}\r\n\r\n/**\r\n * 渲染原生的 option 标签\r\n */\r\nfunction renderNativeOptions (h, options, renderOpts, params) {\r\n  const { optionProps = {} } = renderOpts\r\n  const { row, column } = params\r\n  const labelProp = optionProps.label || 'label'\r\n  const valueProp = optionProps.value || 'value'\r\n  const disabledProp = optionProps.disabled || 'disabled'\r\n  const cellValue = isImmediateCell(renderOpts, params) ? UtilTools.getCellValue(row, column) : column.model.value\r\n  return options.map((option, oIndex) => {\r\n    return h('option', {\r\n      key: oIndex,\r\n      attrs: {\r\n        value: option[valueProp],\r\n        disabled: option[disabledProp]\r\n      },\r\n      domProps: {\r\n        /* eslint-disable eqeqeq */\r\n        selected: option[valueProp] == cellValue\r\n      }\r\n    }, option[labelProp])\r\n  })\r\n}\r\n\r\nfunction nativeFilterRender (h, renderOpts, params) {\r\n  const { column } = params\r\n  const { name } = renderOpts\r\n  const attrs = getNativeAttrs(renderOpts)\r\n  return column.filters.map((option, oIndex) => {\r\n    return h(name, {\r\n      key: oIndex,\r\n      class: `vxe-default-${name}`,\r\n      attrs,\r\n      domProps: {\r\n        value: option.data\r\n      },\r\n      on: getNativeFilterOns(renderOpts, params, option)\r\n    })\r\n  })\r\n}\r\n\r\nfunction defaultFilterRender (h, renderOpts, params) {\r\n  const { column } = params\r\n  return column.filters.map((option, oIndex) => {\r\n    const optionValue = option.data\r\n    return h(getDefaultComponentName(renderOpts), {\r\n      key: oIndex,\r\n      props: getFilterProps(renderOpts, renderOpts, optionValue),\r\n      on: getFilterOns(renderOpts, params, option)\r\n    })\r\n  })\r\n}\r\n\r\nfunction handleFilterMethod ({ option, row, column }) {\r\n  const { data } = option\r\n  const cellValue = XEUtils.get(row, column.property)\r\n  /* eslint-disable eqeqeq */\r\n  return cellValue == data\r\n}\r\n\r\nfunction nativeSelectEditRender (h, renderOpts, params) {\r\n  return [\r\n    h('select', {\r\n      class: 'vxe-default-select',\r\n      attrs: getNativeAttrs(renderOpts),\r\n      on: getNativeEditOns(renderOpts, params)\r\n    },\r\n    renderOpts.optionGroups ? renderNativeOptgroups(h, renderOpts, params, renderNativeOptions) : renderNativeOptions(h, renderOpts.options, renderOpts, params))\r\n  ]\r\n}\r\n\r\nfunction defaultSelectEditRender (h, renderOpts, params) {\r\n  const { row, column } = params\r\n  const { options, optionProps, optionGroups, optionGroupProps } = renderOpts\r\n  const cellValue = UtilTools.getCellValue(row, column)\r\n  return [\r\n    h(getDefaultComponentName(renderOpts), {\r\n      props: getCellEditProps(renderOpts, params, cellValue, { options, optionProps, optionGroups, optionGroupProps }),\r\n      on: getEditOns(renderOpts, params)\r\n    })\r\n  ]\r\n}\r\n\r\nfunction getSelectCellValue (renderOpts, { row, column }) {\r\n  const { props = {}, options, optionGroups, optionProps = {}, optionGroupProps = {} } = renderOpts\r\n  const cellValue = XEUtils.get(row, column.property)\r\n  let selectItem\r\n  const labelProp = optionProps.label || 'label'\r\n  const valueProp = optionProps.value || 'value'\r\n  if (!isEmptyValue(cellValue)) {\r\n    return XEUtils.map(props.multiple ? cellValue : [cellValue], optionGroups ? (value) => {\r\n      const groupOptions = optionGroupProps.options || 'options'\r\n      for (let index = 0; index < optionGroups.length; index++) {\r\n        /* eslint-disable eqeqeq */\r\n        selectItem = XEUtils.find(optionGroups[index][groupOptions], item => item[valueProp] == value)\r\n        if (selectItem) {\r\n          break\r\n        }\r\n      }\r\n      return selectItem ? selectItem[labelProp] : value\r\n    } : (value) => {\r\n      /* eslint-disable eqeqeq */\r\n      selectItem = XEUtils.find(options, item => item[valueProp] == value)\r\n      return selectItem ? selectItem[labelProp] : value\r\n    }).join(', ')\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n * 渲染表单-项\r\n * 用于渲染原生的标签\r\n */\r\nfunction nativeItemRender (h, renderOpts, params) {\r\n  const { data, property } = params\r\n  const { name } = renderOpts\r\n  const attrs = getNativeAttrs(renderOpts)\r\n  const itemValue = XEUtils.get(data, property)\r\n  return [\r\n    h(name, {\r\n      class: `vxe-default-${name}`,\r\n      attrs,\r\n      domProps: attrs && name === 'input' && (attrs.type === 'submit' || attrs.type === 'reset') ? null : {\r\n        value: itemValue\r\n      },\r\n      on: getNativeItemOns(renderOpts, params)\r\n    })\r\n  ]\r\n}\r\n\r\nfunction defaultItemRender (h, renderOpts, params) {\r\n  const { data, property } = params\r\n  const itemValue = XEUtils.get(data, property)\r\n  return [\r\n    h(getDefaultComponentName(renderOpts), {\r\n      props: getItemProps(renderOpts, params, itemValue),\r\n      on: getItemOns(renderOpts, params),\r\n      nativeOn: getNativeOns(renderOpts, params)\r\n    })\r\n  ]\r\n}\r\n\r\nfunction defaultButtonItemRender (h, renderOpts, params) {\r\n  return [\r\n    h('vxe-button', {\r\n      props: getItemProps(renderOpts, params),\r\n      on: getOns(renderOpts, params),\r\n      nativeOn: getNativeOns(renderOpts, params)\r\n    })\r\n  ]\r\n}\r\n\r\nfunction defaultButtonsItemRender (h, renderOpts, params) {\r\n  return renderOpts.children.map(childRenderOpts => defaultButtonItemRender(h, childRenderOpts, params)[0])\r\n}\r\n\r\n/**\r\n * 渲染原生的 select 标签\r\n */\r\nfunction renderNativeFormOptions (h, options, renderOpts, params) {\r\n  const { data, property } = params\r\n  const { optionProps = {} } = renderOpts\r\n  const labelProp = optionProps.label || 'label'\r\n  const valueProp = optionProps.value || 'value'\r\n  const disabledProp = optionProps.disabled || 'disabled'\r\n  const cellValue = XEUtils.get(data, property)\r\n  return options.map((item, oIndex) => {\r\n    return h('option', {\r\n      key: oIndex,\r\n      attrs: {\r\n        value: item[valueProp],\r\n        disabled: item[disabledProp]\r\n      },\r\n      domProps: {\r\n        /* eslint-disable eqeqeq */\r\n        selected: item[valueProp] == cellValue\r\n      }\r\n    }, item[labelProp])\r\n  })\r\n}\r\n\r\nfunction handleExportSelectMethod (params) {\r\n  const { row, column, options } = params\r\n  return options.original ? UtilTools.getCellValue(row, column) : getSelectCellValue(column.editRender || column.cellRender, params)\r\n}\r\n\r\n/**\r\n * 渲染表单-项中\r\n * 单选框和复选框\r\n */\r\nfunction defaultFormItemRadioAndCheckboxRender (h, renderOpts, params) {\r\n  const { options, optionProps = {} } = renderOpts\r\n  const { data, property } = params\r\n  const labelProp = optionProps.label || 'label'\r\n  const valueProp = optionProps.value || 'value'\r\n  const disabledProp = optionProps.disabled || 'disabled'\r\n  const itemValue = XEUtils.get(data, property)\r\n  const name = getDefaultComponentName(renderOpts)\r\n  return [\r\n    h(`${name}-group`, {\r\n      props: getItemProps(renderOpts, params, itemValue),\r\n      on: getItemOns(renderOpts, params),\r\n      nativeOn: getNativeOns(renderOpts, params)\r\n    }, options.map((item, index) => {\r\n      return h(name, {\r\n        key: index,\r\n        props: {\r\n          label: item[valueProp],\r\n          content: item[labelProp],\r\n          disabled: item[disabledProp]\r\n        }\r\n      })\r\n    }))\r\n  ]\r\n}\r\n\r\n/**\r\n * 内置的组件渲染\r\n */\r\nconst renderMap = {\r\n  input: {\r\n    autofocus: 'input',\r\n    renderEdit: nativeEditRender,\r\n    renderDefault: nativeEditRender,\r\n    renderFilter: nativeFilterRender,\r\n    filterMethod: handleFilterMethod,\r\n    renderItemContent: nativeItemRender\r\n  },\r\n  textarea: {\r\n    autofocus: 'textarea',\r\n    renderEdit: nativeEditRender,\r\n    renderItemContent: nativeItemRender\r\n  },\r\n  select: {\r\n    renderEdit: nativeSelectEditRender,\r\n    renderDefault: nativeSelectEditRender,\r\n    renderCell (h, renderOpts, params) {\r\n      return getCellLabelVNs(h, renderOpts, params, getSelectCellValue(renderOpts, params))\r\n    },\r\n    renderFilter (h, renderOpts, params) {\r\n      const { column } = params\r\n      return column.filters.map((option, oIndex) => {\r\n        return h('select', {\r\n          key: oIndex,\r\n          class: 'vxe-default-select',\r\n          attrs: getNativeAttrs(renderOpts),\r\n          on: getNativeFilterOns(renderOpts, params, option)\r\n        },\r\n        renderOpts.optionGroups ? renderNativeOptgroups(h, renderOpts, params, renderNativeOptions) : renderNativeOptions(h, renderOpts.options, renderOpts, params))\r\n      })\r\n    },\r\n    filterMethod: handleFilterMethod,\r\n    renderItemContent (h, renderOpts, params) {\r\n      return [\r\n        h('select', {\r\n          class: 'vxe-default-select',\r\n          attrs: getNativeAttrs(renderOpts),\r\n          on: getNativeItemOns(renderOpts, params)\r\n        },\r\n        renderOpts.optionGroups ? renderNativeOptgroups(h, renderOpts, params, renderNativeFormOptions) : renderNativeFormOptions(h, renderOpts.options, renderOpts, params))\r\n      ]\r\n    },\r\n    cellExportMethod: handleExportSelectMethod\r\n  },\r\n  $input: {\r\n    autofocus: '.vxe-input--inner',\r\n    renderEdit: defaultEditRender,\r\n    renderCell (h, renderOpts, params) {\r\n      const { props = {} } = renderOpts\r\n      const { row, column } = params\r\n      const digits = props.digits || GlobalConfig.input.digits\r\n      let cellValue = XEUtils.get(row, column.property)\r\n      if (cellValue) {\r\n        switch (props.type) {\r\n          case 'date':\r\n          case 'week':\r\n          case 'month':\r\n          case 'year':\r\n            cellValue = getLabelFormatDate(cellValue, props)\r\n            break\r\n          case 'float':\r\n            cellValue = XEUtils.toFixed(XEUtils.floor(cellValue, digits), digits)\r\n            break\r\n        }\r\n      }\r\n      return getCellLabelVNs(h, renderOpts, params, cellValue)\r\n    },\r\n    renderDefault: defaultEditRender,\r\n    renderFilter: defaultFilterRender,\r\n    filterMethod: handleFilterMethod,\r\n    renderItemContent: defaultItemRender\r\n  },\r\n  $textarea: {\r\n    autofocus: '.vxe-textarea--inner',\r\n    renderItemContent: defaultItemRender\r\n  },\r\n  $button: {\r\n    renderDefault: defaultButtonEditRender,\r\n    renderItemContent: defaultButtonItemRender\r\n  },\r\n  $buttons: {\r\n    renderDefault: defaultButtonsEditRender,\r\n    renderItemContent: defaultButtonsItemRender\r\n  },\r\n  $select: {\r\n    autofocus: '.vxe-input--inner',\r\n    renderEdit: defaultSelectEditRender,\r\n    renderDefault: defaultSelectEditRender,\r\n    renderCell (h, renderOpts, params) {\r\n      return getCellLabelVNs(h, renderOpts, params, getSelectCellValue(renderOpts, params))\r\n    },\r\n    renderFilter (h, renderOpts, params) {\r\n      const { column } = params\r\n      const { options, optionProps, optionGroups, optionGroupProps } = renderOpts\r\n      const nativeOn = getNativeOns(renderOpts, params)\r\n      return column.filters.map((option, oIndex) => {\r\n        const optionValue = option.data\r\n        return h(getDefaultComponentName(renderOpts), {\r\n          key: oIndex,\r\n          props: getFilterProps(renderOpts, params, optionValue, { options, optionProps, optionGroups, optionGroupProps }),\r\n          on: getFilterOns(renderOpts, params, option),\r\n          nativeOn\r\n        })\r\n      })\r\n    },\r\n    filterMethod: handleFilterMethod,\r\n    renderItemContent (h, renderOpts, params) {\r\n      const { data, property } = params\r\n      const { options, optionProps, optionGroups, optionGroupProps } = renderOpts\r\n      const itemValue = XEUtils.get(data, property)\r\n      return [\r\n        h(getDefaultComponentName(renderOpts), {\r\n          props: getItemProps(renderOpts, params, itemValue, { options, optionProps, optionGroups, optionGroupProps }),\r\n          on: getItemOns(renderOpts, params),\r\n          nativeOn: getNativeOns(renderOpts, params)\r\n        })\r\n      ]\r\n    },\r\n    cellExportMethod: handleExportSelectMethod\r\n  },\r\n  $radio: {\r\n    autofocus: '.vxe-radio--input',\r\n    renderItemContent: defaultFormItemRadioAndCheckboxRender\r\n  },\r\n  $checkbox: {\r\n    autofocus: '.vxe-checkbox--input',\r\n    renderItemContent: defaultFormItemRadioAndCheckboxRender\r\n  },\r\n  $switch: {\r\n    autofocus: '.vxe-switch--button',\r\n    renderEdit: defaultEditRender,\r\n    renderDefault: defaultEditRender,\r\n    renderItemContent: defaultItemRender\r\n  }\r\n}\r\n\r\n/**\r\n * 全局渲染器\r\n */\r\nexport const renderer = {\r\n  mixin (map) {\r\n    XEUtils.each(map, (options, name) => renderer.add(name, options))\r\n    return renderer\r\n  },\r\n  get (name) {\r\n    return renderMap[name] || null\r\n  },\r\n  add (name, options) {\r\n    if (name && options) {\r\n      const renders = renderMap[name]\r\n      if (renders) {\r\n        // 检测是否覆盖\r\n        if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\r\n          XEUtils.each(options, (val, key) => {\r\n            if (!XEUtils.eqNull(renders[key]) && renders[key] !== val) {\r\n              UtilTools.warn('vxe.error.coverProp', [`Renderer.${name}`, key])\r\n            }\r\n          })\r\n        }\r\n\r\n        Object.assign(renders, options)\r\n      } else {\r\n        renderMap[name] = options\r\n      }\r\n    }\r\n    return renderer\r\n  },\r\n  delete (name) {\r\n    delete renderMap[name]\r\n    return renderer\r\n  }\r\n}\r\n"]}]}