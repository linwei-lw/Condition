{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\common\\mixin\\main.js","dependencies":[{"path":"D:\\cdRule\\src\\common\\mixin\\main.js","mtime":1685090529029},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\n/**\r\n * 将通用数据做为全局\r\n */\n// import md5 from 'js-md5'\n\nimport crypto from 'crypto';\nvar seed = 0;\n\nwindow.$_uuid = function (name) {\n  return name + seed++;\n}; //==============================================================================================================\n\n\nwindow.$_main = {\n  userId: null,\n  sessionId: uuid(),\n  page: null,\n  root: null,\n  oldSessionId: null,\n  init: function init(gps_web_url, gps_xxx_url) {\n    domain(gps_web_url);\n    var params = {};\n    gps_xxx_url.split(/[?&#/]/).forEach(function (kv) {\n      kv = kv.split('=');\n      kv.length > 1 && (params[kv[0]] = kv[1]);\n    });\n    if (!params.userId) return alert($_L.get('没有账号参数！'));\n    if (!params.page) return alert($_L.get('没有页面参数！'));\n    window.$_main.userId = params.userId;\n    window.$_main.page = params.page;\n    window.$_main.password = params.password;\n    params.password && (window.$_main.mdPassword = crypto.createHash('md5').update(params.password).digest('hex'));\n    window.$_main.oldSessionId = params.sessionId;\n    window.$_main.root && (window.$_main.sessionId = params.sessionId || window.$_main.sessionId);\n    params.sessionId && (window.$_main.sessionId = params.sessionId || window.$_main.sessionId); // let token;\n    // if (location.host == 'localhost:8081'||location.host == '192.168.2.25:8081') {\n    //   $_main.mdPassword=crypto.createHash('md5').update('passwordszsg').digest('hex')\n    //   window.$_main.sessionId= 'So3Fc3C34Zb4Ws4T14Qf2Nz3Kg4H24Ef4Bg4Yu3V82Ss3Pw3Mz3Jp3G32Dn3Ae2Xc2Uq2Rt3Oa3Li3Iu3Fs2Ce3Zs1Wc3Tp3Qj3Nm3Kc3H83E53Bo3Yt3Vm3S23Pg1M03Js1Gs1Dn1A03Xr1U03Rp1Om1Lh1Is2Fg1Cs2y';\n    // }else{\n    //   token = window.$_main.sessionId\n    // }\n\n    window.$_main.http.authorization(params.sessionId);\n  },\n  exit: function exit() {// window.$_main.http.get('/exit', {sessionId:window.$_main.sessionId}, true);\n  }\n};\n\nfunction uuid() {\n  var S4 = function S4() {\n    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  };\n\n  return S4() + S4() + S4() + S4() + S4() + S4() + S4() + S4();\n} //==============================================================================================================\n\n\nfunction domain(url) {\n  var WEB_HOST,\n      WEB_NAME = 'gps-web',\n      WEB_HTTP = location.protocol == 'https:' ? 'https' : \"http\"; // 原来\n\n  if (location.host != 'localhost:8081' && document.referrer) {\n    var array = document.referrer.split('/');\n    array.length > 2 && (WEB_HOST = array[2] || WEB_HOST);\n    array.length > 3 && (WEB_NAME = array[3] || WEB_NAME);\n    WEB_NAME = 'gps-web';\n  } else {\n    WEB_HOST = url.split('/')[2];\n    WEB_NAME = url.split('/')[3]; // WEB_HOST = \"192.168.2.75:6779\";\n    // WEB_NAME = \"gps-web\";\n  }\n\n  var ip = WEB_HOST.split(':')[0];\n  window.$_main.domain = {\n    WEB_HTTP: WEB_HTTP,\n    WEB_HOST: WEB_HOST,\n    // ip:port\n    WEB_ROOT: WEB_HTTP + '://' + WEB_HOST + '/',\n    // http://ip:port/\n    WEB_NewROOT: WEB_HTTP + '://' + ip + ':8085/',\n    // http://ip:port/\n    WEB_PATH: WEB_HTTP + '://' + WEB_HOST + '/' + WEB_NAME + '/',\n    // http://ip:port/gps-xxx/\n    WEB_NAME: WEB_NAME // gps-xxx\n\n  };\n\n  if (WEB_HOST == window.$_domain.WEB_HOST) {\n    try {\n      var i = 0,\n          main = window.parent;\n\n      while (main && i++ < 10) {\n        if (main.$_cache) {\n          window.$_main.root = main;\n          break;\n        }\n\n        main = main.parent;\n      }\n    } catch (e) {}\n  }\n} //==============================================================================================================\n\n/**\r\n * http请求后台服务模块\r\n */\n\n\nimport axios from 'axios';\nimport qs from 'qs';\nvar headers = {\n  'Content-Type': 'application/json;charset=UTF-8'\n};\nvar isTimeout = false;\nwindow.$_main.http = {\n  authorization: function authorization(token) {\n    headers.Authorization = token;\n  },\n  get: function get(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // console.log(`${window.$_main.domain.WEB_PATH}${url}`);\n\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + (params ? qs.stringify(params) + '&' : '') + new Date().getTime();\n\n    if (url.indexOf('http://') == -1) {\n      url = \"\".concat(window.$_main.domain.WEB_NewROOT).concat(url);\n      console.log(url);\n    }\n\n    return axios({\n      withCredentials: true,\n      headers: headers,\n      method: 'get',\n      url: url\n    }).then(function (r) {\n      return r.data;\n    }).then(function (r) {\n      if (r.status == 1) {\n        return r.result;\n      } else if (r.status == -1) {\n        isTimeout = true;\n        $_alert.error($_L.get('您未登录或会话超时，请重新登录!'), null, null, true);\n      } else {\n        !quiet && $_alert.error(r.result);\n      }\n\n      throw r;\n    });\n  },\n  post: function post(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + new Date().getTime();\n    return axios({\n      withCredentials: true,\n      headers: headers,\n      method: 'post',\n      url: \"\".concat(window.$_main.domain.WEB_NewROOT).concat(url),\n      data: params\n    }).then(function (r) {\n      return r.data;\n    }).then(function (r) {\n      if (r.status == 1) {\n        return r.result;\n      } else if (r.status == -1) {\n        isTimeout = true;\n        $_alert.error($_L.get('您未登录或会话超时，请重新登录!'), null, null, true);\n      } else {\n        !quiet && $_alert.error(r.result);\n      }\n\n      throw r;\n    });\n  },\n  syncGet: function syncGet(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + (params ? qs.stringify(params) + '&' : '') + new Date().getTime();\n    return sync('GET', url, null, quiet);\n  },\n  syncPost: function syncPost(url, params) {\n    var quiet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (isTimeout) return;\n    url += (url.indexOf('?') > 0 ? '&' : '?') + new Date().getTime();\n    return sync('POST', url, JSON.stringify(params), quiet);\n  }\n};\n\nfunction sync(method, url, params, quiet) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(method, \"\".concat(window.$_main.domain.WEB_NewROOT).concat(url), false);\n  xhr.withCredentials = true;\n  xhr.setRequestHeader('Accept', 'application/json');\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.setRequestHeader('Authorization', headers.Authorization);\n  xhr.send(params);\n  var r = JSON.parse(xhr.responseText);\n\n  if (r.status == 1) {\n    return r.result;\n  } else if (r.status == -1) {\n    isTimeout = true;\n    $_alert.error($_L.get('您未登录或会话超时，请返回登录界面!'), null, null, true);\n  } else {\n    !quiet && $_alert.error(r.result);\n  }\n\n  throw r;\n}",null]}