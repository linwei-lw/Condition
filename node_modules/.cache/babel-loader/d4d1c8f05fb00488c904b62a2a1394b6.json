{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\common\\tree\\TeamTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\common\\tree\\TeamTree.vue","mtime":1612227987722},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchBox from \"@/components/Tree/SearchBox.vue\";\nimport { getTeams, onTeamTreeAdd, onTeamTreeRemove } from '@/common/cache/CacheTeamCar.js';\nimport { refreshAll } from '@/common/cache/CacheTeamCar.js';\nimport { regetNodes } from '@/common/cache/CacheTeamCar.js';\nimport { objClone } from '@/common/util/Objects.js';\nexport default {\n  components: {\n    SearchBox: SearchBox\n  },\n  props: {\n    setting: {\n      default: function _default() {\n        return {};\n      }\n    },\n    // 参考ztree的setting配置\n    frozenRoot: {\n      type: Boolean,\n      default: false\n    },\n    // 冻结根结点，不显示根结点的+-图标\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 是否可操作\n    border: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示边框\n    borderColor: {\n      type: String,\n      default: $_theme.border_color_dark\n    },\n    // 边框颜色\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示搜索栏\n    placeholder: String,\n    miniBar: {\n      type: Boolean,\n      default: false\n    },\n    // 是否显示搜索栏\n    showSearchIcon: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示搜索图标\n    onSearchItemSelected: Function,\n    // 选中了搜索栏查出的某个结点的回调函数，参数(node)\n    onTreeInited: Function,\n    onTreeRefreshed: Function\n  },\n  _tree: null,\n  getTreeRoots: function getTreeRoots(callback) {\n    return getTeams(function (cache) {\n      return callback(cache.root);\n    });\n  },\n  getNodeText: function getNodeText(node) {\n    return node.name;\n  },\n  data: function data() {\n    return {\n      treeId: 'tree_' + $_theme.zindex(),\n      loading: false\n    };\n  },\n  watch: {\n    'setting.view.nameFunction': function settingViewNameFunction(v) {\n      if (!this._tree) return;\n      this._tree.setting.view.nameFunction = v;\n\n      this._updateNodeName(this._tree.getNodes());\n    }\n  },\n  mounted: function mounted() {\n    this.loading = true;\n    getTeams(this.onLoaded);\n  },\n  methods: {\n    onLoaded: function onLoaded(cache) {\n      if (!this._setting) {\n        this._setting = objClone(this.setting);\n        this._setting.data = this._setting.data || {};\n        this._setting.data.key = this._setting.data.key || {};\n        this._setting.data.key.children = 'teams';\n        this._setting.view = this._setting.view || {};\n        this._setting.view.iconCssFunction = this.iconCssFunction;\n      }\n\n      cache.root[this.treeId] = {\n        open: true\n      };\n      this._tree = $.fn.zTree.init($(this.$refs.treeUl), this._setting, cache.root);\n      this.searchable && this.$refs.searchBox.setTree(this._tree);\n      this.loading = false;\n      onTeamTreeAdd(this.treeId, this);\n      this.onTreeInited && this.onTreeInited(cache.root, this._tree, this);\n    },\n    refreshClick: function refreshClick() {\n      var _this = this;\n\n      this.loading = true;\n      refreshAll(function (e) {\n        _this.loading = false;\n        _this.searchable && _this.showTip('刷新失败', '#f00');\n      });\n    },\n    onRefresh: function onRefresh(cars, teams) {\n      var snodes = this._tree.getSelectedNodes();\n\n      var cnodes = this._setting.check && this._setting.check.enable ? this._tree.getCheckedNodes(true, true) : null;\n      this.onLoaded(teams);\n      this.searchable && this.showTip('刷新成功', '#00f');\n      snodes = regetNodes(snodes);\n      snodes.length > 0 && this._tree.selectNode(snodes[0]);\n      cnodes = regetNodes(cnodes);\n      cnodes && cnodes.length > 0 && this.checkNodes(cnodes, true, true);\n      this.onTreeRefreshed && this.onTreeRefreshed(snodes, cnodes);\n    },\n    showTip: function showTip(tip, color) {\n      this.$refs.searchBox.clear();\n      this.$refs.searchBox.showTip(tip, color);\n    },\n    iconCssFunction: function iconCssFunction(node, open) {\n      return open ? 'ico_open' : 'ico_close';\n    },\n    _updateNodeName: function _updateNodeName(nodes) {\n      for (var i = 0, len = nodes.length, node; i < len; i++) {\n        if (this._tree.updateNodeName(node = nodes[i])) {\n          node.teams && this._updateNodeName(node.teams);\n        }\n      }\n    },\n    getCheckedNodes: function getCheckedNodes() {\n      var onlyChecked = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var onlyTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var field = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var hasOwnField = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var nodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      return this._tree.getCheckedNodes(onlyChecked, onlyTop, field, hasOwnField, nodes);\n    },\n    checkNodes: function checkNodes(nodes) {\n      var checked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var checkTypeFlag = arguments.length > 2 ? arguments[2] : undefined;\n      var callbackFlag = arguments.length > 3 ? arguments[3] : undefined;\n\n      for (var i = 0, len = nodes.length; i < len; i++) {\n        this._tree.checkNode(nodes[i], checked, checkTypeFlag, callbackFlag);\n      }\n    },\n    selectNode: function selectNode(node) {\n      var isSilent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      this._tree.selectNode(node, false, isSilent);\n    },\n    getTree: function getTree() {\n      return this._tree;\n    },\n    getTreeId: function getTreeId() {\n      return this.treeId;\n    },\n    destroy: function destroy() {\n      onTeamTreeRemove(this.treeId);\n\n      if (this._tree) {\n        this._tree.destroy();\n\n        this._tree = null;\n      }\n\n      if (this.searchable) {\n        this.$refs.searchBox.clear();\n        this.$refs.searchBox.setTree(null);\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroy();\n  }\n};",{"version":3,"sources":["TeamTree.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  \r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"{borderColor:borderColor}\">\r\n    <Toolbar v-if=\"searchable\" :border=\"false\" small :mini=\"miniBar\" style=\"border-bottom-width:1px;border-bottom-style:solid;\" :style=\"{borderColor:theme.border_color_light}\">\r\n      <SearchBox :placeholder=\"placeholder\" border :borderColor=\"theme.border_color_light\"\r\n      :style=\"{width:`calc(100% - ${miniBar?31:41}px`}\" \r\n       :height=\"miniBar?25:theme.inputHeight\" :treeBorder=\"border\" :showSearchIcon=\"showSearchIcon\" :onItemSelected=\"onSearchItemSelected\" ref=\"searchBox\"/>\r\n      <Button type=\"light\" style=\"margin-left:-1px;padding:2px 0 0 0;\" :height=\"miniBar?25:theme.inputHeight\" :style=\"{width:`${miniBar?25:theme.inputHeight}px`}\" icon=\"el-icon-refresh-right\" @click=\"refreshClick\"/>\r\n      <slot></slot>\r\n    </Toolbar>\r\n    \r\n    <div style=\"overflow: auto;\" :style=\"{height: searchable ? (miniBar ? 'calc(100% - 32px)' : 'calc(100% - 42px)') : '100%'}\">\r\n      <ul :id=\"treeId\" :class=\"['ztree', frozenRoot && 'ztree_frozen']\" ref=\"treeUl\"></ul>\r\n      <div v-if=\"disabled\" :class=\"$style.disabled\"/>\r\n      <div v-if=\"loading\" :class=\"$style.loading\"/>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  import SearchBox from \"@/components/Tree/SearchBox.vue\";\r\n  import { getTeams, onTeamTreeAdd, onTeamTreeRemove } from '@/common/cache/CacheTeamCar.js';\r\n  import { refreshAll } from '@/common/cache/CacheTeamCar.js';\r\n  import { regetNodes } from '@/common/cache/CacheTeamCar.js';\r\n  import { objClone } from '@/common/util/Objects.js';\r\n\r\n  export default {\r\n    components: { SearchBox },\r\n    props: {\r\n      setting:        { default: ()=>{return {}} },                               // 参考ztree的setting配置\r\n      frozenRoot:     { type: Boolean, default: false },                          // 冻结根结点，不显示根结点的+-图标\r\n      disabled:       { type: Boolean, default: false },                          // 是否可操作\r\n      border:         { type: Boolean, default: true  },                          // 是否显示边框\r\n      borderColor:    { type: String,  default: $_theme.border_color_dark},       // 边框颜色\r\n      searchable:     { type: Boolean, default: true  },                          // 是否显示搜索栏\r\n      placeholder:    String,\r\n      miniBar:        { type: Boolean, default: false },                          // 是否显示搜索栏\r\n      showSearchIcon: { type: Boolean, default: true  },                          // 是否显示搜索图标\r\n      onSearchItemSelected: Function,                                             // 选中了搜索栏查出的某个结点的回调函数，参数(node)\r\n      onTreeInited:         Function,\r\n      onTreeRefreshed: Function,\r\n    },\r\n\r\n    _tree: null,\r\n\r\n    getTreeRoots: callback => getTeams(cache => callback(cache.root)),\r\n    getNodeText: node => node.name,\r\n    \r\n    data() {\r\n      return {\r\n        treeId: 'tree_' + $_theme.zindex(),\r\n        loading: false,\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      'setting.view.nameFunction': function(v) {\r\n        if (!this._tree) return;\r\n        this._tree.setting.view.nameFunction = v;\r\n        this._updateNodeName(this._tree.getNodes());\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.loading = true;\r\n      getTeams(this.onLoaded);\r\n    },\r\n\r\n    methods: {\r\n      onLoaded(cache) {\r\n        if (!this._setting) {\r\n          this._setting = objClone(this.setting);\r\n          this._setting.data = this._setting.data || {};\r\n          this._setting.data.key = this._setting.data.key || {};\r\n          this._setting.data.key.children = 'teams';\r\n          this._setting.view = this._setting.view || {};\r\n          this._setting.view.iconCssFunction = this.iconCssFunction;\r\n        }\r\n        \r\n        cache.root[this.treeId] = {open: true};\r\n        this._tree = $.fn.zTree.init($(this.$refs.treeUl), this._setting, cache.root);\r\n        this.searchable && this.$refs.searchBox.setTree(this._tree);\r\n        this.loading = false;\r\n        onTeamTreeAdd(this.treeId, this);\r\n        this.onTreeInited && this.onTreeInited(cache.root,this._tree,this);\r\n      },\r\n      refreshClick() {\r\n        this.loading = true;\r\n        refreshAll(e => {\r\n          this.loading = false;\r\n          this.searchable && this.showTip('刷新失败', '#f00');\r\n        });\r\n      },\r\n      onRefresh(cars,teams) {\r\n        let snodes = this._tree.getSelectedNodes();\r\n        let cnodes = (this._setting.check && this._setting.check.enable) ? this._tree.getCheckedNodes(true,true) : null;\r\n        this.onLoaded(teams);\r\n        this.searchable && this.showTip('刷新成功', '#00f');\r\n        snodes = regetNodes(snodes);\r\n        snodes.length > 0 && this._tree.selectNode(snodes[0]);\r\n        cnodes = regetNodes(cnodes);\r\n        cnodes && cnodes.length > 0 && this.checkNodes(cnodes, true, true);\r\n        this.onTreeRefreshed && this.onTreeRefreshed(snodes,cnodes);\r\n      },\r\n      showTip(tip, color) {\r\n        this.$refs.searchBox.clear();\r\n        this.$refs.searchBox.showTip(tip, color);\r\n      },\r\n      iconCssFunction(node, open) {\r\n        return open ? 'ico_open' : 'ico_close';\r\n      },\r\n      _updateNodeName(nodes) {\r\n        for (let i=0,len=nodes.length,node; i<len; i++) {\r\n          if (this._tree.updateNodeName(node = nodes[i])) {\r\n            node.teams && this._updateNodeName(node.teams);\r\n          }\r\n        }\r\n      },\r\n      getCheckedNodes(onlyChecked=true, onlyTop=false, field=null, hasOwnField=null, nodes=null) {\r\n        return this._tree.getCheckedNodes(onlyChecked, onlyTop, field, hasOwnField, nodes);\r\n      },\r\n      checkNodes(nodes, checked=true, checkTypeFlag, callbackFlag) {\r\n        for (let i=0,len=nodes.length; i<len; i++) {\r\n          this._tree.checkNode(nodes[i], checked, checkTypeFlag, callbackFlag);\r\n        }\r\n      },\r\n      selectNode(node, isSilent=false) {\r\n        this._tree.selectNode(node, false, isSilent);\r\n      },\r\n      getTree() { return this._tree; },\r\n      getTreeId() { return this.treeId; },\r\n      destroy() {\r\n        onTeamTreeRemove(this.treeId);\r\n        if (this._tree) {\r\n          this._tree.destroy();\r\n          this._tree = null;\r\n        }\r\n        if (this.searchable) {\r\n          this.$refs.searchBox.clear();\r\n          this.$refs.searchBox.setTree(null);\r\n        }\r\n      }\r\n    },\r\n\r\n    beforeDestroy() {\r\n      this.destroy();\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .ztree_frozen li span.button.switch.level0 { display:none; }\r\n  .ztree_frozen li ul.level0 { padding:0; background:none; }\r\n</style>\r\n\r\n<style module>\r\n  .container {\r\n    position: relative;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  .loading {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    opacity: 0.3;\r\n    filter: alpha(opacity=30);\r\n    cursor: not-allowed;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-image: url(\"@/assets/icon/loading.gif\");\r\n  }\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n</style>"],"sourceRoot":"src/common/tree"}]}