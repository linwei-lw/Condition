{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\switch\\src\\switch.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\switch\\src\\switch.js","mtime":1635230121801},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { UtilTools } from \"../../tools\";\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport { browse } from \"../../tools/src/dom\";\nexport default {\n  name: 'VxeSwitch',\n  mixins: [vSize],\n  props: {\n    value: [String, Number, Boolean],\n    disabled: Boolean,\n    className: String,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.switch.size || GlobalConfig.size;\n      }\n    },\n    openLabel: String,\n    closeLabel: String,\n    openValue: {\n      type: [String, Number, Boolean],\n      default: true\n    },\n    closeValue: {\n      type: [String, Number, Boolean],\n      default: false\n    },\n    openIcon: String,\n    closeIcon: String\n  },\n  data: function data() {\n    return {\n      isActivated: false,\n      hasAnimat: false,\n      offsetLeft: 0\n    };\n  },\n  computed: {\n    isChecked: function isChecked() {\n      return this.value === this.openValue;\n    },\n    onShowLabel: function onShowLabel() {\n      return UtilTools.getFuncText(this.openLabel);\n    },\n    offShowLabel: function offShowLabel() {\n      return UtilTools.getFuncText(this.closeLabel);\n    },\n    styles: function styles() {\n      return browse.msie && this.isChecked ? {\n        left: \"\".concat(this.offsetLeft, \"px\")\n      } : null;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    if (browse.msie) {\n      this.$nextTick(function () {\n        return _this.updateStyle();\n      });\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var isChecked = this.isChecked,\n        vSize = this.vSize,\n        className = this.className,\n        disabled = this.disabled,\n        openIcon = this.openIcon,\n        closeIcon = this.closeIcon;\n    return h('div', {\n      class: ['vxe-switch', className, isChecked ? 'is--on' : 'is--off', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--disabled', disabled), _defineProperty(_ref, 'is--animat', this.hasAnimat), _ref)]\n    }, [h('button', {\n      ref: 'btn',\n      class: 'vxe-switch--button',\n      attrs: {\n        type: 'button',\n        disabled: disabled\n      },\n      on: {\n        click: this.clickEvent,\n        focus: this.focusEvent,\n        blur: this.blurEvent\n      }\n    }, [h('span', {\n      class: 'vxe-switch--label vxe-switch--label-on'\n    }, [openIcon ? h('i', {\n      class: ['vxe-switch--label-icon', openIcon]\n    }) : null, this.onShowLabel]), h('span', {\n      class: 'vxe-switch--label vxe-switch--label-off'\n    }, [closeIcon ? h('i', {\n      class: ['vxe-switch--label-icon', closeIcon]\n    }) : null, this.offShowLabel]), h('span', {\n      class: 'vxe-switch--icon',\n      style: this.styles\n    })])]);\n  },\n  methods: {\n    updateStyle: function updateStyle() {\n      // 兼容 IE\n      this.hasAnimat = true;\n      this.offsetLeft = this.$refs.btn.offsetWidth;\n    },\n    clickEvent: function clickEvent(evnt) {\n      var _this2 = this;\n\n      if (!this.disabled) {\n        clearTimeout(this.activeTimeout);\n        var value = this.isChecked ? this.closeValue : this.openValue;\n        this.hasAnimat = true;\n\n        if (browse.msie) {\n          this.updateStyle();\n        }\n\n        this.$emit('input', value);\n        this.$emit('change', {\n          value: value,\n          $event: evnt\n        });\n        this.activeTimeout = setTimeout(function () {\n          _this2.hasAnimat = false;\n        }, 400);\n      }\n    },\n    focusEvent: function focusEvent(evnt) {\n      this.isActivated = true;\n      this.$emit('focus', {\n        value: this.value,\n        $event: evnt\n      });\n    },\n    blurEvent: function blurEvent(evnt) {\n      this.isActivated = false;\n      this.$emit('blur', {\n        value: this.value,\n        $event: evnt\n      });\n    }\n  }\n};",null]}