{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\util\\LabelWidth.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\util\\LabelWidth.js","mtime":1665472741173},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var is_label = 'is-label';\nexport function labelWidthFit(dom) {\n  var maxWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var labels = [],\n      _maxWidth = find_is_label_dom([dom], labels, 0);\n\n  maxWidth = maxWidth == 0 ? _maxWidth : Math.min(_maxWidth, maxWidth);\n\n  if (maxWidth > 0 && labels.length > 0) {\n    labels.forEach(function (dom) {\n      if (dom.scrollWidth > maxWidth) {\n        dom.style['text-overflow'] = 'ellipsis';\n        dom.style['overflow'] = 'hidden';\n        dom.title = dom.innerHTML;\n      }\n\n      dom.style.width = maxWidth + 'px';\n    });\n  }\n\n  return maxWidth;\n}\n\nfunction find_is_label_dom(doms, labels, maxWidth) {\n  for (var i = 0, len = doms.length, dom; i < len; i++) {\n    dom = doms[i];\n    if (dom.hasAttribute === undefined) continue;\n\n    if (dom.hasAttribute(is_label)) {\n      labels.push(dom);\n      maxWidth = Math.max(maxWidth, dom.scrollWidth);\n    } else if (dom.childNodes.length > 0) {\n      maxWidth = find_is_label_dom(dom.childNodes, labels, maxWidth);\n    }\n  }\n\n  return maxWidth;\n}",{"version":3,"sources":["D:\\cdRule\\src\\components\\util\\LabelWidth.js"],"names":["is_label","maxWidth","labels","_maxWidth","find_is_label_dom","Math","dom","i","len","doms"],"mappings":"AAAA,IAAIA,QAAQ,GAAZ,UAAA;AAEA,OAAO,SAAA,aAAA,CAAA,GAAA,EAAwC;AAAA,MAAZC,QAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAH,CAAG;;AAC7C,MAAIC,MAAM,GAAV,EAAA;AAAA,MAAiBC,SAAS,GAAGC,iBAAiB,CAAC,CAAD,GAAC,CAAD,EAAA,MAAA,EAA9C,CAA8C,CAA9C;;AACAH,EAAAA,QAAQ,GAAGA,QAAQ,IAARA,CAAAA,GAAAA,SAAAA,GAA4BI,IAAI,CAAJA,GAAAA,CAAAA,SAAAA,EAAvCJ,QAAuCI,CAAvCJ;;AACA,MAAIA,QAAQ,GAARA,CAAAA,IAAgBC,MAAM,CAANA,MAAAA,GAApB,CAAA,EAAuC;AACrCA,IAAAA,MAAM,CAANA,OAAAA,CAAe,UAAA,GAAA,EAAO;AACpB,UAAII,GAAG,CAAHA,WAAAA,GAAJ,QAAA,EAAgC;AAC9BA,QAAAA,GAAG,CAAHA,KAAAA,CAAAA,eAAAA,IAAAA,UAAAA;AACAA,QAAAA,GAAG,CAAHA,KAAAA,CAAAA,UAAAA,IAAAA,QAAAA;AACAA,QAAAA,GAAG,CAAHA,KAAAA,GAAYA,GAAG,CAAfA,SAAAA;AACD;;AACDA,MAAAA,GAAG,CAAHA,KAAAA,CAAAA,KAAAA,GAAkBL,QAAQ,GAA1BK,IAAAA;AANFJ,KAAAA;AAQD;;AACD,SAAA,QAAA;AACD;;AAED,SAAA,iBAAA,CAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAmD;AACjD,OAAK,IAAIK,CAAC,GAAL,CAAA,EAAQC,GAAG,GAACC,IAAI,CAAhB,MAAA,EAAL,GAAA,EAAkCF,CAAC,GAAnC,GAAA,EAAyCA,CAAzC,EAAA,EAA8C;AAC5CD,IAAAA,GAAG,GAAGG,IAAI,CAAVH,CAAU,CAAVA;AACA,QAAIA,GAAG,CAAHA,YAAAA,KAAJ,SAAA,EAAoC;;AACpC,QAAIA,GAAG,CAAHA,YAAAA,CAAJ,QAAIA,CAAJ,EAAgC;AAC9BJ,MAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA;AACAD,MAAAA,QAAQ,GAAGI,IAAI,CAAJA,GAAAA,CAAAA,QAAAA,EAAmBC,GAAG,CAAjCL,WAAWI,CAAXJ;AAFF,KAAA,MAGO,IAAIK,GAAG,CAAHA,UAAAA,CAAAA,MAAAA,GAAJ,CAAA,EAA+B;AACpCL,MAAAA,QAAQ,GAAGG,iBAAiB,CAACE,GAAG,CAAJ,UAAA,EAAA,MAAA,EAA5BL,QAA4B,CAA5BA;AACD;AACF;;AACD,SAAA,QAAA;AACD","sourcesContent":["let is_label = 'is-label';\n\nexport function labelWidthFit(dom, maxWidth=0) {\n  let labels = [], _maxWidth = find_is_label_dom([dom], labels, 0);\n  maxWidth = maxWidth == 0 ? _maxWidth : Math.min(_maxWidth, maxWidth);\n  if (maxWidth > 0 && labels.length > 0) {\n    labels.forEach(dom => {\n      if (dom.scrollWidth > maxWidth) {\n        dom.style['text-overflow'] = 'ellipsis';\n        dom.style['overflow'] = 'hidden';\n        dom.title = dom.innerHTML;\n      }\n      dom.style.width = maxWidth + 'px';\n    })\n  }\n  return maxWidth;\n}\n\nfunction find_is_label_dom(doms, labels, maxWidth) {\n  for (let i=0,len=doms.length,dom; i<len; i++) {\n    dom = doms[i];\n    if (dom.hasAttribute === undefined) continue;\n    if (dom.hasAttribute(is_label)) {\n      labels.push(dom);\n      maxWidth = Math.max(maxWidth, dom.scrollWidth);\n    } else if (dom.childNodes.length > 0) {\n      maxWidth = find_is_label_dom(dom.childNodes, labels, maxWidth);\n    }\n  }\n  return maxWidth;\n}"]}]}