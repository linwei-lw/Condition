{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\common\\cache\\CacheVideo.js","dependencies":[{"path":"D:\\cdRule\\src\\common\\cache\\CacheVideo.js","mtime":1673062834211},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport { objIsEmpty } from '@/common/util/Objects.js';\nimport { arrayRemoveItem, arrayFindItem, compare } from '@/common/util/Arrays.js';\nimport { getCars, State } from '@/common/cache/CacheTeamCar.js';\nimport Message from '@/common/Message.js';\nvar CACHE = {\n  team_map: null,\n  car_map: null,\n  root: null,\n  tree: null,\n  fav_root: null,\n  group_root: null\n};\nexport function getVideos(callback) {\n  if (CACHE.tree) {\n    return callback ? callback(CACHE) : CACHE;\n  }\n\n  return callback ? getCars(function (CARS) {\n    return init(CARS, callback);\n  }) : init(getCars()[0]);\n}\n\nfunction init(CARS, callback) {\n  CACHE.team_map = {};\n  CACHE.car_map = {};\n  if (CACHE.root) for (var key in CACHE.root) {\n    delete CACHE.root[key];\n  }\n  CACHE.root = Object.assign(CACHE.root || {}, {\n    id: '0',\n    name: CARS.root.name,\n    videoNum: CARS.root.videoNum,\n    online: 0,\n    accon: 0,\n    alarm: 0\n  });\n  CACHE.root.children = CACHE.root.sons = CACHE.tree = [];\n\n  for (var i = 0, len = CARS.list.length, car, team; i < len; i++) {\n    car = CARS.list[i];\n    if (!car.videos) continue;\n    team = car.parent;\n    car = cloneCar(car);\n    if (!car) continue;\n    CACHE.car_map[car.id] = car;\n    setCarChannels(car);\n\n    while (team.id != '0' && !CACHE.team_map[team.id]) {\n      CACHE.team_map[team.id] = cloneTeam(team);\n      team = team.parent;\n    }\n  }\n\n  setVideoTree(CARS.tree, CACHE.root, CACHE.root.children);\n  stateCount();\n  return callback ? callback(CACHE) : CACHE;\n}\n/**\r\n * 重新获取车辆树结点\r\n */\n\n\nexport function regetNodes(nodes) {\n  if (!nodes || nodes.length == 0) return nodes;\n  var result = [];\n\n  for (var i = 0, len = nodes.length, node; i < len; i++) {\n    node = nodes[i];\n    if (!node.id) continue;\n    node = node.plate ? CACHE.car_map[node.id] : CACHE.team_map[node.id];\n    node && result.push(node);\n  }\n\n  return result;\n}\nexport function getFavRoot() {\n  var sort = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (CACHE.fav_root) return sort ? sortFavChildren() : CACHE.fav_root;\n  CACHE.fav_root = {\n    id: '0',\n    name: CACHE.root.name\n  };\n  return setFavChildren();\n}\nexport function getFavCount() {\n  return getFavRoot(false).children.length;\n}\nexport function resetFavTree() {\n  if (!CACHE.fav_root) return;\n  CACHE.fav_root.children.forEach(function (car) {\n    return delete car.fav_parent;\n  });\n  setFavChildren();\n\n  for (var treeId in ALL_VIDEO_TREES) {\n    var tree = ALL_VIDEO_TREES[treeId];\n    tree.model == 'fav' && tree.getTree().reset(CACHE.fav_root);\n  }\n}\n\nfunction setFavChildren() {\n  var children = [];\n  CACHE.fav_root.children = CACHE.fav_root.sons = children;\n  var carIds = window.$_cache.userCfg.FAV_VIDEO;\n  carIds && (carIds = JSON.parse(carIds));\n\n  if (carIds) {\n    for (var i = 0, len = carIds.length, car; i < len; i++) {\n      car = CACHE.car_map[carIds[i]];\n      if (!car) continue;\n      car.fav_parent = CACHE.fav_root;\n      children.push(car);\n    }\n  }\n\n  return sortFavChildren();\n}\n\nfunction sortFavChildren() {\n  CACHE.fav_root.children.sort(function (a, b) {\n    var a1 = State.isOnline(a.car.state);\n    var b1 = State.isOnline(b.car.state);\n    return a1 && b1 ? compare(a, b, 'plate') : a1 ? -1 : 1;\n  });\n  return CACHE.fav_root;\n}\n\nexport function getGroupRoot() {\n  if (CACHE.group_root) return CACHE.group_root;\n  CACHE.group_root = {\n    id: '0',\n    name: CACHE.root.name\n  };\n  return setGroupChildren();\n}\nexport function resetGroupTree() {\n  if (!CACHE.group_root) return;\n  setGroupChildren();\n\n  for (var treeId in ALL_VIDEO_TREES) {\n    var tree = ALL_VIDEO_TREES[treeId];\n    tree.model == 'group' && tree.getTree().reset(CACHE.group_root);\n  }\n}\n\nfunction setGroupChildren() {\n  var children = window.$_cache.userCfg.GROUP_VIDEO; //[{name:xxx,chns:[carId_chn,...]}]\n\n  children && (children = JSON.parse(children));\n\n  if (children) {\n    children.forEach(function (group) {\n      return group.group_parent = CACHE.group_root;\n    });\n    children.sort(function (a, b) {\n      return compare(a, b, 'name');\n    });\n  }\n\n  CACHE.group_root.children = CACHE.group_root.sons = children || [];\n  return CACHE.group_root;\n}\n\nfunction setVideoTree(nodes, parent, children) {\n  for (var i = 0, len = nodes.length, node, car, team; i < len; i++) {\n    node = nodes[i];\n\n    if (node.plate) {\n      car = CACHE.car_map[node.id];\n      if (!car) continue;\n      children.push(car);\n      car.parent = parent;\n    } else {\n      team = CACHE.team_map[node.id];\n      if (!team) continue;\n      children.push(team);\n      team.parent = parent;\n      node.children && setVideoTree(node.children, team, team.children = team.sons = []);\n    }\n  }\n}\n\nexport function checkPlay(car) {\n  var tip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  car = car.plate ? car : car.parent;\n  car = car.car || car;\n\n  if (State.isArrear(car.state) && car.dueMode && car.dueMode.indexOf('e') >= 0) {\n    tip && $_alert.warn($_L.get('车辆[{0}]已欠费！', car.plate));\n    return false;\n  }\n\n  return true;\n}\n\nfunction cloneCar(car) {\n  var item = {};\n  item.videos = JSON.parse(car.videos);\n\n  if (!item.videos) {\n    return null;\n  }\n\n  item.id = car.id;\n  item.plate = car.plate;\n  item.name = car.name;\n  item.teamId = car.teamId;\n  item.state = car.state;\n  item.talkChn = item.videos.tc || '';\n  item.broadcastChn = item.videos.bc || '';\n  item.car = car;\n  return item;\n}\n\nfunction setCarChannels(car) {\n  car.children = []; //{vs:\"通道:名称:云台,...\", ac:音频编码, ar:音频码率, tc:对讲通道, bc:广播通道}\n\n  var vs = car.videos.vs;\n  vs.split(',').forEach(function (item) {\n    var info = item.split(':'); //[通道,名称,云台]\n\n    car.children.push({\n      carId: car.id,\n      channel: parseInt(info[0]),\n      name: info[1] || $_L.get('通道') + info[0],\n      parent: car,\n      fav_parent: car\n    });\n  });\n}\n\nfunction cloneTeam(team) {\n  var item = {};\n  item.name = team.name;\n  item.id = team.id;\n  item.videoNum = team.videoNum;\n  item.online = item.accon = item.alarm = 0;\n  return item;\n}\n\nfunction stateCount() {\n  if (!CACHE.team_map) return;\n  var car,\n      team,\n      pteam,\n      teams = {},\n      t = false;\n  CACHE.root.online = CACHE.root.accon = CACHE.root.alarm = 0;\n\n  for (var teamId in CACHE.team_map) {\n    team = CACHE.team_map[teamId];\n    team.online = team.accon = team.alarm = 0;\n  }\n\n  for (var carId in CACHE.car_map) {\n    car = CACHE.car_map[carId];\n    team = car.parent;\n    car.state = car.car.state;\n    State.isOnline(car.state) && (t = true) && team.online++;\n    State.isAccOn(car.state) && (t = true) && team.accon++;\n    State.isAlarm(car.state) && (t = true) && team.alarm++;\n    t && (teams[team.id] = team) && (t = false);\n  }\n\n  for (var _teamId in teams) {\n    team = pteam = teams[_teamId];\n\n    while (pteam = pteam.parent) {\n      pteam.online += team.online;\n      pteam.accon += team.accon;\n      pteam.alarm += team.alarm;\n    }\n  }\n} //和视频树变化相关=======================================================================================================\n\n\nvar ALL_VIDEO_TREES = {};\nexport function onVideoTreeAdd(treeId, tree) {\n  objIsEmpty(ALL_VIDEO_TREES) && Message.addListener(Message.STATE, receiveCarState);\n  ALL_VIDEO_TREES[treeId] = tree;\n}\nexport function onVideoTreeRemove(treeId) {\n  delete ALL_VIDEO_TREES[treeId];\n  objIsEmpty(ALL_VIDEO_TREES) && Message.removeListener(Message.STATE, receiveCarState);\n}\n\nfunction receiveCarState(result) {\n  if (!CACHE.car_map) return;\n  var car,\n      state,\n      online,\n      accon,\n      alarm,\n      counts = {},\n      count,\n      tree,\n      Z;\n\n  for (var carId in result) {\n    car = CACHE.car_map[carId];\n    state = result[carId];\n    if (!car || car.state === state) continue;\n    online = accon = alarm = 0;\n    State.isOnline(car.state) && online--;\n    State.isOnline(state) && online++;\n    State.isAccOn(car.state) && accon--;\n    State.isAccOn(state) && accon++;\n    State.isAlarm(car.state) && alarm--;\n    State.isAlarm(state) && alarm++;\n    car.state = state;\n\n    if (online != 0 || accon != 0 || alarm != 0) {\n      count = counts[car.teamId];\n      !count && (count = counts[car.teamId] = {\n        online: 0,\n        accon: 0,\n        alarm: 0,\n        team: car.parent\n      });\n      count.online += online;\n      count.accon += accon;\n      count.alarm += alarm;\n    }\n\n    for (var treeId in ALL_VIDEO_TREES) {\n      Z = car[treeId];\n      if (!Z || !Z.dom) continue;\n      tree = ALL_VIDEO_TREES[treeId].getTree();\n      tree.updateNode(car);\n      online && car.children.forEach(function (chn) {\n        return tree.updateNodeIcon(chn);\n      });\n    }\n  }\n\n  var f = false,\n      teams = {},\n      team;\n\n  for (var teamId in counts) {\n    count = counts[teamId];\n    if (count.online === 0 && count.accon === 0 && count.alarm === 0) continue;\n    team = count.team;\n\n    while (team) {\n      team.online += count.online;\n      team.accon += count.accon;\n      team.alarm += count.alarm;\n      teams[team.id] = team;\n      team = team.parent;\n      f = true;\n    }\n  }\n\n  if (f) {\n    for (var _treeId in ALL_VIDEO_TREES) {\n      tree = ALL_VIDEO_TREES[_treeId];\n      var filter = !tree.mode && tree._videoTreeCfg.carFilter;\n      tree = tree.getTree();\n\n      for (var _teamId2 in teams) {\n        team = teams[_teamId2];\n        tree.updateNodeName(team);\n        filter && tree.updateNodeHide(team);\n      }\n    }\n  }\n}\n\nexport function onTeamUpdate(team, nameChg, pidChg) {\n  if (!CACHE.team_map || !CACHE.team_map[team.id]) return;\n  var _team = CACHE.team_map[team.id];\n\n  if (pidChg) {\n    init(getCars()[0]);\n    refreshTree();\n  } else if (nameChg) {\n    _team.name = team.name;\n    updateTreeNodeName(_team);\n  }\n}\nexport function getCarById(carId) {\n  if (!CACHE.car_map) getVideos();\n  return CACHE.car_map[carId];\n}\nexport function onCarAdd(car) {\n  if (!CACHE.car_map || !car.videos) return;\n  var team = car.parent;\n  car = cloneCar(car);\n  CACHE.car_map[car.id] = car;\n  setCarChannels(car);\n  var p,\n      teams = [];\n\n  while (team.id != '0' && !CACHE.team_map[team.id]) {\n    CACHE.team_map[team.id] = p = cloneTeam(team);\n    teams.push(p);\n    p.children = p.sons = [];\n    team = team.parent;\n  }\n\n  p = CACHE.team_map[team.id] || CACHE.root;\n  p.children = p.sons = p.children || [];\n  teams.length && teams.reverse().forEach(function (team) {\n    p.children.push(team);\n    team.parent = p;\n    addToTree(p, team);\n    p = team;\n  });\n  p.children.push(car);\n  car.parent = p;\n  updateTeamNum(car, 1, true);\n  addToTree(p, car);\n}\nexport function onCarUpdate(car, nameChg, teamIdChg, videoChg) {\n  if (!CACHE.car_map) return;\n  var _car = CACHE.car_map[car.id];\n  if (!_car) return onCarAdd(car);\n\n  if (teamIdChg) {\n    onCarDelete(car.id);\n    onCarAdd(car);\n    return;\n  }\n\n  if (nameChg) {\n    _car.plate = car.plate;\n    _car.name = car.name;\n    updateTreeNodeName(_car);\n  }\n\n  if (videoChg) {\n    if (!car.videos) return onCarDelete(car.id);\n\n    var i = _car.parent.children.indexOf(_car);\n\n    removeTreeNode(_car);\n    _car.parent.children = _car.parent.sons;\n    _car.parent.children.indexOf(_car) == -1 && _car.parent.children.splice(i, 0, _car);\n    _car.videos = JSON.parse(car.videos);\n    _car.talkChn = _car.videos.tc || '';\n    _car.broadcastChn = _car.videos.bc || '';\n    setCarChannels(_car);\n    addToTree(_car.parent, _car);\n  }\n}\nexport function onCarDelete(carId) {\n  if (!CACHE.car_map) return;\n  var car = CACHE.car_map[carId];\n  if (!car) return;\n  delete CACHE.car_map[carId];\n  removeFromTree(car);\n  updateTeamNum(car, -1, true);\n}\nvar refresh_players;\nexport function beforeRefresh(refreshs) {\n  if (!CACHE.car_map) return;\n  var states, setting;\n\n  for (var treeId in ALL_VIDEO_TREES) {\n    refreshs[treeId] = states = {\n      cars: {},\n      teams: {}\n    };\n    states.root = CACHE.root[treeId];\n\n    for (var carId in CACHE.car_map) {\n      setting = CACHE.car_map[carId][treeId];\n      setting && (delete setting.dom, states.cars[carId] = setting);\n    }\n\n    for (var teamId in CACHE.team_map) {\n      setting = CACHE.team_map[teamId][treeId];\n      setting && (delete setting.dom, states.teams[teamId] = setting);\n    }\n\n    states.selected = ALL_VIDEO_TREES[treeId]._tree.getSelectedNodes();\n  }\n\n  refresh_players = [];\n  Object.values(CACHE.car_map).forEach(function (car) {\n    return car.children && car.children.forEach(function (chn) {\n      return chn.player && refresh_players.push({\n        carId: chn.carId,\n        channel: chn.channel,\n        player: chn.player\n      });\n    });\n  });\n}\nexport function afterRefresh(refreshs) {\n  if (!CACHE.car_map) return;\n  init(getCars()[0]);\n\n  if (CACHE.fav_root) {\n    CACHE.fav_root.children.forEach(function (car) {\n      return delete car.fav_parent;\n    });\n    setFavChildren();\n  }\n\n  if (CACHE.group_root) setGroupChildren();\n  var car, chn;\n  refresh_players.forEach(function (_ref) {\n    var carId = _ref.carId,\n        channel = _ref.channel,\n        player = _ref.player;\n    car = CACHE.car_map[carId];\n    if (!car || !car.children) return;\n    chn = arrayFindItem(car.children, 'channel', channel);\n    chn && (chn.player = player, player._chn = chn);\n  });\n  refresh_players = null;\n  var states, setting, tree;\n\n  for (var treeId in ALL_VIDEO_TREES) {\n    states = refreshs[treeId];\n    CACHE.root[treeId] = states.root;\n\n    for (var carId in CACHE.car_map) {\n      setting = states.cars[carId];\n      setting && (CACHE.car_map[carId][treeId] = setting);\n    }\n\n    for (var teamId in CACHE.team_map) {\n      setting = states.teams[teamId];\n      setting && (CACHE.team_map[teamId][treeId] = setting);\n    }\n\n    tree = ALL_VIDEO_TREES[treeId];\n    states.root.open = true;\n    var root = tree.model == 'fav' ? CACHE.fav_root : tree.model == 'group' ? CACHE.group_root : CACHE.root;\n\n    tree._tree.reset(root, true);\n\n    var selected = null;\n\n    if (states.selected.length > 0) {\n      selected = states.selected[0];\n\n      if (selected == CACHE.root || selected == CACHE.fav_root || selected == CACHE.group_root) {} else if (selected.plate) {\n        selected = CACHE.car_map[selected.id];\n      } else if (selected.id) {\n        selected = CACHE.team_map[selected.id];\n      } else {\n        var _car2 = CACHE.car_map[selected.carId];\n        selected = _car2 ? arrayFindItem(_car2.children, 'channel', selected.channel) : null;\n      }\n\n      selected && tree._tree.selectNode(selected);\n    }\n\n    delete refreshs[treeId];\n    tree.afterRefresh(selected);\n  }\n}\n\nfunction addToTree(parent, item) {\n  try {\n    var tree;\n\n    for (var treeId in ALL_VIDEO_TREES) {\n      tree = ALL_VIDEO_TREES[treeId];\n\n      if (!tree.model) {\n        tree.getTree().addNodes(parent, parent.children.indexOf(item), item);\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction removeFromTree(car) {\n  var parent = car.parent;\n  arrayRemoveItem(parent.children, car);\n  if (parent.children == 0) delete parent.children;\n  removeTreeNode(car);\n}\n\nfunction updateTeamNum(car, num) {\n  var update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var team = car.parent; //视频树\n\n  while (team) {\n    team.videoNum += num;\n    State.isOnline(car.state) && (team.online += num);\n    State.isAccOn(car.state) && (team.accon += num);\n    State.isAlarm(car.state) && (team.alarm += num);\n    update && updateTreeNodeName(team);\n    team = team.parent;\n  }\n}\n\nfunction updateTreeNodeName(item) {\n  for (var treeId in ALL_VIDEO_TREES) {\n    ALL_VIDEO_TREES[treeId].getTree().updateNodeName(item);\n  }\n}\n\nfunction refreshTree() {\n  for (var treeId in ALL_VIDEO_TREES) {\n    ALL_VIDEO_TREES[treeId].getTree().refresh();\n  }\n}\n\nfunction removeTreeNode(node) {\n  try {\n    for (var treeId in ALL_VIDEO_TREES) {\n      ALL_VIDEO_TREES[treeId].getTree().removeNode(node);\n    }\n  } catch (e) {\n    console.log(e);\n  }\n} //视频报警列表==================================================================================================================\n\n\nvar alarm_root;\nexport function getAlarmRoots(callback) {\n  getAlarmList();\n  callback(alarm_root);\n}\n;\nexport function getAlarmList() {\n  if (alarm_root) return alarm_root.children;\n  var root = {\n    id: -1,\n    name: $_L.get('所有报警')\n  };\n  root.children = [{\n    parent: root,\n    id: 0,\n    name: $_L.get('紧急报警')\n  }, {\n    parent: root,\n    id: 1,\n    name: $_L.get('超速报警')\n  }, {\n    parent: root,\n    id: 2,\n    name: $_L.get('疲劳驾驶')\n  }, {\n    parent: root,\n    id: 3,\n    name: $_L.get('危险预警')\n  }, {\n    parent: root,\n    id: 4,\n    name: $_L.get('GNSS模块故障')\n  }, {\n    parent: root,\n    id: 5,\n    name: $_L.get('GNSS天线未接/被剪')\n  }, {\n    parent: root,\n    id: 6,\n    name: $_L.get('GNSS天线短路')\n  }, {\n    parent: root,\n    id: 7,\n    name: $_L.get('终端主电源欠压')\n  }, {\n    parent: root,\n    id: 8,\n    name: $_L.get('终端主电源掉电')\n  }, {\n    parent: root,\n    id: 9,\n    name: $_L.get('终端LCD或显示器故障')\n  }, {\n    parent: root,\n    id: 10,\n    name: $_L.get('TTS模块故障')\n  }, {\n    parent: root,\n    id: 11,\n    name: $_L.get('摄像头故障')\n  }, {\n    parent: root,\n    id: 12,\n    name: $_L.get('道路运输证IC卡模块故障')\n  }, {\n    parent: root,\n    id: 13,\n    name: $_L.get('超速预警')\n  }, {\n    parent: root,\n    id: 14,\n    name: $_L.get('疲劳驾驶预警')\n  }, {\n    parent: root,\n    id: 15,\n    name: $_L.get('违规行驶报警')\n  }, {\n    parent: root,\n    id: 16,\n    name: $_L.get('胎压预警')\n  }, {\n    parent: root,\n    id: 17,\n    name: $_L.get('右转盲区异常报警')\n  }, {\n    parent: root,\n    id: 18,\n    name: $_L.get('当天累计驾驶超时')\n  }, {\n    parent: root,\n    id: 19,\n    name: $_L.get('超时停车')\n  }, {\n    parent: root,\n    id: 20,\n    name: $_L.get('进出区域')\n  }, {\n    parent: root,\n    id: 21,\n    name: $_L.get('进出路线')\n  }, {\n    parent: root,\n    id: 22,\n    name: $_L.get('路段行驶时间不足/过长')\n  }, {\n    parent: root,\n    id: 23,\n    name: $_L.get('路线偏离报警')\n  }, {\n    parent: root,\n    id: 24,\n    name: $_L.get('车辆VSS故障')\n  }, {\n    parent: root,\n    id: 25,\n    name: $_L.get('车辆油量异常')\n  }, {\n    parent: root,\n    id: 26,\n    name: $_L.get('车辆被盗')\n  }, {\n    parent: root,\n    id: 27,\n    name: $_L.get('车辆非法点火')\n  }, {\n    parent: root,\n    id: 28,\n    name: $_L.get('车辆非法位移')\n  }, {\n    parent: root,\n    id: 29,\n    name: $_L.get('碰撞预警')\n  }, {\n    parent: root,\n    id: 30,\n    name: $_L.get('侧翻预警')\n  }, {\n    parent: root,\n    id: 31,\n    name: $_L.get('非法开门报警')\n  }, {\n    parent: root,\n    id: 32,\n    name: $_L.get('视频信号丢失报警')\n  }, {\n    parent: root,\n    id: 33,\n    name: $_L.get('视频信号遮挡报警')\n  }, {\n    parent: root,\n    id: 34,\n    name: $_L.get('存储单元故障报警')\n  }, {\n    parent: root,\n    id: 35,\n    name: $_L.get('其它视频设备故障报警')\n  }, {\n    parent: root,\n    id: 36,\n    name: $_L.get('客车超员报警')\n  }, {\n    parent: root,\n    id: 37,\n    name: $_L.get('异常驾驶行为报警')\n  }, {\n    parent: root,\n    id: 38,\n    name: $_L.get('特殊报警录像达到存储阈值')\n  }];\n  alarm_root = root;\n  return alarm_root.children;\n}",{"version":3,"sources":["D:\\cdRule\\src\\common\\cache\\CacheVideo.js"],"names":["CACHE","team_map","car_map","root","tree","fav_root","group_root","callback","getCars","init","id","name","CARS","videoNum","online","accon","alarm","i","len","car","team","cloneCar","setCarChannels","cloneTeam","setVideoTree","stateCount","nodes","result","node","sort","sortFavChildren","setFavChildren","getFavRoot","ALL_VIDEO_TREES","children","carIds","window","JSON","a1","State","a","b1","b","compare","setGroupChildren","group","tip","$_alert","$_L","item","vs","info","carId","channel","parseInt","parent","fav_parent","teams","t","pteam","objIsEmpty","Message","counts","state","count","Z","f","filter","_team","refreshTree","updateTreeNodeName","getVideos","p","addToTree","updateTeamNum","_car","onCarAdd","onCarDelete","removeTreeNode","removeFromTree","refreshs","states","cars","setting","refresh_players","Object","chn","player","arrayFindItem","selected","console","arrayRemoveItem","update","getAlarmList","alarm_root"],"mappings":"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","sourcesContent":["import { objIsEmpty } from '@/common/util/Objects.js';\r\nimport { arrayRemoveItem, arrayFindItem, compare } from '@/common/util/Arrays.js';\r\nimport { getCars, State } from '@/common/cache/CacheTeamCar.js';\r\nimport Message from '@/common/Message.js';\r\n\r\nlet CACHE = { team_map: null, car_map: null, root: null, tree: null, fav_root: null, group_root: null };\r\n\r\nexport function getVideos(callback) {\r\n\tif (CACHE.tree) {\r\n\t\treturn callback ? callback(CACHE) : CACHE;\r\n\t}\r\n\treturn callback ? getCars(CARS => init(CARS, callback)) : init(getCars()[0]);\r\n}\r\n\r\nfunction init(CARS, callback) {\r\n\tCACHE.team_map = {};\r\n\tCACHE.car_map = {};\r\n\tif (CACHE.root) for (let key in CACHE.root) delete CACHE.root[key];\r\n\tCACHE.root = Object.assign(CACHE.root || {}, { id: '0', name: CARS.root.name, videoNum: CARS.root.videoNum, online: 0, accon: 0, alarm: 0 });\r\n\tCACHE.root.children = CACHE.root.sons = CACHE.tree = [];\r\n\tfor (let i = 0, len = CARS.list.length, car, team; i < len; i++) {\r\n\t\tcar = CARS.list[i];\r\n\t\tif (!car.videos) continue;\r\n\t\tteam = car.parent;\r\n\t\tcar = cloneCar(car);\r\n\t\tif (!car) continue;\r\n\t\tCACHE.car_map[car.id] = car;\r\n\t\tsetCarChannels(car);\r\n\r\n\t\twhile (team.id != '0' && !CACHE.team_map[team.id]) {\r\n\t\t\tCACHE.team_map[team.id] = cloneTeam(team);\r\n\t\t\tteam = team.parent;\r\n\t\t}\r\n\t}\r\n\tsetVideoTree(CARS.tree, CACHE.root, CACHE.root.children);\r\n\tstateCount();\r\n\treturn callback ? callback(CACHE) : CACHE;\r\n}\r\n\r\n/**\r\n * 重新获取车辆树结点\r\n */\r\nexport function regetNodes(nodes) {\r\n\tif (!nodes || nodes.length == 0) return nodes;\r\n\tlet result = [];\r\n\tfor (let i = 0, len = nodes.length, node; i < len; i++) {\r\n\t\tnode = nodes[i];\r\n\t\tif (!node.id) continue;\r\n\t\tnode = node.plate ? CACHE.car_map[node.id] : CACHE.team_map[node.id];\r\n\t\tnode && result.push(node);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport function getFavRoot(sort = true) {\r\n\tif (CACHE.fav_root) return sort ? sortFavChildren() : CACHE.fav_root;\r\n\tCACHE.fav_root = { id: '0', name: CACHE.root.name };\r\n\treturn setFavChildren();\r\n}\r\n\r\nexport function getFavCount() {\r\n\treturn getFavRoot(false).children.length;\r\n}\r\n\r\nexport function resetFavTree() {\r\n\tif (!CACHE.fav_root) return;\r\n\tCACHE.fav_root.children.forEach(car => delete car.fav_parent);\r\n\tsetFavChildren();\r\n\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\tlet tree = ALL_VIDEO_TREES[treeId];\r\n\t\ttree.model == 'fav' && tree.getTree().reset(CACHE.fav_root);\r\n\t}\r\n}\r\n\r\nfunction setFavChildren() {\r\n\tlet children = [];\r\n\tCACHE.fav_root.children = CACHE.fav_root.sons = children;\r\n\tlet carIds = window.$_cache.userCfg.FAV_VIDEO;\r\n\tcarIds && (carIds = JSON.parse(carIds));\r\n\tif (carIds) {\r\n\t\tfor (let i = 0, len = carIds.length, car; i < len; i++) {\r\n\t\t\tcar = CACHE.car_map[carIds[i]];\r\n\t\t\tif (!car) continue;\r\n\t\t\tcar.fav_parent = CACHE.fav_root;\r\n\t\t\tchildren.push(car);\r\n\t\t}\r\n\t}\r\n\treturn sortFavChildren();\r\n}\r\n\r\nfunction sortFavChildren() {\r\n\tCACHE.fav_root.children.sort((a, b) => {\r\n\t\tlet a1 = State.isOnline(a.car.state);\r\n\t\tlet b1 = State.isOnline(b.car.state);\r\n\t\treturn a1 && b1 ? compare(a, b, 'plate') : a1 ? -1 : 1;\r\n\t});\r\n\treturn CACHE.fav_root;\r\n}\r\n\r\nexport function getGroupRoot() {\r\n\tif (CACHE.group_root) return CACHE.group_root;\r\n\tCACHE.group_root = { id: '0', name: CACHE.root.name };\r\n\treturn setGroupChildren();\r\n}\r\n\r\nexport function resetGroupTree() {\r\n\tif (!CACHE.group_root) return;\r\n\tsetGroupChildren();\r\n\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\tlet tree = ALL_VIDEO_TREES[treeId];\r\n\t\ttree.model == 'group' && tree.getTree().reset(CACHE.group_root);\r\n\t}\r\n}\r\n\r\nfunction setGroupChildren() {\r\n\tlet children = window.$_cache.userCfg.GROUP_VIDEO;//[{name:xxx,chns:[carId_chn,...]}]\r\n\tchildren && (children = JSON.parse(children));\r\n\tif (children) {\r\n\t\tchildren.forEach(group => group.group_parent = CACHE.group_root);\r\n\t\tchildren.sort((a, b) => compare(a, b, 'name'));\r\n\t}\r\n\tCACHE.group_root.children = CACHE.group_root.sons = children || [];\r\n\treturn CACHE.group_root;\r\n}\r\n\r\n\r\nfunction setVideoTree(nodes, parent, children) {\r\n\tfor (let i = 0, len = nodes.length, node, car, team; i < len; i++) {\r\n\t\tnode = nodes[i];\r\n\t\tif (node.plate) {\r\n\t\t\tcar = CACHE.car_map[node.id];\r\n\t\t\tif (!car) continue;\r\n\t\t\tchildren.push(car);\r\n\t\t\tcar.parent = parent;\r\n\t\t} else {\r\n\t\t\tteam = CACHE.team_map[node.id];\r\n\t\t\tif (!team) continue;\r\n\t\t\tchildren.push(team);\r\n\t\t\tteam.parent = parent;\r\n\t\t\tnode.children && setVideoTree(node.children, team, team.children = team.sons = []);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function checkPlay(car, tip = true) {\r\n\tcar = car.plate ? car : car.parent;\r\n\tcar = car.car || car;\r\n\tif (State.isArrear(car.state) && car.dueMode && car.dueMode.indexOf('e') >= 0) {\r\n\t\ttip && $_alert.warn($_L.get('车辆[{0}]已欠费！', car.plate));\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n\r\nfunction cloneCar(car) {\r\n\tlet item = {};\r\n\titem.videos = JSON.parse(car.videos);\r\n\tif (!item.videos) {\r\n\t\treturn null;\r\n\t}\r\n\titem.id = car.id;\r\n\titem.plate = car.plate;\r\n\titem.name = car.name;\r\n\titem.teamId = car.teamId;\r\n\titem.state = car.state;\r\n\titem.talkChn = item.videos.tc || '';\r\n\titem.broadcastChn = item.videos.bc || '';\r\n\titem.car = car;\r\n\treturn item;\r\n}\r\n\r\nfunction setCarChannels(car) {\r\n\tcar.children = [];\r\n\t//{vs:\"通道:名称:云台,...\", ac:音频编码, ar:音频码率, tc:对讲通道, bc:广播通道}\r\n\tlet vs = car.videos.vs;\r\n\tvs.split(',').forEach(item => {\r\n\t\tlet info = item.split(':');//[通道,名称,云台]\r\n\t\tcar.children.push({\r\n\t\t\tcarId: car.id,\r\n\t\t\tchannel: parseInt(info[0]),\r\n\t\t\tname: info[1] || ($_L.get('通道') + info[0]),\r\n\t\t\tparent: car,\r\n\t\t\tfav_parent: car\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction cloneTeam(team) {\r\n\tlet item = {};\r\n\titem.name = team.name;\r\n\titem.id = team.id;\r\n\titem.videoNum = team.videoNum;\r\n\titem.online = item.accon = item.alarm = 0;\r\n\treturn item;\r\n}\r\n\r\nfunction stateCount() {\r\n\tif (!CACHE.team_map) return;\r\n\tlet car, team, pteam, teams = {}, t = false;\r\n\r\n\tCACHE.root.online = CACHE.root.accon = CACHE.root.alarm = 0;\r\n\tfor (let teamId in CACHE.team_map) {\r\n\t\tteam = CACHE.team_map[teamId];\r\n\t\tteam.online = team.accon = team.alarm = 0;\r\n\t}\r\n\tfor (let carId in CACHE.car_map) {\r\n\t\tcar = CACHE.car_map[carId]\r\n\t\tteam = car.parent;\r\n\t\tcar.state = car.car.state;\r\n\t\tState.isOnline(car.state) && (t = true) && team.online++;\r\n\t\tState.isAccOn(car.state) && (t = true) && team.accon++;\r\n\t\tState.isAlarm(car.state) && (t = true) && team.alarm++;\r\n\t\tt && (teams[team.id] = team) && (t = false);\r\n\t}\r\n\tfor (let teamId in teams) {\r\n\t\tteam = pteam = teams[teamId];\r\n\t\twhile (pteam = pteam.parent) {\r\n\t\t\tpteam.online += team.online;\r\n\t\t\tpteam.accon += team.accon;\r\n\t\t\tpteam.alarm += team.alarm;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n//和视频树变化相关=======================================================================================================\r\nlet ALL_VIDEO_TREES = {};\r\nexport function onVideoTreeAdd(treeId, tree) {\r\n\tobjIsEmpty(ALL_VIDEO_TREES) && Message.addListener(Message.STATE, receiveCarState);\r\n\tALL_VIDEO_TREES[treeId] = tree;\r\n}\r\nexport function onVideoTreeRemove(treeId) {\r\n\tdelete ALL_VIDEO_TREES[treeId];\r\n\tobjIsEmpty(ALL_VIDEO_TREES) && Message.removeListener(Message.STATE, receiveCarState);\r\n}\r\n\r\nfunction receiveCarState(result) {\r\n\tif (!CACHE.car_map) return;\r\n\tlet car, state, online, accon, alarm, counts = {}, count, tree, Z;\r\n\tfor (let carId in result) {\r\n\t\tcar = CACHE.car_map[carId];\r\n\t\tstate = result[carId];\r\n\t\tif (!car || car.state === state) continue;\r\n\r\n\t\tonline = accon = alarm = 0;\r\n\t\tState.isOnline(car.state) && online--; State.isOnline(state) && online++;\r\n\t\tState.isAccOn(car.state) && accon--; State.isAccOn(state) && accon++;\r\n\t\tState.isAlarm(car.state) && alarm--; State.isAlarm(state) && alarm++;\r\n\t\tcar.state = state;\r\n\r\n\t\tif (online != 0 || accon != 0 || alarm != 0) {\r\n\t\t\tcount = counts[car.teamId];\r\n\t\t\t!count && (count = counts[car.teamId] = { online: 0, accon: 0, alarm:0, team: car.parent });\r\n\t\t\tcount.online += online;\r\n\t\t\tcount.accon += accon;\r\n\t\t\tcount.alarm += alarm;\r\n\t\t}\r\n\t\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\t\tZ = car[treeId];\r\n\t\t\tif (!Z || !Z.dom) continue;\r\n\t\t\ttree = ALL_VIDEO_TREES[treeId].getTree();\r\n\t\t\ttree.updateNode(car);\r\n\t\t\tonline && car.children.forEach(chn => tree.updateNodeIcon(chn))\r\n\t\t}\r\n\t}\r\n\tlet f = false, teams = {}, team;\r\n\tfor (let teamId in counts) {\r\n\t\tcount = counts[teamId];\r\n\t\tif (count.online === 0 && count.accon === 0 && count.alarm === 0) continue;\r\n\t\tteam = count.team;\r\n\t\twhile (team) {\r\n\t\t\tteam.online += count.online;\r\n\t\t\tteam.accon += count.accon;\r\n\t\t\tteam.alarm += count.alarm;\r\n\t\t\tteams[team.id] = team;\r\n\t\t\tteam = team.parent;\r\n\t\t\tf = true;\r\n\t\t}\r\n\t}\r\n\tif (f) {\r\n\t\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\t\ttree = ALL_VIDEO_TREES[treeId];\r\n\t\t\tlet filter = !tree.mode && tree._videoTreeCfg.carFilter;\r\n\t\t\ttree = tree.getTree();\r\n\t\t\tfor (let teamId in teams) {\r\n\t\t\t\tteam = teams[teamId];\r\n\t\t\t\ttree.updateNodeName(team);\r\n\t\t\t\tfilter && tree.updateNodeHide(team);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nexport function onTeamUpdate(team, nameChg, pidChg) {\r\n\tif (!CACHE.team_map || !CACHE.team_map[team.id]) return;\r\n\tlet _team = CACHE.team_map[team.id];\r\n\tif (pidChg) {\r\n\t\tinit(getCars()[0]);\r\n\t\trefreshTree();\r\n\t} else if (nameChg) {\r\n\t\t_team.name = team.name;\r\n\t\tupdateTreeNodeName(_team);\r\n\t}\r\n}\r\nexport function getCarById(carId) {\r\n\tif (!CACHE.car_map) getVideos();\r\n\treturn CACHE.car_map[carId];\r\n}\r\nexport function onCarAdd(car) {\r\n\tif (!CACHE.car_map || !car.videos) return;\r\n\tlet team = car.parent;\r\n\tcar = cloneCar(car);\r\n\tCACHE.car_map[car.id] = car;\r\n\tsetCarChannels(car);\r\n\r\n\tlet p, teams = [];\r\n\twhile (team.id != '0' && !CACHE.team_map[team.id]) {\r\n\t\tCACHE.team_map[team.id] = p = cloneTeam(team);\r\n\t\tteams.push(p);\r\n\t\tp.children = p.sons = [];\r\n\t\tteam = team.parent;\r\n\t}\r\n\tp = CACHE.team_map[team.id] || CACHE.root;\r\n\tp.children = p.sons = p.children || [];\r\n\tteams.length && teams.reverse().forEach(team => {\r\n\t\tp.children.push(team);\r\n\t\tteam.parent = p;\r\n\t\taddToTree(p, team);\r\n\t\tp = team;\r\n\t});\r\n\tp.children.push(car);\r\n\tcar.parent = p;\r\n\tupdateTeamNum(car, 1, true);\r\n\taddToTree(p, car);\r\n}\r\n\r\nexport function onCarUpdate(car, nameChg, teamIdChg, videoChg) {\r\n\tif (!CACHE.car_map) return;\r\n\tlet _car = CACHE.car_map[car.id];\r\n\tif (!_car) return onCarAdd(car);\r\n\tif (teamIdChg) {\r\n\t\tonCarDelete(car.id);\r\n\t\tonCarAdd(car);\r\n\t\treturn;\r\n\t}\r\n\tif (nameChg) {\r\n\t\t_car.plate = car.plate;\r\n\t\t_car.name = car.name;\r\n\t\tupdateTreeNodeName(_car);\r\n\t}\r\n\tif (videoChg) {\r\n\t\tif (!car.videos) return onCarDelete(car.id);\r\n\t\tlet i = _car.parent.children.indexOf(_car);\r\n\t\tremoveTreeNode(_car);\r\n\t\t_car.parent.children = _car.parent.sons;\r\n\t\t_car.parent.children.indexOf(_car) == -1 && _car.parent.children.splice(i, 0, _car);\r\n\t\t_car.videos = JSON.parse(car.videos);\r\n\t\t_car.talkChn = _car.videos.tc || '';\r\n\t\t_car.broadcastChn = _car.videos.bc || '';\r\n\t\tsetCarChannels(_car);\r\n\t\taddToTree(_car.parent, _car);\r\n\t}\r\n}\r\n\r\nexport function onCarDelete(carId) {\r\n\tif (!CACHE.car_map) return;\r\n\tlet car = CACHE.car_map[carId];\r\n\tif (!car) return;\r\n\tdelete CACHE.car_map[carId];\r\n\tremoveFromTree(car);\r\n\tupdateTeamNum(car, -1, true);\r\n}\r\n\r\nlet refresh_players;\r\nexport function beforeRefresh(refreshs) {\r\n\tif (!CACHE.car_map) return;\r\n\tlet states, setting;\r\n\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t  refreshs[treeId] = states = {cars:{}, teams:{}};\r\n\t  states.root = CACHE.root[treeId];\r\n\t  for (let carId in CACHE.car_map) {\r\n\t\tsetting = CACHE.car_map[carId][treeId];\r\n\t\tsetting && (delete setting.dom, states.cars[carId] = setting);\r\n\t  }\r\n\t  for (let teamId in CACHE.team_map) {\r\n\t\tsetting = CACHE.team_map[teamId][treeId];\r\n\t\tsetting && (delete setting.dom, states.teams[teamId] = setting);\r\n\t  }\r\n\t  states.selected = ALL_VIDEO_TREES[treeId]._tree.getSelectedNodes();\r\n\t}\r\n\trefresh_players = [];\r\n\tObject.values(CACHE.car_map).forEach(car => car.children && car.children.forEach(chn => chn.player && refresh_players.push({carId:chn.carId, channel:chn.channel, player:chn.player})));\r\n}\r\nexport function afterRefresh(refreshs) {\r\n\tif (!CACHE.car_map) return;\r\n\tinit(getCars()[0]);\r\n\tif (CACHE.fav_root) {\r\n\t\tCACHE.fav_root.children.forEach(car => delete car.fav_parent);\r\n\t\tsetFavChildren();\r\n\t}\r\n\tif (CACHE.group_root) setGroupChildren();\r\n\t\r\n\tlet car, chn;\r\n\trefresh_players.forEach(({carId, channel, player}) => {\r\n\t\tcar = CACHE.car_map[carId];\r\n\t\tif (!car || !car.children) return;\r\n\t\tchn = arrayFindItem(car.children, 'channel', channel);\r\n\t\tchn && (chn.player = player, player._chn = chn);\r\n\t});\r\n\trefresh_players = null;\r\n\r\n\tlet states, setting, tree;\r\n\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\tstates = refreshs[treeId];\r\n\t\tCACHE.root[treeId] = states.root;\r\n\t\tfor (let carId in CACHE.car_map) {\r\n\t\t\tsetting = states.cars[carId];\r\n\t\t\tsetting && (CACHE.car_map[carId][treeId] = setting);\r\n\t\t}\r\n\t\tfor (let teamId in CACHE.team_map) {\r\n\t\t\tsetting = states.teams[teamId];\r\n\t\t\tsetting && (CACHE.team_map[teamId][treeId] = setting);\r\n\t\t}\r\n\t\ttree = ALL_VIDEO_TREES[treeId];\r\n\t\tstates.root.open = true;\r\n\t\tlet root = tree.model == 'fav' ? CACHE.fav_root : tree.model == 'group' ? CACHE.group_root : CACHE.root;\r\n\t\ttree._tree.reset(root, true);\r\n\r\n\t\tlet selected = null;\r\n\t\tif (states.selected.length > 0) {\r\n\t\t\tselected = states.selected[0];\r\n\t\t\tif (selected == CACHE.root || selected == CACHE.fav_root || selected == CACHE.group_root) {\r\n\t\t\t} else if (selected.plate) {\r\n\t\t\t\tselected = CACHE.car_map[selected.id];\r\n\t\t\t} else if (selected.id) {\r\n\t\t\t\tselected = CACHE.team_map[selected.id];\r\n\t\t\t} else {\r\n\t\t\t\tlet car = CACHE.car_map[selected.carId];\r\n\t\t\t\tselected = car ? arrayFindItem(car.children, 'channel', selected.channel) : null;\r\n\t\t\t}\r\n\t\t\tselected && tree._tree.selectNode(selected);\r\n\t\t}\r\n\t\tdelete refreshs[treeId];\r\n\t\ttree.afterRefresh(selected);\r\n\t}\r\n\r\n}\r\n\r\nfunction addToTree(parent, item) {\r\n\ttry {\r\n\t\tlet tree;\r\n\t\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\t\ttree = ALL_VIDEO_TREES[treeId];\r\n\t\t\tif (!tree.model) {\r\n\t\t\t\ttree.getTree().addNodes(parent, parent.children.indexOf(item), item);\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t}\r\n}\r\n\r\nfunction removeFromTree(car) {\r\n\tlet parent = car.parent;\r\n\tarrayRemoveItem(parent.children, car);\r\n\tif (parent.children == 0) delete parent.children;\r\n\tremoveTreeNode(car);\r\n}\r\n\r\nfunction updateTeamNum(car, num, update = false) {\r\n\tlet team = car.parent;//视频树\r\n\twhile (team) {\r\n\t\tteam.videoNum += num;\r\n\t\tState.isOnline(car.state) && (team.online += num);\r\n\t\tState.isAccOn(car.state) && (team.accon += num);\r\n\t\tState.isAlarm(car.state) && (team.alarm += num);\r\n\r\n\r\n\t\tupdate && updateTreeNodeName(team);\r\n\t\tteam = team.parent;\r\n\t}\r\n}\r\n\r\nfunction updateTreeNodeName(item) {\r\n\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\tALL_VIDEO_TREES[treeId].getTree().updateNodeName(item);\r\n\t}\r\n}\r\nfunction refreshTree() {\r\n\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\tALL_VIDEO_TREES[treeId].getTree().refresh();\r\n\t}\r\n}\r\nfunction removeTreeNode(node) {\r\n\ttry {\r\n\t\tfor (let treeId in ALL_VIDEO_TREES) {\r\n\t\t\tALL_VIDEO_TREES[treeId].getTree().removeNode(node);\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t}\r\n}\r\n\r\n//视频报警列表==================================================================================================================\r\nlet alarm_root;\r\n\r\nexport function getAlarmRoots(callback) {\r\n\tgetAlarmList();\r\n\tcallback(alarm_root);\r\n};\r\n\r\nexport function getAlarmList() {\r\n\tif (alarm_root) return alarm_root.children;\r\n\tlet root = { id: -1, name: $_L.get('所有报警') };\r\n\troot.children = [\r\n\t\t{ parent: root, id: 0, name: $_L.get('紧急报警') },\r\n\t\t{ parent: root, id: 1, name: $_L.get('超速报警') },\r\n\t\t{ parent: root, id: 2, name: $_L.get('疲劳驾驶') },\r\n\t\t{ parent: root, id: 3, name: $_L.get('危险预警') },\r\n\t\t{ parent: root, id: 4, name: $_L.get('GNSS模块故障') },\r\n\t\t{ parent: root, id: 5, name: $_L.get('GNSS天线未接/被剪') },\r\n\t\t{ parent: root, id: 6, name: $_L.get('GNSS天线短路') },\r\n\t\t{ parent: root, id: 7, name: $_L.get('终端主电源欠压') },\r\n\t\t{ parent: root, id: 8, name: $_L.get('终端主电源掉电') },\r\n\t\t{ parent: root, id: 9, name: $_L.get('终端LCD或显示器故障') },\r\n\t\t{ parent: root, id: 10, name: $_L.get('TTS模块故障') },\r\n\t\t{ parent: root, id: 11, name: $_L.get('摄像头故障') },\r\n\t\t{ parent: root, id: 12, name: $_L.get('道路运输证IC卡模块故障') },\r\n\t\t{ parent: root, id: 13, name: $_L.get('超速预警') },\r\n\t\t{ parent: root, id: 14, name: $_L.get('疲劳驾驶预警') },\r\n\t\t{ parent: root, id: 15, name: $_L.get('违规行驶报警') },\r\n\t\t{ parent: root, id: 16, name: $_L.get('胎压预警') },\r\n\t\t{ parent: root, id: 17, name: $_L.get('右转盲区异常报警') },\r\n\t\t{ parent: root, id: 18, name: $_L.get('当天累计驾驶超时') },\r\n\t\t{ parent: root, id: 19, name: $_L.get('超时停车') },\r\n\t\t{ parent: root, id: 20, name: $_L.get('进出区域') },\r\n\t\t{ parent: root, id: 21, name: $_L.get('进出路线') },\r\n\t\t{ parent: root, id: 22, name: $_L.get('路段行驶时间不足/过长') },\r\n\t\t{ parent: root, id: 23, name: $_L.get('路线偏离报警') },\r\n\t\t{ parent: root, id: 24, name: $_L.get('车辆VSS故障') },\r\n\t\t{ parent: root, id: 25, name: $_L.get('车辆油量异常') },\r\n\t\t{ parent: root, id: 26, name: $_L.get('车辆被盗') },\r\n\t\t{ parent: root, id: 27, name: $_L.get('车辆非法点火') },\r\n\t\t{ parent: root, id: 28, name: $_L.get('车辆非法位移') },\r\n\t\t{ parent: root, id: 29, name: $_L.get('碰撞预警') },\r\n\t\t{ parent: root, id: 30, name: $_L.get('侧翻预警') },\r\n\t\t{ parent: root, id: 31, name: $_L.get('非法开门报警') },\r\n\t\t{ parent: root, id: 32, name: $_L.get('视频信号丢失报警') },\r\n\t\t{ parent: root, id: 33, name: $_L.get('视频信号遮挡报警') },\r\n\t\t{ parent: root, id: 34, name: $_L.get('存储单元故障报警') },\r\n\t\t{ parent: root, id: 35, name: $_L.get('其它视频设备故障报警') },\r\n\t\t{ parent: root, id: 36, name: $_L.get('客车超员报警') },\r\n\t\t{ parent: root, id: 37, name: $_L.get('异常驾驶行为报警') },\r\n\t\t{ parent: root, id: 38, name: $_L.get('特殊报警录像达到存储阈值') }\r\n\t];\r\n\talarm_root = root;\r\n\treturn alarm_root.children;\r\n}"]}]}