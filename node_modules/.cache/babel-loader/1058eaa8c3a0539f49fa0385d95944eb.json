{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputCheckbox.vue","mtime":1673937752311},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 单选例子\n* <InputCheckbox label=\"你是否同意\" option=\"同意\" v-model=\"agree\" @change=\"onCheckChg\"/>\n* \n*  data: {agree: false},\n*  methods: {\n*    onCheckChg(value) {// value值是true或false\n*    }\n*  }\n* \n* 多选例子\n* <InputCheckbox label=\"你的选择是\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"likes\" @change=\"onCheckChg\"/>\n* \n*  data: {likes: [1,2]},\n*  methods: {\n*    onCheckChg(value) {// value值是[1,2]\n*    }\n*  }\n*/\nimport storage from '@/common/cache/Storage.js';\nexport default {\n  name: \"InputCheckbox\",\n  props: {\n    value: [Array, String, Number, Boolean],\n    // 当前值\n    //单选字段\n    option: String,\n    // 单选项文本\n    true: {\n      default: true\n    },\n    // 选中的值\n    false: {\n      default: false\n    },\n    // 不选中的值\n    //多选字段\n    options: Array,\n    // 多个选项 [{lable:xxx,value:xxx}...]\n    labelField: {\n      type: String,\n      default: 'label'\n    },\n    // 显示字段\n    valueField: {\n      type: String,\n      default: 'value'\n    },\n    // 值字段\n    label: String,\n    // 标题文本\n    unit: String,\n    // 单位\n    required: Boolean,\n    // 是否必填\n    disabled: Boolean,\n    // 是否可操作\n    name: String,\n    border: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示边框\n    borderColor: {\n      type: String,\n      default: $_theme.border_color_light\n    },\n    radius: {\n      type: String,\n      default: $_theme.input_radius\n    },\n    // 边框圆角\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    // 是否垂直布局\n    height: {\n      type: Number,\n      default: $_theme.inputHeight\n    },\n    // 高度数值，单位是px\n    labelMinWidth: {\n      type: Number,\n      default: 10\n    },\n    // lable宽度最小数值，单位是px\n    groupStyle: {\n      default: null\n    },\n    labelColor: {\n      type: String,\n      default: null\n    },\n    // lable颜色\n    checkedColor: {\n      type: String,\n      default: null\n    },\n    // 选中图标颜色\n    checkedHoverColor: {\n      type: String,\n      default: null\n    },\n    // 选中停留图标颜色\n    uncheckedColor: {\n      type: String,\n      default: null\n    },\n    // 未选中图标颜色\n    uncheckedHoverColor: {\n      type: String,\n      default: null\n    },\n    // 未选中停留图标颜色\n    searchKey: {\n      type: String,\n      default: null\n    },\n    isLabel: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      values: [],\n      focused: false\n    };\n  },\n  mounted: function mounted() {\n    Array.isArray(this.value) && (this.values = this.value);\n  },\n  methods: {\n    singleChange: function singleChange(event) {\n      var value = event.target.checked ? this.true : this.false;\n      this.$emit('input', value);\n      this.$emit('change', value);\n    },\n    multipleChange: function multipleChange(event) {\n      this.$emit('input', this.values);\n      this.$emit('change', this.values);\n    }\n  },\n  watch: {\n    value: function value(val) {\n      Array.isArray(val) && (this.values = val);\n      this.searchKey && storage.set(this.searchKey, this.values);\n    }\n  },\n  computed: {\n    singleIsChecked: function singleIsChecked() {\n      return this.value === this.true;\n    },\n    containerStyle: function containerStyle() {\n      return {\n        borderRadius: this.radius,\n        height: \"\".concat(this.height, \"px\"),\n        borderColor: this.focused ? this.theme.menubar_color : this.borderColor,\n        zIndex: this.focused ? this.theme.zindex() : ''\n      };\n    },\n    labelStyle: function labelStyle() {\n      return {\n        minWidth: this.labelMinWidth + 'px',\n        borderRightColor: this.theme.border_color_light,\n        backgroundColor: this.labelColor ? this.labelColor : this.theme.input_label_bg_color\n      };\n    },\n    checkboxLabelStyle: function checkboxLabelStyle() {\n      return {\n        display: this.vertical ? 'block' : 'inline-block'\n      };\n    }\n  }\n};",{"version":3,"sources":["InputCheckbox.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"containerStyle\" tabindex=\"0\" @focus=\"focused=true\" @blur=\"focused=false\">\r\n\r\n    <!--label显示-->\r\n    <span :class=\"$style.label\" :style=\"labelStyle\" v-if=\"label\" :is-label=\"isLabel\">{{label}}</span>\r\n\r\n    <!--必填显示-->\r\n    <span :class=\"[$style.required,'el-icon-star-on']\" :style=\"{backgroundColor:theme.input_label_bg_color}\" v-if=\"required\"></span>\r\n\r\n    <!--单位显示-->\r\n    <span :class=\"$style.unit\" v-if=\"unit\">{{unit}}</span>\r\n\r\n    <!--checkbox分组显示-->\r\n    <div :class=\"$style.checkboxGroup\" :style=\"[{display:vertical?'inline-block':'flex'},groupStyle]\">\r\n      <!--单个checkbox-->\r\n      <label v-if=\"!options\" :class=\"[$style.checkboxItem, $style.single, singleIsChecked ? [$style.checked,'el-icon-yixuan1'] : [$style.unchecked,'el-icon-weixuan']]\" :style=\"[!option&&{paddingRight:'3px'},{'--checkedColor': checkedColor||theme.color,'--checkedHoverColor': checkedHoverColor||theme.color,'--uncheckedColor': uncheckedColor,'--uncheckedHoverColor': uncheckedHoverColor||theme.color}]\">\r\n        <!--checkbox按钮-->\r\n        <input type=\"checkbox\" :disabled=\"disabled\" :name=\"name\" :checked=\"singleIsChecked\" @change=\"singleChange\" style=\"display:none;\">\r\n        <!--checkbox后面的文字-->\r\n        <span style=\"margin-left:4px;\">{{ option }}</span>\r\n      </label>\r\n\r\n      <!--遍历每个checkbox项-->\r\n      <label v-else v-for=\"item in options\" :key=\"item[valueField]\" :style=\"[checkboxLabelStyle,{'--checkedColor': checkedColor||theme.color,'--checkedHoverColor': checkedHoverColor||theme.color,'--uncheckedColor': uncheckedColor,'--uncheckedHoverColor': uncheckedHoverColor||theme.color}]\" :class=\"[$style.checkboxItem,vertical?$style.checkboxItemVertical:$style.checkboxItemNoVertical, values.indexOf(item[valueField])>=0 ? [$style.checked,'el-icon-yixuan1'] : [$style.unchecked,'el-icon-weixuan']]\">\r\n        <!--checkbox按钮-->\r\n        <input type=\"checkbox\" :disabled=\"disabled\" :value=\"item[valueField]\" :name=\"name\" v-model=\"values\" @change=\"multipleChange\" style=\"display:none;\">\r\n        <!--checkbox后面的文字-->\r\n        <span style=\"margin-left:4px;\">{{ item[labelField] }}</span>\r\n      </label>\r\n    </div>\r\n\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\" :style=\"{borderRadius: radius}\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  /*\r\n  * 单选例子\r\n  * <InputCheckbox label=\"你是否同意\" option=\"同意\" v-model=\"agree\" @change=\"onCheckChg\"/>\r\n  * \r\n  *  data: {agree: false},\r\n  *  methods: {\r\n  *    onCheckChg(value) {// value值是true或false\r\n  *    }\r\n  *  }\r\n  * \r\n  * 多选例子\r\n  * <InputCheckbox label=\"你的选择是\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"likes\" @change=\"onCheckChg\"/>\r\n  * \r\n  *  data: {likes: [1,2]},\r\n  *  methods: {\r\n  *    onCheckChg(value) {// value值是[1,2]\r\n  *    }\r\n  *  }\r\n  */\r\n  import storage from '@/common/cache/Storage.js';\r\n    \r\n  export default {\r\n    name: \"InputCheckbox\",\r\n    props: {\r\n      value: [Array, String, Number, Boolean],                    // 当前值\r\n\r\n      //单选字段\r\n      option: String,                                             // 单选项文本\r\n      true:  { default: true  },                                  // 选中的值\r\n      false: { default: false },                                  // 不选中的值\r\n\r\n      //多选字段\r\n      options: Array,                                             // 多个选项 [{lable:xxx,value:xxx}...]\r\n      labelField: { type: String, default: 'label' },             // 显示字段\r\n      valueField: { type: String, default: 'value' },             // 值字段\r\n\r\n      label: String,                                              // 标题文本\r\n      unit: String,                                               // 单位\r\n      required: Boolean,                                          // 是否必填\r\n      disabled: Boolean,                                          // 是否可操作\r\n      name: String,\r\n      \r\n      border:   { type: Boolean, default: true },                 // 是否显示边框\r\n      borderColor:{ type: String,  default: $_theme.border_color_light },\r\n      radius: { type: String,  default: $_theme.input_radius},    // 边框圆角\r\n\r\n      vertical: { type: Boolean, default: false },                // 是否垂直布局\r\n      height:   { type: Number,  default: $_theme.inputHeight },  // 高度数值，单位是px\r\n      labelMinWidth:{ type: Number,  default: 10 },  \t\t  \t      // lable宽度最小数值，单位是px\r\n      groupStyle: { default: null },\r\n      labelColor: { type: String,  default: null },                 // lable颜色\r\n      checkedColor: { type: String, default: null },                // 选中图标颜色\r\n      checkedHoverColor: { type: String, default: null },           // 选中停留图标颜色\r\n      uncheckedColor: { type: String, default: null },              // 未选中图标颜色\r\n      uncheckedHoverColor: { type: String, default: null },         // 未选中停留图标颜色\r\n      searchKey:{ type:String, default: null },\r\n      isLabel:  { type: Boolean, default: true },\r\n    },\r\n    data() {\r\n      return { \r\n        values: [], \r\n        focused: false,\r\n      };\r\n    },\r\n    mounted() {\r\n      Array.isArray(this.value) && (this.values = this.value);\r\n    },\r\n    methods: {\r\n      singleChange(event) {\r\n        let value = event.target.checked ? this.true : this.false;\r\n        this.$emit('input', value);\r\n        this.$emit('change', value);\r\n      },\r\n      multipleChange(event) {\r\n        this.$emit('input',  this.values);\r\n        this.$emit('change', this.values);\r\n      }\r\n    },\r\n    watch: {\r\n      value (val) {\r\n        Array.isArray(val) && (this.values = val);\r\n        this.searchKey&&storage.set(this.searchKey,this.values);\r\n      }\r\n    },\r\n    computed: {\r\n      singleIsChecked() {\r\n        return this.value === this.true;\r\n      },\r\n      containerStyle() {\r\n        return {\r\n          borderRadius: this.radius,\r\n          height: `${this.height}px`,\r\n          borderColor: this.focused ? this.theme.menubar_color : this.borderColor,\r\n          zIndex: this.focused ? this.theme.zindex() : ''\r\n        }\r\n      },\r\n      labelStyle() {\r\n        return {\r\n          minWidth:this.labelMinWidth + 'px',\r\n          borderRightColor: this.theme.border_color_light, \r\n          backgroundColor: this.labelColor?this.labelColor:this.theme.input_label_bg_color\r\n        };\r\n      },\r\n      checkboxLabelStyle() {\r\n        return { display: this.vertical ? 'block' : 'inline-block' };\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .checked         { color: var(--checkedColor); }\r\n  .checked:hover   { color: var(--checkedHoverColor); }\r\n  .unchecked       { color: var(--uncheckedColor); }\r\n  .unchecked:hover { color: var(--uncheckedHoverColor); }\r\n\r\n  .container {\r\n    overflow: hidden;\r\n    vertical-align: top;\r\n    outline: none;\r\n    position: relative;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    background-color: #fff;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .container > * {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  /* 标题文本 */\r\n  .label {\r\n    float: left;\r\n    padding: 0 6px;\r\n    border-right-style: solid;\r\n    border-right-width: 0px;\r\n    white-space: nowrap;\r\n  }\r\n  /* checkbox组 */\r\n  .checkboxGroup {\r\n    padding-left: 8px;\r\n    overflow: hidden;\r\n  }\r\n  /* checkbox项(按钮+文字) */\r\n  .checkboxItem {\r\n    white-space: nowrap;\r\n    background-repeat: no-repeat;\r\n    background-position-y: center;\r\n    cursor: pointer;\r\n  } \r\n  /* checkbox项(按钮+文字)vertical垂直布局 */\r\n  .checkboxItemVertical {\r\n    margin: 12px 8px 0px 0px;\r\n  }\r\n  /* checkbox项(按钮+文字)非vertical垂直布局 */\r\n  .checkboxItemNoVertical {\r\n    margin: 6px 8px 6px 0px;\r\n  }\r\n  /* 单checkbox */\r\n  .single {\r\n    margin: 0;\r\n    padding-right: 8px;\r\n    cursor: pointer;\r\n  }\r\n  /* checkbox按钮 */\r\n  .checkbox {\r\n    margin: 0;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n  }\r\n  /* 单位 */\r\n  .unit {\r\n    float: right;\r\n    padding-right: 8px;\r\n    white-space: nowrap;\r\n  }\r\n  /* 必填 */\r\n  .required {\r\n    float: right;\r\n    padding: 0 2px;\r\n    color: #f00;\r\n  }\r\n  /* 禁止操作 */\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}