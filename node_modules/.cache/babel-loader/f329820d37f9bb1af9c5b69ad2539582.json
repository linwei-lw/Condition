{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\table\\src\\column.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\table\\src\\column.js","mtime":1635230121671},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport Cell from \"../../table/src/cell\";\nimport { UtilTools } from \"../../tools\";\nvar props = {\n  // 列唯一主键\n  colId: [String, Number],\n  // 渲染类型 seq,radio,checkbox,expand,html\n  type: String,\n  // 列字段名\n  field: String,\n  // 列标题\n  title: String,\n  // 列宽度\n  width: [Number, String],\n  // 列最小宽度，把剩余宽度按比例分配\n  minWidth: [Number, String],\n  // 是否允许拖动列宽调整大小\n  resizable: {\n    type: Boolean,\n    default: null\n  },\n  // 将列固定在左侧或者右侧\n  fixed: String,\n  // 列对其方式\n  //  align: String,//删\n  align: {\n    type: String,\n    default: 'center'\n  },\n  //加\n  // 表头对齐方式\n  headerAlign: String,\n  // 表尾列的对齐方式\n  footerAlign: String,\n  // 当内容过长时显示为省略号\n  showOverflow: {\n    type: [Boolean, String],\n    default: null\n  },\n  // 当表头内容过长时显示为省略号\n  showHeaderOverflow: {\n    type: [Boolean, String],\n    default: null\n  },\n  // 当表尾内容过长时显示为省略号\n  showFooterOverflow: {\n    type: [Boolean, String],\n    default: null\n  },\n  // 给单元格附加 className\n  className: [String, Function],\n  // 给表头单元格附加 className\n  headerClassName: [String, Function],\n  // 给表尾单元格附加 className\n  footerClassName: [String, Function],\n  // 格式化显示内容\n  formatter: [Function, Array, String],\n  // 是否允许排序\n  //  sortable: Boolean,//删\n  sortable: {\n    type: Boolean,\n    default: true\n  },\n  //加\n  // 在 v3 中废弃\n  remoteSort: {\n    type: Boolean,\n    default: null\n  },\n  // 在 v3 中只支持字符串类型\n  sortBy: [String, Function],\n  // 排序的字段类型，比如字符串转数值等\n  sortType: String,\n  // 在 v3 中废弃\n  sortMethod: Function,\n  // 配置筛选条件数组\n  filters: {\n    type: Array,\n    default: null\n  },\n  // 筛选是否允许多选\n  filterMultiple: {\n    type: Boolean,\n    default: true\n  },\n  // 自定义筛选方法\n  filterMethod: Function,\n  // 筛选重置方法\n  filterResetMethod: Function,\n  // 筛选复原方法\n  filterRecoverMethod: Function,\n  // 筛选模板配置项\n  filterRender: Object,\n  // 指定为树节点\n  treeNode: Boolean,\n  // 是否可视\n  visible: {\n    type: Boolean,\n    default: null\n  },\n  // 单元格数据导出方法\n  exportMethod: Function,\n  // 表尾单元格数据导出方法\n  footerExportMethod: Function,\n  // 标题帮助图标配置项\n  titleHelp: Object,\n  // 单元格值类型\n  cellType: String,\n  // 单元格渲染配置项\n  cellRender: Object,\n  // 单元格编辑渲染配置项\n  editRender: Object,\n  // 内容渲染配置项\n  contentRender: Object,\n  // 额外的参数\n  params: Object,\n  //按格式化显示内容进行排序\n  sortByFormatter: {\n    type: Boolean,\n    default: true //加\n\n  }\n};\nvar watch = {};\nObject.keys(props).forEach(function (name) {\n  watch[name] = function (value) {\n    this.columnConfig.update(name, value);\n  };\n});\nexport default {\n  name: 'VxeColumn',\n  props: props,\n  provide: function provide() {\n    return {\n      $xecolumn: this,\n      $xegrid: null\n    };\n  },\n  inject: {\n    $xetable: {\n      default: null\n    },\n    $xecolumn: {\n      default: null\n    }\n  },\n  watch: watch,\n  created: function created() {\n    this.columnConfig = this.createColumn(this.$xetable, this);\n  },\n  mounted: function mounted() {\n    UtilTools.assemColumn(this);\n  },\n  destroyed: function destroyed() {\n    UtilTools.destroyColumn(this);\n  },\n  render: function render(h) {\n    return h('div', this.$slots.default);\n  },\n  methods: Cell\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\table\\src\\column.js"],"names":["props","colId","type","field","title","width","minWidth","resizable","default","fixed","align","headerAlign","footerAlign","showOverflow","showHeaderOverflow","showFooterOverflow","className","headerClassName","footerClassName","formatter","sortable","remoteSort","sortBy","sortType","sortMethod","filters","filterMultiple","filterMethod","filterResetMethod","filterRecoverMethod","filterRender","treeNode","visible","exportMethod","footerExportMethod","titleHelp","cellType","cellRender","editRender","contentRender","params","sortByFormatter","watch","Object","name","provide","$xecolumn","$xegrid","inject","$xetable","created","mounted","UtilTools","destroyed","render","h","methods","Cell"],"mappings":"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","sourcesContent":["import Cell from '../../table/src/cell'\r\nimport { UtilTools } from '../../tools'\r\n\r\nconst props = {\r\n  // 列唯一主键\r\n  colId: [String, Number],\r\n  // 渲染类型 seq,radio,checkbox,expand,html\r\n  type: String,\r\n  // 列字段名\r\n  field: String,\r\n  // 列标题\r\n  title: String,\r\n  // 列宽度\r\n  width: [Number, String],\r\n  // 列最小宽度，把剩余宽度按比例分配\r\n  minWidth: [Number, String],\r\n  // 是否允许拖动列宽调整大小\r\n  resizable: { type: Boolean, default: null },\r\n  // 将列固定在左侧或者右侧\r\n  fixed: String,\r\n  // 列对其方式\r\n//  align: String,//删\r\n  align: { type: String, default: 'center' },//加\r\n  // 表头对齐方式\r\n  headerAlign: String,\r\n  // 表尾列的对齐方式\r\n  footerAlign: String,\r\n  // 当内容过长时显示为省略号\r\n  showOverflow: { type: [Boolean, String], default: null },\r\n  // 当表头内容过长时显示为省略号\r\n  showHeaderOverflow: { type: [Boolean, String], default: null },\r\n  // 当表尾内容过长时显示为省略号\r\n  showFooterOverflow: { type: [Boolean, String], default: null },\r\n  // 给单元格附加 className\r\n  className: [String, Function],\r\n  // 给表头单元格附加 className\r\n  headerClassName: [String, Function],\r\n  // 给表尾单元格附加 className\r\n  footerClassName: [String, Function],\r\n  // 格式化显示内容\r\n  formatter: [Function, Array, String],\r\n  // 是否允许排序\r\n//  sortable: Boolean,//删\r\n  sortable: { type: Boolean, default: true },//加\r\n  // 在 v3 中废弃\r\n  remoteSort: { type: Boolean, default: null },\r\n  // 在 v3 中只支持字符串类型\r\n  sortBy: [String, Function],\r\n  // 排序的字段类型，比如字符串转数值等\r\n  sortType: String,\r\n  // 在 v3 中废弃\r\n  sortMethod: Function,\r\n  // 配置筛选条件数组\r\n  filters: { type: Array, default: null },\r\n  // 筛选是否允许多选\r\n  filterMultiple: { type: Boolean, default: true },\r\n  // 自定义筛选方法\r\n  filterMethod: Function,\r\n  // 筛选重置方法\r\n  filterResetMethod: Function,\r\n  // 筛选复原方法\r\n  filterRecoverMethod: Function,\r\n  // 筛选模板配置项\r\n  filterRender: Object,\r\n  // 指定为树节点\r\n  treeNode: Boolean,\r\n  // 是否可视\r\n  visible: { type: Boolean, default: null },\r\n  // 单元格数据导出方法\r\n  exportMethod: Function,\r\n  // 表尾单元格数据导出方法\r\n  footerExportMethod: Function,\r\n  // 标题帮助图标配置项\r\n  titleHelp: Object,\r\n  // 单元格值类型\r\n  cellType: String,\r\n  // 单元格渲染配置项\r\n  cellRender: Object,\r\n  // 单元格编辑渲染配置项\r\n  editRender: Object,\r\n  // 内容渲染配置项\r\n  contentRender: Object,\r\n  // 额外的参数\r\n  params: Object,\r\n  \r\n  //按格式化显示内容进行排序\r\n  sortByFormatter: { type: Boolean, default: true },//加\r\n\r\n}\r\n\r\nconst watch = {}\r\nObject.keys(props).forEach(name => {\r\n  watch[name] = function (value) {\r\n    this.columnConfig.update(name, value)\r\n  }\r\n})\r\n\r\nexport default {\r\n  name: 'VxeColumn',\r\n  props,\r\n  provide () {\r\n    return {\r\n      $xecolumn: this,\r\n      $xegrid: null\r\n    }\r\n  },\r\n  inject: {\r\n    $xetable: {\r\n      default: null\r\n    },\r\n    $xecolumn: {\r\n      default: null\r\n    }\r\n  },\r\n  watch,\r\n  created () {\r\n    this.columnConfig = this.createColumn(this.$xetable, this)\r\n  },\r\n  mounted () {\r\n    UtilTools.assemColumn(this)\r\n  },\r\n  destroyed () {\r\n    UtilTools.destroyColumn(this)\r\n  },\r\n  render (h) {\r\n    return h('div', this.$slots.default)\r\n  },\r\n  methods: Cell\r\n}\r\n"]}]}