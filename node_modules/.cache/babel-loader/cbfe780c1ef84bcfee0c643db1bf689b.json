{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\pulldown\\src\\pulldown.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\pulldown\\src\\pulldown.js","mtime":1635230121448},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport { UtilTools, DomTools, GlobalEvent } from \"../../tools\";\nexport default {\n  name: 'VxePulldown',\n  mixins: [vSize],\n  props: {\n    disabled: Boolean,\n    placement: String,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.size;\n      }\n    },\n    destroyOnClose: Boolean,\n    transfer: Boolean\n  },\n  data: function data() {\n    return {\n      inited: false,\n      panelIndex: 0,\n      panelStyle: null,\n      panelPlacement: null,\n      currentValue: null,\n      visiblePanel: false,\n      animatVisible: false,\n      isActivated: false\n    };\n  },\n  created: function created() {\n    GlobalEvent.on(this, 'mousewheel', this.handleGlobalMousewheelEvent);\n    GlobalEvent.on(this, 'mousedown', this.handleGlobalMousedownEvent);\n    GlobalEvent.on(this, 'blur', this.handleGlobalBlurEvent);\n  },\n  beforeDestroy: function beforeDestroy() {\n    var panelElem = this.$refs.panel;\n\n    if (panelElem && panelElem.parentNode) {\n      panelElem.parentNode.removeChild(panelElem);\n    }\n  },\n  destroyed: function destroyed() {\n    GlobalEvent.off(this, 'mousewheel');\n    GlobalEvent.off(this, 'mousedown');\n    GlobalEvent.off(this, 'blur');\n  },\n  render: function render(h) {\n    var _ref, _ref2;\n\n    var $scopedSlots = this.$scopedSlots,\n        inited = this.inited,\n        vSize = this.vSize,\n        destroyOnClose = this.destroyOnClose,\n        transfer = this.transfer,\n        isActivated = this.isActivated,\n        disabled = this.disabled,\n        animatVisible = this.animatVisible,\n        visiblePanel = this.visiblePanel,\n        panelStyle = this.panelStyle,\n        panelPlacement = this.panelPlacement;\n    var defaultSlot = $scopedSlots.default;\n    var downSlot = $scopedSlots.dropdown;\n    return h('div', {\n      class: ['vxe-pulldown', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--visivle', visiblePanel), _defineProperty(_ref, 'is--disabled', disabled), _defineProperty(_ref, 'is--active', isActivated), _ref)]\n    }, [h('div', {\n      ref: 'content',\n      class: 'vxe-pulldown--content'\n    }, defaultSlot ? defaultSlot.call(this, {\n      $pulldown: this\n    }, h) : []), h('div', {\n      ref: 'panel',\n      class: ['vxe-table--ignore-clear vxe-pulldown--panel', (_ref2 = {}, _defineProperty(_ref2, \"size--\".concat(vSize), vSize), _defineProperty(_ref2, 'is--transfer', transfer), _defineProperty(_ref2, 'animat--leave', animatVisible), _defineProperty(_ref2, 'animat--enter', visiblePanel), _ref2)],\n      attrs: {\n        placement: panelPlacement\n      },\n      style: panelStyle\n    }, downSlot ? [h('div', {\n      class: 'vxe-pulldown--wrapper'\n    }, !inited || destroyOnClose && !visiblePanel && !animatVisible ? [] : downSlot.call(this, {\n      $pulldown: this\n    }, h))] : [])]);\n  },\n  methods: {\n    handleGlobalMousewheelEvent: function handleGlobalMousewheelEvent(evnt) {\n      var $refs = this.$refs,\n          disabled = this.disabled,\n          visiblePanel = this.visiblePanel;\n\n      if (!disabled) {\n        if (visiblePanel) {\n          if (DomTools.getEventTargetNode(evnt, $refs.panel).flag) {\n            this.updatePlacement();\n          } else {\n            this.hidePanel();\n            this.$emit('hide-panel', {\n              $event: evnt\n            });\n          }\n        }\n      }\n    },\n    handleGlobalMousedownEvent: function handleGlobalMousedownEvent(evnt) {\n      var $refs = this.$refs,\n          $el = this.$el,\n          disabled = this.disabled,\n          visiblePanel = this.visiblePanel;\n\n      if (!disabled) {\n        this.isActivated = DomTools.getEventTargetNode(evnt, $el).flag || DomTools.getEventTargetNode(evnt, $refs.panel).flag;\n\n        if (visiblePanel && !this.isActivated) {\n          this.hidePanel();\n          this.$emit('hide-panel', {\n            $event: evnt\n          });\n        }\n      }\n    },\n    handleGlobalBlurEvent: function handleGlobalBlurEvent(evnt) {\n      if (this.visiblePanel) {\n        this.isActivated = false;\n        this.hidePanel();\n        this.$emit('hide-panel', {\n          $event: evnt\n        });\n      }\n    },\n    updateZindex: function updateZindex() {\n      if (this.panelIndex < UtilTools.getLastZIndex()) {\n        this.panelIndex = UtilTools.nextZIndex();\n      }\n    },\n    isPanelVisible: function isPanelVisible() {\n      return this.visiblePanel;\n    },\n\n    /**\r\n     * 切换下拉面板\r\n     */\n    togglePanel: function togglePanel() {\n      if (this.visiblePanel) {\n        return this.hidePanel();\n      }\n\n      return this.showPanel();\n    },\n\n    /**\r\n     * 显示下拉面板\r\n     */\n    showPanel: function showPanel() {\n      var _this = this;\n\n      if (!this.inited) {\n        this.inited = true;\n\n        if (this.transfer) {\n          document.body.appendChild(this.$refs.panel);\n        }\n      }\n\n      return new Promise(function (resolve) {\n        if (!_this.disabled) {\n          clearTimeout(_this.hidePanelTimeout);\n          _this.isActivated = true;\n          _this.animatVisible = true;\n          setTimeout(function () {\n            _this.visiblePanel = true;\n\n            _this.updatePlacement();\n\n            setTimeout(function () {\n              resolve(_this.updatePlacement());\n            }, 40);\n          }, 10);\n\n          _this.updateZindex();\n        } else {\n          resolve(_this.$nextTick());\n        }\n      });\n    },\n\n    /**\r\n     * 隐藏下拉面板\r\n     */\n    hidePanel: function hidePanel() {\n      var _this2 = this;\n\n      this.visiblePanel = false;\n      return new Promise(function (resolve) {\n        if (_this2.animatVisible) {\n          _this2.hidePanelTimeout = setTimeout(function () {\n            _this2.animatVisible = false;\n            resolve(_this2.$nextTick());\n          }, 350);\n        } else {\n          resolve(_this2.$nextTick());\n        }\n      });\n    },\n\n    /**\r\n     * 手动更新位置\r\n     */\n    updatePlacement: function updatePlacement() {\n      var _this3 = this;\n\n      return this.$nextTick().then(function () {\n        var $refs = _this3.$refs,\n            transfer = _this3.transfer,\n            placement = _this3.placement,\n            panelIndex = _this3.panelIndex,\n            visiblePanel = _this3.visiblePanel;\n\n        if (visiblePanel) {\n          var panelElem = $refs.panel;\n          var targetElem = $refs.content;\n\n          if (panelElem && targetElem) {\n            var targetHeight = targetElem.offsetHeight;\n            var targetWidth = targetElem.offsetWidth;\n            var panelHeight = panelElem.offsetHeight;\n            var panelWidth = panelElem.offsetWidth;\n            var marginSize = 5;\n            var panelStyle = {\n              zIndex: panelIndex\n            };\n\n            var _DomTools$getAbsolute = DomTools.getAbsolutePos(targetElem),\n                boundingTop = _DomTools$getAbsolute.boundingTop,\n                boundingLeft = _DomTools$getAbsolute.boundingLeft,\n                visibleHeight = _DomTools$getAbsolute.visibleHeight,\n                visibleWidth = _DomTools$getAbsolute.visibleWidth;\n\n            var panelPlacement = 'bottom';\n\n            if (transfer) {\n              var left = boundingLeft;\n              var top = boundingTop + targetHeight;\n\n              if (placement === 'top') {\n                panelPlacement = 'top';\n                top = boundingTop - panelHeight;\n              } else if (!placement) {\n                // 如果下面不够放，则向上\n                if (top + panelHeight + marginSize > visibleHeight) {\n                  panelPlacement = 'top';\n                  top = boundingTop - panelHeight;\n                } // 如果上面不够放，则向下（优先）\n\n\n                if (top < marginSize) {\n                  panelPlacement = 'bottom';\n                  top = boundingTop + targetHeight;\n                }\n              } // 如果溢出右边\n\n\n              if (left + panelWidth + marginSize > visibleWidth) {\n                left -= left + panelWidth + marginSize - visibleWidth;\n              } // 如果溢出左边\n\n\n              if (left < marginSize) {\n                left = marginSize;\n              }\n\n              Object.assign(panelStyle, {\n                left: \"\".concat(left, \"px\"),\n                top: \"\".concat(top, \"px\"),\n                minWidth: \"\".concat(targetWidth, \"px\")\n              });\n            } else {\n              if (placement === 'top') {\n                panelPlacement = 'top';\n                panelStyle.bottom = \"\".concat(targetHeight, \"px\");\n              } else if (!placement) {\n                // 如果下面不够放，则向上\n                if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                  // 如果上面不够放，则向下（优先）\n                  if (boundingTop - targetHeight - panelHeight > marginSize) {\n                    panelPlacement = 'top';\n                    panelStyle.bottom = \"\".concat(targetHeight, \"px\");\n                  }\n                }\n              }\n            }\n\n            _this3.panelStyle = panelStyle;\n            _this3.panelPlacement = panelPlacement;\n          }\n        }\n\n        return _this3.$nextTick();\n      });\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\pulldown\\src\\pulldown.js"],"names":["name","mixins","props","disabled","placement","size","type","default","GlobalConfig","destroyOnClose","transfer","Boolean","data","inited","panelIndex","panelStyle","panelPlacement","currentValue","visiblePanel","animatVisible","isActivated","created","GlobalEvent","beforeDestroy","panelElem","destroyed","render","$scopedSlots","vSize","defaultSlot","downSlot","h","class","ref","$pulldown","attrs","style","methods","handleGlobalMousewheelEvent","$refs","DomTools","$event","evnt","handleGlobalMousedownEvent","$el","handleGlobalBlurEvent","updateZindex","UtilTools","isPanelVisible","togglePanel","showPanel","document","clearTimeout","setTimeout","resolve","hidePanel","updatePlacement","targetElem","targetHeight","targetWidth","panelHeight","panelWidth","marginSize","zIndex","boundingTop","boundingLeft","visibleHeight","visibleWidth","left","top","Object","minWidth"],"mappings":"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","sourcesContent":["import GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\nimport { UtilTools, DomTools, GlobalEvent } from '../../tools'\r\n\r\nexport default {\r\n  name: 'VxePulldown',\r\n  mixins: [vSize],\r\n  props: {\r\n    disabled: Boolean,\r\n    placement: String,\r\n    size: { type: String, default: () => GlobalConfig.size },\r\n    destroyOnClose: Boolean,\r\n    transfer: Boolean\r\n  },\r\n  data () {\r\n    return {\r\n      inited: false,\r\n      panelIndex: 0,\r\n      panelStyle: null,\r\n      panelPlacement: null,\r\n      currentValue: null,\r\n      visiblePanel: false,\r\n      animatVisible: false,\r\n      isActivated: false\r\n    }\r\n  },\r\n  created () {\r\n    GlobalEvent.on(this, 'mousewheel', this.handleGlobalMousewheelEvent)\r\n    GlobalEvent.on(this, 'mousedown', this.handleGlobalMousedownEvent)\r\n    GlobalEvent.on(this, 'blur', this.handleGlobalBlurEvent)\r\n  },\r\n  beforeDestroy () {\r\n    const panelElem = this.$refs.panel\r\n    if (panelElem && panelElem.parentNode) {\r\n      panelElem.parentNode.removeChild(panelElem)\r\n    }\r\n  },\r\n  destroyed () {\r\n    GlobalEvent.off(this, 'mousewheel')\r\n    GlobalEvent.off(this, 'mousedown')\r\n    GlobalEvent.off(this, 'blur')\r\n  },\r\n  render (h) {\r\n    const { $scopedSlots, inited, vSize, destroyOnClose, transfer, isActivated, disabled, animatVisible, visiblePanel, panelStyle, panelPlacement } = this\r\n    const defaultSlot = $scopedSlots.default\r\n    const downSlot = $scopedSlots.dropdown\r\n    return h('div', {\r\n      class: ['vxe-pulldown', {\r\n        [`size--${vSize}`]: vSize,\r\n        'is--visivle': visiblePanel,\r\n        'is--disabled': disabled,\r\n        'is--active': isActivated\r\n      }]\r\n    }, [\r\n      h('div', {\r\n        ref: 'content',\r\n        class: 'vxe-pulldown--content'\r\n      }, defaultSlot ? defaultSlot.call(this, { $pulldown: this }, h) : []),\r\n      h('div', {\r\n        ref: 'panel',\r\n        class: ['vxe-table--ignore-clear vxe-pulldown--panel', {\r\n          [`size--${vSize}`]: vSize,\r\n          'is--transfer': transfer,\r\n          'animat--leave': animatVisible,\r\n          'animat--enter': visiblePanel\r\n        }],\r\n        attrs: {\r\n          placement: panelPlacement\r\n        },\r\n        style: panelStyle\r\n      }, downSlot ? [\r\n        h('div', {\r\n          class: 'vxe-pulldown--wrapper'\r\n        }, !inited || (destroyOnClose && !visiblePanel && !animatVisible) ? [] : downSlot.call(this, { $pulldown: this }, h))\r\n      ] : [])\r\n    ])\r\n  },\r\n  methods: {\r\n    handleGlobalMousewheelEvent (evnt) {\r\n      const { $refs, disabled, visiblePanel } = this\r\n      if (!disabled) {\r\n        if (visiblePanel) {\r\n          if (DomTools.getEventTargetNode(evnt, $refs.panel).flag) {\r\n            this.updatePlacement()\r\n          } else {\r\n            this.hidePanel()\r\n            this.$emit('hide-panel', { $event: evnt })\r\n          }\r\n        }\r\n      }\r\n    },\r\n    handleGlobalMousedownEvent (evnt) {\r\n      const { $refs, $el, disabled, visiblePanel } = this\r\n      if (!disabled) {\r\n        this.isActivated = DomTools.getEventTargetNode(evnt, $el).flag || DomTools.getEventTargetNode(evnt, $refs.panel).flag\r\n        if (visiblePanel && !this.isActivated) {\r\n          this.hidePanel()\r\n          this.$emit('hide-panel', { $event: evnt })\r\n        }\r\n      }\r\n    },\r\n    handleGlobalBlurEvent (evnt) {\r\n      if (this.visiblePanel) {\r\n        this.isActivated = false\r\n        this.hidePanel()\r\n        this.$emit('hide-panel', { $event: evnt })\r\n      }\r\n    },\r\n    updateZindex () {\r\n      if (this.panelIndex < UtilTools.getLastZIndex()) {\r\n        this.panelIndex = UtilTools.nextZIndex()\r\n      }\r\n    },\r\n    isPanelVisible () {\r\n      return this.visiblePanel\r\n    },\r\n    /**\r\n     * 切换下拉面板\r\n     */\r\n    togglePanel () {\r\n      if (this.visiblePanel) {\r\n        return this.hidePanel()\r\n      }\r\n      return this.showPanel()\r\n    },\r\n    /**\r\n     * 显示下拉面板\r\n     */\r\n    showPanel () {\r\n      if (!this.inited) {\r\n        this.inited = true\r\n        if (this.transfer) {\r\n          document.body.appendChild(this.$refs.panel)\r\n        }\r\n      }\r\n      return new Promise(resolve => {\r\n        if (!this.disabled) {\r\n          clearTimeout(this.hidePanelTimeout)\r\n          this.isActivated = true\r\n          this.animatVisible = true\r\n          setTimeout(() => {\r\n            this.visiblePanel = true\r\n            this.updatePlacement()\r\n            setTimeout(() => {\r\n              resolve(this.updatePlacement())\r\n            }, 40)\r\n          }, 10)\r\n          this.updateZindex()\r\n        } else {\r\n          resolve(this.$nextTick())\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 隐藏下拉面板\r\n     */\r\n    hidePanel () {\r\n      this.visiblePanel = false\r\n      return new Promise(resolve => {\r\n        if (this.animatVisible) {\r\n          this.hidePanelTimeout = setTimeout(() => {\r\n            this.animatVisible = false\r\n            resolve(this.$nextTick())\r\n          }, 350)\r\n        } else {\r\n          resolve(this.$nextTick())\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 手动更新位置\r\n     */\r\n    updatePlacement () {\r\n      return this.$nextTick().then(() => {\r\n        const { $refs, transfer, placement, panelIndex, visiblePanel } = this\r\n        if (visiblePanel) {\r\n          const panelElem = $refs.panel\r\n          const targetElem = $refs.content\r\n          if (panelElem && targetElem) {\r\n            const targetHeight = targetElem.offsetHeight\r\n            const targetWidth = targetElem.offsetWidth\r\n            const panelHeight = panelElem.offsetHeight\r\n            const panelWidth = panelElem.offsetWidth\r\n            const marginSize = 5\r\n            const panelStyle = {\r\n              zIndex: panelIndex\r\n            }\r\n            const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = DomTools.getAbsolutePos(targetElem)\r\n            let panelPlacement = 'bottom'\r\n            if (transfer) {\r\n              let left = boundingLeft\r\n              let top = boundingTop + targetHeight\r\n              if (placement === 'top') {\r\n                panelPlacement = 'top'\r\n                top = boundingTop - panelHeight\r\n              } else if (!placement) {\r\n                // 如果下面不够放，则向上\r\n                if (top + panelHeight + marginSize > visibleHeight) {\r\n                  panelPlacement = 'top'\r\n                  top = boundingTop - panelHeight\r\n                }\r\n                // 如果上面不够放，则向下（优先）\r\n                if (top < marginSize) {\r\n                  panelPlacement = 'bottom'\r\n                  top = boundingTop + targetHeight\r\n                }\r\n              }\r\n              // 如果溢出右边\r\n              if (left + panelWidth + marginSize > visibleWidth) {\r\n                left -= left + panelWidth + marginSize - visibleWidth\r\n              }\r\n              // 如果溢出左边\r\n              if (left < marginSize) {\r\n                left = marginSize\r\n              }\r\n              Object.assign(panelStyle, {\r\n                left: `${left}px`,\r\n                top: `${top}px`,\r\n                minWidth: `${targetWidth}px`\r\n              })\r\n            } else {\r\n              if (placement === 'top') {\r\n                panelPlacement = 'top'\r\n                panelStyle.bottom = `${targetHeight}px`\r\n              } else if (!placement) {\r\n                // 如果下面不够放，则向上\r\n                if (boundingTop + targetHeight + panelHeight > visibleHeight) {\r\n                  // 如果上面不够放，则向下（优先）\r\n                  if (boundingTop - targetHeight - panelHeight > marginSize) {\r\n                    panelPlacement = 'top'\r\n                    panelStyle.bottom = `${targetHeight}px`\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.panelStyle = panelStyle\r\n            this.panelPlacement = panelPlacement\r\n          }\r\n        }\r\n        return this.$nextTick()\r\n      })\r\n    }\r\n  }\r\n}\r\n"]}]}