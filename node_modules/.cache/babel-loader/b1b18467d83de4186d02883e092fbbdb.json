{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputDateTime.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputDateTime.vue","mtime":1681180282533},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 使用例子\n* <InputDateTime type=\"YMD\" label=\"你的生日\" placeholder=\"请选择日期\" required clearable v-model=\"date\" @change=\"onDateChg\" style=\"width:300px;\"/>\n*\n*  data: {date: null},\n*  methods: {\n*    onDateChg(date) {\n*    }\n*  }\n*\n* type的值是\"YMDHNS\"的组合，Y年　M月　D日　H时　N分　S秒\n*/\nimport { domLeftTop } from '@/components/util/Dom.js';\nimport { getNowDateTime } from '@/common/util/Dates.js';\nimport { addDateTime } from '@/common/util/Dates.js';\nimport { getDays } from '@/common/util/Dates.js';\nexport default {\n  name: \"InputDateTime\",\n  props: {\n    label: String,\n    // 标题文本\n    value: String,\n    // 当前值(v-model)\n    type: {\n      type: String,\n      default: 'YMDHN'\n    },\n    placeholder: String,\n    required: Boolean,\n    // 是否显示必填\n    disabled: Boolean,\n    // 是否可操作\n    clearable: Boolean,\n    // 是否显示可清除图标\n    border: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示边框\n    borderColor: {\n      type: String,\n      default: $_theme.border_color_light\n    },\n    radius: {\n      type: String,\n      default: $_theme.input_radius\n    },\n    // 边框圆角\n    height: {\n      type: Number,\n      default: $_theme.inputHeight\n    },\n    // 高度数值，单位是px\n    labelMaxWidth: {\n      type: Number\n    },\n    // lable宽度最小数值，单位是px\n    labelMinWidth: {\n      type: Number\n    },\n    searchKey: {\n      typeof: String,\n      default: null\n    },\n    showIcon: {\n      type: Boolean,\n      default: true\n    },\n    //是否显示图标\n    fontColor: {\n      type: String,\n      default: '#232323'\n    },\n    //除弹出框，所有字体的颜色\n    inputStyle: {\n      default: null\n    } // 输入框的style\n\n  },\n  _format: null,\n  data: function data() {\n    return {\n      values: {\n        year: null,\n        month: null,\n        day: null,\n        hour: null,\n        minute: null,\n        second: null\n      },\n      needs: {\n        year: false,\n        month: false,\n        day: false,\n        hour: false,\n        minute: false,\n        second: false\n      },\n      yearStep: 0,\n      popup: null,\n      nows: null,\n      days: [],\n      dropdownStyle: {\n        zIndex: 0,\n        left: 0,\n        top: 0,\n        borderColor: $_theme.color\n      },\n      focused: false,\n      hover: false\n    };\n  },\n  watch: {\n    focused: function focused(v) {\n      document[v ? 'addEventListener' : 'removeEventListener']('click', this.checkFocus);\n      !v && (this.popup = null);\n    },\n    popup: function popup(v) {\n      if (!v) return this.hover = false;\n      this.focused = true;\n      v == 'day' && this.resetDays();\n      v == 'all' && !this.value && this.setValue(getNowDateTime());\n      v == 'all' && this.needs.day && this.resetDays();\n    },\n    value: function value(v) {\n      v ? this.setValue(v, false) : this.clear(false);\n    },\n    type: function type(v) {\n      this.typeChg(v);\n      this.value && this.setValue(this.value, true);\n    }\n  },\n  mounted: function mounted() {\n    this.typeChg(this.type);\n    this.value && this.setValue(this.value, false);\n  },\n  methods: {\n    typeChg: function typeChg(v) {\n      this.needs.year = v.indexOf('Y') > -1;\n      this.needs.month = v.indexOf('M') > -1;\n      this.needs.day = v.indexOf('D') > -1;\n      this.needs.hour = v.indexOf('H') > -1;\n      this.needs.minute = v.indexOf('N') > -1;\n      this.needs.second = v.indexOf('S') > -1;\n      this._format = this.needs.year ? 'YYYY' : '';\n      this.needs.month && (this._format += 'MM');\n      this.needs.day && (this._format += 'DD');\n      this.needs.hour && (this._format += 'HH');\n      this.needs.minute && (this._format += 'NN');\n      this.needs.second && (this._format += 'SS');\n      this._format = this._format.replace('YM', 'Y-M').replace('MD', 'M-D').replace('DH', 'D H').replace('HN', 'H:N').replace('NS', 'N:S');\n    },\n    checkFocus: function checkFocus(event) {\n      this.focused = this.$el.contains(event.target);\n    },\n    resetDays: function resetDays() {\n      if (!this.needs.day) return;\n      var max = getDays(Number(this.values.year || this.nows[0]), Number(this.values.month || this.nows[1]));\n\n      if (Number(this.values.day) > max) {\n        this.values.day = max;\n        this.submit();\n      }\n\n      var days = [],\n          week = new Date(Number(this.values.year || this.nows[0]), Number(this.values.month || this.nows[1]) - 1, 1).getDay();\n\n      while (days.length % 7 < week) {\n        days.push(null);\n      }\n\n      for (var i = 0; i < max; i++) {\n        days.push(i + 1);\n      }\n\n      this.days = days;\n    },\n    onAllChg: function onAllChg(field) {\n      this.submit();\n      (field == 'year' || field == 'month') && this.resetDays();\n      field == 'day' && !this.needs.hour && !this.needs.minute && !this.needs.second && (this.popup = null);\n    },\n    allArrowClick: function allArrowClick(field, step) {\n      var v = this.values[field] + step;\n\n      if (field == 'year') {\n        this.values[field] = v;\n      } else {\n        if (v < 1) {\n          this.values.year -= 1;\n          this.values.month = 12;\n        } else if (v > 12) {\n          this.values.year += 1;\n          this.values.month = 1;\n        } else {\n          this.values.month = v;\n        }\n      }\n\n      this.submit();\n      this.resetDays();\n    },\n    setShowDropdown: function setShowDropdown(item) {\n      if (this.popup == item) {\n        this.popup = null;\n        return;\n      }\n\n      this.resetNows();\n      this.popup = item;\n      this.$nextTick(this.setDropdownStyle);\n    },\n    setDropdownStyle: function setDropdownStyle() {\n      this.dropdownStyle.zIndex = $_theme.zindex();\n      var w = this.$el.children[this.$el.children.length - 1];\n\n      var dt = this.$refs.datatime,\n          _domLeftTop = domLeftTop(dt),\n          left = _domLeftTop.left,\n          top = _domLeftTop.top;\n\n      this.dropdownStyle.left = left + 'px';\n\n      if (top + w.clientHeight + dt.clientHeight < document.documentElement.clientHeight) {\n        this.dropdownStyle.top = top + dt.offsetHeight + 'px';\n      } else {\n        this.dropdownStyle.top = top - w.offsetHeight + 'px';\n      }\n    },\n    setValueClick: function setValueClick(value, field, next) {\n      this.values[field] = value;\n      this.submit();\n      (!next || !this.needs[next]) && (this.popup = null);\n      next && this.needs[next] && (this.popup = next) && this.$nextTick(this.setDropdownStyle);\n    },\n    setValue: function setValue(value) {\n      var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.resetNows();\n      var ymd_hns = value.split(' ');\n\n      if (this.needs.year || this.needs.month || this.needs.day) {\n        var ymd = ymd_hns[0].split('-'),\n            i = 0;\n        this.needs.year && (this.values.year = Number(ymd.length > i ? ymd[i++] || this.nows[0] : this.nows[0]));\n        this.needs.month && (this.values.month = Number(ymd.length > i ? ymd[i++] || this.nows[1] : this.nows[1]));\n        this.needs.day && (this.values.day = Number(ymd.length > i ? ymd[i++] || this.nows[2] : this.nows[2]));\n      }\n\n      if (this.needs.hour || this.needs.minute || this.needs.second) {\n        var hns = ymd_hns[ymd_hns.length - 1].split(':'),\n            j = 0;\n        this.needs.hour && (this.values.hour = Number(hns.length > j ? hns[j++] || this.nows[3] : this.nows[3]));\n        this.needs.minute && (this.values.minute = Number(hns.length > j ? hns[j++] || this.nows[4] : this.nows[4]));\n        this.needs.second && (this.values.second = Number(hns.length > j ? hns[j++] || this.nows[5] : this.nows[5]));\n      }\n\n      emit && this.submit();\n    },\n    quickDate: function quickDate(i) {\n      var ymdhns = addDateTime(i).split(/[-| |:]/);\n      this.needs.year && (this.values.year = Number(ymdhns[0]));\n      this.needs.month && (this.values.month = Number(ymdhns[1]));\n      this.needs.day && (this.values.day = Number(ymdhns[2]));\n      this.submit();\n      this.resetDays();\n    },\n    quickTime: function quickTime(v) {\n      var hns = null;\n\n      if (v == 'now') {\n        var date = new Date();\n        hns = [date.getHours(), date.getMinutes(), date.getSeconds()];\n      } else {\n        hns = v == '00' ? [0, 0, 0] : v == '12' ? [12, 0, 0] : [23, 59, 59];\n      }\n\n      this.needs.hour && (this.values.hour = hns[0]);\n      this.needs.minute && (this.values.minute = hns[1]);\n      this.needs.second && (this.values.second = hns[2]);\n      this.submit();\n    },\n    resetNows: function resetNows() {\n      var nows = getNowDateTime().split(/[-| |:]/);\n\n      for (var i = 0, len = nows.legnth; i < len; i++) {\n        nows[i] = Number(nows[i]);\n      }\n\n      this.nows = nows;\n    },\n    fillzero: function fillzero(v) {\n      return v === null ? '' : v > 9 || this.type == 'D' ? v : '0' + v;\n    },\n    submit: function submit() {\n      var value = this._format;\n      this.needs.year && (value = value.replace('YYYY', this.values.year));\n      this.needs.month && (value = value.replace('MM', this.fillzero(this.values.month)));\n      this.needs.day && (value = value.replace('DD', this.fillzero(this.values.day)));\n      this.needs.hour && (value = value.replace('HH', this.fillzero(this.values.hour)));\n      this.needs.minute && (value = value.replace('NN', this.fillzero(this.values.minute)));\n      this.needs.second && (value = value.replace('SS', this.fillzero(this.values.second)));\n\n      if (this.value != value) {\n        this.$emit('input', value);\n        this.$emit('change', value);\n      }\n    },\n    clear: function clear() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.values.year = this.values.month = this.values.day = this.values.hour = this.values.minute = this.values.second = null;\n      this.popup = null;\n\n      if (emit) {\n        this.$emit('input', null);\n        this.$emit('change', null);\n      }\n    }\n  },\n  computed: {\n    containerStyle: function containerStyle() {\n      return {\n        borderRadius: this.radius,\n        height: this.height + 'px',\n        borderColor: this.focused ? this.theme.color : this.borderColor,\n        zIndex: this.focused ? this.theme.zindex() : ''\n      };\n    },\n    lineHeight: function lineHeight() {\n      // 获取除边框外的高度\n      return this.height - (this.border ? 2 : 0);\n    },\n    textMinWidth: function textMinWidth() {\n      var w = 0;\n      this.needs.year && (w += 28.92);\n      this.needs.month && this.needs.year && (w += 4.34);\n      this.needs.month && (w += 14.47);\n      this.needs.day && this.needs.month && (w += 4.34);\n      this.needs.day && (w += 14.47);\n      if (w) return w + 16;\n      this.needs.hour && this.needs.day && (w += 7.23);\n      this.needs.hour && (w += 14.47);\n      this.needs.minute && this.needs.hour && (w += 3.63);\n      this.needs.minute && (w += 14.47);\n      this.needs.second && this.needs.minute && (w += 3.63);\n      this.needs.second && (w += 14.47);\n      return w + 16;\n    },\n    labelStyle: function labelStyle() {\n      return {\n        minWidth: this.labelMinWidth + 'px',\n        maxWidth: this.labelMaxWidth + 'px',\n        borderRightColor: this.theme.border_color_light,\n        backgroundColor: this.theme.bg_color,\n        color: this.fontColor\n      };\n    }\n  }\n};",null]}