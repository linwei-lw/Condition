{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\checkbox\\src\\checkbox.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\checkbox\\src\\checkbox.js","mtime":1638513605603},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { UtilTools } from \"../../tools\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nexport default {\n  name: 'VxeCheckbox',\n  mixins: [vSize],\n  props: {\n    value: Boolean,\n    label: [String, Number],\n    indeterminate: Boolean,\n    title: [String, Number],\n    content: [String, Number],\n    disabled: Boolean,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.checkbox.size || GlobalConfig.size;\n      }\n    }\n  },\n  inject: {\n    $xecheckboxgroup: {\n      default: null\n    }\n  },\n  computed: {\n    isGroup: function isGroup() {\n      return this.$xecheckboxgroup;\n    },\n    isDisabled: function isDisabled() {\n      return this.disabled || this.isGroup && this.$xecheckboxgroup.disabled;\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var $scopedSlots = this.$scopedSlots,\n        $xecheckboxgroup = this.$xecheckboxgroup,\n        isGroup = this.isGroup,\n        isDisabled = this.isDisabled,\n        title = this.title,\n        vSize = this.vSize,\n        indeterminate = this.indeterminate,\n        value = this.value,\n        label = this.label,\n        content = this.content;\n    var attrs = {};\n\n    if (title) {\n      attrs.title = title;\n    }\n\n    return h('label', {\n      class: ['vxe-checkbox', (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--indeterminate', indeterminate), _defineProperty(_ref, 'is--disabled', isDisabled), _ref)],\n      attrs: attrs\n    }, [h('input', {\n      class: 'vxe-checkbox--input',\n      attrs: {\n        type: 'checkbox',\n        disabled: isDisabled\n      },\n      domProps: {\n        checked: isGroup ? XEUtils.includes($xecheckboxgroup.value, label) : value\n      },\n      on: {\n        change: this.changeEvent\n      }\n    }), h('span', {\n      class: 'vxe-checkbox--icon'\n    }), h('span', {\n      class: 'vxe-checkbox--label'\n    }, $scopedSlots.default ? $scopedSlots.default.call(this, {}) : [UtilTools.getFuncText(content)])]);\n  },\n  methods: {\n    changeEvent: function changeEvent(evnt) {\n      var $xecheckboxgroup = this.$xecheckboxgroup,\n          isGroup = this.isGroup,\n          isDisabled = this.isDisabled,\n          label = this.label;\n\n      if (!isDisabled) {\n        var checked = evnt.target.checked;\n        var params = {\n          checked: checked,\n          label: label,\n          $event: evnt\n        };\n\n        if (isGroup) {\n          $xecheckboxgroup.handleChecked(params);\n        } else {\n          this.$emit('input', checked);\n          this.$emit('change', params);\n        }\n      }\n    }\n  }\n};",null]}