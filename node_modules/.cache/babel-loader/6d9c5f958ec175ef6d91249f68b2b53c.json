{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputSelect.vue","mtime":1612227987597},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 使用例子\n* <InputSelect label=\"你要选择哪一个\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"like\" @change=\"onSelectChg\"/>\n* \n*  data: {like: 1},\n*  methods: {\n*    onSelectChg(value, item) {// value值是1或2, item是{label:'吃饭',value:1}\n*    }\n*  }\n*/\nimport { domLeftTop } from '@/components/util/Dom.js';\nimport { arrayFindItem } from '@/common/util/Arrays.js';\nimport { arrayRemoveValue } from '@/common/util/Arrays.js';\nimport { arrayGetValue } from '@/common/util/Arrays.js';\nexport default {\n  name: \"InputSelect\",\n  props: {\n    label: String,\n    // 标题文本\n    value: {\n      default: null\n    },\n    // 当前值(v-model)\n    options: Array,\n    // 多个选项 [{lable:xxx,value:xxx}...]\n    labelField: {\n      type: String,\n      default: 'label'\n    },\n    // 显示字段\n    valueField: {\n      type: String,\n      default: 'value'\n    },\n    // 值字段\n    checkbox: {\n      type: Boolean,\n      default: false\n    },\n    // 是否多选\n    showCheckAll: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示全选\n    splitter: {\n      type: String,\n      default: null\n    },\n    // 如果是多选，而value是字符串\"1,2,3,4\" 则需要定义拆分符为逗号\n    placeholder: String,\n    unit: String,\n    // 单位\n    required: Boolean,\n    // 是否显示必填\n    disabled: Boolean,\n    // 是否可操作\n    clearable: Boolean,\n    // 是否显示可清除图标\n    showArrow: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示箭头图标\n    border: {\n      type: Boolean,\n      default: true\n    },\n    // 是否显示边框\n    borderColor: {\n      type: String,\n      default: $_theme.border_color_light\n    },\n    focusColor: {\n      type: String,\n      default: $_theme.color\n    },\n    height: {\n      type: Number,\n      default: $_theme.inputHeight\n    },\n    // 高度数值，单位是px\n    maxListNum: {\n      type: Number,\n      default: 10\n    },\n    // 下拉框最多显示10个选项，多出10个选项会出现滚动条\n    afterOpen: Function,\n    beforeClose: Function,\n    labelMinWidth: {\n      type: Number,\n      default: 10\n    },\n    // lable宽度最小数值，单位是px\n    inputWidth: {\n      type: String,\n      default: null\n    },\n    // 输入框的宽度\n    contentStyle: {\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      selectedItem: null,\n      hoverItem: null,\n      focused: false,\n      selectorHover: false,\n      createDropDown: false,\n      showDropDown: false,\n      dropdownStyle: null,\n      checkAllStyle: null,\n      checkedItems: null,\n      checkMap: {},\n      checkAll: false\n    };\n  },\n  watch: {\n    value: function value(v) {\n      if (this._myself) return this._myself = false;\n      this.checkbox ? this.setCheckedItems(v) : this.setSelectedItem(v);\n    },\n    focused: function focused(v) {\n      this.$emit('focused', v);\n    }\n  },\n  mounted: function mounted() {\n    if (this.value === null || this.value == undefined) return;\n    this.checkbox ? this.setCheckedItems(this.value) : this.setSelectedItem(this.value);\n  },\n  methods: {\n    setSelectedItem: function setSelectedItem(v) {\n      if (v === null || v == undefined) return this.selectedItem = null;\n\n      if (!this.selectedItem || this.selectedItem[this.valueField] != v) {\n        this.selectedItem = arrayFindItem(this.options, this.valueField, v);\n      }\n    },\n    toggleDropDown: function toggleDropDown(event) {\n      // 显示或隐藏选项列表\n      if (!this.options || this.options.length == 0) return;\n      this.focused = true;\n      if (this.showDropDown) return this.hideDropDown(event);\n      this.showDropDown = this.createDropDown = true; // 自动判断是显示在下面还是上面\n\n      var _domLeftTop = domLeftTop(this.$refs.selector),\n          left = _domLeftTop.left,\n          top = _domLeftTop.top,\n          listHeight = 30 * Math.min(this.maxListNum, this.options.length) + 1 + (this.border ? 0 : 1);\n\n      var this_height = this.$el.offsetHeight,\n          isbottom = true;\n      var down = document.documentElement.clientHeight - top - this_height;\n\n      if (down > listHeight) {\n        // 下面空间充足，显示在下面\n        top += this_height - (this.border ? 1 : 0);\n      } else if (top > listHeight) {\n        // 上面空间足够，显示在上面\n        top -= listHeight + (this.border ? 1 : 0);\n        isbottom = false;\n      } else {\n        // 上面和下面的空间都不够\n        if (down > top) {\n          // 下面的空间大，显示在下面\n          listHeight = down - 5;\n          top += this_height - (this.border ? 1 : 0);\n        } else {\n          // 上面的空间大，显示在上面\n          listHeight = top - 5;\n          top -= listHeight + (this.border ? 1 : 0);\n          isbottom = false;\n        }\n      }\n\n      this.border && left--;\n      this.dropdownStyle = {\n        borderColor: this.borderColor,\n        zIndex: window.$_theme.zindex(),\n        top: top + 'px',\n        left: left + 'px',\n        height: listHeight + 'px',\n        width: this.$el.offsetWidth - this.$refs.selector.offsetLeft + 'px'\n      };\n      this.border && (this.dropdownStyle[isbottom ? 'border-top-width' : 'border-bottom-width'] = 0);\n\n      if (this.checkbox && this.showCheckAll) {\n        this.checkAllStyle = {\n          borderColor: this.borderColor,\n          zIndex: window.$_theme.zindex(),\n          top: isbottom ? top + listHeight - 1 + 'px' : top - 30 + 1 + 'px',\n          left: left + 'px',\n          width: this.dropdownStyle.width\n        };\n      }\n\n      this.afterOpen && this.$nextTick(this.afterOpen);\n      document.addEventListener('click', this.onMouseClick);\n    },\n    onMouseClick: function onMouseClick(event) {\n      !this.$el.contains(event.target) && this.hideDropDown(event);\n    },\n    hideDropDown: function hideDropDown(event) {\n      // 隐藏弹出的选项列表\n      if (this.beforeClose && this.beforeClose(event) === false) return;\n      this.showDropDown = false;\n      document.removeEventListener('click', this.onMouseClick);\n    },\n    onSelectItem: function onSelectItem(item, event) {\n      if (this.checkbox) return;\n      this.selectorHover = false;\n\n      if (!this.selectedItem || this.selectedItem[this.valueField] !== item[this.valueField]) {\n        var old = this.value,\n            value = item[this.valueField];\n        this.selectedItem = item;\n        this._myself = true;\n        this.$emit('input', value);\n        this.$emit('change', value, item, old);\n      }\n\n      this.hideDropDown(event);\n    },\n    onCheck: function onCheck(item, checked) {\n      this.checkMap[item[this.valueField]] = checked;\n      this.checkedItems = this.checkedItems || [];\n      checked ? this.checkedItems.push(item) : arrayRemoveValue(this.checkedItems, this.valueField, item[this.valueField]);\n      var values = arrayGetValue(this.checkedItems, this.valueField);\n      if (this.splitter) values = values.join(this.splitter);\n      this._myself = true;\n      var oldValue = this.value;\n      this.$emit('input', values);\n      this.$emit('change', {\n        value: values,\n        text: this.text,\n        item: item,\n        checked: checked,\n        oldValue: oldValue\n      });\n    },\n    onCheckAll: function onCheckAll(checked) {\n      if (!checked) {\n        this.checkMap = {};\n        this.checkedItems = null;\n        var old = this.value;\n        this._myself = true;\n        this.$emit('input', null);\n        this.$emit('change', {\n          value: null,\n          text: null,\n          oldValue: old\n        });\n      } else {\n        this.checkedItems = _toConsumableArray(this.options);\n        var values = arrayGetValue(this.checkedItems, this.valueField);\n        var map = {};\n        values.forEach(function (v) {\n          return map[v] = true;\n        });\n        this.checkMap = map;\n        if (this.splitter) values = values.join(this.splitter);\n        this._myself = true;\n        var oldValue = this.value;\n        this.$emit('input', values);\n        this.$emit('change', {\n          value: values,\n          text: this.text,\n          checked: checked,\n          oldValue: oldValue\n        });\n      }\n    },\n    setCheckedItems: function setCheckedItems(v) {\n      var _this = this;\n\n      if (v === null || v == undefined) {\n        this.checkMap = {};\n        this.checkedItems = null;\n        return;\n      }\n\n      var values = Array.isArray(v) ? v : this.splitter ? v.split(this.splitter) : [];\n      var map = {},\n          list = [],\n          item;\n      values.forEach(function (value) {\n        map[value] = true;\n        item = arrayFindItem(_this.options, _this.valueField, value);\n        item && list.push(item);\n      });\n      this.checkMap = map;\n      this.checkedItems = list;\n    },\n    getSelectedItem: function getSelectedItem() {\n      return this.selectedItem;\n    },\n    getCheckedItems: function getCheckedItems() {\n      return this.checkedItems;\n    },\n    clear: function clear() {\n      this.showDropDown && this.hideDropDown();\n\n      if (this.checkbox) {\n        this.checkedItems = null;\n        this.checkMap = {};\n      } else {\n        this.selectedItem = null;\n      }\n\n      var old = this.value;\n      this._myself = true;\n      this.$emit('input', null);\n      this.checkbox ? this.$emit('change', {\n        value: null,\n        text: null,\n        checked: false,\n        oldValue: old\n      }) : this.$emit('change', null, old);\n    },\n    optionItemStyle: function optionItemStyle(item, index) {\n      if (!this.showDropDown) return null;\n\n      if (item == this.hoverItem) {\n        return {\n          backgroundColor: this.theme.list_hover_color\n        };\n      } else if (this.selectedItem && this.selectedItem[this.valueField] === item[this.valueField]) {\n        return {\n          backgroundColor: this.theme.selected_color\n        };\n      } else {\n        return {\n          backgroundColor: this.theme.alternate_colors[index % 2]\n        };\n      }\n    }\n  },\n  computed: {\n    text: function text() {\n      if (!this.checkbox) return this.selectedItem ? this.selectedItem[this.labelField] : null;\n      if (!this.checkedItems || this.checkedItems.length == 0) return null;\n      return arrayGetValue(this.checkedItems, this.labelField).join(',');\n    },\n    showClear: function showClear() {\n      // 判断是否要显示清除按钮\n      return this.clearable && this.selectorHover && this.text;\n    },\n    containerStyle: function containerStyle() {\n      return {\n        height: this.height + 'px',\n        borderColor: this.focused ? this.focusColor : this.borderColor,\n        zIndex: this.focused ? this.theme.zindex() : ''\n      };\n    },\n    lineHeight: function lineHeight() {\n      // 获取除边框外的高度\n      return this.height - (this.border ? 2 : 0);\n    },\n    labelStyle: function labelStyle() {\n      return {\n        minWidth: this.labelMinWidth + 'px',\n        borderRightColor: this.theme.border_color_light,\n        backgroundColor: this.theme.bg_color\n      };\n    }\n  }\n};",{"version":3,"sources":["InputSelect.vue"],"names":[],"mappings":"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","sourcesContent":["\r\n<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"containerStyle\" tabindex=\"0\" @focus=\"focused=true\" @blur=\"focused=false\" @mouseenter=\"selectorHover=true\" @mouseleave=\"selectorHover=false\">\r\n\r\n    <!--label显示-->\r\n    <span :class=\"$style.label\" :style=\"labelStyle\" v-if=\"label\" is-label>{{label}}</span>\r\n\r\n    <!--必填显示-->\r\n    <span :class=\"[$style.required,'el-icon-star-on']\" :style=\"{backgroundColor:theme.bg_color}\" v-if=\"required\"></span>\r\n\r\n    <!--单位显示-->\r\n    <span :class=\"$style.unit\" v-if=\"unit\">{{unit}}</span>\r\n\r\n    <!--下拉图标和清除图标显示-->\r\n    <i :class=\"[$style.icon,showDropDown?'el-icon-arrow-up':'el-icon-arrow-down']\" :style=\"{lineHeight:lineHeight+'px'}\" v-show=\"!showClear\" v-if=\"showArrow\" @click.stop=\"toggleDropDown($event)\"></i>\r\n    <i :class=\"$style.icon\" :style=\"{lineHeight:lineHeight+'px'}\" v-show=\"showClear\"  v-if=\"clearable\" class=\"el-icon-close\" @click.stop=\"clear\"></i>\r\n    \r\n    <!--selector显示-->\r\n    <div ref=\"selector\" :class=\"$style.selector\" :title=\"text\" @click=\"toggleDropDown($event)\" :style=\"[inputWidth && {width:inputWidth},{lineHeight:lineHeight+'px',paddingRight:'5px'},contentStyle]\"><!--marginRight:showArrow||showClear?'24px':'8px'-->\r\n        <span :class=\"$style.placeholder\" v-if=\"!text && placeholder\">{{placeholder}}</span>\r\n        <span v-if=\"text\" :style=\"[selectorHover && !label && {color:theme.color}]\">{{text}}</span>\r\n    </div>\r\n\r\n    <!--弹出selector显示-->\r\n    <ul ref=\"dropdown\" :class=\"$style.dropdown\" :style=\"dropdownStyle\" v-show=\"showDropDown\" v-if=\"createDropDown\">\r\n        <li :class=\"$style.option_item\" :style=\"optionItemStyle(item, index)\"\r\n        v-for=\"(item,index) in options\" :key=\"index+'_'+item[valueField]\" \r\n        @mouseenter=\"hoverItem=item\" @mouseleave=\"hoverItem=null\"\r\n        @click.stop=\"onSelectItem(item,$event)\" :title=\"item[labelField]\">\r\n          <Checkbox v-if=\"checkbox\" :label=\"item[labelField]\" :value=\"!!checkMap[item[valueField]]\" @input=\"v=>onCheck(item,v)\" style=\"width:100%\"/>\r\n          <span v-if=\"!checkbox\">{{item[labelField]}}</span>\r\n        </li>\r\n    </ul>\r\n    <div v-show=\"showDropDown\" v-if=\"checkbox && showCheckAll && createDropDown\" :style=\"[checkAllStyle,{backgroundColor:theme.bg_color}]\" style=\"border:1px solid;position:fixed;height:30px;line-height:30px;padding-left:8px;\">\r\n      <Checkbox label=\"全选\" v-model=\"checkAll\" @change=\"onCheckAll\"/>\r\n    </div>\r\n\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n  * 使用例子\r\n  * <InputSelect label=\"你要选择哪一个\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"like\" @change=\"onSelectChg\"/>\r\n  * \r\n  *  data: {like: 1},\r\n  *  methods: {\r\n  *    onSelectChg(value, item) {// value值是1或2, item是{label:'吃饭',value:1}\r\n  *    }\r\n  *  }\r\n  */\r\n  \r\n  import { domLeftTop } from '@/components/util/Dom.js';\r\n  import { arrayFindItem } from '@/common/util/Arrays.js';\r\n  import { arrayRemoveValue } from '@/common/util/Arrays.js';\r\n  import { arrayGetValue } from '@/common/util/Arrays.js';\r\n\r\n  export default {\r\n    name: \"InputSelect\",\r\n    props: {\r\n      label: String,                                                      // 标题文本\r\n      value: { default: null},                                            // 当前值(v-model)\r\n      options: Array,                                                     // 多个选项 [{lable:xxx,value:xxx}...]\r\n      labelField: { type: String,  default: 'label' },                    // 显示字段\r\n      valueField: { type: String,  default: 'value' },                    // 值字段\r\n      checkbox:   { type: Boolean, default: false   },                    // 是否多选\r\n      showCheckAll: { type: Boolean, default: true  },                    // 是否显示全选\r\n      splitter:   { type: String,  default: null    },                    // 如果是多选，而value是字符串\"1,2,3,4\" 则需要定义拆分符为逗号\r\n      placeholder: String,\r\n      unit: String,                                                       // 单位\r\n      required:  Boolean,                                                 // 是否显示必填\r\n      disabled:  Boolean,                                                 // 是否可操作\r\n      clearable: Boolean,                                                 // 是否显示可清除图标\r\n      showArrow:  { type: Boolean, default: true },                       // 是否显示箭头图标\r\n      border:     { type: Boolean, default: true },                       // 是否显示边框\r\n      borderColor:{ type: String,  default: $_theme.border_color_light },\r\n      focusColor: { type: String,  default: $_theme.color },\r\n      height:     { type: Number,  default: $_theme.inputHeight },        // 高度数值，单位是px\r\n      maxListNum: { type: Number,  default: 10 },                         // 下拉框最多显示10个选项，多出10个选项会出现滚动条\r\n      afterOpen: Function,\r\n      beforeClose: Function,\r\n\t    labelMinWidth:{ type: Number,  default: 10 },  \t\t  \t              // lable宽度最小数值，单位是px\r\n      inputWidth:   { type: String,  default: null },                     // 输入框的宽度\r\n      contentStyle: { default: null},\r\n    },\r\n    data() {\r\n      return {\r\n        selectedItem: null,\r\n        hoverItem: null,\r\n        focused: false,\r\n        selectorHover: false,\r\n        createDropDown: false,\r\n        showDropDown: false,\r\n        dropdownStyle: null,\r\n        checkAllStyle: null,\r\n        checkedItems: null,\r\n        checkMap: {},\r\n        checkAll: false,\r\n      };\r\n    },\r\n    watch: {\r\n      value: function(v) {\r\n        if (this._myself) return this._myself=false;\r\n        this.checkbox ? this.setCheckedItems(v) : this.setSelectedItem(v);\r\n      },\r\n      focused: function(v) {\r\n        this.$emit('focused', v);\r\n      }\r\n    },\r\n    mounted() {\r\n      if (this.value === null || this.value == undefined) return;\r\n      this.checkbox ? this.setCheckedItems(this.value) : this.setSelectedItem(this.value);\r\n    },\r\n    methods: {\r\n      setSelectedItem(v) {\r\n        if (v === null || v == undefined) return this.selectedItem = null;\r\n        if (!this.selectedItem || this.selectedItem[this.valueField] != v) {\r\n          this.selectedItem = arrayFindItem(this.options, this.valueField, v);\r\n        }\r\n      },\r\n      toggleDropDown(event) {// 显示或隐藏选项列表\r\n        if (!this.options || this.options.length == 0) return;\r\n        this.focused = true;\r\n        if (this.showDropDown) return this.hideDropDown(event);\r\n        this.showDropDown = this.createDropDown = true;\r\n        \r\n        // 自动判断是显示在下面还是上面\r\n        let {left, top} = domLeftTop(this.$refs.selector), listHeight = 30 * Math.min(this.maxListNum, this.options.length) + 1 + (this.border ? 0 : 1);\r\n        let this_height = this.$el.offsetHeight, isbottom = true;\r\n        let down = document.documentElement.clientHeight - top - this_height;\r\n        if (down > listHeight) {// 下面空间充足，显示在下面\r\n          top += this_height - (this.border ? 1 : 0);\r\n        } else if (top > listHeight) {// 上面空间足够，显示在上面\r\n          top -= listHeight + (this.border ? 1 : 0);\r\n          isbottom = false;\r\n        } else {// 上面和下面的空间都不够\r\n          if (down > top) {// 下面的空间大，显示在下面\r\n            listHeight = down - 5;\r\n            top += this_height - (this.border ? 1 : 0);\r\n          } else {// 上面的空间大，显示在上面\r\n            listHeight = top - 5;\r\n            top -= listHeight + (this.border ? 1 : 0);\r\n            isbottom = false;\r\n          }\r\n        }\r\n        this.border && (left--);\r\n        this.dropdownStyle = {\r\n          borderColor: this.borderColor,\r\n          zIndex: window.$_theme.zindex(),\r\n          top: top + 'px',\r\n          left: left + 'px',\r\n          height: listHeight + 'px',\r\n          width: (this.$el.offsetWidth - this.$refs.selector.offsetLeft) + 'px'\r\n        };\r\n        this.border && (this.dropdownStyle[isbottom?'border-top-width':'border-bottom-width'] = 0);\r\n        if (this.checkbox && this.showCheckAll) {\r\n          this.checkAllStyle = {\r\n            borderColor: this.borderColor,\r\n            zIndex: window.$_theme.zindex(),\r\n            top: isbottom ? ((top+listHeight-1) + 'px') : ((top-30+1) + 'px'),\r\n            left: left + 'px',\r\n            width: this.dropdownStyle.width,\r\n          };\r\n        }\r\n        this.afterOpen && this.$nextTick(this.afterOpen);\r\n        document.addEventListener('click', this.onMouseClick);\r\n      },\r\n      onMouseClick(event) {\r\n        !this.$el.contains(event.target) && this.hideDropDown(event);\r\n      },\r\n      hideDropDown(event) {// 隐藏弹出的选项列表\r\n        if (this.beforeClose && this.beforeClose(event) === false) return;\r\n        this.showDropDown = false;\r\n        document.removeEventListener('click', this.onMouseClick);\r\n      },\r\n      onSelectItem(item,event) {\r\n        if (this.checkbox) return;\r\n        this.selectorHover = false;\r\n        if (!this.selectedItem || this.selectedItem[this.valueField] !== item[this.valueField]) {\r\n          let old = this.value, value = item[this.valueField];\r\n          this.selectedItem = item;\r\n          this._myself = true;\r\n          this.$emit('input',  value);\r\n          this.$emit('change', value, item, old);\r\n        }\r\n        this.hideDropDown(event);\r\n      },\r\n      onCheck(item, checked) {\r\n        this.checkMap[item[this.valueField]] = checked;\r\n        this.checkedItems = this.checkedItems || [];\r\n        checked ? this.checkedItems.push(item) : arrayRemoveValue(this.checkedItems, this.valueField, item[this.valueField]);\r\n        let values = arrayGetValue(this.checkedItems, this.valueField);\r\n        if (this.splitter) values = values.join(this.splitter);\r\n        this._myself = true;\r\n        let oldValue = this.value;\r\n        this.$emit('input',  values);\r\n        this.$emit('change', {value:values,text:this.text,item:item,checked:checked,oldValue:oldValue});\r\n      },\r\n      onCheckAll(checked) {\r\n        if (!checked) {\r\n          this.checkMap = {};\r\n          this.checkedItems = null;\r\n          let old = this.value;\r\n          this._myself = true;\r\n          this.$emit('input', null);\r\n          this.$emit('change', {value:null,text:null,oldValue:old});\r\n        } else {\r\n          this.checkedItems = [...this.options];\r\n          let values = arrayGetValue(this.checkedItems, this.valueField);\r\n          let map = {};\r\n          values.forEach(v => map[v] = true);\r\n          this.checkMap = map;\r\n          if (this.splitter) values = values.join(this.splitter);\r\n          this._myself = true;\r\n          let oldValue = this.value;\r\n          this.$emit('input',  values);\r\n          this.$emit('change', {value:values,text:this.text,checked:checked,oldValue:oldValue});\r\n        }\r\n      },\r\n      setCheckedItems(v) {\r\n        if (v === null || v == undefined) {\r\n          this.checkMap = {};\r\n          this.checkedItems = null;\r\n          return;\r\n        }\r\n        let values = Array.isArray(v) ? v : (this.splitter ? v.split(this.splitter) : []);\r\n        let map = {}, list = [], item;\r\n        values.forEach(value => {\r\n          map[value] = true;\r\n          item = arrayFindItem(this.options, this.valueField, value);\r\n          item && list.push(item);\r\n        });\r\n        this.checkMap = map;\r\n        this.checkedItems = list;\r\n      },\r\n      getSelectedItem() {\r\n        return this.selectedItem;\r\n      },\r\n      getCheckedItems() {\r\n        return this.checkedItems;\r\n      },\r\n      clear() {\r\n        this.showDropDown && this.hideDropDown();\r\n        if (this.checkbox) {\r\n          this.checkedItems = null;\r\n          this.checkMap = {};\r\n        } else {\r\n          this.selectedItem = null;\r\n        }\r\n        let old = this.value;\r\n        this._myself = true;\r\n        this.$emit('input', null);\r\n        this.checkbox ? this.$emit('change', {value:null,text:null,checked:false,oldValue:old}) : this.$emit('change', null, old);\r\n      },\r\n      optionItemStyle(item, index) {\r\n        if (!this.showDropDown) return null;\r\n        if (item == this.hoverItem) {\r\n          return { backgroundColor: this.theme.list_hover_color };\r\n        } else if (this.selectedItem && this.selectedItem[this.valueField] === item[this.valueField]) {\r\n          return { backgroundColor: this.theme.selected_color };\r\n        } else {\r\n          return { backgroundColor: this.theme.alternate_colors[index % 2] };\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      text: function() {\r\n        if (!this.checkbox) return this.selectedItem ? this.selectedItem[this.labelField] : null;\r\n        if (!this.checkedItems || this.checkedItems.length == 0) return null;\r\n        return arrayGetValue(this.checkedItems, this.labelField).join(',');\r\n      },\r\n      showClear() {// 判断是否要显示清除按钮\r\n        return this.clearable && this.selectorHover && this.text;\r\n      },\r\n      containerStyle() {\r\n        return {\r\n          height: this.height + 'px',\r\n          borderColor: this.focused ? this.focusColor : this.borderColor,\r\n          zIndex: this.focused ? this.theme.zindex() : ''\r\n        }\r\n      },\r\n      lineHeight() {// 获取除边框外的高度\r\n        return this.height - (this.border ? 2 : 0);\r\n      },\r\n      labelStyle() {\r\n        return {\r\n          minWidth: this.labelMinWidth + 'px',\r\n          borderRightColor: this.theme.border_color_light, \r\n          backgroundColor: this.theme.bg_color\r\n        };\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    outline: none;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    background-color: #fff;\r\n    position: relative;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .container:hover {\r\n    background-color: #fff !important;\r\n  }\r\n  .container > *:not(ul) {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  /* 标题文本 */\r\n  .label {\r\n    float: left;\r\n    padding: 0 6px;\r\n    border-right-style: solid;\r\n    border-right-width: 0px;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  /* select容器 */\r\n  .selector {\r\n    padding-left: 8px;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .icon {\r\n    float: right;\r\n    width: 22px;\r\n    padding-left: 2px;\r\n    line-height: 0;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  /* 下拉容器 */\r\n  .dropdown {\r\n    position: fixed;\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n    background-color: #fff;\r\n    margin-block-start: 0;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    overflow-y: auto;\r\n    box-shadow: 0px 0px 5px 0px RGBA(0, 0, 0, 0.1);\r\n  }\r\n  .option_item {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    padding: 0 8px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  /* 单位 */\r\n  .unit {\r\n    float: right;\r\n    padding-right: 8px;\r\n    white-space: nowrap;\r\n  }\r\n  /* 必填 */\r\n  .required {\r\n    float: right;\r\n    padding: 0 2px;\r\n    color: #f00;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  /* 禁止操作 */\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}