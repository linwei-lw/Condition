{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\button\\src\\button.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\button\\src\\button.js","mtime":1635230121871},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport vSize from \"../../mixins/size\";\nimport { UtilTools, DomTools, GlobalEvent } from \"../../tools\";\nexport default {\n  name: 'VxeButton',\n  mixins: [vSize],\n  props: {\n    type: String,\n    size: {\n      type: String,\n      default: function _default() {\n        return GlobalConfig.button.size || GlobalConfig.size;\n      }\n    },\n    name: [String, Number],\n    content: String,\n    placement: String,\n    status: String,\n    icon: String,\n    round: Boolean,\n    circle: Boolean,\n    disabled: Boolean,\n    loading: Boolean,\n    destroyOnClose: Boolean,\n    className: String,\n    transfer: {\n      type: Boolean,\n      default: function _default() {\n        return GlobalConfig.button.transfer;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      inited: false,\n      showPanel: false,\n      animatVisible: false,\n      panelIndex: 0,\n      panelStyle: null,\n      panelPlacement: null\n    };\n  },\n  computed: {\n    isText: function isText() {\n      return this.type === 'text';\n    },\n    isFormBtn: function isFormBtn() {\n      return ['submit', 'reset', 'button'].indexOf(this.type) > -1;\n    },\n    btnType: function btnType() {\n      return this.isText ? this.type : 'button';\n    }\n  },\n  created: function created() {\n    GlobalEvent.on(this, 'mousewheel', this.handleGlobalMousewheelEvent);\n  },\n  beforeDestroy: function beforeDestroy() {\n    var panelElem = this.$refs.panel;\n\n    if (panelElem && panelElem.parentNode) {\n      panelElem.parentNode.removeChild(panelElem);\n    }\n  },\n  destroyed: function destroyed() {\n    GlobalEvent.off(this, 'mousewheel');\n  },\n  render: function render(h) {\n    var _ref,\n        _ref2,\n        _this = this,\n        _ref3,\n        _ref4;\n\n    var $scopedSlots = this.$scopedSlots,\n        $listeners = this.$listeners,\n        className = this.className,\n        inited = this.inited,\n        type = this.type,\n        destroyOnClose = this.destroyOnClose,\n        isFormBtn = this.isFormBtn,\n        status = this.status,\n        btnType = this.btnType,\n        vSize = this.vSize,\n        name = this.name,\n        disabled = this.disabled,\n        loading = this.loading,\n        showPanel = this.showPanel,\n        animatVisible = this.animatVisible,\n        panelPlacement = this.panelPlacement;\n    var downsSlot = $scopedSlots.dropdowns;\n    return downsSlot ? h('div', {\n      class: ['vxe-button--dropdown', className, (_ref = {}, _defineProperty(_ref, \"size--\".concat(vSize), vSize), _defineProperty(_ref, 'is--active', showPanel), _ref)]\n    }, [h('button', {\n      ref: 'xBtn',\n      class: ['vxe-button', \"type--\".concat(btnType), (_ref2 = {}, _defineProperty(_ref2, \"size--\".concat(vSize), vSize), _defineProperty(_ref2, \"skin--\".concat(status), status), _defineProperty(_ref2, 'is--round', this.round), _defineProperty(_ref2, 'is--circle', this.circle), _defineProperty(_ref2, 'is--disabled', disabled || loading), _defineProperty(_ref2, 'is--loading', loading), _ref2)],\n      attrs: {\n        name: name,\n        type: isFormBtn ? type : 'button',\n        disabled: disabled || loading\n      },\n      on: Object.assign({\n        mouseenter: this.mouseenterTargetEvent,\n        mouseleave: this.mouseleaveEvent\n      }, XEUtils.objectMap($listeners, function (cb, type) {\n        return function (evnt) {\n          return _this.$emit(type, {\n            $event: evnt\n          });\n        };\n      }))\n    }, this.renderContent(h).concat([h('i', {\n      class: \"vxe-button--dropdown-arrow \".concat(GlobalConfig.icon.BUTTON_DROPDOWN)\n    })])), h('div', {\n      ref: 'panel',\n      class: ['vxe-button--dropdown-panel', (_ref3 = {}, _defineProperty(_ref3, \"size--\".concat(vSize), vSize), _defineProperty(_ref3, 'animat--leave', animatVisible), _defineProperty(_ref3, 'animat--enter', showPanel), _ref3)],\n      attrs: {\n        placement: panelPlacement\n      },\n      style: this.panelStyle\n    }, inited ? [h('div', {\n      class: 'vxe-button--dropdown-wrapper',\n      on: {\n        mousedown: this.mousedownDropdownEvent,\n        click: this.clickDropdownEvent,\n        mouseenter: this.mouseenterEvent,\n        mouseleave: this.mouseleaveEvent\n      }\n    }, destroyOnClose && !showPanel ? [] : downsSlot.call(this, {}, h))] : null)]) : h('button', {\n      ref: 'xBtn',\n      class: ['vxe-button', \"type--\".concat(btnType), className, (_ref4 = {}, _defineProperty(_ref4, \"size--\".concat(vSize), vSize), _defineProperty(_ref4, \"skin--\".concat(status), status), _defineProperty(_ref4, 'is--round', this.round), _defineProperty(_ref4, 'is--circle', this.circle), _defineProperty(_ref4, 'is--disabled', disabled || loading), _defineProperty(_ref4, 'is--loading', loading), _ref4)],\n      attrs: {\n        name: name,\n        type: isFormBtn ? type : 'button',\n        disabled: disabled || loading\n      },\n      on: XEUtils.objectMap($listeners, function (cb, type) {\n        return function (evnt) {\n          return _this.$emit(type, {\n            $event: evnt\n          });\n        };\n      })\n    }, this.renderContent(h));\n  },\n  methods: {\n    renderContent: function renderContent(h) {\n      var $scopedSlots = this.$scopedSlots,\n          content = this.content,\n          icon = this.icon,\n          loading = this.loading;\n      var contents = [];\n\n      if (loading) {\n        contents.push(h('i', {\n          class: ['vxe-button--loading-icon', GlobalConfig.icon.BUTTON_LOADING]\n        }));\n      } else if (icon) {\n        contents.push(h('i', {\n          class: ['vxe-button--icon', icon]\n        }));\n      }\n\n      if ($scopedSlots.default) {\n        contents.push(h('span', {\n          class: 'vxe-button--content'\n        }, $scopedSlots.default.call(this)));\n      } else if (content) {\n        contents.push(h('span', {\n          class: 'vxe-button--content'\n        }, [UtilTools.getFuncText(content)]));\n      }\n\n      return contents;\n    },\n    handleGlobalMousewheelEvent: function handleGlobalMousewheelEvent(evnt) {\n      if (this.showPanel && !DomTools.getEventTargetNode(evnt, this.$refs.panel).flag) {\n        this.closePanel();\n      }\n    },\n    updateZindex: function updateZindex() {\n      if (this.panelIndex < UtilTools.getLastZIndex()) {\n        this.panelIndex = UtilTools.nextZIndex();\n      }\n    },\n    mousedownDropdownEvent: function mousedownDropdownEvent(evnt) {\n      var isLeftBtn = evnt.button === 0;\n\n      if (isLeftBtn) {\n        evnt.stopPropagation();\n      }\n    },\n    clickDropdownEvent: function clickDropdownEvent(evnt) {\n      var _this2 = this;\n\n      var dropdownElem = evnt.currentTarget;\n      var panelElem = this.$refs.panel;\n\n      var _DomTools$getEventTar = DomTools.getEventTargetNode(evnt, dropdownElem, 'vxe-button'),\n          flag = _DomTools$getEventTar.flag,\n          targetElem = _DomTools$getEventTar.targetElem;\n\n      if (flag) {\n        if (panelElem) {\n          panelElem.dataset.active = 'N';\n        }\n\n        this.showPanel = false;\n        setTimeout(function () {\n          if (!panelElem || panelElem.dataset.active !== 'Y') {\n            _this2.animatVisible = false;\n          }\n        }, 350);\n        this.$emit('dropdown-click', {\n          name: targetElem.getAttribute('name'),\n          $event: evnt\n        });\n      }\n    },\n    mouseenterTargetEvent: function mouseenterTargetEvent() {\n      var _this3 = this;\n\n      var panelElem = this.$refs.panel;\n      panelElem.dataset.active = 'Y';\n\n      if (!this.inited) {\n        this.inited = true;\n\n        if (this.transfer) {\n          document.body.appendChild(panelElem);\n        }\n      }\n\n      this.showTime = setTimeout(function () {\n        if (panelElem.dataset.active === 'Y') {\n          _this3.mouseenterEvent();\n        } else {\n          _this3.animatVisible = false;\n        }\n      }, 250);\n    },\n    mouseenterEvent: function mouseenterEvent() {\n      var _this4 = this;\n\n      var panelElem = this.$refs.panel;\n      panelElem.dataset.active = 'Y';\n      this.animatVisible = true;\n      setTimeout(function () {\n        if (panelElem.dataset.active === 'Y') {\n          _this4.showPanel = true;\n\n          _this4.updateZindex();\n\n          _this4.updatePlacement();\n\n          setTimeout(function () {\n            if (_this4.showPanel) {\n              _this4.updatePlacement();\n            }\n          }, 50);\n        }\n      }, 20);\n    },\n    mouseleaveEvent: function mouseleaveEvent() {\n      this.closePanel();\n    },\n    closePanel: function closePanel() {\n      var _this5 = this;\n\n      var panelElem = this.$refs.panel;\n      clearTimeout(this.showTime);\n\n      if (panelElem) {\n        panelElem.dataset.active = 'N';\n        setTimeout(function () {\n          if (panelElem.dataset.active !== 'Y') {\n            _this5.showPanel = false;\n            setTimeout(function () {\n              if (panelElem.dataset.active !== 'Y') {\n                _this5.animatVisible = false;\n              }\n            }, 350);\n          }\n        }, 100);\n      } else {\n        this.animatVisible = false;\n        this.showPanel = false;\n      }\n    },\n    updatePlacement: function updatePlacement() {\n      var _this6 = this;\n\n      return this.$nextTick().then(function () {\n        var $refs = _this6.$refs,\n            transfer = _this6.transfer,\n            placement = _this6.placement,\n            panelIndex = _this6.panelIndex;\n        var targetElem = $refs.xBtn;\n        var panelElem = $refs.panel;\n\n        if (panelElem && targetElem) {\n          var targetHeight = targetElem.offsetHeight;\n          var targetWidth = targetElem.offsetWidth;\n          var panelHeight = panelElem.offsetHeight;\n          var panelWidth = panelElem.offsetWidth;\n          var marginSize = 5;\n          var panelStyle = {\n            zIndex: panelIndex\n          };\n\n          var _DomTools$getAbsolute = DomTools.getAbsolutePos(targetElem),\n              boundingTop = _DomTools$getAbsolute.boundingTop,\n              boundingLeft = _DomTools$getAbsolute.boundingLeft,\n              visibleHeight = _DomTools$getAbsolute.visibleHeight,\n              visibleWidth = _DomTools$getAbsolute.visibleWidth;\n\n          var panelPlacement = 'bottom';\n\n          if (transfer) {\n            var left = boundingLeft + targetWidth - panelWidth;\n            var top = boundingTop + targetHeight;\n\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              top = boundingTop - panelHeight;\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (top + panelHeight + marginSize > visibleHeight) {\n                panelPlacement = 'top';\n                top = boundingTop - panelHeight;\n              } // 如果上面不够放，则向下（优先）\n\n\n              if (top < marginSize) {\n                panelPlacement = 'bottom';\n                top = boundingTop + targetHeight;\n              }\n            } // 如果溢出右边\n\n\n            if (left + panelWidth + marginSize > visibleWidth) {\n              left -= left + panelWidth + marginSize - visibleWidth;\n            } // 如果溢出左边\n\n\n            if (left < marginSize) {\n              left = marginSize;\n            }\n\n            Object.assign(panelStyle, {\n              left: \"\".concat(left, \"px\"),\n              right: 'auto',\n              top: \"\".concat(top, \"px\"),\n              minWidth: \"\".concat(targetWidth, \"px\")\n            });\n          } else {\n            if (placement === 'top') {\n              panelPlacement = 'top';\n              panelStyle.bottom = \"\".concat(targetHeight, \"px\");\n            } else if (!placement) {\n              // 如果下面不够放，则向上\n              if (boundingTop + targetHeight + panelHeight > visibleHeight) {\n                // 如果上面不够放，则向下（优先）\n                if (boundingTop - targetHeight - panelHeight > marginSize) {\n                  panelPlacement = 'top';\n                  panelStyle.bottom = \"\".concat(targetHeight, \"px\");\n                }\n              }\n            }\n          }\n\n          _this6.panelStyle = panelStyle;\n          _this6.panelPlacement = panelPlacement;\n          return _this6.$nextTick();\n        }\n      });\n    },\n    focus: function focus() {\n      this.$el.focus();\n      return this.$nextTick();\n    },\n    blur: function blur() {\n      this.$el.blur();\n      return this.$nextTick();\n    }\n  }\n};",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\button\\src\\button.js"],"names":["name","mixins","props","type","size","default","GlobalConfig","content","placement","status","icon","round","circle","disabled","loading","destroyOnClose","className","transfer","data","inited","showPanel","animatVisible","panelIndex","panelStyle","panelPlacement","computed","isText","isFormBtn","btnType","created","GlobalEvent","beforeDestroy","panelElem","destroyed","render","$scopedSlots","$listeners","vSize","downsSlot","h","class","ref","attrs","on","mouseenter","mouseleave","mouseleaveEvent","$event","evnt","style","mousedown","click","methods","renderContent","contents","UtilTools","handleGlobalMousewheelEvent","DomTools","updateZindex","mousedownDropdownEvent","isLeftBtn","clickDropdownEvent","dropdownElem","flag","targetElem","setTimeout","mouseenterTargetEvent","document","mouseenterEvent","closePanel","clearTimeout","updatePlacement","$refs","targetHeight","targetWidth","panelHeight","panelWidth","marginSize","zIndex","boundingTop","boundingLeft","visibleHeight","visibleWidth","left","top","Object","right","minWidth","focus","blur"],"mappings":";;;;;AAAA,OAAA,OAAA,MAAA,UAAA;AACA,OAAA,YAAA;AACA,OAAA,KAAA;AACA,SAAA,SAAA,EAAA,QAAA,EAAA,WAAA;AAEA,eAAe;AACbA,EAAAA,IAAI,EADS,WAAA;AAEbC,EAAAA,MAAM,EAAE,CAFK,KAEL,CAFK;AAGbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EADC,MAAA;AAELC,IAAAA,IAAI,EAAE;AAAED,MAAAA,IAAI,EAAN,MAAA;AAAgBE,MAAAA,OAAO,EAAE,SAAA,QAAA,GAAA;AAAA,eAAMC,YAAY,CAAZA,MAAAA,CAAAA,IAAAA,IAA4BA,YAAY,CAA9C,IAAA;AAAA;AAAzB,KAFD;AAGLN,IAAAA,IAAI,EAAE,CAAA,MAAA,EAHD,MAGC,CAHD;AAILO,IAAAA,OAAO,EAJF,MAAA;AAKLC,IAAAA,SAAS,EALJ,MAAA;AAMLC,IAAAA,MAAM,EAND,MAAA;AAOLC,IAAAA,IAAI,EAPC,MAAA;AAQLC,IAAAA,KAAK,EARA,OAAA;AASLC,IAAAA,MAAM,EATD,OAAA;AAULC,IAAAA,QAAQ,EAVH,OAAA;AAWLC,IAAAA,OAAO,EAXF,OAAA;AAYLC,IAAAA,cAAc,EAZT,OAAA;AAaLC,IAAAA,SAAS,EAbJ,MAAA;AAcLC,IAAAA,QAAQ,EAAE;AAAEd,MAAAA,IAAI,EAAN,OAAA;AAAiBE,MAAAA,OAAO,EAAE,SAAA,QAAA,GAAA;AAAA,eAAMC,YAAY,CAAZA,MAAAA,CAAN,QAAA;AAAA;AAA1B;AAdL,GAHM;AAmBbY,EAAAA,IAnBa,EAAA,SAAA,IAAA,GAmBL;AACN,WAAO;AACLC,MAAAA,MAAM,EADD,KAAA;AAELC,MAAAA,SAAS,EAFJ,KAAA;AAGLC,MAAAA,aAAa,EAHR,KAAA;AAILC,MAAAA,UAAU,EAJL,CAAA;AAKLC,MAAAA,UAAU,EALL,IAAA;AAMLC,MAAAA,cAAc,EAAE;AANX,KAAP;AApBW,GAAA;AA6BbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MADQ,EAAA,SAAA,MAAA,GACE;AACR,aAAO,KAAA,IAAA,KAAP,MAAA;AAFM,KAAA;AAIRC,IAAAA,SAJQ,EAAA,SAAA,SAAA,GAIK;AACX,aAAO,CAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,CAAsC,KAAtC,IAAA,IAAmD,CAA1D,CAAA;AALM,KAAA;AAORC,IAAAA,OAPQ,EAAA,SAAA,OAAA,GAOG;AACT,aAAO,KAAA,MAAA,GAAc,KAAd,IAAA,GAAP,QAAA;AACD;AATO,GA7BG;AAwCbC,EAAAA,OAxCa,EAAA,SAAA,OAAA,GAwCF;AACTC,IAAAA,WAAW,CAAXA,EAAAA,CAAAA,IAAAA,EAAAA,YAAAA,EAAmC,KAAnCA,2BAAAA;AAzCW,GAAA;AA2CbC,EAAAA,aA3Ca,EAAA,SAAA,aAAA,GA2CI;AACf,QAAMC,SAAS,GAAG,KAAA,KAAA,CAAlB,KAAA;;AACA,QAAIA,SAAS,IAAIA,SAAS,CAA1B,UAAA,EAAuC;AACrCA,MAAAA,SAAS,CAATA,UAAAA,CAAAA,WAAAA,CAAAA,SAAAA;AACD;AA/CU,GAAA;AAiDbC,EAAAA,SAjDa,EAAA,SAAA,SAAA,GAiDA;AACXH,IAAAA,WAAW,CAAXA,GAAAA,CAAAA,IAAAA,EAAAA,YAAAA;AAlDW,GAAA;AAoDbI,EAAAA,MApDa,EAAA,SAAA,MAAA,CAAA,CAAA,EAoDF;AAAA,QAAA,IAAA;AAAA,QAAA,KAAA;AAAA,QAAA,KAAA,GAAA,IAAA;AAAA,QAAA,KAAA;AAAA,QAAA,KAAA;;AAAA,QACDC,YADC,GAAA,KAAA,YAAA;AAAA,QACaC,UADb,GAAA,KAAA,UAAA;AAAA,QACyBpB,SADzB,GAAA,KAAA,SAAA;AAAA,QACoCG,MADpC,GAAA,KAAA,MAAA;AAAA,QAC4ChB,IAD5C,GAAA,KAAA,IAAA;AAAA,QACkDY,cADlD,GAAA,KAAA,cAAA;AAAA,QACkEY,SADlE,GAAA,KAAA,SAAA;AAAA,QAC6ElB,MAD7E,GAAA,KAAA,MAAA;AAAA,QACqFmB,OADrF,GAAA,KAAA,OAAA;AAAA,QAC8FS,KAD9F,GAAA,KAAA,KAAA;AAAA,QACqGrC,IADrG,GAAA,KAAA,IAAA;AAAA,QAC2Ga,QAD3G,GAAA,KAAA,QAAA;AAAA,QACqHC,OADrH,GAAA,KAAA,OAAA;AAAA,QAC8HM,SAD9H,GAAA,KAAA,SAAA;AAAA,QACyIC,aADzI,GAAA,KAAA,aAAA;AAAA,QACwJG,cADxJ,GAAA,KAAA,cAAA;AAET,QAAMc,SAAS,GAAGH,YAAY,CAA9B,SAAA;AACA,WAAOG,SAAS,GAAGC,CAAC,CAAA,KAAA,EAAQ;AAC1BC,MAAAA,KAAK,EAAE,CAAA,sBAAA,EAAA,SAAA,GAAA,IAAA,GAAA,EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,SAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,SAAA,CAAA,EAAA,IAAA;AADmB,KAAR,EAKjB,CACDD,CAAC,CAAA,QAAA,EAAW;AACVE,MAAAA,GAAG,EADO,MAAA;AAEVD,MAAAA,KAAK,EAAE,CAAA,YAAA,EAAA,SAAA,MAAA,CAAA,OAAA,CAAA,GAAA,KAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,EAAA,SAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,SAAA,MAAA,CAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,WAAA,EAGQ,KAHR,KAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,YAAA,EAIS,KAJT,MAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,cAAA,EAKW3B,QAAQ,IALnB,OAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,aAAA,EAAA,OAAA,CAAA,EAFG,KAEH,EAFG;AAUV6B,MAAAA,KAAK,EAAE;AACL1C,QAAAA,IAAI,EADC,IAAA;AAELG,QAAAA,IAAI,EAAEwB,SAAS,GAAA,IAAA,GAFV,QAAA;AAGLd,QAAAA,QAAQ,EAAEA,QAAQ,IAAIC;AAHjB,OAVG;AAeV6B,MAAAA,EAAE,EAAE,MAAM,CAAN,MAAA,CAAc;AAChBC,QAAAA,UAAU,EAAE,KADI,qBAAA;AAEhBC,QAAAA,UAAU,EAAE,KAAKC;AAFD,OAAd,EAGD,OAAO,CAAP,SAAA,CAAA,UAAA,EAA8B,UAAA,EAAA,EAAA,IAAA,EAAA;AAAA,eAAc,UAAA,IAAA,EAAI;AAAA,iBAAI,KAAI,CAAJ,KAAA,CAAA,IAAA,EAAiB;AAAEC,YAAAA,MAAM,EAAEC;AAAV,WAAjB,CAAJ;AAAlB,SAAA;AAH7B,OAGD,CAHC;AAfM,KAAX,EAmBE,KAAA,aAAA,CAAA,CAAA,EAAA,MAAA,CAA6B,CAC9BT,CAAC,CAAA,GAAA,EAAM;AACLC,MAAAA,KAAK,EAAA,8BAAA,MAAA,CAAgClC,YAAY,CAAZA,IAAAA,CAAhC,eAAA;AADA,KAAN,CAD6B,CAA7B,CAnBF,CADA,EAyBDiC,CAAC,CAAA,KAAA,EAAQ;AACPE,MAAAA,GAAG,EADI,OAAA;AAEPD,MAAAA,KAAK,EAAE,CAAA,4BAAA,GAAA,KAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,EAAA,SAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,eAAA,EAAA,aAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,eAAA,EAAA,SAAA,CAAA,EAFA,KAEA,EAFA;AAOPE,MAAAA,KAAK,EAAE;AACLlC,QAAAA,SAAS,EAAEgB;AADN,OAPA;AAUPyB,MAAAA,KAAK,EAAE,KAAK1B;AAVL,KAAR,EAWEJ,MAAM,GAAG,CACVoB,CAAC,CAAA,KAAA,EAAQ;AACPC,MAAAA,KAAK,EADE,8BAAA;AAEPG,MAAAA,EAAE,EAAE;AACFO,QAAAA,SAAS,EAAE,KADT,sBAAA;AAEFC,QAAAA,KAAK,EAAE,KAFL,kBAAA;AAGFP,QAAAA,UAAU,EAAE,KAHV,eAAA;AAIFC,QAAAA,UAAU,EAAE,KAAKC;AAJf;AAFG,KAAR,EAQE/B,cAAc,IAAI,CAAlBA,SAAAA,GAAAA,EAAAA,GAAoCuB,SAAS,CAATA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAThC,CASgCA,CARtC,CADS,CAAH,GAzCK,IA8Bb,CAzBA,CALiB,CAAJ,GAoDXC,CAAC,CAAA,QAAA,EAAW;AACfE,MAAAA,GAAG,EADY,MAAA;AAEfD,MAAAA,KAAK,EAAE,CAAA,YAAA,EAAA,SAAA,MAAA,CAAA,OAAA,CAAA,EAAA,SAAA,GAAA,KAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,EAAA,SAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,SAAA,MAAA,CAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,WAAA,EAGQ,KAHR,KAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,YAAA,EAIS,KAJT,MAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,cAAA,EAKW3B,QAAQ,IALnB,OAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,aAAA,EAAA,OAAA,CAAA,EAFQ,KAER,EAFQ;AAUf6B,MAAAA,KAAK,EAAE;AACL1C,QAAAA,IAAI,EADC,IAAA;AAELG,QAAAA,IAAI,EAAEwB,SAAS,GAAA,IAAA,GAFV,QAAA;AAGLd,QAAAA,QAAQ,EAAEA,QAAQ,IAAIC;AAHjB,OAVQ;AAef6B,MAAAA,EAAE,EAAE,OAAO,CAAP,SAAA,CAAA,UAAA,EAA8B,UAAA,EAAA,EAAA,IAAA,EAAA;AAAA,eAAc,UAAA,IAAA,EAAI;AAAA,iBAAI,KAAI,CAAJ,KAAA,CAAA,IAAA,EAAiB;AAAEI,YAAAA,MAAM,EAAEC;AAAV,WAAjB,CAAJ;AAAlB,SAAA;AAA9B,OAAA;AAfW,KAAX,EAgBH,KAAA,aAAA,CApEH,CAoEG,CAhBG,CApDN;AAvDW,GAAA;AA6HbI,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,EAAA,SAAA,aAAA,CAAA,CAAA,EACW;AAAA,UACRlB,YADQ,GAAA,KAAA,YAAA;AAAA,UACM5B,OADN,GAAA,KAAA,OAAA;AAAA,UACeG,IADf,GAAA,KAAA,IAAA;AAAA,UACqBI,OADrB,GAAA,KAAA,OAAA;AAEhB,UAAMwC,QAAQ,GAAd,EAAA;;AACA,UAAA,OAAA,EAAa;AACXA,QAAAA,QAAQ,CAARA,IAAAA,CACEf,CAAC,CAAA,GAAA,EAAM;AACLC,UAAAA,KAAK,EAAE,CAAA,0BAAA,EAA6BlC,YAAY,CAAZA,IAAAA,CAA7B,cAAA;AADF,SAAN,CADHgD;AADF,OAAA,MAMO,IAAA,IAAA,EAAU;AACfA,QAAAA,QAAQ,CAARA,IAAAA,CACEf,CAAC,CAAA,GAAA,EAAM;AACLC,UAAAA,KAAK,EAAE,CAAA,kBAAA,EAAA,IAAA;AADF,SAAN,CADHc;AAKD;;AACD,UAAInB,YAAY,CAAhB,OAAA,EAA0B;AACxBmB,QAAAA,QAAQ,CAARA,IAAAA,CACEf,CAAC,CAAA,MAAA,EAAS;AACRC,UAAAA,KAAK,EAAE;AADC,SAAT,EAEEL,YAAY,CAAZA,OAAAA,CAAAA,IAAAA,CAHLmB,IAGKnB,CAFF,CADHmB;AADF,OAAA,MAMO,IAAA,OAAA,EAAa;AAClBA,QAAAA,QAAQ,CAARA,IAAAA,CACEf,CAAC,CAAA,MAAA,EAAS;AACRC,UAAAA,KAAK,EAAE;AADC,SAAT,EAEE,CAACe,SAAS,CAATA,WAAAA,CAHND,OAGMC,CAAD,CAFF,CADHD;AAKD;;AACD,aAAA,QAAA;AA9BK,KAAA;AAgCPE,IAAAA,2BAhCO,EAAA,SAAA,2BAAA,CAAA,IAAA,EAgC4B;AACjC,UAAI,KAAA,SAAA,IAAkB,CAACC,QAAQ,CAARA,kBAAAA,CAAAA,IAAAA,EAAkC,KAAA,KAAA,CAAlCA,KAAAA,EAAvB,IAAA,EAAiF;AAC/E,aAAA,UAAA;AACD;AAnCI,KAAA;AAqCPC,IAAAA,YArCO,EAAA,SAAA,YAAA,GAqCS;AACd,UAAI,KAAA,UAAA,GAAkBH,SAAS,CAA/B,aAAsBA,EAAtB,EAAiD;AAC/C,aAAA,UAAA,GAAkBA,SAAS,CAA3B,UAAkBA,EAAlB;AACD;AAxCI,KAAA;AA0CPI,IAAAA,sBA1CO,EAAA,SAAA,sBAAA,CAAA,IAAA,EA0CuB;AAC5B,UAAMC,SAAS,GAAGZ,IAAI,CAAJA,MAAAA,KAAlB,CAAA;;AACA,UAAA,SAAA,EAAe;AACbA,QAAAA,IAAI,CAAJA,eAAAA;AACD;AA9CI,KAAA;AAgDPa,IAAAA,kBAhDO,EAAA,SAAA,kBAAA,CAAA,IAAA,EAgDmB;AAAA,UAAA,MAAA,GAAA,IAAA;;AACxB,UAAMC,YAAY,GAAGd,IAAI,CAAzB,aAAA;AACA,UAAMhB,SAAS,GAAG,KAAA,KAAA,CAAlB,KAAA;;AAFwB,UAAA,qBAAA,GAGKyB,QAAQ,CAARA,kBAAAA,CAAAA,IAAAA,EAAAA,YAAAA,EAHL,YAGKA,CAHL;AAAA,UAGhBM,IAHgB,GAAA,qBAAA,CAAA,IAAA;AAAA,UAGVC,UAHU,GAAA,qBAAA,CAAA,UAAA;;AAIxB,UAAA,IAAA,EAAU;AACR,YAAA,SAAA,EAAe;AACbhC,UAAAA,SAAS,CAATA,OAAAA,CAAAA,MAAAA,GAAAA,GAAAA;AACD;;AACD,aAAA,SAAA,GAAA,KAAA;AACAiC,QAAAA,UAAU,CAAC,YAAM;AACf,cAAI,CAAA,SAAA,IAAcjC,SAAS,CAATA,OAAAA,CAAAA,MAAAA,KAAlB,GAAA,EAAoD;AAClD,YAAA,MAAI,CAAJ,aAAA,GAAA,KAAA;AACD;AAHO,SAAA,EAAViC,GAAU,CAAVA;AAKA,aAAA,KAAA,CAAA,gBAAA,EAA6B;AAAEjE,UAAAA,IAAI,EAAEgE,UAAU,CAAVA,YAAAA,CAAR,MAAQA,CAAR;AAAyCjB,UAAAA,MAAM,EAAEC;AAAjD,SAA7B;AACD;AA/DI,KAAA;AAiEPkB,IAAAA,qBAjEO,EAAA,SAAA,qBAAA,GAiEkB;AAAA,UAAA,MAAA,GAAA,IAAA;;AACvB,UAAMlC,SAAS,GAAG,KAAA,KAAA,CAAlB,KAAA;AACAA,MAAAA,SAAS,CAATA,OAAAA,CAAAA,MAAAA,GAAAA,GAAAA;;AACA,UAAI,CAAC,KAAL,MAAA,EAAkB;AAChB,aAAA,MAAA,GAAA,IAAA;;AACA,YAAI,KAAJ,QAAA,EAAmB;AACjBmC,UAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,SAAAA;AACD;AACF;;AACD,WAAA,QAAA,GAAgBF,UAAU,CAAC,YAAM;AAC/B,YAAIjC,SAAS,CAATA,OAAAA,CAAAA,MAAAA,KAAJ,GAAA,EAAsC;AACpC,UAAA,MAAI,CAAJ,eAAA;AADF,SAAA,MAEO;AACL,UAAA,MAAI,CAAJ,aAAA,GAAA,KAAA;AACD;AALuB,OAAA,EAA1B,GAA0B,CAA1B;AA1EK,KAAA;AAkFPoC,IAAAA,eAlFO,EAAA,SAAA,eAAA,GAkFY;AAAA,UAAA,MAAA,GAAA,IAAA;;AACjB,UAAMpC,SAAS,GAAG,KAAA,KAAA,CAAlB,KAAA;AACAA,MAAAA,SAAS,CAATA,OAAAA,CAAAA,MAAAA,GAAAA,GAAAA;AACA,WAAA,aAAA,GAAA,IAAA;AACAiC,MAAAA,UAAU,CAAC,YAAM;AACf,YAAIjC,SAAS,CAATA,OAAAA,CAAAA,MAAAA,KAAJ,GAAA,EAAsC;AACpC,UAAA,MAAI,CAAJ,SAAA,GAAA,IAAA;;AACA,UAAA,MAAI,CAAJ,YAAA;;AACA,UAAA,MAAI,CAAJ,eAAA;;AACAiC,UAAAA,UAAU,CAAC,YAAM;AACf,gBAAI,MAAI,CAAR,SAAA,EAAoB;AAClB,cAAA,MAAI,CAAJ,eAAA;AACD;AAHO,WAAA,EAAVA,EAAU,CAAVA;AAKD;AAVO,OAAA,EAAVA,EAAU,CAAVA;AAtFK,KAAA;AAmGPnB,IAAAA,eAnGO,EAAA,SAAA,eAAA,GAmGY;AACjB,WAAA,UAAA;AApGK,KAAA;AAsGPuB,IAAAA,UAtGO,EAAA,SAAA,UAAA,GAsGO;AAAA,UAAA,MAAA,GAAA,IAAA;;AACZ,UAAMrC,SAAS,GAAG,KAAA,KAAA,CAAlB,KAAA;AACAsC,MAAAA,YAAY,CAAC,KAAbA,QAAY,CAAZA;;AACA,UAAA,SAAA,EAAe;AACbtC,QAAAA,SAAS,CAATA,OAAAA,CAAAA,MAAAA,GAAAA,GAAAA;AACAiC,QAAAA,UAAU,CAAC,YAAM;AACf,cAAIjC,SAAS,CAATA,OAAAA,CAAAA,MAAAA,KAAJ,GAAA,EAAsC;AACpC,YAAA,MAAI,CAAJ,SAAA,GAAA,KAAA;AACAiC,YAAAA,UAAU,CAAC,YAAM;AACf,kBAAIjC,SAAS,CAATA,OAAAA,CAAAA,MAAAA,KAAJ,GAAA,EAAsC;AACpC,gBAAA,MAAI,CAAJ,aAAA,GAAA,KAAA;AACD;AAHO,aAAA,EAAViC,GAAU,CAAVA;AAKD;AARO,SAAA,EAAVA,GAAU,CAAVA;AAFF,OAAA,MAYO;AACL,aAAA,aAAA,GAAA,KAAA;AACA,aAAA,SAAA,GAAA,KAAA;AACD;AAxHI,KAAA;AA0HPM,IAAAA,eA1HO,EAAA,SAAA,eAAA,GA0HY;AAAA,UAAA,MAAA,GAAA,IAAA;;AACjB,aAAO,KAAA,SAAA,GAAA,IAAA,CAAsB,YAAM;AAAA,YACzBC,KADyB,GACkB,MADlB,CAAA,KAAA;AAAA,YAClBvD,QADkB,GACkB,MADlB,CAAA,QAAA;AAAA,YACRT,SADQ,GACkB,MADlB,CAAA,SAAA;AAAA,YACGc,UADH,GACkB,MADlB,CAAA,UAAA;AAEjC,YAAM0C,UAAU,GAAGQ,KAAK,CAAxB,IAAA;AACA,YAAMxC,SAAS,GAAGwC,KAAK,CAAvB,KAAA;;AACA,YAAIxC,SAAS,IAAb,UAAA,EAA6B;AAC3B,cAAMyC,YAAY,GAAGT,UAAU,CAA/B,YAAA;AACA,cAAMU,WAAW,GAAGV,UAAU,CAA9B,WAAA;AACA,cAAMW,WAAW,GAAG3C,SAAS,CAA7B,YAAA;AACA,cAAM4C,UAAU,GAAG5C,SAAS,CAA5B,WAAA;AACA,cAAM6C,UAAU,GAAhB,CAAA;AACA,cAAMtD,UAAU,GAAG;AACjBuD,YAAAA,MAAM,EAAExD;AADS,WAAnB;;AAN2B,cAAA,qBAAA,GASwCmC,QAAQ,CAARA,cAAAA,CATxC,UASwCA,CATxC;AAAA,cASnBsB,WATmB,GAAA,qBAAA,CAAA,WAAA;AAAA,cASNC,YATM,GAAA,qBAAA,CAAA,YAAA;AAAA,cASQC,aATR,GAAA,qBAAA,CAAA,aAAA;AAAA,cASuBC,YATvB,GAAA,qBAAA,CAAA,YAAA;;AAU3B,cAAI1D,cAAc,GAAlB,QAAA;;AACA,cAAA,QAAA,EAAc;AACZ,gBAAI2D,IAAI,GAAGH,YAAY,GAAZA,WAAAA,GAAX,UAAA;AACA,gBAAII,GAAG,GAAGL,WAAW,GAArB,YAAA;;AACA,gBAAIvE,SAAS,KAAb,KAAA,EAAyB;AACvBgB,cAAAA,cAAc,GAAdA,KAAAA;AACA4D,cAAAA,GAAG,GAAGL,WAAW,GAAjBK,WAAAA;AAFF,aAAA,MAGO,IAAI,CAAJ,SAAA,EAAgB;AACrB;AACA,kBAAIA,GAAG,GAAHA,WAAAA,GAAAA,UAAAA,GAAJ,aAAA,EAAoD;AAClD5D,gBAAAA,cAAc,GAAdA,KAAAA;AACA4D,gBAAAA,GAAG,GAAGL,WAAW,GAAjBK,WAAAA;AAJmB,eAAA,CAMrB;;;AACA,kBAAIA,GAAG,GAAP,UAAA,EAAsB;AACpB5D,gBAAAA,cAAc,GAAdA,QAAAA;AACA4D,gBAAAA,GAAG,GAAGL,WAAW,GAAjBK,YAAAA;AACD;AAhBS,aAAA,CAkBZ;;;AACA,gBAAID,IAAI,GAAJA,UAAAA,GAAAA,UAAAA,GAAJ,YAAA,EAAmD;AACjDA,cAAAA,IAAI,IAAIA,IAAI,GAAJA,UAAAA,GAAAA,UAAAA,GAARA,YAAAA;AApBU,aAAA,CAsBZ;;;AACA,gBAAIA,IAAI,GAAR,UAAA,EAAuB;AACrBA,cAAAA,IAAI,GAAJA,UAAAA;AACD;;AACDE,YAAAA,MAAM,CAANA,MAAAA,CAAAA,UAAAA,EAA0B;AACxBF,cAAAA,IAAI,EAAA,GAAA,MAAA,CAAA,IAAA,EADoB,IACpB,CADoB;AAExBG,cAAAA,KAAK,EAFmB,MAAA;AAGxBF,cAAAA,GAAG,EAAA,GAAA,MAAA,CAAA,GAAA,EAHqB,IAGrB,CAHqB;AAIxBG,cAAAA,QAAQ,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,IAAA;AAJgB,aAA1BF;AA1BF,WAAA,MAgCO;AACL,gBAAI7E,SAAS,KAAb,KAAA,EAAyB;AACvBgB,cAAAA,cAAc,GAAdA,KAAAA;AACAD,cAAAA,UAAU,CAAVA,MAAAA,GAAAA,GAAAA,MAAAA,CAAAA,YAAAA,EAAAA,IAAAA,CAAAA;AAFF,aAAA,MAGO,IAAI,CAAJ,SAAA,EAAgB;AACrB;AACA,kBAAIwD,WAAW,GAAXA,YAAAA,GAAAA,WAAAA,GAAJ,aAAA,EAA8D;AAC5D;AACA,oBAAIA,WAAW,GAAXA,YAAAA,GAAAA,WAAAA,GAAJ,UAAA,EAA2D;AACzDvD,kBAAAA,cAAc,GAAdA,KAAAA;AACAD,kBAAAA,UAAU,CAAVA,MAAAA,GAAAA,GAAAA,MAAAA,CAAAA,YAAAA,EAAAA,IAAAA,CAAAA;AACD;AACF;AACF;AACF;;AACD,UAAA,MAAI,CAAJ,UAAA,GAAA,UAAA;AACA,UAAA,MAAI,CAAJ,cAAA,GAAA,cAAA;AACA,iBAAO,MAAI,CAAX,SAAO,EAAP;AACD;AAjEH,OAAO,CAAP;AA3HK,KAAA;AA+LPiE,IAAAA,KA/LO,EAAA,SAAA,KAAA,GA+LE;AACP,WAAA,GAAA,CAAA,KAAA;AACA,aAAO,KAAP,SAAO,EAAP;AAjMK,KAAA;AAmMPC,IAAAA,IAnMO,EAAA,SAAA,IAAA,GAmMC;AACN,WAAA,GAAA,CAAA,IAAA;AACA,aAAO,KAAP,SAAO,EAAP;AACD;AAtMM;AA7HI,CAAf","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport GlobalConfig from '../../v-x-e-table/src/conf'\r\nimport vSize from '../../mixins/size'\r\nimport { UtilTools, DomTools, GlobalEvent } from '../../tools'\r\n\r\nexport default {\r\n  name: 'VxeButton',\r\n  mixins: [vSize],\r\n  props: {\r\n    type: String,\r\n    size: { type: String, default: () => GlobalConfig.button.size || GlobalConfig.size },\r\n    name: [String, Number],\r\n    content: String,\r\n    placement: String,\r\n    status: String,\r\n    icon: String,\r\n    round: Boolean,\r\n    circle: Boolean,\r\n    disabled: Boolean,\r\n    loading: Boolean,\r\n    destroyOnClose: Boolean,\r\n    className: String,\r\n    transfer: { type: Boolean, default: () => GlobalConfig.button.transfer }\r\n  },\r\n  data () {\r\n    return {\r\n      inited: false,\r\n      showPanel: false,\r\n      animatVisible: false,\r\n      panelIndex: 0,\r\n      panelStyle: null,\r\n      panelPlacement: null\r\n    }\r\n  },\r\n  computed: {\r\n    isText () {\r\n      return this.type === 'text'\r\n    },\r\n    isFormBtn () {\r\n      return ['submit', 'reset', 'button'].indexOf(this.type) > -1\r\n    },\r\n    btnType () {\r\n      return this.isText ? this.type : 'button'\r\n    }\r\n  },\r\n  created () {\r\n    GlobalEvent.on(this, 'mousewheel', this.handleGlobalMousewheelEvent)\r\n  },\r\n  beforeDestroy () {\r\n    const panelElem = this.$refs.panel\r\n    if (panelElem && panelElem.parentNode) {\r\n      panelElem.parentNode.removeChild(panelElem)\r\n    }\r\n  },\r\n  destroyed () {\r\n    GlobalEvent.off(this, 'mousewheel')\r\n  },\r\n  render (h) {\r\n    const { $scopedSlots, $listeners, className, inited, type, destroyOnClose, isFormBtn, status, btnType, vSize, name, disabled, loading, showPanel, animatVisible, panelPlacement } = this\r\n    const downsSlot = $scopedSlots.dropdowns\r\n    return downsSlot ? h('div', {\r\n      class: ['vxe-button--dropdown', className, {\r\n        [`size--${vSize}`]: vSize,\r\n        'is--active': showPanel\r\n      }]\r\n    }, [\r\n      h('button', {\r\n        ref: 'xBtn',\r\n        class: ['vxe-button', `type--${btnType}`, {\r\n          [`size--${vSize}`]: vSize,\r\n          [`skin--${status}`]: status,\r\n          'is--round': this.round,\r\n          'is--circle': this.circle,\r\n          'is--disabled': disabled || loading,\r\n          'is--loading': loading\r\n        }],\r\n        attrs: {\r\n          name,\r\n          type: isFormBtn ? type : 'button',\r\n          disabled: disabled || loading\r\n        },\r\n        on: Object.assign({\r\n          mouseenter: this.mouseenterTargetEvent,\r\n          mouseleave: this.mouseleaveEvent\r\n        }, XEUtils.objectMap($listeners, (cb, type) => evnt => this.$emit(type, { $event: evnt })))\r\n      }, this.renderContent(h).concat([\r\n        h('i', {\r\n          class: `vxe-button--dropdown-arrow ${GlobalConfig.icon.BUTTON_DROPDOWN}`\r\n        })\r\n      ])),\r\n      h('div', {\r\n        ref: 'panel',\r\n        class: ['vxe-button--dropdown-panel', {\r\n          [`size--${vSize}`]: vSize,\r\n          'animat--leave': animatVisible,\r\n          'animat--enter': showPanel\r\n        }],\r\n        attrs: {\r\n          placement: panelPlacement\r\n        },\r\n        style: this.panelStyle\r\n      }, inited ? [\r\n        h('div', {\r\n          class: 'vxe-button--dropdown-wrapper',\r\n          on: {\r\n            mousedown: this.mousedownDropdownEvent,\r\n            click: this.clickDropdownEvent,\r\n            mouseenter: this.mouseenterEvent,\r\n            mouseleave: this.mouseleaveEvent\r\n          }\r\n        }, destroyOnClose && !showPanel ? [] : downsSlot.call(this, {}, h))\r\n      ] : null)\r\n    ]) : h('button', {\r\n      ref: 'xBtn',\r\n      class: ['vxe-button', `type--${btnType}`, className, {\r\n        [`size--${vSize}`]: vSize,\r\n        [`skin--${status}`]: status,\r\n        'is--round': this.round,\r\n        'is--circle': this.circle,\r\n        'is--disabled': disabled || loading,\r\n        'is--loading': loading\r\n      }],\r\n      attrs: {\r\n        name,\r\n        type: isFormBtn ? type : 'button',\r\n        disabled: disabled || loading\r\n      },\r\n      on: XEUtils.objectMap($listeners, (cb, type) => evnt => this.$emit(type, { $event: evnt }))\r\n    }, this.renderContent(h))\r\n  },\r\n  methods: {\r\n    renderContent (h) {\r\n      const { $scopedSlots, content, icon, loading } = this\r\n      const contents = []\r\n      if (loading) {\r\n        contents.push(\r\n          h('i', {\r\n            class: ['vxe-button--loading-icon', GlobalConfig.icon.BUTTON_LOADING]\r\n          })\r\n        )\r\n      } else if (icon) {\r\n        contents.push(\r\n          h('i', {\r\n            class: ['vxe-button--icon', icon]\r\n          })\r\n        )\r\n      }\r\n      if ($scopedSlots.default) {\r\n        contents.push(\r\n          h('span', {\r\n            class: 'vxe-button--content'\r\n          }, $scopedSlots.default.call(this))\r\n        )\r\n      } else if (content) {\r\n        contents.push(\r\n          h('span', {\r\n            class: 'vxe-button--content'\r\n          }, [UtilTools.getFuncText(content)])\r\n        )\r\n      }\r\n      return contents\r\n    },\r\n    handleGlobalMousewheelEvent (evnt) {\r\n      if (this.showPanel && !DomTools.getEventTargetNode(evnt, this.$refs.panel).flag) {\r\n        this.closePanel()\r\n      }\r\n    },\r\n    updateZindex () {\r\n      if (this.panelIndex < UtilTools.getLastZIndex()) {\r\n        this.panelIndex = UtilTools.nextZIndex()\r\n      }\r\n    },\r\n    mousedownDropdownEvent (evnt) {\r\n      const isLeftBtn = evnt.button === 0\r\n      if (isLeftBtn) {\r\n        evnt.stopPropagation()\r\n      }\r\n    },\r\n    clickDropdownEvent (evnt) {\r\n      const dropdownElem = evnt.currentTarget\r\n      const panelElem = this.$refs.panel\r\n      const { flag, targetElem } = DomTools.getEventTargetNode(evnt, dropdownElem, 'vxe-button')\r\n      if (flag) {\r\n        if (panelElem) {\r\n          panelElem.dataset.active = 'N'\r\n        }\r\n        this.showPanel = false\r\n        setTimeout(() => {\r\n          if (!panelElem || panelElem.dataset.active !== 'Y') {\r\n            this.animatVisible = false\r\n          }\r\n        }, 350)\r\n        this.$emit('dropdown-click', { name: targetElem.getAttribute('name'), $event: evnt })\r\n      }\r\n    },\r\n    mouseenterTargetEvent () {\r\n      const panelElem = this.$refs.panel\r\n      panelElem.dataset.active = 'Y'\r\n      if (!this.inited) {\r\n        this.inited = true\r\n        if (this.transfer) {\r\n          document.body.appendChild(panelElem)\r\n        }\r\n      }\r\n      this.showTime = setTimeout(() => {\r\n        if (panelElem.dataset.active === 'Y') {\r\n          this.mouseenterEvent()\r\n        } else {\r\n          this.animatVisible = false\r\n        }\r\n      }, 250)\r\n    },\r\n    mouseenterEvent () {\r\n      const panelElem = this.$refs.panel\r\n      panelElem.dataset.active = 'Y'\r\n      this.animatVisible = true\r\n      setTimeout(() => {\r\n        if (panelElem.dataset.active === 'Y') {\r\n          this.showPanel = true\r\n          this.updateZindex()\r\n          this.updatePlacement()\r\n          setTimeout(() => {\r\n            if (this.showPanel) {\r\n              this.updatePlacement()\r\n            }\r\n          }, 50)\r\n        }\r\n      }, 20)\r\n    },\r\n    mouseleaveEvent () {\r\n      this.closePanel()\r\n    },\r\n    closePanel () {\r\n      const panelElem = this.$refs.panel\r\n      clearTimeout(this.showTime)\r\n      if (panelElem) {\r\n        panelElem.dataset.active = 'N'\r\n        setTimeout(() => {\r\n          if (panelElem.dataset.active !== 'Y') {\r\n            this.showPanel = false\r\n            setTimeout(() => {\r\n              if (panelElem.dataset.active !== 'Y') {\r\n                this.animatVisible = false\r\n              }\r\n            }, 350)\r\n          }\r\n        }, 100)\r\n      } else {\r\n        this.animatVisible = false\r\n        this.showPanel = false\r\n      }\r\n    },\r\n    updatePlacement () {\r\n      return this.$nextTick().then(() => {\r\n        const { $refs, transfer, placement, panelIndex } = this\r\n        const targetElem = $refs.xBtn\r\n        const panelElem = $refs.panel\r\n        if (panelElem && targetElem) {\r\n          const targetHeight = targetElem.offsetHeight\r\n          const targetWidth = targetElem.offsetWidth\r\n          const panelHeight = panelElem.offsetHeight\r\n          const panelWidth = panelElem.offsetWidth\r\n          const marginSize = 5\r\n          const panelStyle = {\r\n            zIndex: panelIndex\r\n          }\r\n          const { boundingTop, boundingLeft, visibleHeight, visibleWidth } = DomTools.getAbsolutePos(targetElem)\r\n          let panelPlacement = 'bottom'\r\n          if (transfer) {\r\n            let left = boundingLeft + targetWidth - panelWidth\r\n            let top = boundingTop + targetHeight\r\n            if (placement === 'top') {\r\n              panelPlacement = 'top'\r\n              top = boundingTop - panelHeight\r\n            } else if (!placement) {\r\n              // 如果下面不够放，则向上\r\n              if (top + panelHeight + marginSize > visibleHeight) {\r\n                panelPlacement = 'top'\r\n                top = boundingTop - panelHeight\r\n              }\r\n              // 如果上面不够放，则向下（优先）\r\n              if (top < marginSize) {\r\n                panelPlacement = 'bottom'\r\n                top = boundingTop + targetHeight\r\n              }\r\n            }\r\n            // 如果溢出右边\r\n            if (left + panelWidth + marginSize > visibleWidth) {\r\n              left -= left + panelWidth + marginSize - visibleWidth\r\n            }\r\n            // 如果溢出左边\r\n            if (left < marginSize) {\r\n              left = marginSize\r\n            }\r\n            Object.assign(panelStyle, {\r\n              left: `${left}px`,\r\n              right: 'auto',\r\n              top: `${top}px`,\r\n              minWidth: `${targetWidth}px`\r\n            })\r\n          } else {\r\n            if (placement === 'top') {\r\n              panelPlacement = 'top'\r\n              panelStyle.bottom = `${targetHeight}px`\r\n            } else if (!placement) {\r\n              // 如果下面不够放，则向上\r\n              if (boundingTop + targetHeight + panelHeight > visibleHeight) {\r\n                // 如果上面不够放，则向下（优先）\r\n                if (boundingTop - targetHeight - panelHeight > marginSize) {\r\n                  panelPlacement = 'top'\r\n                  panelStyle.bottom = `${targetHeight}px`\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.panelStyle = panelStyle\r\n          this.panelPlacement = panelPlacement\r\n          return this.$nextTick()\r\n        }\r\n      })\r\n    },\r\n    focus () {\r\n      this.$el.focus()\r\n      return this.$nextTick()\r\n    },\r\n    blur () {\r\n      this.$el.blur()\r\n      return this.$nextTick()\r\n    }\r\n  }\r\n}\r\n"]}]}