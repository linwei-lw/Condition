{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\form\\src\\util.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\form\\src\\util.js","mtime":1635230121844},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport XEUtils from 'xe-utils';\nimport VXETable from \"../../v-x-e-table\";\nimport { UtilTools } from \"../../tools\";\n\nvar ItemConfig =\n/*#__PURE__*/\nfunction () {\n  function ItemConfig($xeform, item) {\n    _classCallCheck(this, ItemConfig);\n\n    Object.assign(this, {\n      id: XEUtils.uniqueId('item_'),\n      title: item.title,\n      field: item.field,\n      span: item.span,\n      align: item.align,\n      titleAlign: item.titleAlign,\n      titleWidth: item.titleWidth,\n      titlePrefix: item.titlePrefix,\n      titleSuffix: item.titleSuffix,\n      titleOverflow: item.titleOverflow,\n      resetValue: item.resetValue,\n      visible: item.visible,\n      visibleMethod: item.visibleMethod,\n      folding: item.folding,\n      collapseNode: item.collapseNode,\n      className: item.className,\n      itemRender: item.itemRender,\n      // 渲染属性\n      showError: false,\n      errRule: null,\n      slots: item.slots,\n      children: []\n    });\n\n    if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n      var compConf = item.itemRender ? VXETable.renderer.get(item.itemRender.name) : null;\n\n      if (compConf && !compConf.renderItemContent && compConf.renderItem) {\n        UtilTools.warn('vxe.error.delProp', ['item-render.renderItem', 'item-render.renderItemContent']);\n      }\n    }\n  }\n\n  _createClass(ItemConfig, [{\n    key: \"update\",\n    value: function update(name, value) {\n      this[name] = value;\n    }\n  }]);\n\n  return ItemConfig;\n}();\n\nexport function isItem(option) {\n  return option instanceof ItemConfig;\n}\nexport function getItemConfig($xeform, _vm, options) {\n  return isItem(_vm) ? _vm : new ItemConfig($xeform, _vm, options);\n}\nexport function createItem($xeform, _vm) {\n  return getItemConfig($xeform, _vm);\n}\nexport function destroyItem(_vm) {\n  var $xeform = _vm.$xeform,\n      itemConfig = _vm.itemConfig;\n  var matchObj = XEUtils.findTree($xeform.staticItems, function (option) {\n    return option === itemConfig;\n  });\n\n  if (matchObj) {\n    matchObj.items.splice(matchObj.index, 1);\n  }\n}\nexport function assemItem(_vm) {\n  var $el = _vm.$el,\n      $xeform = _vm.$xeform,\n      xeformgather = _vm.xeformgather,\n      itemConfig = _vm.itemConfig;\n  var itemGather = xeformgather ? xeformgather.itemConfig : null;\n  itemConfig.slots = _vm.$scopedSlots;\n\n  if (itemGather) {\n    if (!itemGather.children) {\n      itemGather.children = [];\n    }\n\n    itemGather.children.splice([].indexOf.call(xeformgather.$el.children, $el), 0, itemConfig);\n  } else {\n    $xeform.staticItems.splice([].indexOf.call($xeform.$refs.hideItem.children, $el), 0, itemConfig);\n  }\n}",{"version":3,"sources":["D:\\cdRule\\src\\components\\Table\\form\\src\\util.js"],"names":["ItemConfig","Object","id","XEUtils","title","item","field","span","align","titleAlign","titleWidth","titlePrefix","titleSuffix","titleOverflow","resetValue","visible","visibleMethod","folding","collapseNode","className","itemRender","showError","errRule","slots","children","process","compConf","VXETable","UtilTools","name","value","option","isItem","getItemConfig","$xeform","itemConfig","_vm","matchObj","$el","xeformgather","itemGather"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\r\nimport VXETable from '../../v-x-e-table'\r\nimport { UtilTools } from '../../tools'\r\n\r\nclass ItemConfig {\r\n  constructor ($xeform, item) {\r\n    Object.assign(this, {\r\n      id: XEUtils.uniqueId('item_'),\r\n      title: item.title,\r\n      field: item.field,\r\n      span: item.span,\r\n      align: item.align,\r\n      titleAlign: item.titleAlign,\r\n      titleWidth: item.titleWidth,\r\n      titlePrefix: item.titlePrefix,\r\n      titleSuffix: item.titleSuffix,\r\n      titleOverflow: item.titleOverflow,\r\n      resetValue: item.resetValue,\r\n      visible: item.visible,\r\n      visibleMethod: item.visibleMethod,\r\n      folding: item.folding,\r\n      collapseNode: item.collapseNode,\r\n      className: item.className,\r\n      itemRender: item.itemRender,\r\n      // 渲染属性\r\n      showError: false,\r\n      errRule: null,\r\n      slots: item.slots,\r\n      children: []\r\n    })\r\n    if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\r\n      const compConf = item.itemRender ? VXETable.renderer.get(item.itemRender.name) : null\r\n      if (compConf && !compConf.renderItemContent && compConf.renderItem) {\r\n        UtilTools.warn('vxe.error.delProp', ['item-render.renderItem', 'item-render.renderItemContent'])\r\n      }\r\n    }\r\n  }\r\n\r\n  update (name, value) {\r\n    this[name] = value\r\n  }\r\n}\r\n\r\nexport function isItem (option) {\r\n  return option instanceof ItemConfig\r\n}\r\n\r\nexport function getItemConfig ($xeform, _vm, options) {\r\n  return isItem(_vm) ? _vm : new ItemConfig($xeform, _vm, options)\r\n}\r\n\r\nexport function createItem ($xeform, _vm) {\r\n  return getItemConfig($xeform, _vm)\r\n}\r\n\r\nexport function destroyItem (_vm) {\r\n  const { $xeform, itemConfig } = _vm\r\n  const matchObj = XEUtils.findTree($xeform.staticItems, option => option === itemConfig)\r\n  if (matchObj) {\r\n    matchObj.items.splice(matchObj.index, 1)\r\n  }\r\n}\r\n\r\nexport function assemItem (_vm) {\r\n  const { $el, $xeform, xeformgather, itemConfig } = _vm\r\n  const itemGather = xeformgather ? xeformgather.itemConfig : null\r\n  itemConfig.slots = _vm.$scopedSlots\r\n  if (itemGather) {\r\n    if (!itemGather.children) {\r\n      itemGather.children = []\r\n    }\r\n    itemGather.children.splice([].indexOf.call(xeformgather.$el.children, $el), 0, itemConfig)\r\n  } else {\r\n    $xeform.staticItems.splice([].indexOf.call($xeform.$refs.hideItem.children, $el), 0, itemConfig)\r\n  }\r\n}\r\n"]}]}