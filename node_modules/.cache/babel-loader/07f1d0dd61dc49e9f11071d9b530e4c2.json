{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\checkbox\\src\\group.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\checkbox\\src\\group.js","mtime":1635230121002},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import GlobalConfig from '../../v-x-e-table/src/conf';\nexport default {\n  name: 'VxeCheckboxGroup',\n  props: {\n    value: Array,\n    disabled: Boolean,\n    size: {\n      type: String,\n      default: () => GlobalConfig.checkbox.size || GlobalConfig.size\n    }\n  },\n\n  provide() {\n    return {\n      $xecheckboxgroup: this\n    };\n  },\n\n  computed: {\n    vSize() {\n      return this.size || this.$parent.size || this.$parent.vSize;\n    }\n\n  },\n\n  render(h) {\n    const $scopedSlots = this.$scopedSlots;\n    return h('div', {\n      class: 'vxe-checkbox-group'\n    }, $scopedSlots.default ? $scopedSlots.default.call(this, {}) : []);\n  },\n\n  methods: {\n    handleChecked(params) {\n      const checked = params.checked,\n            label = params.label;\n      const checklist = this.value || [];\n      const checkIndex = checklist.indexOf(label);\n\n      if (checked) {\n        if (checkIndex === -1) {\n          checklist.push(label);\n        }\n      } else {\n        checklist.splice(checkIndex, 1);\n      }\n\n      this.$emit('input', checklist);\n      this.$emit('change', Object.assign({\n        checklist\n      }, params));\n    }\n\n  }\n};",null]}