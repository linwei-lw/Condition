{"remainingRequest":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Split.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Split.vue","mtime":1653698569423},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { domLeft, domTop } from '@/components/util/Dom.js';\nimport Storage from '@/common/cache/Storage.js';\nexport default {\n  name: \"Split\",\n  props: {\n    leftRef: String,\n    //左右模式下：左边ref\n    rightRef: String,\n    //左右模式下：右边ref\n    leftWidth: {\n      type: String,\n      default: '20%'\n    },\n    //左右模式下：左边宽度百分比\n    minWidth: {\n      type: Number,\n      default: 20\n    },\n    //左右模式下：调整的最小宽度\n    topRef: String,\n    //上下模式下：上边ref\n    bottomRef: String,\n    //上下模式下：下边ref\n    topHeight: {\n      type: String,\n      default: '65%'\n    },\n    //上下模式下：上边高度百分比\n    bottomHeight: {\n      type: String,\n      default: null\n    },\n    //上下模式下：下边高度百分比\n    minSide: {\n      type: String,\n      default: 'left'\n    },\n    //最小化方向，左右模式：left/right/both，上下模式：top/bottom/both\n    min: {\n      type: Boolean,\n      default: false\n    },\n    //开始就最小化\n    minable: {\n      type: Boolean,\n      default: true\n    },\n    //允许最小化\n    id: String,\n    //组件唯一ID，swapable和stateful需要用到\n    resizable: {\n      type: Boolean,\n      default: true\n    },\n    //是否可调整大小\n    swapable: {\n      type: Boolean,\n      default: false\n    },\n    //左右两边是否可交换\n    minstate: {\n      type: Boolean,\n      default: false\n    },\n    //是否还原上次的最小化状态\n    inwindow: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      model: '',\n      //h左右　v上下\n      expand: true,\n      expandL: true,\n      expandR: true,\n      expandT: true,\n      expandB: true,\n      dragging: false,\n      hideSide: null,\n      hover: false\n    };\n  },\n  watch: {\n    dragging: function dragging(v) {\n      document[v ? 'addEventListener' : 'removeEventListener']('mousemove', this.model == 'h' ? this.onDragingH : this.onDragingV);\n      document[v ? 'addEventListener' : 'removeEventListener']('mouseup', this.model == 'h' ? this.onDragEndH : this.onDragEndV);\n    },\n    expand: function expand(v) {\n      this.minstate && this.id && Storage.set(this.id + '_min', !v);\n      this.$emit(\"expand\", v);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this._onResize && window.removeResizeListener(this._resize_el, this._onResize);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.hideSide = this.minSide;\n    this.model = this.leftRef ? 'h' : 'v';\n    this.offset = this.leftRef ? this.minWidth : 20;\n    this.$nextTick(function () {\n      var parent = _this.inwindow ? _this.$parent.$parent : _this.$parent;\n\n      if (_this.model == 'h') {\n        //水平\n        _this._leftEl = parent.$refs[_this.leftRef];\n        _this._leftEl = _this._leftEl.$el || _this._leftEl;\n        _this._rightEl = parent.$refs[_this.rightRef];\n        _this._rightEl = _this._rightEl.$el || _this._rightEl;\n        _this._leftEl.style.width = _this.leftWidth;\n        _this._rightEl.style.width = \"calc(100% - \".concat(_this.leftWidth, \" - 8px)\");\n        _this.$el.style.left = \"calc(\".concat(_this._leftEl.style.width, \" - 1px)\");\n        _this.swapable && _this.id && _this.hideSide != Storage.get(_this.id + '_swap', _this.hideSide) && _this.swap();\n\n        if (_this.minWidth > 20) {\n          _this._resize_el = _this[\"_\".concat(_this.hideSide, \"El\")];\n\n          _this._onResize = function () {\n            if (_this._resize_el.clientWidth < _this.minWidth) {\n              var lw, rw, ml;\n\n              if (_this.hideSide == 'left') {\n                lw = _this.minWidth + 'px';\n                rw = \"calc(100% - \".concat(_this.minWidth + 8, \"px)\");\n                ml = \"\".concat(_this.minWidth - 1, \"px\");\n              } else {\n                rw = _this.minWidth + 'px';\n                lw = \"calc(100% - \".concat(_this.minWidth + 8, \"px)\");\n                ml = \"calc(100% - \".concat(_this.minWidth + 9, \"px)\");\n              }\n\n              _this._leftEl.style.width = lw;\n              _this._rightEl.style.width = rw;\n              _this.$el.style.left = ml;\n            }\n          };\n\n          _this._onResize();\n\n          window.addResizeListener(_this._resize_el, _this._onResize);\n        }\n      } else {\n        //垂直\n        _this._topEl = parent.$refs[_this.topRef];\n        _this._topEl = _this._topEl.$el || _this._topEl;\n        _this._bottomEl = parent.$refs[_this.bottomRef];\n        _this._bottomEl = _this._bottomEl.$el || _this._bottomEl;\n\n        if (_this.bottomHeight) {\n          _this._bottomEl.style.height = _this.bottomHeight;\n          _this._topEl.style.height = \"calc(100% - \".concat(_this.bottomHeight, \" - 8px)\");\n          _this._topEl.style['margin-bottom'] = '8px';\n          _this.$el.style.top = \"calc(\".concat(_this._topEl.style.height, \" - 1px)\");\n        } else {\n          _this._topEl.style.height = _this.topHeight;\n          _this._topEl.style['margin-bottom'] = '8px';\n          _this._bottomEl.style.height = \"calc(100% - \".concat(_this.topHeight, \" - 8px)\");\n          _this.$el.style.top = \"calc(\".concat(_this._topEl.style.height, \" - 1px)\");\n        }\n      }\n\n      if (_this.minstate && _this.id) {\n        Storage.get(_this.id + '_min', _this.min) && _this.hide();\n      } else {\n        _this.min && _this.hide();\n      }\n    });\n  },\n  methods: {\n    hide: function hide() {\n      if (this.hideSide == 'both' || !this.expand) return;\n\n      switch (this.hideSide) {\n        case 'left':\n          return this.toogleL();\n\n        case 'right':\n          return this.toogleR();\n\n        case 'top':\n          return this.toogleT();\n\n        case 'bottom':\n          return this.toogleB();\n      }\n    },\n    toogleL: function toogleL() {\n      this.expand = !this.expand;\n\n      if (this.expand) {\n        this._leftEl.style.display = this._leftDisplay;\n        this._rightEl.style.width = this._rightWidth;\n        this.$el.style.left = \"calc(\".concat(this._leftEl.style.width, \" - 1px\");\n      } else {\n        this._leftDisplay = this._leftEl.style.display;\n        this._rightWidth = this._rightEl.style.width;\n\n        this._leftEl.style.setProperty(\"display\", \"none\", \"important\");\n\n        this._rightEl.style.width = '100%';\n        this.$el.style.left = '0px';\n      }\n\n      this.$emit('change', {\n        toogle: true,\n        left: this.expandL,\n        right: this.expandR\n      });\n    },\n    toogleR: function toogleR() {\n      this.expand = !this.expand;\n\n      if (this.expand) {\n        this._rightEl.style.display = this._rightDisplay;\n        this._leftEl.style.width = this._leftWidth;\n        this.$el.style.left = \"calc(\".concat(this._leftEl.style.width, \" - 1px\");\n      } else {\n        this._rightDisplay = this._rightEl.style.display;\n        this._leftWidth = this._leftEl.style.width;\n\n        this._rightEl.style.setProperty(\"display\", \"none\", \"important\");\n\n        this._leftEl.style.width = '100%';\n        this.$el.style.left = 'calc(100% - 10px)';\n      }\n\n      this.$emit('change', {\n        toogle: true,\n        left: this.expandL,\n        right: this.expandR\n      });\n    },\n    toogleT: function toogleT() {\n      this.expand = !this.expand;\n\n      if (this.expand) {\n        this._topEl.style.display = this._topDisplay;\n        this._bottomEl.style.height = this._bottomHeight;\n        this.$el.style.top = \"calc(\".concat(this._topEl.style.height, \" - 1px\");\n      } else {\n        this._topDisplay = this._topEl.style.display;\n        this._bottomHeight = this._bottomEl.style.height;\n\n        this._topEl.style.setProperty(\"display\", \"none\", \"important\");\n\n        this._bottomEl.style.height = '100%';\n        this.$el.style.top = '0px';\n      }\n\n      this.$emit('change', {\n        toogle: true,\n        top: this.expandT,\n        bottom: this.expandB\n      });\n    },\n    toogleB: function toogleB() {\n      this.expand = !this.expand;\n\n      if (this.expand) {\n        this._bottomEl.style.display = this._bottomDisplay;\n        this._topEl.style.height = this._topHeight;\n        this.$el.style.top = \"calc(\".concat(this._topEl.style.height, \" - 1px\");\n      } else {\n        this._bottomDisplay = this._bottomEl.style.display;\n        this._topHeight = this._topEl.style.height;\n\n        this._bottomEl.style.setProperty(\"display\", \"none\", \"important\");\n\n        this._topEl.style.height = '100%';\n        this.$el.style.top = 'calc(100% - 10px)';\n      }\n\n      this.$emit('change', {\n        toogle: true,\n        top: this.expandT,\n        bottom: this.expandB\n      });\n    },\n    onDragStartH: function onDragStartH(e) {\n      this.dragging = true;\n      this._divX = e.clientX - domLeft(this.$el) + domLeft(this.$el.parentNode);\n      this._maxX = this.$el.parentNode.clientWidth - this.offset;\n      e.preventDefault();\n    },\n    onDragingH: function onDragingH(e) {\n      this.$el.style.left = Math.min(this._maxX, Math.max(e.clientX - this._divX, this.offset)) + 'px';\n    },\n    onDragEndH: function onDragEndH(e) {\n      this.dragging = false;\n      var left = Math.min(this._maxX, Math.max(e.clientX - this._divX, this.offset));\n\n      var _leftWidth = left * 100 / (this._maxX + this.offset);\n\n      this._leftEl.style.width = _leftWidth + '%';\n      this._rightEl.style.width = \"calc(\".concat(100 - _leftWidth, \"% - 8px\");\n      this.$el.style.left = \"calc(\".concat(this._leftEl.style.width, \" - 1px\");\n      this.$emit('change', {\n        drag: true\n      });\n    },\n    onDragStartV: function onDragStartV(e) {\n      this.dragging = true;\n      this._divY = e.clientY - domTop(this.$el) + domTop(this.$el.parentNode);\n      this._maxY = this.$el.parentNode.clientHeight - this.offset;\n      e.preventDefault();\n    },\n    onDragingV: function onDragingV(e) {\n      this.$el.style.top = Math.min(this._maxY, Math.max(e.clientY - this._divY, this.offset)) + 'px';\n    },\n    onDragEndV: function onDragEndV(e) {\n      this.dragging = false;\n      var top = Math.min(this._maxY, Math.max(e.clientY - this._divY, this.offset));\n\n      var _topHeight = top * 100 / (this._maxY + this.offset);\n\n      this._topEl.style.height = _topHeight + '%';\n      this._bottomEl.style.height = \"calc(\".concat(100 - _topHeight, \"% - 8px\");\n      this.$el.style.top = \"calc(\".concat(this._topEl.style.height, \" - 1px\");\n      this.$emit('change', {\n        drag: true\n      });\n    },\n    swap: function swap() {\n      this._leftEl.style.float = 'right';\n      this._rightEl.style.float = 'left';\n      var l = this._leftEl;\n      this._leftEl = this._rightEl;\n      this._rightEl = l;\n      this.$el.style.left = \"calc(\".concat(this._leftEl.style.width, \" - 1px)\");\n      this.hideSide = this.hideSide == 'left' ? 'right' : 'left';\n      this.id && Storage.set(this.id + '_swap', this.hideSide);\n    }\n  }\n};",{"version":3,"sources":["Split.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!--水平-->\r\n  <div v-if=\"model=='h'\" @mouseenter=\"hover=true\" @mouseleave=\"hover=false\" @mousedown=\"expand && resizable && onDragStartH($event)\" :class=\"[$style.horizontal, dragging && $style.draggingH]\" :style=\"{cursor:expand&&resizable?'w-resize':'default'}\">\r\n    <img v-if=\"minable&&hideSide=='left'\"  @mousedown.stop=\"\" @click=\"toogleL\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:calc(50% - 40px);position:absolute;\" :style=\"{transform:`rotate(${expand?0:180}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='right'\" @mousedown.stop=\"\" @click=\"toogleR\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:calc(50% - 40px);position:absolute;right:0px;\" :style=\"{transform:`rotate(${expand?180:0}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandR\"  @mousedown.stop=\"\" @click=\"expandL=!expandL;toogleL()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;position:absolute;\" :style=\"{transform:`rotate(${expand?0:180}deg)`,top:`calc(50% - ${expand?80:40}px)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandL\"  @mousedown.stop=\"\" @click=\"expandR=!expandR;toogleR()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;position:absolute;\" :style=\"{transform:`rotate(${expand?180:0}deg)`,top:`calc(50% - ${expand?0:40}px)`}\"/>\r\n\r\n    <slot :hover='hover' :hideSide='hideSide' :expand='expand'></slot>\r\n\r\n    <!--左右布局对换按钮-->\r\n    <Button v-if=\"swapable && hideSide!='both' && hover && expand\" @mousedown.stop=\"e=>e.preventDefault()\" @click=\"swap()\" :title=\"$_L.get('左右布局对换')\" :borderColor=\"theme.border_color_dark\" icon=\"el-icon-refresh\" padding=\"0 2px\" :height=\"22\" radius=\"11px\" :style=\"{zIndex:theme.zindex()}\" style=\"position:fixed;top:calc(50% + 65px);margin-left:-6px;\"/>\r\n  </div>\r\n  \r\n  <!--垂直-->\r\n  <div v-else-if=\"model=='v'\" @mousedown=\"expand && resizable && onDragStartV($event)\" :class=\"[$style.vertical, dragging && $style.draggingV]\" :style=\"{cursor:expand&&resizable?'n-resize':'default'}\">\r\n    <img v-if=\"minable&&hideSide=='bottom'\" @mousedown.stop=\"\" @click=\"toogleB\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;left:calc(50% - 5px);top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?-90:90}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='top'\"    @mousedown.stop=\"\" @click=\"toogleT\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;left:calc(50% - 5px);top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?90:-90}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandT\" @mousedown.stop=\"\" @click=\"expandB=!expandB;toogleB()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?-90:90}deg)`,left:`calc(50% - ${expand?45:5}px)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandB\" @mousedown.stop=\"\" @click=\"expandT=!expandT;toogleT()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?90:-90}deg)`,left:`calc(50% - ${expand?-35:5}px)`}\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { domLeft, domTop }  from '@/components/util/Dom.js';\r\n  import Storage              from '@/common/cache/Storage.js';\r\n\r\n  export default {\r\n    name: \"Split\",\r\n    props: {\r\n      leftRef: String,                                //左右模式下：左边ref\r\n      rightRef: String,                               //左右模式下：右边ref\r\n      leftWidth: { type: String, default: '20%'},     //左右模式下：左边宽度百分比\r\n      minWidth:  { type: Number, default: 20},        //左右模式下：调整的最小宽度\r\n\r\n      topRef: String,                                 //上下模式下：上边ref\r\n      bottomRef: String,                              //上下模式下：下边ref\r\n      topHeight: { type: String, default: '65%'},     //上下模式下：上边高度百分比\r\n      bottomHeight: { type: String, default: null},   //上下模式下：下边高度百分比\r\n\r\n      minSide:   { type: String, default: 'left'},    //最小化方向，左右模式：left/right/both，上下模式：top/bottom/both\r\n      min:       { type: Boolean, default: false},    //开始就最小化\r\n      minable:   { type: Boolean, default: true},     //允许最小化\r\n\r\n      id: String,                                     //组件唯一ID，swapable和stateful需要用到\r\n      resizable: { type: Boolean, default: true},     //是否可调整大小\r\n      swapable:  { type: Boolean, default: false},    //左右两边是否可交换\r\n      minstate:  { type: Boolean, default: false},    //是否还原上次的最小化状态\r\n      inwindow:  { type: Boolean, default: false},\r\n    },\r\n    data() {\r\n      return {\r\n        model: '',       //h左右　v上下\r\n        expand: true,\r\n        expandL: true,\r\n        expandR: true,\r\n        expandT: true,\r\n        expandB: true,\r\n        dragging: false,\r\n        hideSide: null,\r\n        hover: false,\r\n      };\r\n    },\r\n    watch: {\r\n      dragging: function(v) {\r\n        document[v?'addEventListener':'removeEventListener']('mousemove', this.model == 'h' ? this.onDragingH : this.onDragingV);\r\n        document[v?'addEventListener':'removeEventListener']('mouseup',   this.model == 'h' ? this.onDragEndH : this.onDragEndV);\r\n      },\r\n      expand: function(v) {\r\n        this.minstate && this.id && Storage.set(this.id+'_min',!v);\r\n        this.$emit(\"expand\",v);\r\n      },\r\n    },\r\n    beforeDestroy() {\r\n      this._onResize && window.removeResizeListener(this._resize_el, this._onResize);\r\n    },\r\n\r\n    mounted() {\r\n      this.hideSide = this.minSide;\r\n      this.model = this.leftRef ? 'h' : 'v';\r\n      this.offset = this.leftRef ? this.minWidth : 20;\r\n\r\n      this.$nextTick(() => {\r\n        let parent = this.inwindow ? this.$parent.$parent : this.$parent;\r\n        if (this.model == 'h') {//水平\r\n          this._leftEl = parent.$refs[this.leftRef];\r\n          this._leftEl = this._leftEl.$el || this._leftEl;\r\n          this._rightEl = parent.$refs[this.rightRef];\r\n          this._rightEl = this._rightEl.$el || this._rightEl;\r\n\r\n          this._leftEl.style.width = this.leftWidth;\r\n          this._rightEl.style.width = `calc(100% - ${this.leftWidth} - 8px)`;\r\n          this.$el.style.left = `calc(${this._leftEl.style.width} - 1px)`;\r\n          \r\n          this.swapable && this.id && this.hideSide != Storage.get(this.id+'_swap',this.hideSide) && this.swap();\r\n        \r\n          if (this.minWidth > 20) {\r\n            this._resize_el = this[`_${this.hideSide}El`];\r\n            this._onResize = () => {\r\n              if (this._resize_el.clientWidth < this.minWidth) {\r\n                let lw, rw, ml;\r\n                if (this.hideSide == 'left') {\r\n                  lw = this.minWidth + 'px';\r\n                  rw = `calc(100% - ${this.minWidth + 8}px)`;\r\n                  ml = `${this.minWidth-1}px`;\r\n                } else {\r\n                  rw = this.minWidth + 'px';\r\n                  lw = `calc(100% - ${this.minWidth + 8}px)`;\r\n                  ml = `calc(100% - ${this.minWidth + 9}px)`;\r\n                }\r\n                this._leftEl.style.width = lw;\r\n                this._rightEl.style.width = rw;\r\n                this.$el.style.left = ml;\r\n              }\r\n            };\r\n            this._onResize();\r\n            window.addResizeListener(this._resize_el, this._onResize);\r\n          }\r\n        } else {//垂直\r\n          this._topEl = parent.$refs[this.topRef];\r\n          this._topEl = this._topEl.$el || this._topEl;\r\n          this._bottomEl = parent.$refs[this.bottomRef];\r\n          this._bottomEl = this._bottomEl.$el || this._bottomEl;\r\n\r\n          if (this.bottomHeight) {\r\n            this._bottomEl.style.height = this.bottomHeight;\r\n            this._topEl.style.height = `calc(100% - ${this.bottomHeight} - 8px)`;\r\n            this._topEl.style['margin-bottom'] = '8px';\r\n            this.$el.style.top = `calc(${this._topEl.style.height} - 1px)`;\r\n          } else {\r\n            this._topEl.style.height = this.topHeight;\r\n            this._topEl.style['margin-bottom'] = '8px';\r\n            this._bottomEl.style.height = `calc(100% - ${this.topHeight} - 8px)`;\r\n            this.$el.style.top = `calc(${this._topEl.style.height} - 1px)`;\r\n          }\r\n        }\r\n        if (this.minstate && this.id) {\r\n          Storage.get(this.id+'_min',this.min) && this.hide();\r\n        } else {\r\n          this.min && this.hide();\r\n        }\r\n      });\r\n    },\r\n    methods: {\r\n      hide() {\r\n        if (this.hideSide == 'both' || !this.expand) return;\r\n        switch (this.hideSide) {\r\n          case 'left': return this.toogleL();\r\n          case 'right': return this.toogleR();\r\n          case 'top': return this.toogleT();\r\n          case 'bottom': return this.toogleB();\r\n        }\r\n      },\r\n      toogleL() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._leftEl.style.display = this._leftDisplay;\r\n          this._rightEl.style.width = this._rightWidth;\r\n          this.$el.style.left = `calc(${this._leftEl.style.width} - 1px`;\r\n        } else {\r\n          this._leftDisplay = this._leftEl.style.display;\r\n          this._rightWidth = this._rightEl.style.width;\r\n          this._leftEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._rightEl.style.width = '100%';\r\n          this.$el.style.left = '0px';\r\n        }\r\n        this.$emit('change',{toogle:true, left:this.expandL, right:this.expandR});\r\n      },\r\n      toogleR() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._rightEl.style.display = this._rightDisplay;\r\n          this._leftEl.style.width = this._leftWidth;\r\n          this.$el.style.left = `calc(${this._leftEl.style.width} - 1px`;\r\n        } else {\r\n          this._rightDisplay = this._rightEl.style.display;\r\n          this._leftWidth = this._leftEl.style.width;\r\n          this._rightEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._leftEl.style.width = '100%';\r\n          this.$el.style.left = 'calc(100% - 10px)';\r\n        }\r\n        this.$emit('change',{toogle:true, left:this.expandL, right:this.expandR});\r\n      },\r\n      toogleT() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._topEl.style.display = this._topDisplay;\r\n          this._bottomEl.style.height = this._bottomHeight;\r\n          this.$el.style.top = `calc(${this._topEl.style.height} - 1px`;\r\n        } else {\r\n          this._topDisplay = this._topEl.style.display;\r\n          this._bottomHeight = this._bottomEl.style.height;\r\n          this._topEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._bottomEl.style.height = '100%';\r\n          this.$el.style.top = '0px';\r\n        }\r\n        this.$emit('change',{toogle:true, top:this.expandT, bottom:this.expandB});\r\n      },\r\n      toogleB() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._bottomEl.style.display = this._bottomDisplay;\r\n          this._topEl.style.height = this._topHeight;\r\n          this.$el.style.top = `calc(${this._topEl.style.height} - 1px`;\r\n        } else {\r\n          this._bottomDisplay = this._bottomEl.style.display;\r\n          this._topHeight = this._topEl.style.height;\r\n          this._bottomEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._topEl.style.height = '100%';\r\n          this.$el.style.top = 'calc(100% - 10px)';\r\n        }\r\n        this.$emit('change',{toogle:true, top:this.expandT, bottom:this.expandB});\r\n      },\r\n      onDragStartH(e) {\r\n        this.dragging = true;\r\n        this._divX = e.clientX - domLeft(this.$el) + domLeft(this.$el.parentNode);\r\n        this._maxX = this.$el.parentNode.clientWidth - this.offset;\r\n        e.preventDefault();\r\n      },\r\n      onDragingH(e) {\r\n        this.$el.style.left = Math.min(this._maxX, Math.max(e.clientX - this._divX, this.offset)) + 'px';\r\n      },\r\n      onDragEndH(e) {\r\n        this.dragging = false;\r\n        let left = Math.min(this._maxX, Math.max(e.clientX - this._divX, this.offset));\r\n        let _leftWidth = left * 100 / (this._maxX + this.offset);\r\n        this._leftEl.style.width = _leftWidth + '%';\r\n        this._rightEl.style.width = `calc(${100-_leftWidth}% - 8px`;\r\n        this.$el.style.left = `calc(${this._leftEl.style.width} - 1px`;\r\n        this.$emit('change',{drag:true});\r\n      },\r\n      onDragStartV(e) {\r\n        this.dragging = true;\r\n        this._divY = e.clientY - domTop(this.$el) + domTop(this.$el.parentNode);\r\n        this._maxY = this.$el.parentNode.clientHeight - this.offset;\r\n        e.preventDefault();\r\n      },\r\n      onDragingV(e) {\r\n        this.$el.style.top = Math.min(this._maxY, Math.max(e.clientY - this._divY, this.offset)) + 'px';\r\n      },\r\n      onDragEndV(e) {\r\n        this.dragging = false;\r\n        let top = Math.min(this._maxY, Math.max(e.clientY - this._divY, this.offset));\r\n        let _topHeight = top * 100 / (this._maxY + this.offset);\r\n        this._topEl.style.height = _topHeight + '%';\r\n        this._bottomEl.style.height = `calc(${100-_topHeight}% - 8px`;\r\n        this.$el.style.top = `calc(${this._topEl.style.height} - 1px`;\r\n        this.$emit('change',{drag:true});\r\n      },\r\n      swap() {\r\n        this._leftEl.style.float = 'right';\r\n        this._rightEl.style.float = 'left';\r\n        \r\n        let l = this._leftEl;\r\n        this._leftEl = this._rightEl;\r\n        this._rightEl = l;\r\n\r\n        this.$el.style.left = `calc(${this._leftEl.style.width} - 1px)`;\r\n        this.hideSide = this.hideSide == 'left' ? 'right' : 'left';\r\n        this.id && Storage.set(this.id+'_swap', this.hideSide);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .horizontal {\r\n    position: absolute;\r\n    background: transparent;\r\n    overflow: hidden;\r\n    width: 10px;\r\n    height: 100%;\r\n    z-index: 2;\r\n  }\r\n  .draggingH {\r\n    border-left: 1px solid #AEBAC5;\r\n    border-right: 1px solid #AEBAC5;\r\n    background: #E8EAED;\r\n  }\r\n  .draggingH > * {\r\n    margin-left: -1px;\r\n  }\r\n\r\n  .vertical {\r\n    position: absolute;\r\n    background: transparent;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 10px;\r\n    z-index: 2;\r\n  }\r\n  .draggingV {\r\n    border-top: 1px solid #AEBAC5;\r\n    border-bottom: 1px solid #AEBAC5;\r\n    background: #E8EAED;\r\n  }\r\n  .draggingV > * {\r\n    margin-top: -1px;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}