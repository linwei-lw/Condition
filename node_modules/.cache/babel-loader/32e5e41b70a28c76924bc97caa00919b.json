{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\Table\\tools\\src\\utils.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\Table\\tools\\src\\utils.js","mtime":1635230121385},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.fixed\";\nimport _classCallCheck from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\cdRule\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport XEUtils from 'xe-utils';\nimport GlobalConfig from \"../../v-x-e-table/src/conf\";\nimport { formats } from \"../../v-x-e-table/src/formats\";\nvar zindexIndex = 0;\nvar lastZindex = 1;\n\nvar ColumnInfo =\n/*#__PURE__*/\nfunction () {\n  /* eslint-disable @typescript-eslint/no-use-before-define */\n  function ColumnInfo($xetable, _vm) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        renderHeader = _ref.renderHeader,\n        renderCell = _ref.renderCell,\n        renderFooter = _ref.renderFooter,\n        renderData = _ref.renderData;\n\n    _classCallCheck(this, ColumnInfo);\n\n    var $xegrid = $xetable.$xegrid;\n    var proxyOpts = $xegrid ? $xegrid.proxyOpts : null;\n    var formatter = _vm.formatter;\n    var visible = XEUtils.isBoolean(_vm.visible) ? _vm.visible : true;\n\n    if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n      var types = ['seq', 'index', 'checkbox', 'radio', 'expand', 'html'];\n\n      if (_vm.type && types.indexOf(_vm.type) === -1) {\n        UtilTools.warn('vxe.error.errProp', [\"type=\".concat(_vm.type), types.join(', ')]);\n      }\n\n      if (XEUtils.isBoolean(_vm.cellRender) || _vm.cellRender && !XEUtils.isObject(_vm.cellRender)) {\n        UtilTools.warn('vxe.error.errProp', [\"column.cell-render=\".concat(_vm.cellRender), 'column.cell-render={}']);\n      }\n\n      if (XEUtils.isBoolean(_vm.editRender) || _vm.editRender && !XEUtils.isObject(_vm.editRender)) {\n        UtilTools.warn('vxe.error.errProp', [\"column.edit-render=\".concat(_vm.editRender), 'column.edit-render={}']);\n      }\n\n      if (_vm.cellRender && _vm.editRender) {\n        UtilTools.warn('vxe.error.errConflicts', ['column.cell-render', 'column.edit-render']);\n      }\n\n      if (_vm.type === 'expand') {\n        if ($xetable.treeConfig && $xetable.treeOpts.line) {\n          UtilTools.error('vxe.error.errConflicts', ['tree-config.line', 'column.type=expand']);\n        }\n      }\n\n      if (_vm.remoteSort) {\n        UtilTools.warn('vxe.error.delProp', ['column.remote-sort', 'sort-config.remote']);\n      }\n\n      if (_vm.sortMethod) {\n        UtilTools.warn('vxe.error.delProp', ['column.sort-method', 'sort-config.sortMethod']);\n      }\n\n      if (formatter) {\n        if (XEUtils.isString(formatter)) {\n          var globalFunc = formats.get(formatter) || XEUtils[formatter];\n\n          if (!XEUtils.isFunction(globalFunc)) {\n            UtilTools.error('vxe.error.notFunc', [formatter]);\n          }\n        } else if (XEUtils.isArray(formatter)) {\n          var _globalFunc = formats.get(formatter[0]) || XEUtils[formatter[0]];\n\n          if (!XEUtils.isFunction(_globalFunc)) {\n            UtilTools.error('vxe.error.notFunc', [formatter[0]]);\n          }\n        }\n      }\n    }\n\n    Object.assign(this, {\n      // 基本属性\n      type: _vm.type,\n      property: _vm.field,\n      title: _vm.title,\n      width: _vm.width,\n      minWidth: _vm.minWidth,\n      resizable: _vm.resizable,\n      fixed: _vm.fixed,\n      align: _vm.align,\n      headerAlign: _vm.headerAlign,\n      footerAlign: _vm.footerAlign,\n      showOverflow: _vm.showOverflow,\n      showHeaderOverflow: _vm.showHeaderOverflow,\n      showFooterOverflow: _vm.showFooterOverflow,\n      className: _vm.className,\n      headerClassName: _vm.headerClassName,\n      footerClassName: _vm.footerClassName,\n      formatter: formatter,\n      sortable: _vm.sortable,\n      sortBy: _vm.sortBy,\n      sortType: _vm.sortType,\n      sortMethod: _vm.sortMethod,\n      remoteSort: _vm.remoteSort,\n      sortByFormatter: _vm.sortByFormatter,\n      filters: UtilTools.getFilters(_vm.filters),\n      filterMultiple: XEUtils.isBoolean(_vm.filterMultiple) ? _vm.filterMultiple : true,\n      filterMethod: _vm.filterMethod,\n      filterResetMethod: _vm.filterResetMethod,\n      filterRecoverMethod: _vm.filterRecoverMethod,\n      filterRender: _vm.filterRender,\n      treeNode: _vm.treeNode,\n      cellType: _vm.cellType,\n      cellRender: _vm.cellRender,\n      editRender: _vm.editRender,\n      contentRender: _vm.contentRender,\n      exportMethod: _vm.exportMethod,\n      footerExportMethod: _vm.footerExportMethod,\n      titleHelp: _vm.titleHelp,\n      // 自定义参数\n      params: _vm.params,\n      // 渲染属性\n      id: _vm.colId || XEUtils.uniqueId('col_'),\n      parentId: null,\n      visible: visible,\n      // 内部属性（一旦被使用，将导致不可升级版本）\n      halfVisible: false,\n      defaultVisible: visible,\n      checked: false,\n      halfChecked: false,\n      disabled: false,\n      level: 1,\n      rowSpan: 1,\n      colSpan: 1,\n      order: null,\n      sortTime: 0,\n      renderWidth: 0,\n      renderHeight: 0,\n      resizeWidth: 0,\n      renderLeft: 0,\n      renderArgs: [],\n      // 渲染参数可用于扩展\n      model: {},\n      renderHeader: renderHeader || _vm.renderHeader,\n      renderCell: renderCell || _vm.renderCell,\n      renderFooter: renderFooter || _vm.renderFooter,\n      renderData: renderData,\n      // 单元格插槽，只对 grid 有效\n      slots: _vm.slots\n    });\n\n    if (proxyOpts && proxyOpts.beforeColumn) {\n      proxyOpts.beforeColumn({\n        $grid: $xegrid,\n        column: this\n      });\n    }\n  }\n\n  _createClass(ColumnInfo, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return UtilTools.getFuncText(this.title || (this.type === 'seq' || this.type === 'index' ? GlobalConfig.i18n('vxe.table.seqTitle') : ''));\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey() {\n      return this.property || (this.type ? \"type=\".concat(this.type) : null);\n    }\n  }, {\n    key: \"update\",\n    value: function update(name, value) {\n      // 不支持双向的属性\n      if (name !== 'filters') {\n        if (name === 'field') {\n          this.property = value;\n        } else {\n          this[name] = value;\n        }\n      }\n    }\n  }]);\n\n  return ColumnInfo;\n}();\n\nexport function isEnableConf(conf) {\n  return conf && conf.enabled !== false;\n}\n\nfunction outLog(type) {\n  return function (message, params) {\n    var msg = UtilTools.getLog(message, params);\n    console[type](msg);\n    return msg;\n  };\n}\n/**\r\n * 判断值为：'' | null | undefined 时都属于空值\r\n */\n\n\nexport function eqEmptyValue(cellValue) {\n  return cellValue === '' || XEUtils.eqNull(cellValue);\n}\nexport var UtilTools = {\n  warn: outLog('warn'),\n  error: outLog('error'),\n  getLog: function getLog(message, args) {\n    return \"[vxe-table] \".concat(GlobalConfig.i18n(message, args));\n  },\n  getFuncText: function getFuncText(content) {\n    return XEUtils.isFunction(content) ? content() : GlobalConfig.translate ? GlobalConfig.translate(content) : content;\n  },\n  nextZIndex: function nextZIndex() {\n    lastZindex = GlobalConfig.zIndex + zindexIndex++;\n    return lastZindex;\n  },\n  getLastZIndex: function getLastZIndex() {\n    return lastZindex;\n  },\n  // 行主键 key\n  getRowkey: function getRowkey($xetable) {\n    return $xetable.rowId || '_XID';\n  },\n  // 行主键 value\n  getRowid: function getRowid($xetable, row) {\n    var rowId = XEUtils.get(row, UtilTools.getRowkey($xetable));\n    return rowId ? encodeURIComponent(rowId) : '';\n  },\n  // 获取所有的列，排除分组\n  getColumnList: function getColumnList(columns) {\n    var result = [];\n    columns.forEach(function (column) {\n      result.push.apply(result, _toConsumableArray(column.children && column.children.length ? UtilTools.getColumnList(column.children) : [column]));\n    });\n    return result;\n  },\n  getClass: function getClass(property, params) {\n    return property ? XEUtils.isFunction(property) ? property(params) : property : '';\n  },\n  getFilters: function getFilters(filters) {\n    if (filters && XEUtils.isArray(filters)) {\n      return filters.map(function (_ref2) {\n        var label = _ref2.label,\n            value = _ref2.value,\n            data = _ref2.data,\n            resetValue = _ref2.resetValue,\n            checked = _ref2.checked;\n        return {\n          label: label,\n          value: value,\n          data: data,\n          resetValue: resetValue,\n          checked: !!checked,\n          _checked: !!checked\n        };\n      });\n    }\n\n    return filters;\n  },\n  formatText: function formatText(value, placeholder) {\n    return '' + (value === '' || value === null || value === undefined ? placeholder ? GlobalConfig.emptyCell : '' : value);\n  },\n  getCellValue: function getCellValue(row, column) {\n    return XEUtils.get(row, column.property);\n  },\n  setCellValue: function setCellValue(row, column, value) {\n    return XEUtils.set(row, column.property, value);\n  },\n  isColumn: function isColumn(column) {\n    return column instanceof ColumnInfo;\n  },\n  getColumnConfig: function getColumnConfig($xetable, _vm, options) {\n    return UtilTools.isColumn(_vm) ? _vm : new ColumnInfo($xetable, _vm, options);\n  },\n  // 组装列配置\n  assemColumn: function assemColumn(_vm) {\n    var $el = _vm.$el,\n        $xetable = _vm.$xetable,\n        $xecolumn = _vm.$xecolumn,\n        columnConfig = _vm.columnConfig;\n    var groupConfig = $xecolumn ? $xecolumn.columnConfig : null;\n    columnConfig.slots = _vm.$scopedSlots;\n\n    if (groupConfig) {\n      if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {\n        if ($xecolumn.$options._componentTag === 'vxe-table-column') {\n          UtilTools.error('vxe.error.groupTag', [\"<vxe-table-colgroup title=\".concat($xecolumn.title, \" ...>\"), \"<vxe-table-column title=\".concat($xecolumn.title, \" ...>\")]);\n        } else if ($xecolumn.$options._componentTag === 'vxe-column') {\n          UtilTools.warn('vxe.error.groupTag', [\"<vxe-colgroup title=\".concat($xecolumn.title, \" ...>\"), \"<vxe-column title=\".concat($xecolumn.title, \" ...>\")]);\n        }\n      }\n\n      if (!groupConfig.children) {\n        groupConfig.children = [];\n      }\n\n      groupConfig.children.splice([].indexOf.call($xecolumn.$el.children, $el), 0, columnConfig);\n    } else {\n      $xetable.staticColumns.splice([].indexOf.call($xetable.$refs.hideColumn.children, $el), 0, columnConfig);\n    }\n  },\n  // 销毁列\n  destroyColumn: function destroyColumn(_vm) {\n    var $xetable = _vm.$xetable,\n        columnConfig = _vm.columnConfig;\n    var matchObj = XEUtils.findTree($xetable.staticColumns, function (column) {\n      return column === columnConfig;\n    });\n\n    if (matchObj) {\n      matchObj.items.splice(matchObj.index, 1);\n    }\n  },\n  hasChildrenList: function hasChildrenList(item) {\n    return item && item.children && item.children.length > 0;\n  },\n  parseFile: function parseFile(file) {\n    var name = file.name;\n    var tIndex = XEUtils.lastIndexOf(name, '.');\n    var type = name.substring(tIndex + 1, name.length);\n    var filename = name.substring(0, tIndex);\n    return {\n      filename: filename,\n      type: type\n    };\n  },\n  isNumVal: function isNumVal(num) {\n    return !isNaN(parseFloat('' + num));\n  }\n};\nexport default UtilTools;",null]}