{"remainingRequest":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js!D:\\cdRule\\src\\components\\util\\Popup.js","dependencies":[{"path":"D:\\cdRule\\src\\components\\util\\Popup.js","mtime":1676336275715},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { domLeftTop } from '@/components/util/Dom.js';\nexport default {\n  /**\n   * 把组件弹出在最上层\n   * @param component 要弹出的组件\n   * @param data:Object 为该组件设置data值\n   * @param parent:String|DOM 在哪个DOM上居中\n   * @param appendDom:DOM 在哪个DOM上插入\n   */\n  open: function open(component, data, parent) {\n    var beforeMount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var style = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    var appendDom = arguments.length > 5 ? arguments[5] : undefined;\n    var constructor = Vue.extend(component);\n    var instance = new constructor({\n      data: data || null\n    });\n    beforeMount && beforeMount(instance);\n    var div = document.createElement(\"div\");\n\n    if (appendDom) {\n      appendDom.appendChild(div);\n    } else {\n      document.body.appendChild(div);\n    }\n\n    instance.$mount(div);\n\n    _position(instance, parent, style);\n\n    return instance;\n  },\n  position: function position(instance, parent, style) {\n    _position(instance, parent, style);\n  }\n};\n\nfunction _position(instance, parent, style) {\n  parent = parent || document.body;\n\n  if (typeof parent === 'string') {\n    parent = document.getElementById(parent) || document.body;\n  }\n\n  var _domLeftTop = domLeftTop(parent),\n      left = _domLeftTop.left,\n      top = _domLeftTop.top;\n\n  var offsetWidth = parent.offsetWidth,\n      offsetHeight = parent.offsetHeight,\n      msgW = instance.$el.clientWidth,\n      msgH = instance.$el.clientHeight;\n  left = Math.max(0, left + (offsetWidth - msgW) / 2);\n  top = Math.max(0, top + (offsetHeight - msgH) / 3);\n  instance.$el.style.top = top + 'px';\n  instance.$el.style.left = left + 'px';\n  instance.$el.style['z-index'] = window.$_theme.zindex();\n\n  if (style) {\n    for (var key in style) {\n      instance.$el.style[key] = style[key];\n    }\n  }\n}",null]}