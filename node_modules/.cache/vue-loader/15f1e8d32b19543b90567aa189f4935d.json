{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\common\\alarm\\MediaWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\common\\alarm\\MediaWindow.vue","mtime":1673593190019},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport AlarmMediaBox              from '@/main/alarm/RealTimeAlarm/AlarmMediaBox.vue';\nimport Labels                     from '@/common/gps/Labels.js';\nimport AlarmLabels                from '@/common/alarm/Labels.js';\n\nexport default {\n  components: { AlarmMediaBox },\n  data: function() {\n    return {\n      alarm: null,\n      waiting: true,\n      medias: [],\n    };\n  },\n  mounted() {\n    /* var xhr = new XMLHttpRequest();\n    xhr.open('GET',`${window.$_main.domain.WEB_PATH}api/get_alarm_media.jsp?carId=${this.alarm.carId}&time=${this.alarm.startTime}&endTime=${this.alarm.endTime}&alarmType=${typeof this.alarm.typeId=='string'?[this.alarm.typeId]:this.alarm.typeId}&sessionId=${$_main.sessionId}`)\n    xhr.onreadystatechange= ()=> {\n      if(xhr.readyState==4 && xhr.status==200){\n        let result=JSON.parse(xhr.response)\n          this.waiting = false;\n          this.medias = result.list;\n      }\n    }\n    xhr.send() */\n    $_main.http.post('h5/query/media?queryMedia',{carId:this.alarm.carId, startTime:this.alarm.stime, endTime:this.alarm.stime, types:typeof this.alarm.typeId=='string'?[this.alarm.typeId]:this.alarm.typeId, seq:''}).then(result => {\n      this.waiting = false;\n      this.medias = result;\n    }).catch(err=>{\n      this.waiting=false\n    });\n  },\n  computed: {\n    AlarmLabels: () => AlarmLabels,\n    Labels: () => Labels,\n  },\n  methods:{\n    \n  }\n};\n",{"version":3,"sources":["MediaWindow.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"MediaWindow.vue","sourceRoot":"src/common/alarm","sourcesContent":["<template>\r\n  <Window :title=\"Labels.plateByCarId(alarm)+'\\u3000'+AlarmLabels.alarmTypeNameFunction(alarm)+'\\u3000'+alarm.startTime\" ref=\"w\" :waiting=\"waiting\" :width=\"950\">\r\n    <div :class=\"$style.content\">\r\n      <AlarmMediaBox :medias=\"medias\" :alarm=\"alarm\"/>\r\n    </div>\r\n  </Window>\r\n</template>\r\n\r\n<script>\r\n  import AlarmMediaBox              from '@/main/alarm/RealTimeAlarm/AlarmMediaBox.vue';\r\n  import Labels                     from '@/common/gps/Labels.js';\r\n  import AlarmLabels                from '@/common/alarm/Labels.js';\r\n\r\n  export default {\r\n    components: { AlarmMediaBox },\r\n    data: function() {\r\n      return {\r\n        alarm: null,\r\n        waiting: true,\r\n        medias: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      /* var xhr = new XMLHttpRequest();\r\n      xhr.open('GET',`${window.$_main.domain.WEB_PATH}api/get_alarm_media.jsp?carId=${this.alarm.carId}&time=${this.alarm.startTime}&endTime=${this.alarm.endTime}&alarmType=${typeof this.alarm.typeId=='string'?[this.alarm.typeId]:this.alarm.typeId}&sessionId=${$_main.sessionId}`)\r\n      xhr.onreadystatechange= ()=> {\r\n        if(xhr.readyState==4 && xhr.status==200){\r\n          let result=JSON.parse(xhr.response)\r\n            this.waiting = false;\r\n            this.medias = result.list;\r\n        }\r\n      }\r\n      xhr.send() */\r\n      $_main.http.post('h5/query/media?queryMedia',{carId:this.alarm.carId, startTime:this.alarm.stime, endTime:this.alarm.stime, types:typeof this.alarm.typeId=='string'?[this.alarm.typeId]:this.alarm.typeId, seq:''}).then(result => {\r\n        this.waiting = false;\r\n        this.medias = result;\r\n      }).catch(err=>{\r\n        this.waiting=false\r\n      });\r\n    },\r\n    computed: {\r\n      AlarmLabels: () => AlarmLabels,\r\n      Labels: () => Labels,\r\n    },\r\n    methods:{\r\n      \r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .content {\r\n    width: 100%;\r\n    height: 631px;\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n</style>"]}]}