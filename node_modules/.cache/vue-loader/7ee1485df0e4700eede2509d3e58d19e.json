{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\modules\\mnt\\MntVideoPlaybackModule\\PlaybackPlayerForSkip.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"D:\\cdRule\\src\\modules\\mnt\\MntVideoPlaybackModule\\PlaybackPlayerForSkip.vue","mtime":1675239736121},{"path":"D:\\cdRule\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  display: flex;\n}\n.bar {\n  height: 32px;\n  line-height: 32px;\n  position: absolute;\n  left: 0;\n  right: 0;\n  background-color:#202020;\n  text-align: center;\n  color:#fff;\n}\n.bar_icon {\n  font-size: 18px;\n  line-height: 32px!important;\n  cursor: pointer;\n  position: absolute;\n}\n.toolbar {\n  position: absolute;\n  overflow: initial;\n  width: 100%;\n  bottom: 0;\n}\n",{"version":3,"sources":["PlaybackPlayerForSkip.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PlaybackPlayerForSkip.vue","sourceRoot":"src/modules/mnt/MntVideoPlaybackModule","sourcesContent":["<template>\r\n  <div :class=\"$style.container\" :style=\"[backgroundImage, playing && reply && {backgroundColor: '#000',backgroundSize:'0,0'}]\">\r\n    <!-- 顶部显示头 -->\r\n    <div v-show=\"playing\" :class=\"$style.bar\" style=\"top:0;\">\r\n      <!-- 标题文本 -->\r\n      <span>{{title}}</span>\r\n      <!-- 关闭按钮 -->\r\n      <i class=\"el-icon-close\" @dblclick.stop=\"close()\" @click.stop=\"close()\" :title=\"$_L.get('关闭播放')\" :class=\"$style.bar_icon\" style=\"right:7px;\"></i>\r\n    </div>\r\n\r\n    <!-- 视频显示组件 -->\r\n    <div ref=\"show_video\" style=\"position: absolute;top: 32px;\" v-if=\"playing\">\r\n      <video ref=\"video\" :muted=\"!voice\" autoplay=\"autoplay\" style=\"width: 100%;height: 100%;position: relative;object-fit: fill;\"/>\r\n    </div>\r\n    <audio ref=\"audio\" autoplay=\"autoplay\" style=\"display:none\"/>\r\n    <span v-show=\"tip\" style=\"color:#fff;position:absolute;top:calc(50% - 13px);text-align:center;width:100%;\">{{tip}}</span>\r\n    \r\n    <span style=\"position:absolute;right:8px;bottom:45px;\">\r\n      <!-- 流量显示 -->\r\n      <span v-show=\"playing && reply && !file.file\" style=\"margin-right:5px;color:#fff;display:inline-block;\"> {{parseInt(flow.kbs/1024)}}KB/S | {{parseInt(flow.total/1024)}}KB</span>\r\n      <span v-if=\"record.ing\" style=\"padding:2px;background-color:#000;color:#f00;display:inline-block;\">{{record.time}}</span>\r\n    </span>\r\n\r\n    <!-- 底部工具栏 -->\r\n    <Toolbar :class=\"$style.toolbar\" :mini=\"true\" :disabled=\"!playing || loading\" style=\"overflow:unset;\">\r\n      <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"tooglePause()\" :title=\"pause?$_L.get('恢复播放'):$_L.get('暂停播放')\" :icon=\"pause?'el-icon-video-play':'el-icon-video-pause'\"/>\r\n      <Slider :disabled=\"file&&file.file\" v-model=\"seeker.value\" :max=\"seeker.max\" style=\"margin-left:12px;margin-top:0px;\" @change=\"seekTo\" @dragstart=\"seeker.ing=true\" :getTooltip=\"getSeekerTime\" :style=\"{width:(width-(record.show?250:225))+'px'}\"/>\r\n      <template slot=\"right\">\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"voice=!voice\" :icon=\"voice?'el-icon-sound-on':'el-icon-sound-off'\"/>\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"snapshot()\" :title=\"$_L.get('视频截图')\" icon=\"el-icon-camera\"/>\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"toogleRecord()\" :title=\"record.ing?$_L.get('停止录像'):$_L.get('开始录像')\" icon=\"el-icon-video-camera\" v-if=\"record.show\"/>\r\n        <Button :border=\"false\" type=\"light\" :height=\"30\" padding=\"0 6px\" @click=\"fullScreen()\" icon=\"el-icon-full-screen\"/>\r\n        <InputSelect :border=\"false\" :height=\"30\" v-model=\"ratio\" @change=\"_onResize()\" :style=\"{backgroundColor:theme.bg_color}\" style=\"text-align:center;\" :listStyle=\"{paddingRight:'10px',textAlign:'right'}\" :options=\"[{label:$_L.get('满画面'),value:0},{label:$_L.get('{0} 显示','2:1'),value:2/1},{label:$_L.get('{0} 显示','16:9'),value:16/9},{label:$_L.get('{0} 显示','4:3'),value:4/3},{label:$_L.get('{0} 显示','1:1'),value:1/1},{label:$_L.get('{0} 显示','3:4'),value:3/4},{label:$_L.get('{0} 显示','9:16'),value:9/16},{label:$_L.get('{0} 显示','1:2'),value:1/2}]\"/>\r\n      </template>\r\n    </Toolbar>\r\n    \r\n    <i class=\"el-icon-loading\" v-show=\"loading\" style=\"color:#ddd;font-size:40px;position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);\"></i>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {parseDate, apartSeconds, dateFormat, secondsToHMS} from '@/common/util/Dates.js';\r\n  import {getPlayTip} from '@/common/Vars.js';\r\n  import '@/common/flv.min.js'\r\n\r\n  export default {\r\n    data () {\r\n      return {\r\n        uuid: null,\r\n        ratio: 0,       //长宽比率 0(满画面) 2/1 16/9 4/3 1/1 3/4 9/16 1/2\r\n        width: 0,\r\n\r\n        file: null,     //正常播放的文件\r\n        stime: null,\r\n        title: null,\r\n        playing: false, //是否正在播放\r\n        loading: false, //是否正在加载\r\n        reply: false,   //是否应答\r\n        pause: false,\r\n        voice: false,\r\n        tip: null,\r\n        record: {show:false, ing:false, time:null, second:0, interval:null},//录像\r\n\r\n        flow: {total:0, kbs:0},   //流量\r\n        seeker: {max:0, value:0, ing:false}, //播放进度\r\n      }\r\n    },\r\n    watch: {\r\n      voice: function(v) {\r\n        this._audio && (this._audio.muted = !v);\r\n      },\r\n      'seeker.value': function(v) {\r\n        this.$emit('time', v);\r\n      },\r\n    },\r\n    computed: {\r\n      backgroundImage() {\r\n        if ($_cache.userCfg.VIDEO_BG) {\r\n          return {backgroundImage: \"url(\" + $_main.domain.WEB_PATH+'rs/img/h5/video/'+$_cache.userCfg.VIDEO_BG + \")\"};\r\n        }\r\n        return {backgroundImage: \"url(\" + $_main.domain.WEB_PATH+'login?img=video_bg&cmpId='+$_cache.user.cmpId + \")\"};\r\n        // return null\r\n      }\r\n    },\r\n    deactivated() {\r\n      this.playing && this.close();\r\n    },\r\n    beforeDestroy() {\r\n      this.playing && this.close();\r\n      removeResizeListener(this.$el, this._onResize);\r\n    },\r\n    mounted() {\r\n      this._date = new Date();\r\n      addResizeListener(this.$el, this._onResize);\r\n    },\r\n    methods: {\r\n      setSocket(socket) {\r\n        this._socket = socket;\r\n        this._socket.addListener('his_tmn_play', this._on_his_tmn_play);\r\n        this._socket.addListener('play_flow', this._on_play_flow);\r\n        this._socket.addListener('record_start', this._on_record_start);\r\n      },\r\n      \r\n      seekTo(v) {\r\n        this._timer && (clearInterval(this._timer), this._timer = null);\r\n\r\n        !this.file.file && this._socket.send({cmd:'his_tmn_ctr', uuid:this.uuid, carId:this.file.carId, channel:this.file.channel, ctr:2, multiple:0, seek:this.YYMMDDJJNNSS(this.stime)});\r\n        this._player && (this._player.destroy(), this._player = null);\r\n        this._audio && (this._audio.destroy(), this._audio = null);\r\n        \r\n        this.seeker.ing = false;\r\n        this._date.setTime(this._stime + v * 1000);\r\n        let time = dateFormat(this._date, 'YYYY-MM-DD HH:NN:SS');\r\n        this.loading = true;\r\n        this.reply = false;\r\n        this.flow.total = this.flow.kbs = 0;\r\n        this.tip = null;\r\n        this.uuid = $_uuid($_main.sessionId);\r\n\r\n        let url = '/his_tmn_play/' + [this._socket.getId(),encodeURI($_main.userId),this.uuid,this.file.carId,this.file.channel,this.file.avType,this.file.streamType,this.file.storeType,0,0,this.YYMMDDJJNNSS(time),this.file.endTime].join('/');\r\n        this.flvjsplay(url, true);\r\n        this.$emit('seek', time);\r\n      },\r\n\r\n      play(file, stime) {\r\n        this.playing && this.close();\r\n        this._timer && (clearInterval(this._timer), this._timer = null);\r\n        this.file = file;\r\n        this.file.play = true;\r\n        this.stime = stime;\r\n        this._stime = parseDate(stime).getTime();\r\n        this.title = file.plate+' - '+file.chnName+' ['+stime+' -> '+file.etime+']';\r\n        this.playing = this.loading = true;\r\n        this.reply = false;\r\n        this.tip = null;\r\n        this.flow.total = this.flow.kbs = 0;\r\n        this.seeker.max = apartSeconds(stime, file.etime);\r\n        this.seeker.value = 0;\r\n        this.uuid = $_uuid($_main.sessionId);\r\n        this.record.show = !file.file;\r\n\r\n        this.$nextTick(() => {\r\n          this._onResize();\r\n          if (file.file) {//服务器文件\r\n            let name = file.fileName.split(/\\*|\\//)[0];\r\n            let is_audio = name.indexOf(\"M2\") > 0 || name.indexOf(\"M3\") > 0 || name.indexOf(\"M4\") > 0;\r\n            is_audio && (this.voice = true);\r\n            this.flvjsplay('/his_srv_play/' + file.carId + '/' + file.fileName, false, is_audio);\r\n          } else {\r\n            let url = '/his_tmn_play/' + [this._socket.getId(),encodeURI($_main.userId),this.uuid,file.carId,file.channel,file.avType,file.streamType,file.storeType,0,0,this.YYMMDDJJNNSS(stime),file.endTime].join('/');\r\n            this.flvjsplay(url, true);\r\n          }\r\n          this.$emit('play', this);\r\n        });\r\n      },\r\n\r\n      flvjsplay(uri, tmn, is_audio=false) {\r\n        let url = ($_main.domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + $_cache.videoHost + uri;\r\n        this._player = flvjs.createPlayer({type:'flv', isLive:true, hasAudio:!tmn, hasVideo:!is_audio, cors:true, url:url}, {enableStashBuffer:false, fixAudioTimestampGap:false});\r\n        this._player.attachMediaElement(this.$refs.video);\r\n        this._player.load();\r\n        this._player.play();\r\n        this._player.on(flvjs.Events.METADATA_ARRIVED,()=>{\r\n          this.loading = false;\r\n          this.reply = true;\r\n          tmn && this.flvjsaudio();\r\n          let sv = this.seeker.value;\r\n          !this._timer && (this._timer = setInterval(() => !this.pause && !this.seeker.ing && (this.seeker.value = parseInt(sv+this._player.currentTime)), 1000));\r\n        });\r\n      },\r\n      \r\n      flvjsaudio() {\r\n        let url = ($_main.domain.WEB_HTTP == 'https' ? \"wss://\" : \"ws://\") + $_cache.videoHost + '/his_tmn_audio/' + this.uuid;\r\n        this._audio = flvjs.createPlayer({type:'flv', isLive:true, hasAudio:true, hasVideo:false, cors:true, url:url}, {enableStashBuffer:false, fixAudioTimestampGap:false});\r\n        this._audio.attachMediaElement(this.$refs.audio);\r\n        this._audio.load();\r\n        this._audio.play();\r\n        this._audio.muted = !this.voice;\r\n      },\r\n\r\n      YYMMDDJJNNSS(time) {\r\n        return time.substr(2).split(/[-| |:]/).join('');\r\n      },\r\n\r\n      getSeekerTime(v) {\r\n        if (!this._date) return v;\r\n        this._date.setTime(this._stime + v * 1000);\r\n        return dateFormat(this._date, 'YYYY-MM-DD HH:NN:SS');\r\n      },\r\n      \r\n      _on_his_tmn_play(result) {\r\n        if (result.uuid != this.uuid) return;\r\n        this.reply = true;\r\n        if (result.ret !== 0) {//失败\r\n          this.loading = false;\r\n          let tip = getPlayTip(result.ret);\r\n          this.clear();\r\n          this.tip = tip;\r\n        }\r\n      },\r\n      _on_play_flow(result) {\r\n        if (result.uuid == this.uuid) {\r\n          this.flow.kbs = result.flow - this.flow.total;\r\n          this.flow.total = result.flow;\r\n          result.flow > 0 && (this.reply = true);\r\n        }\r\n      },\r\n\r\n      tooglePause() {\r\n        this.pause = !this.pause;\r\n        this.pause ? this.$refs.video.pause() : this.$refs.video.play();\r\n      },\r\n\r\n      snapshot() {\r\n        let canvas = document.createElement('canvas'), video = this.$refs.video;\r\n        video.pause();\r\n        canvas.width = video.width;\r\n        canvas.height = video.height;\r\n        let ctx =canvas.getContext('2d');\r\n        ctx.drawImage(video,0,0,video.width, video.height);\r\n        let img64 = canvas.toDataURL(); //转化成base64为图片\r\n        let a = document.createElement('a');\r\n        a.href = img64;\r\n        a.download = this.file.plate+'-'+this.file.chnName;\r\n        a.click();  //下载到本地\r\n        video.play();\r\n      },\r\n      fullScreen() {// 全屏显示视频窗口\r\n        let el = this.$refs.show_video, method = el.requestFullscreen || el.webkitRequestFullscreen || el.mozRequestFullScreen || el.msRequestFullscreen;\r\n        method && method.call(el);\r\n      },\r\n      toogleRecord() {\r\n        if (!this.record.ing) {\r\n          this._socket.send({cmd:'record_start',uuid:this.uuid});\r\n        } else {\r\n          this.record.ing = false;\r\n          this.record.interval && (clearInterval(this.record.interval), this.record.interval = null);\r\n          let callback = ({downloadPort}) => {\r\n            this._socket.removeListener('cfg', callback);\r\n            let url = $_main.domain.WEB_HTTP+'://'+$_cache.videoHost.split(':')[0]+':'+downloadPort+'/download/92&'+this.uuid+'/'+this.file.plate+'_'+this.file.chnName+'('+this.record.stime.replace(' ','_')+')('+this.record.second+').flv';\r\n            window.open(url);\r\n          };\r\n          this._socket.addListener('cfg', callback);\r\n          this._socket.send({cmd:'cfg'});\r\n        }\r\n      },\r\n      _on_record_start() {\r\n        this.record.second = 0;\r\n        this.record.time = '00:00:00';\r\n        this.record.ing = true;\r\n        this.record.stime = this.getSeekerTime(this.seeker.value);\r\n        this.record.interval = setInterval(() => {\r\n          if (this.pause) return;\r\n          this.record.second += 1;\r\n          this.record.time = secondsToHMS(this.record.second);\r\n        }, 1000);\r\n      },\r\n\r\n      close() {\r\n        if (!this.playing) return;\r\n        this.file.play = false;\r\n        !this.file.file && this._socket.send({cmd:'his_tmn_ctr', uuid:this.uuid, carId:this.file.carId, channel:this.file.channel, ctr:2, multiple:0, seek:this.YYMMDDJJNNSS(this.stime)});\r\n        this._player && (this._player.destroy(), this._player = null);\r\n        this._audio && (this._audio.destroy(), this._audio = null);\r\n        this.clear();\r\n      },\r\n\r\n      clear() {\r\n        this._timer && (clearInterval(this._timer), this._timer = null);\r\n        this.file && (this.file.play = false, this.file = null);\r\n        this.playing = this.loading = this.reply = false;\r\n        this.tip = null;\r\n        this.pause = false;\r\n        this.voice = false;\r\n        this.flow.total = this.flow.kbs = 0;\r\n        this.seeker = {max:0, value:0, ing:false};\r\n        if (this.record.ing) {\r\n          clearInterval(this.record.interval);\r\n          this.record.ing = false;\r\n          this.record.interval = null;\r\n        }\r\n        this.record.show = false;\r\n        this.$emit('close');\r\n      },\r\n\r\n      _onResize() {\r\n        this.width = this.$el.clientWidth;\r\n        if (!this.$refs.show_video) return;\r\n        let [width, height, left, top] = this._getRatioAjust(this.$el.clientWidth, this.$el.clientHeight);\r\n        this.$refs.show_video.style.width = width + 'px';\r\n        this.$refs.show_video.style.height = height + 'px';\r\n        this.$refs.show_video.style.left = left;\r\n        this.$refs.show_video.style.top = top;\r\n      },\r\n      _getRatioAjust(width, height) {// 计算视频窗口的大小\r\n        height -= 70;\r\n        if (this.ratio == 0) return [width, height, '0px', '32px'];\r\n        let wh = width/height;\r\n        if (this.ratio == wh) return [width, height, '0px', '32px'];\r\n        if (wh > this.ratio) {\r\n          wh = height * this.ratio;\r\n          let left = (width - wh) / 2;\r\n          return [wh, height, left+'px', '32px'];\r\n        } else {\r\n          wh = width / this.ratio;\r\n          let top = (height - width / this.ratio) / 2 + 32;\r\n          return [width, wh, '0px', top+'px'];\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    position: relative;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    display: flex;\r\n  }\r\n  .bar {\r\n    height: 32px;\r\n    line-height: 32px;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    background-color:#202020;\r\n    text-align: center;\r\n    color:#fff;\r\n  }\r\n  .bar_icon {\r\n    font-size: 18px;\r\n    line-height: 32px!important;\r\n    cursor: pointer;\r\n    position: absolute;\r\n  }\r\n  .toolbar {\r\n    position: absolute;\r\n    overflow: initial;\r\n    width: 100%;\r\n    bottom: 0;\r\n  }\r\n</style>\r\n"]}]}