{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\modules\\cdRule\\AiAddOrUpdateWindow.vue?vue&type=template&id=7843a8c4&","dependencies":[{"path":"D:\\cdRule\\src\\modules\\cdRule\\AiAddOrUpdateWindow.vue","mtime":1687937205060},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"Window\",\n    {\n      ref: \"w\",\n      attrs: {\n        title: _vm.$_L.get(\"工况规则维护\"),\n        width: 1000,\n        waiting: _vm.waiting\n      }\n    },\n    [\n      _c(\n        \"div\",\n        { class: _vm.$style.content },\n        [\n          _c(\"InputText\", {\n            staticStyle: { width: \"100%\" },\n            attrs: { label: _vm.$_L.get(\"工况名称\"), trim: \"\", required: \"\" },\n            model: {\n              value: _vm.item.name,\n              callback: function($$v) {\n                _vm.$set(_vm.item, \"name\", $$v)\n              },\n              expression: \"item.name\"\n            }\n          }),\n          _c(\"InputText\", {\n            staticStyle: { width: \"100%\", \"margin-top\": \"5px\" },\n            attrs: { label: _vm.$_L.get(\"描述\"), trim: \"\" },\n            model: {\n              value: _vm.item.des,\n              callback: function($$v) {\n                _vm.$set(_vm.item, \"des\", $$v)\n              },\n              expression: \"item.des\"\n            }\n          }),\n          _c(\n            \"vxe-table\",\n            {\n              ref: \"grid\",\n              staticStyle: {\n                border: \"1px solid\",\n                \"margin-top\": \"5px\",\n                height: \"300px\"\n              },\n              style: { borderColor: _vm.theme.border_color_light },\n              attrs: { data: _vm.regions }\n            },\n            [\n              _c(\"vxe-table-column\", {\n                attrs: {\n                  type: \"index\",\n                  title: _vm.$_L.get(\"序号\"),\n                  width: \"50\"\n                }\n              }),\n              _c(\"vxe-table-column\", {\n                attrs: {\n                  field: \"type\",\n                  title: _vm.$_L.get(\"区域\"),\n                  width: \"240\",\n                  align: \"left\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\"InputTree\", {\n                          staticStyle: {\n                            margin: \"5px -5px\",\n                            width: \"calc(100% + 10px)\"\n                          },\n                          attrs: {\n                            getTreeRoots: _vm.getTreeRoots2,\n                            setting: {\n                              type: \"all\",\n                              callback: {\n                                beforeClick: function(o) {\n                                  return o.type != \"0\" && o.pid != \"0\"\n                                }\n                              },\n                              view: { iconCssFunction: _vm.iconCssFunction1 }\n                            }\n                          },\n                          model: {\n                            value: row.regionId,\n                            callback: function($$v) {\n                              _vm.$set(row, \"regionId\", $$v)\n                            },\n                            expression: \"row.regionId\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"vxe-table-column\", {\n                attrs: {\n                  field: \"target\",\n                  title: _vm.$_L.get(\"速度\"),\n                  width: \"200\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\"InputText\", {\n                          staticStyle: {\n                            margin: \"5px -5px\",\n                            width: \"calc(50% + 0px)\"\n                          },\n                          attrs: {\n                            reg: /\\D/g,\n                            placeholder: _vm.$_L.get(\"最小值\")\n                          },\n                          model: {\n                            value: row.speed[0],\n                            callback: function($$v) {\n                              _vm.$set(row.speed, 0, $$v)\n                            },\n                            expression: \"row.speed[0]\"\n                          }\n                        }),\n                        _c(\"InputText\", {\n                          staticStyle: {\n                            margin: \"5px -5px\",\n                            width: \"calc(50% + 5px)\"\n                          },\n                          attrs: {\n                            reg: /\\D/g,\n                            placeholder: _vm.$_L.get(\"最大值\")\n                          },\n                          model: {\n                            value: row.speed[1],\n                            callback: function($$v) {\n                              _vm.$set(row.speed, 1, $$v)\n                            },\n                            expression: \"row.speed[1]\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"vxe-table-column\", {\n                attrs: { field: \"content\", title: _vm.$_L.get(\"里程\") },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\"InputText\", {\n                          staticStyle: {\n                            margin: \"5px -5px\",\n                            width: \"calc(100% + 10px)\"\n                          },\n                          attrs: { reg: /\\D/g },\n                          model: {\n                            value: row.mile,\n                            callback: function($$v) {\n                              _vm.$set(row, \"mile\", $$v)\n                            },\n                            expression: \"row.mile\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"vxe-table-column\", {\n                attrs: { field: \"content\", title: _vm.$_L.get(\"转速\") },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\"InputText\", {\n                          staticStyle: {\n                            margin: \"5px -5px\",\n                            width: \"calc(100% + 10px)\"\n                          },\n                          attrs: { reg: /\\D/g },\n                          model: {\n                            value: row.rev,\n                            callback: function($$v) {\n                              _vm.$set(row, \"rev\", $$v)\n                            },\n                            expression: \"row.rev\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"vxe-table-column\", {\n                attrs: { field: \"content\", title: _vm.$_L.get(\"档位\") },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\"InputText\", {\n                          staticStyle: {\n                            margin: \"5px -5px\",\n                            width: \"calc(100% + 10px)\"\n                          },\n                          attrs: { reg: /\\D/g },\n                          model: {\n                            value: row.gear,\n                            callback: function($$v) {\n                              _vm.$set(row, \"gear\", $$v)\n                            },\n                            expression: \"row.gear\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"vxe-table-column\", {\n                attrs: { field: \"content\", title: _vm.$_L.get(\"油门开合度\") },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\"InputText\", {\n                          staticStyle: {\n                            margin: \"5px -5px\",\n                            width: \"calc(100% + 10px)\"\n                          },\n                          attrs: { reg: /\\D/g },\n                          model: {\n                            value: row.appPid,\n                            callback: function($$v) {\n                              _vm.$set(row, \"appPid\", $$v)\n                            },\n                            expression: \"row.appPid\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"vxe-table-column\", {\n                attrs: { field: \"content\", width: \"40\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      var rowIndex = ref.rowIndex\n                      return [\n                        _c(\"i\", {\n                          staticClass: \"el-icon-close\",\n                          staticStyle: {\n                            margin: \"5px 0\",\n                            \"font-size\": \"16px\",\n                            height: \"32px\",\n                            cursor: \"pointer\",\n                            \"padding-top\": \"8px\"\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.regions.splice(rowIndex, 1)\n                            }\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"template\",\n        { slot: \"footer\" },\n        [\n          _c(\n            \"div\",\n            { staticStyle: { position: \"absolute\" } },\n            [\n              _c(\n                \"Button\",\n                {\n                  staticStyle: { margin: \"8px\" },\n                  attrs: { icon: \"el-icon-plus\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.addAiItemClick()\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$_L.get(\"添加区域\")))]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"Button\",\n            {\n              staticStyle: { margin: \"8px 4px\", \"min-width\": \"80px\" },\n              on: {\n                click: function($event) {\n                  return _vm.$refs.w.close()\n                }\n              }\n            },\n            [_vm._v(_vm._s(_vm.$_L.get(\"取消\")))]\n          ),\n          _c(\n            \"Button\",\n            {\n              staticStyle: { margin: \"8px 4px\", \"min-width\": \"80px\" },\n              attrs: { type: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.submit()\n                }\n              }\n            },\n            [_vm._v(_vm._s(_vm.$_L.get(\"确定\")))]\n          )\n        ],\n        1\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}