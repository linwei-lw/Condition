{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\main\\alarm\\RealTimeAlarm\\AlarmMediaBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\main\\alarm\\RealTimeAlarm\\AlarmMediaBox.vue","mtime":1672991690649},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport MediaViewingWindow from './MediaViewingWindow.vue';\r\nimport AlarmBinContentBox from './AlarmBinContentBox.vue';\r\nimport { getCars } from '@/common/cache/CacheTeamCar.js';\r\nimport { dateFormat } from '@/common/util/Dates.js';\r\nimport Labels from '@/common/gps/Labels.js';\r\nimport { getCarById } from '@/common/cache/CacheTeamCar.js';\r\n\r\n\r\n/*\r\n* 使用例子\r\n* <AlarmMediaBox :medias=\"medias\" :alarm=\"alarm\" />\r\n*/\r\n\r\nexport default {\r\n  props: {\r\n    medias: { type: Array, default: null },  // 报警多媒体对象\r\n    alarm: { default: null },  // 报警对象     \r\n    weChatGroupList: { type: Array, default: () => [] } //群列表 \r\n  },\r\n  components: { AlarmBinContentBox },\r\n  data() {\r\n    return {\r\n      selectMedia: {},\r\n      url: null,\r\n      o_url: null,\r\n      title: \"\",\r\n      type: null,\r\n      showTime: false,\r\n      mediasList: null,\r\n\r\n    };\r\n  },\r\n  created() {\r\n    getCars(cars => {\r\n      this._car_map = cars.map;\r\n    });\r\n\r\n  },\r\n  watch: {\r\n    medias(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.mediasList = this.sortMedias(this.medias);\r\n        this.onMediasClick(this.mediasList[0]);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.onMediasClick(this.medias[0]);\r\n\r\n  },\r\n  methods: {\r\n    isShowAccessory() {\r\n      let append = $_cache.sysCfg['media.adas.append']\r\n      if (append) {\r\n        return JSON.parse(append)['enabled'] == \"false\" ? false : true;\r\n      }\r\n      return true;\r\n    },\r\n    sortMedias(medias) {\r\n      if (medias && medias.length > 0 && medias[0].type != '0') {\r\n        let newMedias = [];\r\n        for (let i = 0; i < medias.length; i++) {\r\n          if (medias[i].type == '0') {\r\n            newMedias.unshift(medias[i]);\r\n          } else {\r\n            newMedias.push(medias[i]);\r\n          }\r\n        }\r\n        return newMedias;\r\n      }\r\n      return medias;\r\n    },\r\n    guid() {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0,\r\n          v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    },\r\n    appendMedias(medias, uid) {\r\n      return $_main.http.syncPost('h5/query/media?append', { uid: uid, medias: medias });\r\n    },\r\n    downloadMedias(uid) {\r\n      var file = \"media\" + dateFormat(null, \"YYYYMMDDHHNNSS\");\r\n      let session = $_main.sessionId;\r\n      let userId = $_main.userId;\r\n      let loginWay = $_cache.user.loginWay;\r\n      // let loginWay = 'interface';\r\n      let loginType = $_cache.user.loginType;\r\n      // let loginType = 'user';\r\n      let loginLang = $_cache.user.loginLang;\r\n      // let loginLang = 'zh_CN';\r\n      var url = $_main.domain.WEB_PATH + \"media\";\r\n      var sendData = \"sessionId=\" + session + \"&userId=\" + userId + \"&loginWay=\" + loginWay + \"&loginType=\" + loginType + \"&loginLang=\" + loginLang + \"&file=\" + file + \"&compress=false&uid=\" + uid;\r\n      var a = document.createElement('a');\r\n      a.download = file;\r\n      a.href = url + \"?\" + sendData;\r\n      $(\"body\").append(a);  // 修复firefox中无法触发click\r\n      a.click();\r\n      $(a).remove();\r\n    },\r\n    onDownloadAll() {\r\n      let uid = this.guid();\r\n      let medias = this.medias;\r\n      if (medias.length <= 1000) {\r\n        if (this.appendMedias(medias, uid)) {\r\n          $_alert.success($_L.get('正在下载，请稍后...'));\r\n          this.downloadMedias(uid);\r\n        } else {\r\n          return $_alert.error($_L.get('添加下载失败！'));\r\n        };\r\n      } else {\r\n        var success = true;\r\n        for (var i = 0; i < medias.length; i += 1000) {\r\n          if (!this.appendMedias(medias.slice(i, i + 1000), uid)) {\r\n            success = false;\r\n          };\r\n        }\r\n        if (success) {\r\n          $_alert.success($_L.get('正在下载，请稍后...'));\r\n          this.downloadMedias(uid);\r\n        } else {\r\n          return $_alert.error($_L.get('添加下载失败！'));\r\n        }\r\n      }\r\n    },\r\n    accessoryClick() {\r\n      if(this._car_map[this.alarm.carId].status <= 4){ //判断车辆是否离线\r\n        return $_alert.warn($_L.get('该车辆离线无法补传！'));\r\n      }\r\n      $_main.http.post('h5/mnt/alarm?requestAdasFile', this.alarm).then(result => {\r\n        result && $_alert.success($_L.get('补传成功!'), this.$el) || $_alert.warn($_L.get('补传失败!'), this.$el)\r\n      })\r\n    },\r\n    createFlv() {\r\n      $_http.post('h5/query/media?createFlv', { media: this.selectMedia }).then(result => {\r\n        this.url = this.getMediaUrl(result).replace('.mp4', '.new.mp4').replace('.h264', '.new.mp4');\r\n        this.title = this.url;\r\n        let that = this;\r\n        this._video.removeEventListener(\"error\", that.videoError, false);\r\n      });\r\n    },\r\n    videoError(e) {\r\n      this.o_url = this.url;\r\n      this.createFlv();\r\n    },\r\n    getVideoSrc() {\r\n      try {\r\n        this._video = this.$refs.video;\r\n        let that = this;\r\n        this._video.addEventListener(\"error\", that.videoError, false);\r\n      } catch (error) {\r\n\r\n      }\r\n    },\r\n    onMediasClick(media) {\r\n      if (media == null) {\r\n        this.url = null;\r\n        this.title = \"\";\r\n        this.selectMedia = null;\r\n        return\r\n      }\r\n      this.title = this.getMediaUrl(media);\r\n      this.selectMedia = media;\r\n      this.url = this.getMediaUrl(media);\r\n      this.type = this.selectMedia.type\r\n      if (media.type == \"2\") {\r\n        this.$nextTick(() => { this.getVideoSrc() });\r\n      }\r\n    },\r\n    onMediasDbclick() {\r\n      let url = this.getMediaUrl(this.selectMedia);\r\n      let index = this.medias.findIndex(item => this.selectMedia == item)\r\n      $_popup.open(MediaViewingWindow, { medias: this.selectMedia, url: url, type: this.type, mediasList: this.mediasList, index: index, callback: this.onMediasDbclickCallback });\r\n    },\r\n    onMediasDbclickCallback(index) {\r\n      let selectMedia = this.medias[index]\r\n      let url = this.getMediaUrl(selectMedia);\r\n      $_popup.open(MediaViewingWindow, { medias: selectMedia, url: url, type: selectMedia.type, mediasList: this.mediasList, index: index, callback: this.onMediasDbclickCallback });\r\n    },\r\n    getImgSrc(media) {\r\n      let type = media.type;\r\n      if (type == 0) {\r\n        return this.getMediaUrl(media);\r\n      } else if (type == 1 || type == 2) {\r\n        return require('@/assets/icon/video.png');\r\n      } else if (type == 3) {\r\n        return require('@/assets/icon/file.png');\r\n      } else if (type == 4) {\r\n        return require('@/assets/icon/file2.png');\r\n      }\r\n    },\r\n    getMediaUrl(media) {\r\n      let format = media.format;\r\n      if (format == 0) {\r\n        format = \"jpg\";\r\n      } else if (format == 1) {\r\n        format = \"tif\"\r\n      } else if (format == 2) {\r\n        format = \"mp3\"\r\n      } else if (format == 3) {\r\n        format = \"wav\"\r\n      } else if (format == 4) {\r\n        format = \"wmv\"\r\n      } else if (format == 5) {\r\n        format = \"mp4\"\r\n      } else if (format == 6) {\r\n        format = \"bin\"\r\n      } else if (format == 7) {\r\n        format = \"xx\"\r\n      } else if (format == 8) {\r\n        format = \"log\"\r\n      } else if (format == 9) {\r\n        format = \"yy\"\r\n      }\r\n      let dt = media.time.split(' ');\r\n      dt[1] = dt[1].replace(new RegExp(':', 'g'), '');\r\n      let fileName = JSON.parse(media.exts).fileName ? JSON.parse(media.exts).fileName : \"\";\r\n      fileName = fileName.length > 0 ? (dt[1] + \"_\" + fileName) : (dt[1] + \".\" + format);\r\n      return $_main.domain.WEB_PATH + \"photos?refPath=\" + dt[0] + \"/\" + media.carId + \"/\" + fileName;\r\n    },\r\n    plateFormatter(cellValue) {\r\n      cellValue = this._car_map[cellValue];\r\n      return cellValue ? cellValue.plate : '';\r\n    },\r\n    onDownload(original = true) {\r\n      let url = original ? this.url : this.o_url;\r\n      console.log(this.url,this.o_url);\r\n      let suffix = (this.type == '2' && this.o_url && original) ? 'new.mp4' : url.split(\"refPath=\")[1].split(\".\")[1];\r\n      let time = this.selectMedia.time.replace(\" \", \"_\").replace(new RegExp(\":\", (\"gm\")), \"\") + \".\" + suffix;\r\n      let fileName = this.plateFormatter(this.selectMedia.carId) + \"_\" + time;\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.responseType = \"blob\";  // 返回类型blob\r\n      xhr.open('get', url, true);\r\n      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n      // 定义请求完成的处理函数，请求前也可以增加加载框/禁用下载按钮逻辑\r\n      var that = this;\r\n      xhr.onload = function () {\r\n        // 请求完成\r\n        if (this.status === 200) {\r\n          // 返回200\r\n          var blob = this.response;\r\n          var reader = new FileReader();\r\n          reader.readAsDataURL(blob);  // 转换为base64\r\n          reader.onload = function (e) {\r\n            // 转换完成，创建一个a标签用于下载\r\n            var a = document.createElement('a');\r\n            a.download = fileName;\r\n            a.href = e.target.result;\r\n            $(\"body\").append(a);  // 修复firefox中无法触发click\r\n            a.click();\r\n            $(a).remove();\r\n            that.waiting = false;\r\n          }\r\n        } else {\r\n          $_alert.error($_L.get('下载失败！'));\r\n        }\r\n      };\r\n      // 发送ajax请求\r\n      xhr.send();\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["AlarmMediaBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"AlarmMediaBox.vue","sourceRoot":"src/main/alarm/RealTimeAlarm","sourcesContent":["<template>\r\n  <div :class=\"$style.container\">\r\n    <div style=\"position: relative;height:calc(100% - 48px);width: 100%;border-bottom:1px solid;padding:5px;\" :style=\"{borderColor:theme.border_color_dark}\">\r\n      <div v-show=\"medias&&(medias.length > 0)\" style=\"width:100%;height:100%;\">\r\n        <div style=\"width:calc(100% - 155px);height:100%;float:left;border:1px solid;position:relative;margin-right: 5px;text-align: center;\" :style=\"{borderColor:theme.border_color_dark}\">\r\n          <img v-if=\"type == '0'\" :src=\"url\" style=\"width:100%;height:100%;cursor: pointer;\" @dblclick.stop=\"onMediasDbclick()\" :title=\"title\">\r\n          <video ref=\"video\" v-if=\"type == '2'\" :src=\"url\" controls autoplay loop=\"loop\" style=\"width:100%;height:100%;object-fit:fill;\"></video>\r\n          <div v-if=\"type == '2'\" style=\"width:100%;height:calc(100% - 85px);cursor: pointer;position: absolute;top: 18px;left: 0px;background-color: rgba(0, 0, 0, 0); \" @dblclick.stop=\"onMediasDbclick()\" :title=\"title\"></div>\r\n          <audio v-if=\"type == '1'\" :src=\"url\" controls=\"controls\" autoplay @dblclick.stop=\"onMediasDbclick()\">{{$_L.get('您的浏览器不支持 audio 标签。')}}</audio>\r\n          <div style=\"position: relative;width: 100%;height: 100%;cursor: pointer;\" @dblclick.stop=\"onMediasDbclick()\" v-if=\"type == '3'\">\r\n            <AlarmBinContentBox :data=\"url\" />\r\n          </div>\r\n          <img v-if=\"type == '4'\" src=\"@/assets/icon/file2.png\" style=\"cursor: pointer;width: 100px;position: relative;top: calc(50% - 50px)\" @dblclick.stop=\"onMediasDbclick()\" :title=\"title\">\r\n          <div :class=\"$style.mediasTime\" v-show=\"showTime\">{{selectMedia?selectMedia.time:''}}</div>\r\n        </div>\r\n        <div style=\"width:150px;height:100%;float:left;overflow-y: auto;border:1px solid;\" :style=\"{borderColor:theme.border_color_dark}\">\r\n          <div v-for=\"(media,index) in mediasList\" v-bind:key=\"media.id\" :class=\"$style.mediasDiv\" :id=\"'img_'+index\" :style=\"{borderColor:theme.border_color_dark}\">\r\n            <img v-if=\"media.type != 4\" :src=\"getImgSrc(media)\" style=\"width:100%;height:100%;cursor: pointer;float:left;\" :title=\"selectMedia.addr\" @click=\"onMediasClick(media)\">\r\n            <img v-if=\"media.type == 4\" :src=\"getImgSrc(media)\" style=\"width:60px;position: relative;top: calc(50% - 30px);cursor: pointer;margin: auto;\" :title=\"selectMedia.addr\" @click=\"onMediasClick(media)\">\r\n            <div :class=\"$style.mediasTime\" v-show=\"showTime\">{{media.time}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-show=\"medias.length == 0||!medias\" style=\"font-size:20px;display:flex;align-items: center;justify-content: center;height:100%;width:100%;\">\r\n        {{$_L.get('未获取到任何多媒体信息')}}\r\n      </div>\r\n    </div>\r\n    <div style=\"height: 48px;width: 100%;padding: 0 4px;\">\r\n      <Button style=\"margin:8px 4px;\" type=\"primary\" @click=\"onDownload()\" icon=\"el-icon-download\"> {{$_L.get('当前下载')}} </Button>\r\n      <Button style=\"margin:8px 4px;\" type=\"primary\" @click=\"onDownload(false)\" icon=\"el-icon-download\" v-if=\"type=='2'&&o_url\"> {{$_L.get('原视频下载')}} </Button>\r\n      <Button style=\"margin:8px 4px;\" type=\"primary\" @click=\"onDownloadAll()\" icon=\"el-icon-download\"> {{$_L.get('全部下载')}} </Button>\r\n      <Button type=\"primary\" style=\"float:right;margin:8px 4px\" @click=\"accessoryClick\" v-if=\"isShowAccessory()\">{{$_L.get('补传附件')}}</Button>\r\n      <div style=\"float:right;height: 100%;margin:0 4px;display: flex;align-items: center;\">\r\n        <Checkbox v-model=\"showTime\" :label=\"$_L.get('显示时间')\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MediaViewingWindow from './MediaViewingWindow.vue';\r\nimport AlarmBinContentBox from './AlarmBinContentBox.vue';\r\nimport { getCars } from '@/common/cache/CacheTeamCar.js';\r\nimport { dateFormat } from '@/common/util/Dates.js';\r\nimport Labels from '@/common/gps/Labels.js';\r\nimport { getCarById } from '@/common/cache/CacheTeamCar.js';\r\n\r\n\r\n/*\r\n* 使用例子\r\n* <AlarmMediaBox :medias=\"medias\" :alarm=\"alarm\" />\r\n*/\r\n\r\nexport default {\r\n  props: {\r\n    medias: { type: Array, default: null },  // 报警多媒体对象\r\n    alarm: { default: null },  // 报警对象     \r\n    weChatGroupList: { type: Array, default: () => [] } //群列表 \r\n  },\r\n  components: { AlarmBinContentBox },\r\n  data() {\r\n    return {\r\n      selectMedia: {},\r\n      url: null,\r\n      o_url: null,\r\n      title: \"\",\r\n      type: null,\r\n      showTime: false,\r\n      mediasList: null,\r\n\r\n    };\r\n  },\r\n  created() {\r\n    getCars(cars => {\r\n      this._car_map = cars.map;\r\n    });\r\n\r\n  },\r\n  watch: {\r\n    medias(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.mediasList = this.sortMedias(this.medias);\r\n        this.onMediasClick(this.mediasList[0]);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.onMediasClick(this.medias[0]);\r\n\r\n  },\r\n  methods: {\r\n    isShowAccessory() {\r\n      let append = $_cache.sysCfg['media.adas.append']\r\n      if (append) {\r\n        return JSON.parse(append)['enabled'] == \"false\" ? false : true;\r\n      }\r\n      return true;\r\n    },\r\n    sortMedias(medias) {\r\n      if (medias && medias.length > 0 && medias[0].type != '0') {\r\n        let newMedias = [];\r\n        for (let i = 0; i < medias.length; i++) {\r\n          if (medias[i].type == '0') {\r\n            newMedias.unshift(medias[i]);\r\n          } else {\r\n            newMedias.push(medias[i]);\r\n          }\r\n        }\r\n        return newMedias;\r\n      }\r\n      return medias;\r\n    },\r\n    guid() {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0,\r\n          v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    },\r\n    appendMedias(medias, uid) {\r\n      return $_main.http.syncPost('h5/query/media?append', { uid: uid, medias: medias });\r\n    },\r\n    downloadMedias(uid) {\r\n      var file = \"media\" + dateFormat(null, \"YYYYMMDDHHNNSS\");\r\n      let session = $_main.sessionId;\r\n      let userId = $_main.userId;\r\n      let loginWay = $_cache.user.loginWay;\r\n      // let loginWay = 'interface';\r\n      let loginType = $_cache.user.loginType;\r\n      // let loginType = 'user';\r\n      let loginLang = $_cache.user.loginLang;\r\n      // let loginLang = 'zh_CN';\r\n      var url = $_main.domain.WEB_PATH + \"media\";\r\n      var sendData = \"sessionId=\" + session + \"&userId=\" + userId + \"&loginWay=\" + loginWay + \"&loginType=\" + loginType + \"&loginLang=\" + loginLang + \"&file=\" + file + \"&compress=false&uid=\" + uid;\r\n      var a = document.createElement('a');\r\n      a.download = file;\r\n      a.href = url + \"?\" + sendData;\r\n      $(\"body\").append(a);  // 修复firefox中无法触发click\r\n      a.click();\r\n      $(a).remove();\r\n    },\r\n    onDownloadAll() {\r\n      let uid = this.guid();\r\n      let medias = this.medias;\r\n      if (medias.length <= 1000) {\r\n        if (this.appendMedias(medias, uid)) {\r\n          $_alert.success($_L.get('正在下载，请稍后...'));\r\n          this.downloadMedias(uid);\r\n        } else {\r\n          return $_alert.error($_L.get('添加下载失败！'));\r\n        };\r\n      } else {\r\n        var success = true;\r\n        for (var i = 0; i < medias.length; i += 1000) {\r\n          if (!this.appendMedias(medias.slice(i, i + 1000), uid)) {\r\n            success = false;\r\n          };\r\n        }\r\n        if (success) {\r\n          $_alert.success($_L.get('正在下载，请稍后...'));\r\n          this.downloadMedias(uid);\r\n        } else {\r\n          return $_alert.error($_L.get('添加下载失败！'));\r\n        }\r\n      }\r\n    },\r\n    accessoryClick() {\r\n      if(this._car_map[this.alarm.carId].status <= 4){ //判断车辆是否离线\r\n        return $_alert.warn($_L.get('该车辆离线无法补传！'));\r\n      }\r\n      $_main.http.post('h5/mnt/alarm?requestAdasFile', this.alarm).then(result => {\r\n        result && $_alert.success($_L.get('补传成功!'), this.$el) || $_alert.warn($_L.get('补传失败!'), this.$el)\r\n      })\r\n    },\r\n    createFlv() {\r\n      $_http.post('h5/query/media?createFlv', { media: this.selectMedia }).then(result => {\r\n        this.url = this.getMediaUrl(result).replace('.mp4', '.new.mp4').replace('.h264', '.new.mp4');\r\n        this.title = this.url;\r\n        let that = this;\r\n        this._video.removeEventListener(\"error\", that.videoError, false);\r\n      });\r\n    },\r\n    videoError(e) {\r\n      this.o_url = this.url;\r\n      this.createFlv();\r\n    },\r\n    getVideoSrc() {\r\n      try {\r\n        this._video = this.$refs.video;\r\n        let that = this;\r\n        this._video.addEventListener(\"error\", that.videoError, false);\r\n      } catch (error) {\r\n\r\n      }\r\n    },\r\n    onMediasClick(media) {\r\n      if (media == null) {\r\n        this.url = null;\r\n        this.title = \"\";\r\n        this.selectMedia = null;\r\n        return\r\n      }\r\n      this.title = this.getMediaUrl(media);\r\n      this.selectMedia = media;\r\n      this.url = this.getMediaUrl(media);\r\n      this.type = this.selectMedia.type\r\n      if (media.type == \"2\") {\r\n        this.$nextTick(() => { this.getVideoSrc() });\r\n      }\r\n    },\r\n    onMediasDbclick() {\r\n      let url = this.getMediaUrl(this.selectMedia);\r\n      let index = this.medias.findIndex(item => this.selectMedia == item)\r\n      $_popup.open(MediaViewingWindow, { medias: this.selectMedia, url: url, type: this.type, mediasList: this.mediasList, index: index, callback: this.onMediasDbclickCallback });\r\n    },\r\n    onMediasDbclickCallback(index) {\r\n      let selectMedia = this.medias[index]\r\n      let url = this.getMediaUrl(selectMedia);\r\n      $_popup.open(MediaViewingWindow, { medias: selectMedia, url: url, type: selectMedia.type, mediasList: this.mediasList, index: index, callback: this.onMediasDbclickCallback });\r\n    },\r\n    getImgSrc(media) {\r\n      let type = media.type;\r\n      if (type == 0) {\r\n        return this.getMediaUrl(media);\r\n      } else if (type == 1 || type == 2) {\r\n        return require('@/assets/icon/video.png');\r\n      } else if (type == 3) {\r\n        return require('@/assets/icon/file.png');\r\n      } else if (type == 4) {\r\n        return require('@/assets/icon/file2.png');\r\n      }\r\n    },\r\n    getMediaUrl(media) {\r\n      let format = media.format;\r\n      if (format == 0) {\r\n        format = \"jpg\";\r\n      } else if (format == 1) {\r\n        format = \"tif\"\r\n      } else if (format == 2) {\r\n        format = \"mp3\"\r\n      } else if (format == 3) {\r\n        format = \"wav\"\r\n      } else if (format == 4) {\r\n        format = \"wmv\"\r\n      } else if (format == 5) {\r\n        format = \"mp4\"\r\n      } else if (format == 6) {\r\n        format = \"bin\"\r\n      } else if (format == 7) {\r\n        format = \"xx\"\r\n      } else if (format == 8) {\r\n        format = \"log\"\r\n      } else if (format == 9) {\r\n        format = \"yy\"\r\n      }\r\n      let dt = media.time.split(' ');\r\n      dt[1] = dt[1].replace(new RegExp(':', 'g'), '');\r\n      let fileName = JSON.parse(media.exts).fileName ? JSON.parse(media.exts).fileName : \"\";\r\n      fileName = fileName.length > 0 ? (dt[1] + \"_\" + fileName) : (dt[1] + \".\" + format);\r\n      return $_main.domain.WEB_PATH + \"photos?refPath=\" + dt[0] + \"/\" + media.carId + \"/\" + fileName;\r\n    },\r\n    plateFormatter(cellValue) {\r\n      cellValue = this._car_map[cellValue];\r\n      return cellValue ? cellValue.plate : '';\r\n    },\r\n    onDownload(original = true) {\r\n      let url = original ? this.url : this.o_url;\r\n      console.log(this.url,this.o_url);\r\n      let suffix = (this.type == '2' && this.o_url && original) ? 'new.mp4' : url.split(\"refPath=\")[1].split(\".\")[1];\r\n      let time = this.selectMedia.time.replace(\" \", \"_\").replace(new RegExp(\":\", (\"gm\")), \"\") + \".\" + suffix;\r\n      let fileName = this.plateFormatter(this.selectMedia.carId) + \"_\" + time;\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.responseType = \"blob\";  // 返回类型blob\r\n      xhr.open('get', url, true);\r\n      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n      // 定义请求完成的处理函数，请求前也可以增加加载框/禁用下载按钮逻辑\r\n      var that = this;\r\n      xhr.onload = function () {\r\n        // 请求完成\r\n        if (this.status === 200) {\r\n          // 返回200\r\n          var blob = this.response;\r\n          var reader = new FileReader();\r\n          reader.readAsDataURL(blob);  // 转换为base64\r\n          reader.onload = function (e) {\r\n            // 转换完成，创建一个a标签用于下载\r\n            var a = document.createElement('a');\r\n            a.download = fileName;\r\n            a.href = e.target.result;\r\n            $(\"body\").append(a);  // 修复firefox中无法触发click\r\n            a.click();\r\n            $(a).remove();\r\n            that.waiting = false;\r\n          }\r\n        } else {\r\n          $_alert.error($_L.get('下载失败！'));\r\n        }\r\n      };\r\n      // 发送ajax请求\r\n      xhr.send();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style module>\r\n.container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.mediasDiv {\r\n  width: 100%;\r\n  height: 110px;\r\n  margin-bottom: 5px;\r\n  border: 1px solid;\r\n  border-width: 1px 0px;\r\n  position: relative;\r\n  text-align: center;\r\n}\r\n.mediasDiv:last-child {\r\n  margin-bottom: 0px;\r\n}\r\n.mediasDiv:first-child {\r\n  border-width: 0px 0px 1px 0px;\r\n}\r\n.mediasTime {\r\n  width: 100%;\r\n  height: 18px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  text-align: center;\r\n  color: #fff;\r\n}\r\n</style>\r\n"]}]}