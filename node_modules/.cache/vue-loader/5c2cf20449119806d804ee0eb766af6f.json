{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Slider.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Slider.vue","mtime":1638496827581},{"path":"D:\\cdRule\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container {\n  position: relative;\n  line-height: normal;\n  cursor: pointer;\n  height: 20px;\n  margin: 0;\n  padding: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n}\n.bar {\n  top: 8px;\n  width: 100%;\n  height: 4px;\n  vertical-align: middle;\n  position: relative;\n}\n.value_bar {\n  height: 4px;\n  /*border-radius: 3px;*/\n  position: absolute\n}\n.btn {\n  position: absolute;\n  margin-left: -6px;\n  top: -4px;\n  width: 12px;\n  height: 12px;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 50%;\n  background-color: #fff;\n  outline: 0;\n}\n.sign {\n  position: absolute;\n  margin-left: -5px;\n  top: -3px;\n  width: 10px;\n  height: 10px;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 50%;\n  background-color: #fff;\n  outline: 0;\n}\n.tooltip {\n  position: absolute;\n  top: -35px;\n  padding: 4px 6px;\n  border-width: 1px;\n  border-style: solid;\n  white-space: nowrap;\n  background-color: #FCF0C1;\n  z-index: 99999;\n}\n/* 禁止操作 */\n.disabled {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  background-color: rgba(255, 255, 255, 0.6);\n  opacity: 0.6;\n  filter: alpha(opacity=60); \n  cursor: not-allowed;\n}\n",{"version":3,"sources":["Slider.vue"],"names":[],"mappingsfile":"Slider.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div :class=\"$style.container\" @click=\"onBarClick($event)\" @wheel.prevent=\"wheelBar($event)\" @mousemove=\"showtip && onMouseMove($event)\" @mouseleave=\"showMouseTip=false\">\r\n    <div :class=\"$style.bar\" :style=\"{backgroundColor: barColor||theme.border_color_light}\" ref=\"bar\">\r\n      <div :class=\"$style.value_bar\" :style=\"{width: brate+'%', backgroundColor: valueColor||theme.color}\" v-if=\"showValueBar\"></div>\r\n     \r\n      <div :class=\"$style.sign\" v-for=\"v in signs\" :key=\"v\" @mousemove.stop=\"!showButtonTip && (showMouseTip=true) && (mouseValue=v)\" @click.stop=\"onSignClick(v)\" :style=\"{left:((v-min)*100/rang)+'%', borderColor: barColor||theme.border_color_light}\"></div>\r\n\r\n      <div :class=\"$style.btn\" :style=\"{left: brate+'%', borderColor: theme.color}\" @mousedown=\"onDragStart($event)\" @mouseenter=\"showButtonTip=true;showMouseTip=false\" @mouseleave=\"!draging&&(showButtonTip=false)\"></div>\r\n\r\n      <span @mousemove.stop=\"showMouseTip=false\" :class=\"$style.tooltip\" ref=\"buttonTip\" :style=\"{left: `calc(${brate}% - ${buttonTipWidth/2}px)`, borderColor: valueColor||theme.color}\" v-show=\"showtip && showButtonTip\"> {{getTooltip ? getTooltip(buttonValue) : tooltip.replace(reg,buttonValue)}} </span>\r\n      <span @mousemove.stop=\"showMouseTip=false\" :class=\"$style.tooltip\" ref=\"mouseTip\"  :style=\"{left: `calc(${mrate}% - ${mouseTipWidth/2}px)`, borderColor: valueColor||theme.color}\"  v-show=\"showtip && showMouseTip\">  {{getTooltip ? getTooltip(mouseValue) : tooltip.replace(reg,mouseValue)}} </span>\r\n    </div>\r\n\r\n    <!--禁止操作层-->\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  /*\r\n  * 使用例子\r\n  * <Slider tooltip=\"{}秒\" :min=\"0\" :max=\"59\" :signs=\"[0,30,59]\" v-model=\"second\" @change=\"onSecondChg()\"/>  \r\n  * \r\n  *  data: {second: 0},\r\n  *  methods: {\r\n  *    onSecondChg(second) {\r\n  *    }\r\n  *  }\r\n  */\r\n\r\n  export default {\r\n    name: \"Slider\",\r\n    props: {\r\n      value: { type: [String, Number],  default: 0 },            // 当前值(v-model)\r\n      min:   { type: Number,  default: 0 },\r\n      max:   { type: Number,  default: 100 },\r\n      step:   { type: Number,  default: 1 },\r\n      signs: Array,\r\n      showtip: { type: Boolean,  default: true },\r\n      tooltip: { type: String, default: '{}'},\r\n      getTooltip: Function,\r\n      barColor: { type: String, default: null},\r\n      valueColor: { type: String, default: null},\r\n      disabled: Boolean,                               // 是否可操作\r\n      showValueBar: { type: Boolean, default: true},   //\r\n    },\r\n    data() {\r\n      return {\r\n        buttonTipWidth: 0,\r\n        showButtonTip: false,\r\n        buttonValue: 0,\r\n        mouseTipWidth: 0,\r\n        showMouseTip: false,\r\n        mouseValue: 0,\r\n        draging: false,\r\n        reg: new RegExp(\"\\\\{\\\\}\",\"g\")\r\n      };\r\n    },\r\n    mounted() {\r\n      this.buttonValue = this.validValue(Number(this.value||this.min));\r\n    },\r\n    watch: {\r\n      value: function(v) {\r\n        this.buttonValue = this.validValue(v);\r\n      },\r\n      buttonValue: function(v) {\r\n        this.$nextTick(this.setButtonTipWidth);\r\n      },\r\n      showButtonTip: function(v) {\r\n        v && this.$nextTick(this.setButtonTipWidth);\r\n      },\r\n      mouseValue: function(v) {\r\n        this.$nextTick(this.setMouseTipWidth);\r\n      },\r\n      showMouseTip: function(v) {\r\n        v && this.$nextTick(this.setMouseTipWidth);\r\n      },\r\n      \r\n    },\r\n    methods: {\r\n      onSignClick(v) {\r\n        let oldValue = this.buttonValue;\r\n        this.buttonValue = this.validValue(v);\r\n        this.$emit('input', this.buttonValue);\r\n        this.$emit('change', this.buttonValue, oldValue);\r\n      },\r\n      wheelBar(event) {\r\n        this.showButtonTip = true;\r\n        this.showMouseTip = false;\r\n        let oldValue = this.buttonValue;\r\n        this.buttonValue = this.validValue(event.deltaY < 0 ? (this.buttonValue - this.step) : (this.buttonValue + this.step));\r\n        if (oldValue != this.buttonValue) {\r\n          this.$emit('input', this.buttonValue);\r\n          this.$emit('change', this.buttonValue, oldValue);\r\n        }\r\n      },\r\n      onDragStart(event) {\r\n        this.draging = true;\r\n        document.addEventListener('mousemove', this.onDragging);\r\n        document.addEventListener('mouseup', this.onDragEnd);\r\n        this.$emit('dragstart', this._oldValue = this.buttonValue);\r\n      },\r\n      onDragging(event) {\r\n        let w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\r\n        this.buttonValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min)/this.step) * this.step);\r\n        this.$emit('dragging', this.buttonValue);\r\n      },\r\n      onDragEnd(event) {\r\n        this.draging = this.showButtonTip = false;\r\n        document.removeEventListener('mousemove', this.onDragging);\r\n        document.removeEventListener('mouseup', this.onDragEnd);\r\n        this.$emit('input', this.buttonValue);\r\n        this.$emit('change', this.buttonValue, this._oldValue);\r\n        this.$emit('dragend', this.buttonValue, this._oldValue);\r\n      },\r\n      onBarClick(event) {\r\n        let oldValue = this.buttonValue;\r\n        let w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\r\n        this.buttonValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min)/this.step) * this.step);\r\n        this.$emit('input', this.buttonValue);\r\n        this.$emit('change', this.buttonValue, oldValue);\r\n      },\r\n      onMouseMove(event) {\r\n        if (this.showButtonTip) return;\r\n        let w = event.clientX - this.$refs.bar.getBoundingClientRect().left;\r\n        this.mouseValue = this.validValue(Math.round((w * this.rang / this.$refs.bar.clientWidth + this.min)/this.step) * this.step);\r\n        this.showMouseTip = true;\r\n      },\r\n      setButtonTipWidth() {\r\n        this.buttonTipWidth = this.$refs.buttonTip.clientWidth;\r\n      },\r\n      setMouseTipWidth() {\r\n        this.mouseTipWidth = this.$refs.mouseTip.clientWidth;\r\n      },\r\n      validValue(v) {\r\n        v = Number(v.toFixed(5));\r\n        return v < this.min ? this.min : (v > this.max ? this.max : v);\r\n      }\r\n    },\r\n    computed: {\r\n      brate() {\r\n        return this.rang == 0 ? 0 : ((this.buttonValue - this.min) * 100 / this.rang);\r\n      },\r\n      mrate() {\r\n        return this.rang == 0 ? 0 : ((this.mouseValue - this.min) * 100 / this.rang);\r\n      },\r\n      rang() {\r\n        return this.max - this.min;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    position: relative;\r\n    line-height: normal;\r\n    cursor: pointer;\r\n    height: 20px;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .bar {\r\n    top: 8px;\r\n    width: 100%;\r\n    height: 4px;\r\n    vertical-align: middle;\r\n    position: relative;\r\n  }\r\n  .value_bar {\r\n    height: 4px;\r\n    /*border-radius: 3px;*/\r\n    position: absolute\r\n  }\r\n  .btn {\r\n    position: absolute;\r\n    margin-left: -6px;\r\n    top: -4px;\r\n    width: 12px;\r\n    height: 12px;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    outline: 0;\r\n  }\r\n  .sign {\r\n    position: absolute;\r\n    margin-left: -5px;\r\n    top: -3px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    outline: 0;\r\n  }\r\n  .tooltip {\r\n    position: absolute;\r\n    top: -35px;\r\n    padding: 4px 6px;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    white-space: nowrap;\r\n    background-color: #FCF0C1;\r\n    z-index: 99999;\r\n  }\r\n  /* 禁止操作 */\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n"]}]}