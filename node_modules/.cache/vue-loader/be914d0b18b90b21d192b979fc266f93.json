{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\modules\\cdRule\\EditWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\modules\\cdRule\\EditWindow.vue","mtime":1681712654352},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { arrayToMap }  from '@/common/util/Arrays.js';\r\nimport { arrayToTree } from '@/common/util/Trees.js';\r\n\r\nexport default {\r\n  data: function() {\r\n    return {\r\n      taskName: null,\r\n      taskNum:null,\r\n      options:[],\r\n      carId:null,\r\n      cdId:null,\r\n      callback: null,\r\n      waiting:false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.options=$_main.http.syncGet('rule/get',{ sessionId: $_main.sessionId,userId:$_main.userId })||[]\r\n  },\r\n  methods:{\r\n    iconCssFunction(node, open) {\r\n      return !node.carId ? (open ? 'ico_open' : 'ico_close') : null;\r\n    },\r\n    getTreeRoots(callback){\r\n      $_main.http.get('data/getCars',{ sessionId: $_main.sessionId }).then(result=>{\r\n        result.carList.forEach(el=>{el.name=el.carName})\r\n        result.teamList.forEach(el=>{el.name=el.teamName })\r\n        let TEAMS={list:null,map:null,root:{id:'0',name:$_L.get('所有车辆'),children:[]}}\r\n        let CARS={list:null,map:null,root:null,}\r\n        TEAMS.list = result.teamList || [];\r\n        TEAMS.map = arrayToMap(TEAMS.list, \"teamId\");\r\n        TEAMS.tree = arrayToTree(TEAMS.list, \"teamId\", \"pid\", TEAMS.map, TEAMS.root, 'teams');\r\n\r\n        CARS.list = result.carList || [];\r\n        CARS.map = arrayToMap(CARS.list, \"carId\");\r\n        CARS.root = TEAMS.root;\r\n        CARS.root.teams && (CARS.root.children = [...CARS.root.teams]);\r\n        for (let i = 0, len = TEAMS.list.length, team; i < len; i++) {\r\n          team = TEAMS.list[i];\r\n          team.teams && (team.children = [...team.teams]);\r\n        }\r\n        CARS.tree = arrayToTree(CARS.list, \"carId\", \"teamId\", TEAMS.map, CARS.root, \"children\");\r\n        callback(CARS.root);\r\n      })\r\n\r\n    },\r\n    submit() {\r\n      if (!this.taskName) return $_alert.warn($_L.get('请输入任务名称！'));\r\n      if (!this.cdId) return $_alert.warn($_L.get('请选择工况！'));\r\n      if(!this.carId)return $_alert.warn($_L.get('请选择关联车辆！'));\r\n      if (!this.taskNum) return $_alert.warn($_L.get('请输入执行次数！'));\r\n      let item={cdId:this.cdId,carId:this.carId,taskName:this.taskName,taskNum:this.taskNum,auser:$_main.userId}\r\n      $_main.http.post('info/allot',item).then(result => {\r\n        this.callback(result);\r\n        $_alert.success( $_L.get('操作成功'));\r\n        this.$refs.w.close();\r\n      }).catch(error => {\r\n        this.waiting = false;\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}