{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\modules\\cdRule\\CdInfoRModule.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\modules\\cdRule\\CdInfoRModule.vue","mtime":1681712531547},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport EditWindow               from './EditWindow.vue';\r\nimport deductedWindow           from './deductedWindow.vue';\r\nimport { arrayToMap }           from '@/common/util/Arrays.js';\r\nimport { arrayToTree }          from '@/common/util/Trees.js';\r\nimport { addDateTime }          from '@/common/util/Dates.js';\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      querying:false,\r\n      datas: [],\r\n      taskState:2,\r\n      selectedItem:null,\r\n      carId:null,\r\n      stime:addDateTime(-1),\r\n      etime: addDateTime(0),\r\n      driverId:null,\r\n      cdId:null,\r\n      list:null\r\n    }\r\n  },\r\n\r\n  created(){\r\n  },\r\n  mounted() {\r\n    $_main.http.get('rule/get',{ sessionId: $_main.sessionId,userId:$_main.userId }).then(result=>{\r\n      this.list=result;\r\n    })\r\n    this.search()\r\n  },\r\n  methods: {\r\n    getTreeRoots(callback){\r\n      $_main.http.get('data/getCars',{ sessionId: $_main.sessionId }).then(result=>{\r\n        result.carList.forEach(el=>{el.name=el.carName})\r\n        result.teamList.forEach(el=>{el.name=el.teamName })\r\n        let TEAMS={list:null,map:null,root:{id:'0',name:$_L.get('所有车辆'),children:[]}}\r\n        let CARS={list:null,map:null,root:null,}\r\n        TEAMS.list = result.teamList || [];\r\n        TEAMS.map = arrayToMap(TEAMS.list, \"teamId\");\r\n        TEAMS.tree = arrayToTree(TEAMS.list, \"teamId\", \"pid\", TEAMS.map, TEAMS.root, 'teams');\r\n\r\n        CARS.list = result.carList || [];\r\n        CARS.map = arrayToMap(CARS.list, \"carId\");\r\n        CARS.root = TEAMS.root;\r\n        CARS.root.teams && (CARS.root.children = [...CARS.root.teams]);\r\n        for (let i = 0, len = TEAMS.list.length, team; i < len; i++) {\r\n          team = TEAMS.list[i];\r\n          team.teams && (team.children = [...team.teams]);\r\n        }\r\n        CARS.tree = arrayToTree(CARS.list, \"carId\", \"teamId\", TEAMS.map, CARS.root, \"children\");\r\n        callback(CARS.root);\r\n      })\r\n    },\r\n    getTreeRoots1(callback){\r\n      $_main.http.get('data/getSubUser',{ sessionId: $_main.sessionId }).then(result=>{\r\n        result.forEach(el=>{el.name=el.cnName})\r\n        let root={id:'0',name:$_L.get('所有司机'),children:[]}\r\n        let children=arrayToTree(result, \"userId\",\"pid\");\r\n        root.children=children\r\n        callback(root);\r\n      })\r\n    },\r\n    iconCssFunction(node, open) {\r\n      return !node.carId ? (open ? 'ico_open' : 'ico_close') : null;\r\n    },\r\n    iconCssFunction1(node, open) {\r\n      return !node.userId ? (open ? 'ico_open' : 'ico_close') : null;\r\n    },\r\n    search(){\r\n      if(this.etime<this.stime)return $_alert.warn($_L.get('开始时间不能大于结束时间！'));\r\n      this.datas=[]\r\n      this.querying=true\r\n      let url=this.taskState==2?'info/getInfoByH':'info/getInfo';\r\n      let params=this.taskState==2?{carId:this.carId,stime:this.stime,etime:this.etime,driverId:this.driverId,cdId:this.cdId}:{taskState:this.taskState}\r\n      $_main.http.get(url,Object.assign({ sessionId: $_main.sessionId,userId:$_main.userId},params)).then(result=>{\r\n        this.datas=result;\r\n        this.toFinish()\r\n      })\r\n    },\r\n    toFinish(){\r\n      this.querying=false\r\n      if(!this.datas||this.datas.length==0)return  $_alert.warn($_L.get('暂无数据！'));\r\n    },\r\n    editClick(){\r\n      $_popup.open(EditWindow, {callback:this.addOrUpdateCallback});\r\n    },\r\n    addOrUpdateCallback(){\r\n      this.search()\r\n    },\r\n    ClickBtn(row){\r\n      let exts=row.exts&&(typeof row.exts=='string'?JSON.parse(row.exts):row.exts)||{};\r\n      let deductedDetail=[];\r\n      if(exts.deductedDetail){\r\n        for (let k in exts.deductedDetail){\r\n          deductedDetail.push(Object.assign({'regionId':k},exts.deductedDetail[k]));\r\n        }\r\n      }\r\n      $_popup.open(deductedWindow, {name:row.taskName,deductedDetail:deductedDetail||[]});\r\n    },\r\n  }\r\n}\r\n",null]}