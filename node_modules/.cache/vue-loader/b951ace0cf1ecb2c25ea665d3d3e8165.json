{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputSelectText.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputSelectText.vue","mtime":1662449411093},{"path":"D:\\cdRule\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container {\n  overflow: hidden;\n  vertical-align: top;\n  outline: none;\n  display: inline-block;\n  white-space: nowrap;\n  background-color: #fff;\n  position: relative;\n  user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n}\n.container > *:not(ul) {\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n.border {\n  border-style: solid;\n  border-width: 1px;\n}\n/* 标题文本 */\n.label {\n  float: left;\n  padding: 0 6px;\n  border-right-style: solid;\n  border-right-width: 0px;\n  white-space: nowrap;\n}\n\n/* select容器 */\n.selector {\n  padding-left: 8px;\n  cursor: pointer;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.placeholder {\n  color: #B0B0B0;\n}\n.icon {\n  float: right;\n  width: 20px;\n  line-height: 0;\n  font-size: 16px;\n  cursor: pointer;\n}\n/* 下拉容器 */\n.dropdown {\n  position: fixed;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  background-color: #fff;\n  margin-block-start: 0;\n  border-width: 1px;\n  border-style: solid;\n  overflow-y: auto;\n  box-shadow: 0px 0px 5px 0px RGBA(0, 0, 0, 0.1);\n}\n.option_item {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: 30px;\n  line-height: 30px;\n  padding: 0 8px;\n  cursor: pointer;\n}\n\n/* 单位 */\n.unit {\n  float: right;\n  padding-right: 8px;\n  white-space: nowrap;\n}\n/* 必填 */\n.required {\n  float: right;\n  padding: 0 2px;\n  color: #f00;\n  user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n}\n/* 禁止操作 */\n.disabled {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  background-color: rgba(255, 255, 255, 0.6);\n  opacity: 0.6;\n  filter: alpha(opacity=60); \n  cursor: not-allowed;\n}\n  /* 输入框 */\n.textarea {\n  height: 100%;\n  width: 100%;\n  display: inline-block;\n  border: 0;\n  outline: 0;\n  padding-top: 5px;\n  /* padding: 5px 14px 0 10px; */\n  color: #232323;\n  font-size: 12px;\n  line-height: 24px!important;\n  resize:none;\n  background-color: #fff;\n  cursor: pointer;\n}\n.textarea::placeholder {\n  color: #B0B0B0;\n}\n.textarea::-webkit-input-placeholder {\n  color: #B0B0B0;\n}\n.textarea:-ms-input-placeholder {\n  color: #B0B0B0;\n}\n.textarea::-ms-input-placeholder {\n  color: #B0B0B0;\n}\n",{"version":3,"sources":["InputSelectText.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InputSelectText.vue","sourceRoot":"src/components","sourcesContent":["\r\n<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"containerStyle\" tabindex=\"0\" @focus=\"focused=true\" @blur=\"focused=false\" @mouseenter=\"selectorHover=true\" @mouseleave=\"selectorHover=false\">\r\n\r\n    <!--label显示-->\r\n    <span :class=\"$style.label\" :style=\"labelStyle\" v-if=\"label\" is-label>{{label}}</span>\r\n\r\n    <!--必填显示-->\r\n    <span :class=\"[$style.required,'el-icon-star-on']\" :style=\"{backgroundColor:theme.input_label_bg_color}\" v-if=\"required\"></span>\r\n\r\n    <!--单位显示-->\r\n    <span :class=\"$style.unit\" v-if=\"unit\">{{unit}}</span>\r\n\r\n    <!--下拉图标和清除图标显示-->\r\n    <i :class=\"[$style.icon,showDropDown?'el-icon-arrow-up':'el-icon-arrow-down']\" :style=\"{lineHeight:lineHeight+'px'}\" v-show=\"!showClear\" v-if=\"showArrow\" @click.stop=\"toggleDropDown($event)\"></i>\r\n    <i :class=\"$style.icon\" :style=\"{lineHeight:lineHeight+'px'}\" v-show=\"showClear\"  v-if=\"clearable\" class=\"el-icon-close\" @click.stop=\"clear\"></i>\r\n    \r\n    <!--selector显示-->\r\n    <div ref=\"selector\" :class=\"$style.selector\" @click=\"toggleDropDown($event)\" :style=\"{lineHeight:lineHeight+'px',marginRight:showArrow||showClear?'24px':'8px'}\">\r\n        <textarea v-if=\"selectedItem\" :value=\"selectedItem[labelField]\" :class=\"$style.textarea\" readonly/>\r\n        <textarea v-if=\"!selectedItem && placeholder\" :value=\"placeholder\" :class=\"$style.textarea\"  readonly/>\r\n    </div>\r\n    <!--弹出selector显示-->\r\n    <ul ref=\"dropdown\" :class=\"$style.dropdown\" :style=\"[dropdownStyle,theme.popup]\" v-show=\"showDropDown\" v-if=\"createDropDown\">\r\n        <li :class=\"$style.option_item\" :style=\"optionItemStyle(item, index)\"\r\n        v-for=\"(item,index) in options\" :key=\"index+item[valueField]\" \r\n        @mouseenter=\"hoverItem=item\" @mouseleave=\"hoverItem=null\"\r\n        @click.stop=\"onSelectItem(item,$event)\">\r\n          {{item[labelField]}}\r\n        </li>\r\n    </ul>\r\n\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\" :style=\"{borderRadius: radius}\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n  * 使用例子\r\n  * <InputSelect label=\"你要选择哪一个\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"like\" @change=\"onSelectChg\"/>\r\n  * \r\n  *  data: {like: 1},\r\n  *  methods: {\r\n  *    onSelectChg(value, item) {// value值是1或2, item是{label:'吃饭',value:1}\r\n  *    }\r\n  *  }\r\n  */\r\n  \r\n  import { domLeftTop } from '@/components/util/Dom.js';\r\n  import { arrayFindItem } from '@/common/util/Arrays.js';\r\n\r\n  export default {\r\n    name: \"InputSelectText\",\r\n    props: {\r\n      label: String,                                                      // 标题文本\r\n      value: { default: null},                                            // 当前值(v-model)\r\n      options: Array,                                                     // 多个选项 [{lable:xxx,value:xxx}...]\r\n      labelField: { type: String,  default: 'label' },                    // 显示字段\r\n      valueField: { type: String,  default: 'value' },                    // 值字段\r\n      //multiple:   { type: Boolean, default: false   },                  // 是否多选\r\n      //splitter:   { type: String,  default: null    },                  // 如果是多选，而value是字符串\"1,2,3,4\" 则需要定义拆分符为逗号\r\n      placeholder: String,\r\n      unit: String,                                                       // 单位\r\n      required:  Boolean,                                                 // 是否显示必填\r\n      disabled:  Boolean,                                                 // 是否可操作\r\n      clearable: Boolean,                                                 // 是否显示可清除图标\r\n      showArrow:  { type: Boolean, default: true },                       // 是否显示箭头图标\r\n      border:     { type: Boolean, default: true },                       // 是否显示边框\r\n      borderColor:{ type: String,  default: $_theme.border_color_light },\r\n      radius:     { type: String,  default: $_theme.input_radius},        // 边框圆角\r\n      focusColor: { type: String,  default: $_theme.color },\r\n      height:     { type: Number,  default: $_theme.inputHeight },        // 高度数值，单位是px\r\n      maxListNum: { type: Number,  default: 10 },                         // 下拉框最多显示10个选项，多出10个选项会出现滚动条\r\n      afterOpen: Function,\r\n      beforeClose: Function,\r\n\t  labelMinWidth:{ type: Number,  default: 10 }  \t\t  \t          // lable宽度最小数值，单位是px\r\n    },\r\n    data() {\r\n      return {\r\n        selectedItem: null,\r\n        hoverItem: null,\r\n        focused: false,\r\n        selectorHover: false,\r\n        createDropDown: false,\r\n        showDropDown: false,\r\n        dropdownStyle: null\r\n      };\r\n    },\r\n    watch: {\r\n      value: function(v) {\r\n        this.setSelectedItem(v);\r\n      }\r\n    },\r\n    mounted() {\r\n      this.setSelectedItem(this.value);\r\n    },\r\n    methods: {\r\n      setSelectedItem(v) {\r\n        if (v === null) this.selectedItem = null;\r\n        if (!this.selectedItem || this.selectedItem[this.valueField] != v) {\r\n          this.selectedItem = arrayFindItem(this.options, this.valueField, v);\r\n        }\r\n      },\r\n      toggleDropDown(event) {// 显示或隐藏选项列表\r\n        if (!this.options || this.options.length == 0) return;\r\n        this.focused = true;\r\n        if (this.showDropDown) return this.hideDropDown(event);\r\n        this.showDropDown = this.createDropDown = true;\r\n        \r\n        // 自动判断是显示在下面还是上面\r\n        let {left, top} = domLeftTop(this.$refs.selector), listHeight = 30 * Math.min(this.maxListNum, this.options.length) + 2;\r\n        let this_height = this.$el.offsetHeight, isbottom = true;\r\n        let down = document.documentElement.clientHeight - top - this_height;\r\n        if (down > listHeight) {// 下面空间充足，显示在下面\r\n          top += this_height - (this.border ? 1 : 0);\r\n        } else if (top > listHeight) {// 上面空间足够，显示在上面\r\n          top -= listHeight + (this.border ? 1 : 0);\r\n          isbottom = false;\r\n        } else {// 上面和下面的空间都不够\r\n          if (down > top) {// 下面的空间大，显示在下面\r\n            listHeight = down - 5;\r\n            top += this_height - (this.border ? 1 : 0);\r\n          } else {// 上面的空间大，显示在上面\r\n            listHeight = top - 5;\r\n            top -= listHeight + (this.border ? 1 : 0);\r\n            isbottom = false;\r\n          }\r\n        }\r\n        this.border && (left--);\r\n        this.dropdownStyle = {\r\n          borderColor: this.borderColor,\r\n          zIndex: window.$_theme.zindex(),\r\n          top: top + 'px',\r\n          left: left + 'px',\r\n          height: listHeight + 'px',\r\n          width: (this.$el.offsetWidth - this.$refs.selector.offsetLeft) + 'px'\r\n        };\r\n        this.border && (this.dropdownStyle[isbottom?'border-top-width':'border-bottom-width'] = 0);\r\n        this.afterOpen && this.$nextTick(this.afterOpen);\r\n        document.addEventListener('click', this.onMouseClick);\r\n      },\r\n      onMouseClick(event) {\r\n        !this.$el.contains(event.target) && this.hideDropDown(event);\r\n      },\r\n      hideDropDown(event) {// 隐藏弹出的选项列表\r\n        if (this.beforeClose && this.beforeClose(event) === false) return;\r\n        this.showDropDown = false;\r\n        document.removeEventListener('click', this.onMouseClick);\r\n      },\r\n      onSelectItem(item,event) {\r\n        this.selectorHover = false;\r\n        if (!this.selectedItem || this.selectedItem !== item) {\r\n          let value = item[this.valueField];\r\n          this.$emit('input',  value);\r\n          this.$emit('change', value, item, event);\r\n        }\r\n        this.hideDropDown(event);\r\n      },\r\n      getSelectedItem() {\r\n        return this.selectedItem;\r\n      },\r\n      clear() {\r\n        this.showDropDown && this.hideDropDown();\r\n        this.selectedItem = null;\r\n        this.$emit('input', null);\r\n        this.$emit('change', null, null);\r\n      },\r\n      optionItemStyle(item, index) {\r\n        if (!this.showDropDown) return null;\r\n        if (item == this.hoverItem) {\r\n          return { backgroundColor: this.theme.list_hover_color };\r\n        } else if (item == this.selectedItem) {\r\n          return { backgroundColor: this.theme.selected_color };\r\n        } else {\r\n          return { backgroundColor: this.theme.alternate_colors[index % 2] };\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      showClear() {// 判断是否要显示清除按钮\r\n        return this.clearable && this.selectorHover && this.selectedItem;\r\n      },\r\n      containerStyle() {\r\n        return {\r\n          borderRadius: this.radius,\r\n          height: this.height + 'px',\r\n          borderColor: this.focused ? this.focusColor : this.borderColor,\r\n          zIndex: this.focused ? this.theme.zindex() : ''\r\n        }\r\n      },\r\n      lineHeight() {// 获取除边框外的高度\r\n        return this.height - (this.border ? 2 : 0);\r\n      },\r\n      labelStyle() {\r\n        return {\r\n          minWidth: this.labelMinWidth + 'px',\r\n          borderRightColor: this.theme.border_color_light, \r\n          backgroundColor: this.theme.input_label_bg_color\r\n        };\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .container {\r\n    overflow: hidden;\r\n    vertical-align: top;\r\n    outline: none;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    background-color: #fff;\r\n    position: relative;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .container > *:not(ul) {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  /* 标题文本 */\r\n  .label {\r\n    float: left;\r\n    padding: 0 6px;\r\n    border-right-style: solid;\r\n    border-right-width: 0px;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  /* select容器 */\r\n  .selector {\r\n    padding-left: 8px;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .icon {\r\n    float: right;\r\n    width: 20px;\r\n    line-height: 0;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  /* 下拉容器 */\r\n  .dropdown {\r\n    position: fixed;\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n    background-color: #fff;\r\n    margin-block-start: 0;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    overflow-y: auto;\r\n    box-shadow: 0px 0px 5px 0px RGBA(0, 0, 0, 0.1);\r\n  }\r\n  .option_item {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    padding: 0 8px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  /* 单位 */\r\n  .unit {\r\n    float: right;\r\n    padding-right: 8px;\r\n    white-space: nowrap;\r\n  }\r\n  /* 必填 */\r\n  .required {\r\n    float: right;\r\n    padding: 0 2px;\r\n    color: #f00;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  /* 禁止操作 */\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n    /* 输入框 */\r\n  .textarea {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: inline-block;\r\n    border: 0;\r\n    outline: 0;\r\n    padding-top: 5px;\r\n    /* padding: 5px 14px 0 10px; */\r\n    color: #232323;\r\n    font-size: 12px;\r\n    line-height: 24px!important;\r\n    resize:none;\r\n    background-color: #fff;\r\n    cursor: pointer;\r\n  }\r\n  .textarea::placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .textarea::-webkit-input-placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .textarea:-ms-input-placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n  .textarea::-ms-input-placeholder {\r\n    color: #B0B0B0;\r\n  }\r\n</style>\r\n"]}]}