{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputRadio.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputRadio.vue","mtime":1612227987676},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 使用例子\n* <InputRadio label=\"你要选择哪一个\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"want\" @change=\"onRadioChg\"/>\n*\n*  data: {want: 1},\n*  methods: {\n*    onRadioChg(value) {// value值是1或2\n*    }\n*  }\n*/\n\nexport default {\n  name: \"InputRadio\",\n  props: {\n    label: String,                                              // 标题文本\n    value: [String, Number, Boolean],                           // 当前值(v-model)\n    options: Array,                                             // 多个选项 [{lable:xxx,value:xxx}...]\n    labelField: { type: String, default: 'label' },             // 显示字段\n    valueField: { type: String, default: 'value' },             // 值字段\n    unit: String,                                               // 单位\n    required: Boolean,                                          // 是否必填\n    disabled: Boolean,                                          // 是否可操作\n    border:   { type: Boolean, default: true },                 // 是否显示边框\n    vertical: { type: Boolean, default: false },                // 是否垂直布局\n    height:   { type: Number,  default: $_theme.inputHeight },  // 高度数值，单位是px\n    labelMinWidth:{ type: Number,  default: 10 },               // lable宽度最小数值，单位是px\n    groupStyle: { default: null },\n  },\n  data() {\n    return { groupName: window.$_uuid('RadioGroup'), focused: false };\n  },\n  methods: {\n    isChecked(item) {\n      item = item[this.valueField];\n      return item === this.value || (\"\"+item) === (\"\"+this.value);\n    },\n    handleChange(event, item) {\n      if (this.disabled) {\n        return false;\n      }\n      let value = event.target.value;\n      if (this.valueType == 'number') {\n        value = Number(value);\n      } else if (this.valueType == 'boolean') {\n        value = value == 'true';\n      }\n      if (this.value !== value) {\n        this.$emit('input',  value);\n        this.$emit('change', value, item);\n      }\n    }\n  },\n  computed: {\n    valueType() {\n      if (this.options && this.options.length > 0) {\n        return typeof this.options[0][this.valueField];\n      }\n      return null;\n    },\n    containerStyle() {\n      return {\n        height: this.height + 'px',\n        borderColor: this.focused ? this.theme.color : this.theme.border_color_light,\n        zIndex: this.focused ? this.theme.zindex() : ''\n      }\n    },\n    labelStyle() {\n      return {\n        minWidth: this.labelMinWidth + 'px',\n        borderRightColor: this.theme.border_color_light,\n        backgroundColor: this.theme.bg_color\n      };\n    },\n    radioLabelStyle() {\n      return { display: this.vertical ? 'block' : 'inline-block' };\n    }\n  }\n};\n",null]}