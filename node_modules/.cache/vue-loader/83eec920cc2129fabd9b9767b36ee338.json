{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputCheckbox.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputCheckbox.vue","mtime":1673937752311},{"path":"D:\\cdRule\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.checked         { color: var(--checkedColor); }\n.checked:hover   { color: var(--checkedHoverColor); }\n.unchecked       { color: var(--uncheckedColor); }\n.unchecked:hover { color: var(--uncheckedHoverColor); }\n\n.container {\n  overflow: hidden;\n  vertical-align: top;\n  outline: none;\n  position: relative;\n  display: inline-block;\n  white-space: nowrap;\n  background-color: #fff;\n  user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n}\n.container > * {\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n.border {\n  border-style: solid;\n  border-width: 1px;\n}\n/* 标题文本 */\n.label {\n  float: left;\n  padding: 0 6px;\n  border-right-style: solid;\n  border-right-width: 0px;\n  white-space: nowrap;\n}\n/* checkbox组 */\n.checkboxGroup {\n  padding-left: 8px;\n  overflow: hidden;\n}\n/* checkbox项(按钮+文字) */\n.checkboxItem {\n  white-space: nowrap;\n  background-repeat: no-repeat;\n  background-position-y: center;\n  cursor: pointer;\n} \n/* checkbox项(按钮+文字)vertical垂直布局 */\n.checkboxItemVertical {\n  margin: 12px 8px 0px 0px;\n}\n/* checkbox项(按钮+文字)非vertical垂直布局 */\n.checkboxItemNoVertical {\n  margin: 6px 8px 6px 0px;\n}\n/* 单checkbox */\n.single {\n  margin: 0;\n  padding-right: 8px;\n  cursor: pointer;\n}\n/* checkbox按钮 */\n.checkbox {\n  margin: 0;\n  opacity: 0;\n  visibility: hidden;\n}\n/* 单位 */\n.unit {\n  float: right;\n  padding-right: 8px;\n  white-space: nowrap;\n}\n/* 必填 */\n.required {\n  float: right;\n  padding: 0 2px;\n  color: #f00;\n}\n/* 禁止操作 */\n.disabled {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  background-color: rgba(255, 255, 255, 0.6);\n  opacity: 0.6;\n  filter: alpha(opacity=60); \n  cursor: not-allowed;\n}\n",{"version":3,"sources":["InputCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InputCheckbox.vue","sourceRoot":"src/components","sourcesContent":["\r\n<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"containerStyle\" tabindex=\"0\" @focus=\"focused=true\" @blur=\"focused=false\">\r\n\r\n    <!--label显示-->\r\n    <span :class=\"$style.label\" :style=\"labelStyle\" v-if=\"label\" :is-label=\"isLabel\">{{label}}</span>\r\n\r\n    <!--必填显示-->\r\n    <span :class=\"[$style.required,'el-icon-star-on']\" :style=\"{backgroundColor:theme.input_label_bg_color}\" v-if=\"required\"></span>\r\n\r\n    <!--单位显示-->\r\n    <span :class=\"$style.unit\" v-if=\"unit\">{{unit}}</span>\r\n\r\n    <!--checkbox分组显示-->\r\n    <div :class=\"$style.checkboxGroup\" :style=\"[{display:vertical?'inline-block':'flex'},groupStyle]\">\r\n      <!--单个checkbox-->\r\n      <label v-if=\"!options\" :class=\"[$style.checkboxItem, $style.single, singleIsChecked ? [$style.checked,'el-icon-yixuan1'] : [$style.unchecked,'el-icon-weixuan']]\" :style=\"[!option&&{paddingRight:'3px'},{'--checkedColor': checkedColor||theme.color,'--checkedHoverColor': checkedHoverColor||theme.color,'--uncheckedColor': uncheckedColor,'--uncheckedHoverColor': uncheckedHoverColor||theme.color}]\">\r\n        <!--checkbox按钮-->\r\n        <input type=\"checkbox\" :disabled=\"disabled\" :name=\"name\" :checked=\"singleIsChecked\" @change=\"singleChange\" style=\"display:none;\">\r\n        <!--checkbox后面的文字-->\r\n        <span style=\"margin-left:4px;\">{{ option }}</span>\r\n      </label>\r\n\r\n      <!--遍历每个checkbox项-->\r\n      <label v-else v-for=\"item in options\" :key=\"item[valueField]\" :style=\"[checkboxLabelStyle,{'--checkedColor': checkedColor||theme.color,'--checkedHoverColor': checkedHoverColor||theme.color,'--uncheckedColor': uncheckedColor,'--uncheckedHoverColor': uncheckedHoverColor||theme.color}]\" :class=\"[$style.checkboxItem,vertical?$style.checkboxItemVertical:$style.checkboxItemNoVertical, values.indexOf(item[valueField])>=0 ? [$style.checked,'el-icon-yixuan1'] : [$style.unchecked,'el-icon-weixuan']]\">\r\n        <!--checkbox按钮-->\r\n        <input type=\"checkbox\" :disabled=\"disabled\" :value=\"item[valueField]\" :name=\"name\" v-model=\"values\" @change=\"multipleChange\" style=\"display:none;\">\r\n        <!--checkbox后面的文字-->\r\n        <span style=\"margin-left:4px;\">{{ item[labelField] }}</span>\r\n      </label>\r\n    </div>\r\n\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\" :style=\"{borderRadius: radius}\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  /*\r\n  * 单选例子\r\n  * <InputCheckbox label=\"你是否同意\" option=\"同意\" v-model=\"agree\" @change=\"onCheckChg\"/>\r\n  * \r\n  *  data: {agree: false},\r\n  *  methods: {\r\n  *    onCheckChg(value) {// value值是true或false\r\n  *    }\r\n  *  }\r\n  * \r\n  * 多选例子\r\n  * <InputCheckbox label=\"你的选择是\" :options=\"[{label:'吃饭',value:1},{label:'睡觉',value:2}]\" v-model=\"likes\" @change=\"onCheckChg\"/>\r\n  * \r\n  *  data: {likes: [1,2]},\r\n  *  methods: {\r\n  *    onCheckChg(value) {// value值是[1,2]\r\n  *    }\r\n  *  }\r\n  */\r\n  import storage from '@/common/cache/Storage.js';\r\n    \r\n  export default {\r\n    name: \"InputCheckbox\",\r\n    props: {\r\n      value: [Array, String, Number, Boolean],                    // 当前值\r\n\r\n      //单选字段\r\n      option: String,                                             // 单选项文本\r\n      true:  { default: true  },                                  // 选中的值\r\n      false: { default: false },                                  // 不选中的值\r\n\r\n      //多选字段\r\n      options: Array,                                             // 多个选项 [{lable:xxx,value:xxx}...]\r\n      labelField: { type: String, default: 'label' },             // 显示字段\r\n      valueField: { type: String, default: 'value' },             // 值字段\r\n\r\n      label: String,                                              // 标题文本\r\n      unit: String,                                               // 单位\r\n      required: Boolean,                                          // 是否必填\r\n      disabled: Boolean,                                          // 是否可操作\r\n      name: String,\r\n      \r\n      border:   { type: Boolean, default: true },                 // 是否显示边框\r\n      borderColor:{ type: String,  default: $_theme.border_color_light },\r\n      radius: { type: String,  default: $_theme.input_radius},    // 边框圆角\r\n\r\n      vertical: { type: Boolean, default: false },                // 是否垂直布局\r\n      height:   { type: Number,  default: $_theme.inputHeight },  // 高度数值，单位是px\r\n      labelMinWidth:{ type: Number,  default: 10 },  \t\t  \t      // lable宽度最小数值，单位是px\r\n      groupStyle: { default: null },\r\n      labelColor: { type: String,  default: null },                 // lable颜色\r\n      checkedColor: { type: String, default: null },                // 选中图标颜色\r\n      checkedHoverColor: { type: String, default: null },           // 选中停留图标颜色\r\n      uncheckedColor: { type: String, default: null },              // 未选中图标颜色\r\n      uncheckedHoverColor: { type: String, default: null },         // 未选中停留图标颜色\r\n      searchKey:{ type:String, default: null },\r\n      isLabel:  { type: Boolean, default: true },\r\n    },\r\n    data() {\r\n      return { \r\n        values: [], \r\n        focused: false,\r\n      };\r\n    },\r\n    mounted() {\r\n      Array.isArray(this.value) && (this.values = this.value);\r\n    },\r\n    methods: {\r\n      singleChange(event) {\r\n        let value = event.target.checked ? this.true : this.false;\r\n        this.$emit('input', value);\r\n        this.$emit('change', value);\r\n      },\r\n      multipleChange(event) {\r\n        this.$emit('input',  this.values);\r\n        this.$emit('change', this.values);\r\n      }\r\n    },\r\n    watch: {\r\n      value (val) {\r\n        Array.isArray(val) && (this.values = val);\r\n        this.searchKey&&storage.set(this.searchKey,this.values);\r\n      }\r\n    },\r\n    computed: {\r\n      singleIsChecked() {\r\n        return this.value === this.true;\r\n      },\r\n      containerStyle() {\r\n        return {\r\n          borderRadius: this.radius,\r\n          height: `${this.height}px`,\r\n          borderColor: this.focused ? this.theme.menubar_color : this.borderColor,\r\n          zIndex: this.focused ? this.theme.zindex() : ''\r\n        }\r\n      },\r\n      labelStyle() {\r\n        return {\r\n          minWidth:this.labelMinWidth + 'px',\r\n          borderRightColor: this.theme.border_color_light, \r\n          backgroundColor: this.labelColor?this.labelColor:this.theme.input_label_bg_color\r\n        };\r\n      },\r\n      checkboxLabelStyle() {\r\n        return { display: this.vertical ? 'block' : 'inline-block' };\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .checked         { color: var(--checkedColor); }\r\n  .checked:hover   { color: var(--checkedHoverColor); }\r\n  .unchecked       { color: var(--uncheckedColor); }\r\n  .unchecked:hover { color: var(--uncheckedHoverColor); }\r\n\r\n  .container {\r\n    overflow: hidden;\r\n    vertical-align: top;\r\n    outline: none;\r\n    position: relative;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    background-color: #fff;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    -moz-user-select: none;\r\n  }\r\n  .container > * {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .border {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n  }\r\n  /* 标题文本 */\r\n  .label {\r\n    float: left;\r\n    padding: 0 6px;\r\n    border-right-style: solid;\r\n    border-right-width: 0px;\r\n    white-space: nowrap;\r\n  }\r\n  /* checkbox组 */\r\n  .checkboxGroup {\r\n    padding-left: 8px;\r\n    overflow: hidden;\r\n  }\r\n  /* checkbox项(按钮+文字) */\r\n  .checkboxItem {\r\n    white-space: nowrap;\r\n    background-repeat: no-repeat;\r\n    background-position-y: center;\r\n    cursor: pointer;\r\n  } \r\n  /* checkbox项(按钮+文字)vertical垂直布局 */\r\n  .checkboxItemVertical {\r\n    margin: 12px 8px 0px 0px;\r\n  }\r\n  /* checkbox项(按钮+文字)非vertical垂直布局 */\r\n  .checkboxItemNoVertical {\r\n    margin: 6px 8px 6px 0px;\r\n  }\r\n  /* 单checkbox */\r\n  .single {\r\n    margin: 0;\r\n    padding-right: 8px;\r\n    cursor: pointer;\r\n  }\r\n  /* checkbox按钮 */\r\n  .checkbox {\r\n    margin: 0;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n  }\r\n  /* 单位 */\r\n  .unit {\r\n    float: right;\r\n    padding-right: 8px;\r\n    white-space: nowrap;\r\n  }\r\n  /* 必填 */\r\n  .required {\r\n    float: right;\r\n    padding: 0 2px;\r\n    color: #f00;\r\n  }\r\n  /* 禁止操作 */\r\n  .disabled {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    opacity: 0.6;\r\n    filter: alpha(opacity=60); \r\n    cursor: not-allowed;\r\n  }\r\n</style>\r\n"]}]}