{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\common\\tree\\CarTree.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"D:\\cdRule\\src\\common\\tree\\CarTree.vue","mtime":1677634046508},{"path":"D:\\cdRule\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.container {\r\n  position: relative;\r\n  background-color: #fff;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex !important;\r\n  flex-flow: column;\r\n  align-items: unset !important;\r\n}\r\n.border {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n}\r\n.loading {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  opacity: 0.3;\r\n  filter: alpha(opacity=30);\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-image: url(\"@/assets/icon/loading.gif\");\r\n}\r\n.disabled {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  opacity: 0.6;\r\n  filter: alpha(opacity=60);\r\n  cursor: not-allowed;\r\n}\r\n.tab {\r\n  width: 100%;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #d6d6d6;\r\n  position: relative;\r\n  font-size: 13px;\r\n}\r\n.tab_border_left {\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n.tab_border_left::before {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  content: \"\";\r\n  width: 1px;\r\n  height: calc(100% - 16px);\r\n  background-color: #d6d6d6;\r\n}\r\n",{"version":3,"sources":["CarTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CarTree.vue","sourceRoot":"src/common/tree","sourcesContent":["\r\n<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"{borderColor:borderColor}\" style=\"display:flex !important\">\r\n\r\n    <!--TAB选择树类型-->\r\n    <div v-if=\"setting.favshow!==false||setting.groupshow!==false\" :style=\"{height:miniBar?'30px':'38px',lineHeight:miniBar?'29px':'37px',fontSize:miniBar?'12px':'14px'}\" style=\"display:flex;background-color:#fff\">\r\n      <div :class=\"[$style.tab]\" :style=\"[!model && selectTab]\" @click=\"model=null\"> {{$_L.get('全部')}} </div>\r\n      <div v-if=\"setting.favshow!==false\" :class=\"[$style.tab, $style.tab_border_left]\" :style=\"[model=='fav' && selectTab]\" @click=\"model='fav'\" @mouseenter=\"favHover=true\" @mouseleave=\"favHover=false\">\r\n        {{$_L.get('收藏') + (favCount>0 ? ` (${favCount})` : '')}}\r\n        <i v-show=\"model=='fav' && favHover\" v-if=\"setting.favset === true\" @click=\"favSetClick\" style=\"float:right;margin-right:5px;line-height:inherit\" class=\"el-icon-edit\" />\r\n      </div>\r\n      <div v-if=\"setting.groupshow!==false\" :class=\"[$style.tab, $style.tab_border_left]\" :style=\"[model=='group' && selectTab]\" @click=\"model='group'\" @mouseenter=\"groupHover=true\" @mouseleave=\"groupHover=false\">\r\n        {{$_L.get('分组')}}\r\n        <i v-show=\"model=='group' && groupHover\" v-if=\"setting.groupset === true\" @click=\"groupSetClick\" style=\"float:right;margin-right:5px;line-height:inherit\" class=\"el-icon-edit\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!--搜索设置栏-->\r\n    <CarTreeToolbar ref=\"toolbar\" v-if=\"searchable\" :setting=\"setting\" :showDyField=\"showDyField\" :show2g4gIcon=\"show2g4gIcon\" :onCarSortFieldChg=\"onCarSortFieldChg\" :miniBar=\"miniBar\" :treeBorder=\"border\" :onSearchItemSelected=\"onSearchItemSelected\" :refreshClick=\"refreshClick\" :showRecent=\"showRecent\" :model=\"model\" :style=\"toolbarStyle\"/>\r\n\r\n    <!--车辆树-->\r\n    <div style=\"overflow:auto;flex-grow:1;height:1px\">\r\n      <ul :id=\"treeId\" class=\"ztree\" ref=\"treeUl\"></ul>\r\n      <div v-if=\"disabled\" :class=\"$style.disabled\" />\r\n      <div v-if=\"loading\" :class=\"$style.loading\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CarTreeToolbar from \"./CarTreeToolbar.vue\";\r\nimport CarFavSetWindow from \"./CarFavSetWindow.vue\";\r\nimport CarGroupSetWindow from \"./CarGroupSetWindow.vue\";\r\n\r\nimport Labels from '@/common/gps/Labels.js';\r\nimport Storage from '@/common/cache/Storage.js';\r\nimport CarTreeDyField from './CarTreeDyField.js';\r\n\r\nimport { getCars } from '@/common/cache/CacheTeamCar.js';\r\nimport { getFavRoot, getFavCount } from '@/common/cache/CacheTeamCar.js';\r\nimport { getGroupRoot } from '@/common/cache/CacheTeamCar.js';\r\nimport { getCarById } from '@/common/cache/CacheTeamCar.js';\r\nimport { refreshAll } from '@/common/cache/CacheTeamCar.js';\r\nimport { Fields } from '@/common/cache/CacheTeamCar.js';\r\nimport { countFilter } from '@/common/cache/CacheTeamCar.js';\r\nimport { getCarTreeCfg } from '@/common/cache/CacheTeamCar.js';\r\nimport { State } from '@/common/cache/CacheTeamCar.js';\r\nimport { onCarTreeAdd, onCarTreeRemove } from '@/common/cache/CacheTeamCar.js';\r\nimport { getCarBxtWidgets } from '@/common/cache/CacheCmn.js';\r\nimport { getTmnById } from '@/common/cache/CacheTmn.js';\r\nimport { getTmnByKey } from '@/common/cache/CacheTmn.js';\r\n\r\nimport { getCarTreeIconUrl } from '@/common/util/Urls.js';\r\nimport { getPlateColorMap } from '@/common/Vars.js';\r\nimport { getCarStateCnMap } from '@/common/Vars.js';\r\nimport { objClone } from '@/common/util/Objects.js';\r\n\r\nexport default {\r\n  components: { CarTreeToolbar },\r\n  props: {\r\n    setting: { default: () => { return { favshow: true, favset: false, groupshow: true, groupset: false } } },\r\n    disabled: { type: Boolean, default: false },\r\n    border: { type: Boolean, default: true },\r\n    miniBar: { type: Boolean, default: false },\r\n    borderColor: { default: $_theme.border_color_dark },\r\n    toolbarStyle: { default: null },\r\n    searchable: { type: Boolean, default: true },\r\n    showDyField: { type: Boolean, default: false },\r\n    show2g4gIcon: { type: Boolean, default: false },\r\n    onTreeInited: Function,\r\n    onTreeRefreshed: Function,\r\n    onSearchItemSelected: Function,\r\n    onCarSortFieldChg: Function,\r\n  },\r\n\r\n  _tree: null,\r\n  _car_bxt_map: null,\r\n  _carTreeCfg: null,\r\n  _plateColorMap: null,\r\n  _carStateCnMap: null,\r\n\r\n  getTreeRoots: callback => getCars(cars => callback(cars.tree)),\r\n  getNodeText: node => node.plate ? node[getCarTreeCfg().sortField] : node.name,\r\n\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      model: null, //null车队车辆　fav收藏车辆  group分组车辆\r\n      treeId: 'tree_' + $_theme.zindex(),\r\n      search: { placeholder: null, hasOwnField: null },\r\n      favCount: 0,\r\n      favHover: false,\r\n      groupHover: false,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.loading = true;\r\n    this._carTreeCfg = getCarTreeCfg();\r\n    this._plateColorMap = getPlateColorMap();\r\n    this._carStateCnMap = getCarStateCnMap();\r\n    this._dyfield = this.showDyField ? new CarTreeDyField(this, getCarById, true) : null;\r\n    getCarBxtWidgets(bxts => {\r\n      this._car_bxt_map = bxts.map;\r\n      this.searchable && this.$refs.toolbar.init(bxts.list);\r\n      getCars(this.onCarLoaded);\r\n    });\r\n  },\r\n\r\n  watch: {\r\n    model: function () {\r\n      let root = this.model == 'fav' ? getFavRoot() : this.model == 'group' ? getGroupRoot() : getCars()[0].root;\r\n      this._tree.reset(root, true);\r\n      if (this.model == 'fav') {\r\n        this._favIsClear && this._tree.checkAllNodes(this._favIsClear = false);\r\n      } else if (this.model == 'group') {\r\n        this._groupIsClear && this._tree.checkAllNodes(this._groupIsClear = false);\r\n      } else {\r\n        this._allIsClear && this._tree.checkAllNodes(this._allIsClear = false);\r\n      }\r\n      this._dyfield && this._dyfield.resetRoot(root);\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    selectTab: function () {\r\n      return { fontWeight: 'bold', color: this.theme.color, borderBottom: '2px solid ' + this.theme.color };\r\n    },\r\n    getFavCount: () => getFavCount,\r\n  },\r\n\r\n  methods: {\r\n    refreshClick() {\r\n      this.loading = true;\r\n      refreshAll(e => {\r\n        this.loading = false;\r\n        this.searchable && this.$refs.toolbar.showTip($_L.get('刷新失败'), '#f00');\r\n      });\r\n    },\r\n    afterRefresh(root, selected) {\r\n      this.loading = false;\r\n      this._carTreeCfg.hasFilter && countFilter();\r\n      this._dyfield && this._dyfield.resetRoot(root);\r\n      this.searchable && this.$refs.toolbar.showTip($_L.get('刷新成功'), '#00f');\r\n      this.onTreeRefreshed && this.onTreeRefreshed(root, selected);\r\n    },\r\n    onCarLoaded(cars, teams) {\r\n      if (!this._setting) {\r\n        this._setting = objClone(this.setting);\r\n        this._setting.view = this._setting.view || {};\r\n        this._setting.view.nameIsHTML = true;\r\n        this._setting.view.nameFunction = this.nameFunction;\r\n        this._setting.view.iconUrlFunction = this.iconUrlFunction;\r\n        this._setting.view.iconCssFunction = this.iconCssFunction;\r\n        this._setting.view.titleFunction = this.titleFunction;\r\n        this.__hideFunction = this._setting.view.hideFunction;\r\n        this._setting.view.hideFunction = this.hideFunction;\r\n\r\n        this._setting.callback = this._setting.callback || {};\r\n        if (this._setting.check && this._setting.check.enable) {\r\n          this.__onDblClick = this.__onDblClick || this._setting.callback.onDblClick;\r\n          this._setting.callback.onDblClick = this.onDblClick;\r\n          this.__onCheck = this.__onCheck || this._setting.callback.onCheck;\r\n          this._setting.callback.onCheck = this.onCheck;\r\n        } else {\r\n          this.__onClick = this.__onClick || this._setting.callback.onClick;\r\n          this._setting.callback.onClick = this.onClick;\r\n        }\r\n        this._dyfield && this._dyfield.addEventListener(this._setting);\r\n      }\r\n\r\n      this._carTreeCfg.hasFilter && countFilter();\r\n\r\n      cars.root[this.treeId] = { open: true };\r\n      this._tree = $.fn.zTree.init($(this.$refs.treeUl), this._setting, cars.root);\r\n      this.searchable && this.$refs.toolbar.setTree(this._tree);\r\n      this.loading = false;\r\n      onCarTreeAdd(this.treeId, this);\r\n      if (window.$_cache.userCfg.RTL_FAV) {\r\n        let _rtlCfg = JSON.parse(window.$_cache.userCfg.RTL_FAV);\r\n        if(_rtlCfg.expand&&_rtlCfg.expand){\r\n          cars.list.length <=  (Number(_rtlCfg.expandNum)||200) && this._tree.expandAll(true);\r\n        }\r\n      }\r\n      this.onTreeInited && this.onTreeInited(cars, teams, this._tree, this);\r\n      this._dyfield && this._dyfield.onExpand(cars.root);\r\n      this._setting.favshow !== false && (this.favCount = getFavCount());\r\n    },\r\n    showRecent(box) {\r\n      let ids = Storage.get('recent_cars', null);\r\n      if (!ids || ids.length == 0) return;\r\n      let cars = [];\r\n      ids.forEach(id => getCarById(id) && cars.push(getCarById(id)));\r\n      cars.length > 0 && box.openOptions(cars);\r\n    },\r\n    onCheck(node, chgs, value, event) {\r\n      this.__onCheck && this.__onCheck(node, chgs, value, event);\r\n      if (value !== 1) return;\r\n      let carIds = [];\r\n      for (let i = 0, len = chgs.length, car; i < len; i++) {\r\n        car = chgs[i];\r\n        if (car.plate) {\r\n          carIds.push(car.id);\r\n          if (carIds.length == 10) return Storage.set('recent_cars', carIds);\r\n        }\r\n      }\r\n      if (carIds.length == 0) return;\r\n      let ids = Storage.get('recent_cars', null);\r\n      if (!ids || ids.length == 0) return Storage.set('recent_cars', carIds);\r\n      for (let i = 0, len = ids.length; i < len; i++) {\r\n        if (carIds.indexOf(ids[i]) == -1) {\r\n          carIds.push(ids[i]);\r\n          if (carIds.length == 10) break;\r\n        }\r\n      }\r\n      Storage.set('recent_cars', carIds);\r\n    },\r\n    onClick(node, event) {\r\n      this.__onClick && this.__onClick(node, event);\r\n      if (!node.plate) return;\r\n      let ids = Storage.get('recent_cars', null);\r\n      if (!ids || ids.length == 0) return Storage.set('recent_cars', [node.id]);\r\n      if (ids[0] == node.id) return;\r\n      let i = ids.indexOf(node.id);\r\n      i != -1 && ids.splice(i, 1);\r\n      ids.unshift(node.id);\r\n      ids.length > 10 && ids.pop();\r\n      Storage.set('recent_cars', ids);\r\n    },\r\n    onDblClick(node, event) {\r\n      this.__onDblClick && this.__onDblClick(node, event);\r\n      !node[this.treeId].value && node.plate && this._tree.checkNode(node, true, true, true);\r\n    },\r\n    iconUrlFunction(node, open) {//车辆\r\n      return node.plate ? getCarTreeIconUrl(node.state, node.stts, node.cmpId) : null;\r\n    },\r\n    iconCssFunction(node, open) {//车队\r\n      return node.plate ? null : (open ? 'ico_open' : 'ico_close');\r\n    },\r\n    titleFunction(node) {\r\n      return node.plate ? this._carStateCnMap[node.state] : null;\r\n    },\r\n    hideFunction(node) {\r\n      if (this._carTreeCfg.filterFun(node)) return true;\r\n      return this.__hideFunction ? this.__hideFunction(node) : false;\r\n    },\r\n    nameFunction(node) {\r\n      if (node.plate) {//车辆\r\n        if (!this._carTreeCfg.showCarField) {// 没有显示其它字段，则直接返回车牌号或车辆名\r\n          return node[this._carTreeCfg.sortField] + this._get2g4gIcon(node);\r\n        }\r\n        let array = [];\r\n        if (this._carTreeCfg.showCarField.color) {\r\n          array.push(this._plateColorMap[node.plateColor]);\r\n        }\r\n        if (this._carTreeCfg.showCarField.tmnKey) {\r\n          array.push($_L.get('终端标识') + ':' + (node.viceKeys ? ((node.tmnKey ? (node.tmnKey + ',') : '') + node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '')) : (node.tmnKey || '')));\r\n        }\r\n        if (this._carTreeCfg.showCarField.simCard) {\r\n          let tmn = getTmnById(node.tmnId);\r\n          tmn = tmn ? tmn.simCard : null;\r\n          if (!node.viceKeys) {\r\n            array.push('SIM:' + (tmn || $_L.get('无')));\r\n          } else {\r\n            let sims = [tmn || $_L.get('无')], viceKeys = node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '');\r\n            viceKeys.split(',').forEach(key => {\r\n              tmn = getTmnByKey(key);\r\n              tmn = tmn ? tmn.simCard : null;\r\n              sims.push(tmn || $_L.get('无'));\r\n            });\r\n            array.push('SIM:' + sims.join(','));\r\n          }\r\n        }\r\n        if (this._carTreeCfg.showCarField.tmnNo) {\r\n          let tmn = getTmnById(node.tmnId);\r\n          tmn = tmn ? tmn.tmnNo : null;\r\n          if (tmn && tmn.length > 8 && $_cache.sysCfg['tmnCode.hidden'] == 'true') {\r\n            tmn = tmn.slice(0, 8).padEnd(tmn.length, '*');\r\n          }\r\n          if (!node.viceKeys) {\r\n            array.push($_L.get('终端号') + ':' + (tmn || $_L.get('无')));\r\n          } else {\r\n            let nos = [tmn || $_L.get('无')], viceKeys = node.viceKeys.replace(/\\_va|\\_av|\\_v|\\_a/g, '');\r\n            viceKeys.split(',').forEach(key => {\r\n              tmn = getTmnByKey(key);\r\n              tmn = tmn ? tmn.tmnNo : null;\r\n              if (tmn && tmn.length > 8 && $_cache.sysCfg['tmnCode.hidden'] == 'true') {\r\n                tmn = tmn.slice(0, 8).padEnd(tmn.length, '*');\r\n              }\r\n              nos.push(tmn || $_L.get('无'));\r\n            });\r\n            array.push($_L.get('终端号') + ':' + nos.join(','));\r\n          }\r\n        }\r\n        if (this._carTreeCfg.showCarField.driver) {\r\n          let driverName = Labels.driverByDriverId(node);\r\n          array.push($_L.get('司机') + ':' + (driverName || $_L.get('无')));\r\n        }\r\n        if (this._carTreeCfg.showCarField.state) {\r\n          array.push(this._carStateCnMap[node.state]);\r\n        }\r\n        this._dyfield && this._dyfield.values(array, node);\r\n        if (this._carTreeCfg.showCarField.bxts) {//显示扩展属性\r\n          this._carTreeCfg.showCarField.bxts.forEach(bxtId => {\r\n            let bxt = this._car_bxt_map[bxtId];\r\n            bxt && array.push(bxt.name + ':' + (Fields.bxts(node, bxtId + '.text') || Fields.bxts(node, bxtId)));\r\n          });\r\n        }\r\n        if (array.length) {\r\n          return node[this._carTreeCfg.sortField] + ' [' + array.join(' ') + ']' + this._get2g4gIcon(node);\r\n        }\r\n        return node[this._carTreeCfg.sortField] + this._get2g4gIcon(node);\r\n      } else {//车队\r\n        if (this.model || !this._carTreeCfg.showTeamCount) {// 没有显示其它统计字段，则直接返回l队名\r\n          return node.id == '0' && this._carTreeCfg.hasFilter ? (node.name + ` (<span class=\"el-icon-check\" style=\"color:${this.theme.color}\">${$_L.get('过滤')}</span>)`) : node.name;\r\n        }\r\n        let array = [];\r\n        if (this._carTreeCfg.hasFilter) {\r\n          if (this._carTreeCfg.showTeamCount.line) {\r\n            this._carTreeCfg.filters.state ? array.push(node.f_carNum) : array.push(node.f_online + '/' + node.f_carNum);\r\n          }\r\n          if (this._carTreeCfg.showTeamCount.move) {\r\n            array.push($_L.get('行:') + node.f_move);\r\n            array.push($_L.get('停:') + node.f_stop);\r\n          }\r\n          this._carTreeCfg.showTeamCount.alarm && array.push($_L.get('警:') + node.f_alarm);\r\n          this._carTreeCfg.showTeamCount.invalid && array.push($_L.get('无效:') + node.f_invalid);\r\n          if (this._carTreeCfg.showTeamCount.acc) {\r\n            array.push($_L.get('ACC开:') + node.f_accon);\r\n            array.push($_L.get('ACC关:') + node.f_accoff);\r\n          }\r\n        } else {\r\n          this._carTreeCfg.showTeamCount.line && array.push(node.online + '/' + node.carNum);\r\n          if (this._carTreeCfg.showTeamCount.move) {\r\n            array.push($_L.get('行:') + node.move);\r\n            array.push($_L.get('停:') + node.stop);\r\n          }\r\n          this._carTreeCfg.showTeamCount.alarm && array.push($_L.get('警:') + node.alarm);\r\n          this._carTreeCfg.showTeamCount.invalid && array.push($_L.get('无效:') + node.invalid);\r\n          if (this._carTreeCfg.showTeamCount.acc) {\r\n            array.push($_L.get('ACC开:') + node.accon);\r\n            array.push($_L.get('ACC关:') + node.accoff);\r\n          }\r\n        }\r\n        return node.id == '0' && this._carTreeCfg.hasFilter ? (node.name + ' [' + array.join(' ') + `] (<span class=\"el-icon-check\" style=\"color:${this.theme.color}\">${$_L.get('过滤')}</span>)`) : (node.name + ' [' + array.join(' ') + ']');\r\n      }\r\n    },\r\n    _get2g4gIcon(car) {\r\n      if (!this.show2g4gIcon || (this._carTreeCfg.showCarField&&!this._carTreeCfg.showCarField.g24)) return '';\r\n      if (!this._gps_icon) {\r\n        this._gps_icon = ` <i class=\"el-icon-location-outline\" style=\"font-size:14px;margin-left:1px;margin-right:-4px;color:#8A8A8A\" title=\"${$_L.get('定位设备')}\"></i>`;\r\n        this._accon_icon = ` <i class=\"el-icon-video-camera\" style=\"font-size:14px;margin-left:3px;margin-right:-3px;color:#007EFF\" title=\"${$_L.get('视频设备')}\"></i>`;\r\n        this._accoff_icon = ` <i class=\"el-icon-video-camera\" style=\"font-size:14px;margin-left:3px;margin-right:-3px;color:#8A8A8A\" title=\"${$_L.get('视频设备')}\"></i>`;\r\n      }\r\n      return !car.videos ? this._gps_icon : State.isAccOn(car.state) ? this._accon_icon : this._accoff_icon;\r\n    },\r\n    getCheckedNodes(onlyChecked = true, onlyTop = false, field = null, hasOwnField = null, nodes = null) {\r\n      return this._tree ? this._tree.getCheckedNodes(onlyChecked, onlyTop, field, hasOwnField, nodes) : [];\r\n    },\r\n    async checkNodes(nodes, checked = true, checkTypeFlag, callbackFlag) {\r\n      while (this.loading) await sleep(10);\r\n      for (let i = 0, len = nodes.length; i < len; i++) {\r\n        this._tree.checkNode(nodes[i], checked, checkTypeFlag, callbackFlag);\r\n      }\r\n    },\r\n    async selectNode(node, isSilent = false) {\r\n      while (this.loading) await sleep(10);\r\n      this._tree.selectNode(node, false, isSilent);\r\n    },\r\n    favSetClick() {\r\n      $_popup.open(CarFavSetWindow);\r\n    },\r\n    groupSetClick() {\r\n      $_popup.open(CarGroupSetWindow);\r\n    },\r\n    getTree() { return this._tree; },\r\n    getTreeId() { return this.treeId; },\r\n    clear() {\r\n      this._allIsClear = this._favIsClear = this._groupIsClear = true; //这几个tree是否需要清空勾选，解决inputTree组件的clear按钮执行时，只清空了当前树的勾选，另外tab树的勾选还在缓存中没有清空\r\n    },\r\n    destroy() {\r\n      onCarTreeRemove(this.treeId);\r\n      if (this._tree) {\r\n        this._tree.destroy();\r\n        this._tree = null;\r\n      }\r\n      if (this.searchable && this.$refs.toolbar) {\r\n        this.$refs.toolbar.destroy();\r\n      }\r\n      this._dyfield && this._dyfield.destroy();\r\n      this._car_bxt_map = null;\r\n      this._carTreeCfg = null;\r\n      this._plateColorMap = null;\r\n      this._carStateCnMap = null;\r\n    }\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.destroy();\r\n  }\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n</script>\r\n\r\n<style module>\r\n.container {\r\n  position: relative;\r\n  background-color: #fff;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex !important;\r\n  flex-flow: column;\r\n  align-items: unset !important;\r\n}\r\n.border {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n}\r\n.loading {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  opacity: 0.3;\r\n  filter: alpha(opacity=30);\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-image: url(\"@/assets/icon/loading.gif\");\r\n}\r\n.disabled {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  opacity: 0.6;\r\n  filter: alpha(opacity=60);\r\n  cursor: not-allowed;\r\n}\r\n.tab {\r\n  width: 100%;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #d6d6d6;\r\n  position: relative;\r\n  font-size: 13px;\r\n}\r\n.tab_border_left {\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n.tab_border_left::before {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  content: \"\";\r\n  width: 1px;\r\n  height: calc(100% - 16px);\r\n  background-color: #d6d6d6;\r\n}\r\n</style>\r\n\r\n"]}]}