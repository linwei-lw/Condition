{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Button.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Button.vue","mtime":1665472741172},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/*\n* 使用例子\n* <Button type=\"primary\" icon=\"el-icon-setting\" :height=\"40\" :border=\"false\" :disabled=\"false\" @click=\"onClick\"\">点我呀笨</Button>\n*  \n*  methods: {\n*    onClick(event) {\n*      alert('窝草，还真点了！');\n*    }\n*  }\n*/\n\nexport default {\n  name: \"Button\",\n  props: {\n    type:   { type: String,  default: 'plain' },             // 风格样式 plain:朴素(用于关闭，取消等) primary:主要(用于确认，提交等) light:浅色(用于紧挨输入框边的按钮) transparent:透明样式(用于窗口关闭等) custom:自定义\n    customs:{ type: Array,   default: null},                 // 自定义设置 [正常状态[背景色，边框色，文字色]，hover状态[背景色，边框色，文字色]，按下状态[背景色，边框色，文字色]]\n    border: { type: Boolean, default: true },                // 是否有边框\n    borderColor: { type: String, default: null},             // 边框颜色\n    height: { type: Number,  default: $_theme.inputHeight }, // 高度数值，单位是px\n    padding: String,\n    radius: { type: String,  default: null},                 // 边框圆角\n    disabled: Boolean,                                       // 是否禁用\n    icon: String,                                            // 图标样式\n    iconStyle: { default: null },\n    slotStyle: { default: null },\n  },\n  data() {\n    return {\n      hover: false,\n      down: false,\n      disabled_: this.disabled,\n      icon_: this.icon,\n    };\n  },\n  watch: {\n    disabled: function(v) {\n      this.disabled_ = v;\n      v && (this.hover = false);\n    },\n    icon: function(v) {\n      this.icon_ = v;\n    }\n  },\n  methods: {\n    setIcon(icon) {\n      this.icon_ = icon;\n    },\n    setDisabled(v) {\n      this.disabled_ = v;\n    }\n  },\n  computed: {\n    iconStyle_() {\n      return this.$slots.default ? { marginRight: '5px', verticalAlign:'middle'} : null;\n    },\n    buttonStyle() {\n      let style = {\n        height: this.height + 'px',\n        padding: this.padding || ('0 ' + Math.max(this.height/2-6, 0) + 'px'),\n        borderWidth: this.border ? '1px' : '0'\n      };\n      this.radius && (style.borderRadius = this.radius);\n      this.borderColor && (style.borderColor = this.borderColor);\n      this.type == 'custom' && Object.assign(style, this.custom[this.down ? 'down' : (this.hover ? 'hover' : 'normal')]);\n      return style;\n    },\n    custom() {\n      return this.customs ? {\n        down:   { backgroundColor: this.customs[2][0], borderColor: this.customs[2][1], color: this.customs[2][2] },\n        hover:  { backgroundColor: this.customs[1][0], borderColor: this.customs[1][1], color: this.customs[1][2] },\n        normal: { backgroundColor: this.customs[0][0], borderColor: this.customs[0][1], color: this.customs[0][2] },\n      } : {};\n    }\n  }\n};\n",{"version":3,"sources":["Button.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Button.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\r\n  <button type=\"button\" :disabled=\"disabled_\" :class=\"['sy_button','sy_button_'+type]\" :style=\"buttonStyle\"\r\n    @mouseenter=\"!disabled_ && (hover=true)\"\r\n    @mouseleave=\"!disabled_ && (hover=false)\" \r\n    @mousedown=\"!disabled_ && (down=true, $emit('mousedown',$event))\" \r\n    @mouseup=\"!disabled_ && (down=false, $emit('mouseup',$event))\" \r\n    @click=\"!disabled_ && $emit('click',$event)\">\r\n\r\n    <i :class=\"icon_\" v-if=\"icon_\" style=\"font-size:16px;\" :style=\"[iconStyle_, iconStyle]\"></i>\r\n    <span v-if=\"$slots.default\" :style=\"[icon_ && {marginTop:'-2px',verticalAlign:'middle'},slotStyle]\" style=\"display:inline-block;\"><slot></slot></span>\r\n\r\n    <div v-if=\"disabled_\" class=\"sy_button_disabled\" :style=\"[border && {left:'-1px',top:'-1px',bottom:'-1px',right:'-1px'}, {borderRadius: radius||theme.button_radius}]\"/>\r\n  </button>\r\n\r\n</template>\r\n\r\n<script>\r\n  /*\r\n  * 使用例子\r\n  * <Button type=\"primary\" icon=\"el-icon-setting\" :height=\"40\" :border=\"false\" :disabled=\"false\" @click=\"onClick\"\">点我呀笨</Button>\r\n  *  \r\n  *  methods: {\r\n  *    onClick(event) {\r\n  *      alert('窝草，还真点了！');\r\n  *    }\r\n  *  }\r\n  */\r\n\r\n  export default {\r\n    name: \"Button\",\r\n    props: {\r\n      type:   { type: String,  default: 'plain' },             // 风格样式 plain:朴素(用于关闭，取消等) primary:主要(用于确认，提交等) light:浅色(用于紧挨输入框边的按钮) transparent:透明样式(用于窗口关闭等) custom:自定义\r\n      customs:{ type: Array,   default: null},                 // 自定义设置 [正常状态[背景色，边框色，文字色]，hover状态[背景色，边框色，文字色]，按下状态[背景色，边框色，文字色]]\r\n      border: { type: Boolean, default: true },                // 是否有边框\r\n      borderColor: { type: String, default: null},             // 边框颜色\r\n      height: { type: Number,  default: $_theme.inputHeight }, // 高度数值，单位是px\r\n      padding: String,\r\n      radius: { type: String,  default: null},                 // 边框圆角\r\n      disabled: Boolean,                                       // 是否禁用\r\n      icon: String,                                            // 图标样式\r\n      iconStyle: { default: null },\r\n      slotStyle: { default: null },\r\n    },\r\n    data() {\r\n      return {\r\n        hover: false,\r\n        down: false,\r\n        disabled_: this.disabled,\r\n        icon_: this.icon,\r\n      };\r\n    },\r\n    watch: {\r\n      disabled: function(v) {\r\n        this.disabled_ = v;\r\n        v && (this.hover = false);\r\n      },\r\n      icon: function(v) {\r\n        this.icon_ = v;\r\n      }\r\n    },\r\n    methods: {\r\n      setIcon(icon) {\r\n        this.icon_ = icon;\r\n      },\r\n      setDisabled(v) {\r\n        this.disabled_ = v;\r\n      }\r\n    },\r\n    computed: {\r\n      iconStyle_() {\r\n        return this.$slots.default ? { marginRight: '5px', verticalAlign:'middle'} : null;\r\n      },\r\n      buttonStyle() {\r\n        let style = {\r\n          height: this.height + 'px',\r\n          padding: this.padding || ('0 ' + Math.max(this.height/2-6, 0) + 'px'),\r\n          borderWidth: this.border ? '1px' : '0'\r\n        };\r\n        this.radius && (style.borderRadius = this.radius);\r\n        this.borderColor && (style.borderColor = this.borderColor);\r\n        this.type == 'custom' && Object.assign(style, this.custom[this.down ? 'down' : (this.hover ? 'hover' : 'normal')]);\r\n        return style;\r\n      },\r\n      custom() {\r\n        return this.customs ? {\r\n          down:   { backgroundColor: this.customs[2][0], borderColor: this.customs[2][1], color: this.customs[2][2] },\r\n          hover:  { backgroundColor: this.customs[1][0], borderColor: this.customs[1][1], color: this.customs[1][2] },\r\n          normal: { backgroundColor: this.customs[0][0], borderColor: this.customs[0][1], color: this.customs[0][2] },\r\n        } : {};\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n\r\n.sy_button {\r\n  border-radius: var(--button_radius);\r\n  cursor: pointer;\r\n  position: relative;\r\n  white-space: nowrap;\r\n  text-align: center;\r\n  border-style: solid;\r\n  user-select: none;\r\n  line-height: normal;\r\n}\r\n\r\n/*按钮primary风格*/\r\n.sy_button_primary {\r\n  color: #fff;\r\n  border-color: var(--color);\r\n  background-color: var(--color);\r\n}\r\n\r\n.sy_button_primary:hover:enabled {\r\n  border-color: var(--color_a1);\r\n  background-color: var(--color_a8);\r\n}\r\n\r\n.sy_button_primary:active:enabled {\r\n  border-color: var(--color);\r\n  background-color: var(--color);\r\n}\r\n\r\n/*按钮plain风格*/\r\n.sy_button_plain {\r\n  border-color: var(--border_color_dark);\r\n  background-color: #fff;\r\n}\r\n\r\n.sy_button_plain:hover:enabled {\r\n  color: var(--color);\r\n}\r\n\r\n.sy_button_plain:active:enabled {\r\n  background-color: var(--bg_color);\r\n  border-color: var(--color);\r\n}\r\n\r\n/*按钮light风格*/\r\n.sy_button_light {\r\n  background-color: var(--bg_color);\r\n  border-color: var(--border_color_light);\r\n}\r\n\r\n.sy_button_light:hover:enabled {\r\n  color: var(--color);\r\n  background-color: #fff;\r\n}\r\n\r\n.sy_button_light:active:enabled {\r\n  background-color: var(--bg_color);\r\n  color: var(--color);\r\n  border-color: var(--selected_color);\r\n}\r\n\r\n/*按钮transparent风格*/\r\n.sy_button_transparent {\r\n  background: transparent;\r\n  color: #fff;\r\n  border: none;\r\n}\r\n\r\n.sy_button_transparent:hover:enabled {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.sy_button_transparent:active:enabled {\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/**禁用**/\r\n.sy_button_disabled {\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(235, 235, 235, 0.6);\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n</style>"]}]}