{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Radio.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Radio.vue","mtime":1661155499988},{"path":"D:\\cdRule\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.checked         { color: var(--checkedColor); }\n.checked:hover   { color: var(--checkedHoverColor); }\n.unchecked       { color: var(--uncheckedColor); }\n.unchecked:hover { color: var(--uncheckedHoverColor); }\n\n.container {\n  display: inline-block;\n  white-space: nowrap;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: 0 center;\n}\n.disabled {\n  opacity: 0.5;\n  filter: alpha(opacity=50); \n  cursor: not-allowed;\n}\n",{"version":3,"sources":["Radio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Radio.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <label :class=\"[$style.container, disabled && $style.disabled, checked ? [$style.checked,checkedI] : [$style.unchecked,uncheckedI]]\" :style=\"[{'--checkedColor': checkedColor||theme.color,'--checkedHoverColor': checkedHoverColor||theme.color,'--uncheckedColor': uncheckedColor,'--uncheckedHoverColor': uncheckedHoverColor||theme.color}]\">\r\n    <input\r\n      type=\"radio\"\r\n      style=\"display:none;\"\r\n      :disabled=\"disabled\"\r\n      :value=\"thetrue\"\r\n      :checked=\"checked\"\r\n      :name=\"name\"\r\n      @change=\"change\">\r\n    <slot><span style=\"margin-left:4px;\">{{ label }}</span></slot>\r\n  </label>\r\n</template>\r\n\r\n<script>\r\n  /*\r\n  * 使用例子\r\n  * <Radio label=\"吃饭\" name=\"group\" :true=\"1\" v-model=\"like\" @change=\"onRadioChg\"/>\r\n  * <Radio label=\"睡觉\" name=\"group\" :true=\"2\" v-model=\"like\" @change=\"onRadioChg\"/>\r\n  * \r\n  *  data: {like: 1},\r\n  *  methods: {\r\n  *    onRadioChg(value) {// value值是1或2\r\n  *    }\r\n  *  }\r\n  */\r\n  export default {\r\n    name: \"Radio\",\r\n    props: {\r\n      value: { default: null },   // 当前值(v-model)\r\n      true:  { default: true },   // 选中的值\r\n      name: String,               // 组名\r\n      label: String,              // 文本内容\r\n      disabled: Boolean,           // 是否可操作\r\n      checkedColor: { type: String, default: null },                // 选中图标颜色\r\n      checkedHoverColor: { type: String, default: null },           // 选中停留图标颜色\r\n      uncheckedColor: { type: String, default: null },              // 未选中图标颜色\r\n      uncheckedHoverColor: { type: String, default: null },         // 未选中停留图标颜色\r\n      checkedI:{type: String , default: 'el-icon-yixuan'},     // 选中图标\r\n      uncheckedI:{type: String , default: 'el-icon-circle'},  // 未选中图标\r\n    },\r\n    computed: {\r\n      checked()  { return this.value === this.true; },\r\n      thetrue()  { return this.true}\r\n    },\r\n    mounted() {\r\n      this.$el.style['line-height'] = this.$el.clientHeight + 'px';\r\n      this.$el.style['background-position-y'] = ((this.$el.clientHeight-13)/2) + 'px';\r\n    },\r\n    methods: {\r\n      change(event) {\r\n        if (this.disabled) {\r\n          return false;\r\n        }\r\n        if (event.target.checked) {\r\n          this.$emit('input',  this.true);\r\n          this.$emit('change', this.true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .checked         { color: var(--checkedColor); }\r\n  .checked:hover   { color: var(--checkedHoverColor); }\r\n  .unchecked       { color: var(--uncheckedColor); }\r\n  .unchecked:hover { color: var(--uncheckedHoverColor); }\r\n\r\n  .container {\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    cursor: pointer;\r\n    background-repeat: no-repeat;\r\n    background-position: 0 center;\r\n  }\r\n  .disabled {\r\n    opacity: 0.5;\r\n    filter: alpha(opacity=50); \r\n    cursor: not-allowed;\r\n  }\r\n</style>"]}]}