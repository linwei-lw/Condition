{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\Split.vue?vue&type=style&index=0&module=true&lang=css&","dependencies":[{"path":"D:\\cdRule\\src\\components\\Split.vue","mtime":1653698569423},{"path":"D:\\cdRule\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.horizontal {\n  position: absolute;\n  background: transparent;\n  overflow: hidden;\n  width: 10px;\n  height: 100%;\n  z-index: 2;\n}\n.draggingH {\n  border-left: 1px solid #AEBAC5;\n  border-right: 1px solid #AEBAC5;\n  background: #E8EAED;\n}\n.draggingH > * {\n  margin-left: -1px;\n}\n\n.vertical {\n  position: absolute;\n  background: transparent;\n  overflow: hidden;\n  width: 100%;\n  height: 10px;\n  z-index: 2;\n}\n.draggingV {\n  border-top: 1px solid #AEBAC5;\n  border-bottom: 1px solid #AEBAC5;\n  background: #E8EAED;\n}\n.draggingV > * {\n  margin-top: -1px;\n}\n",{"version":3,"sources":["Split.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Split.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <!--水平-->\r\n  <div v-if=\"model=='h'\" @mouseenter=\"hover=true\" @mouseleave=\"hover=false\" @mousedown=\"expand && resizable && onDragStartH($event)\" :class=\"[$style.horizontal, dragging && $style.draggingH]\" :style=\"{cursor:expand&&resizable?'w-resize':'default'}\">\r\n    <img v-if=\"minable&&hideSide=='left'\"  @mousedown.stop=\"\" @click=\"toogleL\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:calc(50% - 40px);position:absolute;\" :style=\"{transform:`rotate(${expand?0:180}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='right'\" @mousedown.stop=\"\" @click=\"toogleR\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:calc(50% - 40px);position:absolute;right:0px;\" :style=\"{transform:`rotate(${expand?180:0}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandR\"  @mousedown.stop=\"\" @click=\"expandL=!expandL;toogleL()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;position:absolute;\" :style=\"{transform:`rotate(${expand?0:180}deg)`,top:`calc(50% - ${expand?80:40}px)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandL\"  @mousedown.stop=\"\" @click=\"expandR=!expandR;toogleR()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;position:absolute;\" :style=\"{transform:`rotate(${expand?180:0}deg)`,top:`calc(50% - ${expand?0:40}px)`}\"/>\r\n\r\n    <slot :hover='hover' :hideSide='hideSide' :expand='expand'></slot>\r\n\r\n    <!--左右布局对换按钮-->\r\n    <Button v-if=\"swapable && hideSide!='both' && hover && expand\" @mousedown.stop=\"e=>e.preventDefault()\" @click=\"swap()\" :title=\"$_L.get('左右布局对换')\" :borderColor=\"theme.border_color_dark\" icon=\"el-icon-refresh\" padding=\"0 2px\" :height=\"22\" radius=\"11px\" :style=\"{zIndex:theme.zindex()}\" style=\"position:fixed;top:calc(50% + 65px);margin-left:-6px;\"/>\r\n  </div>\r\n  \r\n  <!--垂直-->\r\n  <div v-else-if=\"model=='v'\" @mousedown=\"expand && resizable && onDragStartV($event)\" :class=\"[$style.vertical, dragging && $style.draggingV]\" :style=\"{cursor:expand&&resizable?'n-resize':'default'}\">\r\n    <img v-if=\"minable&&hideSide=='bottom'\" @mousedown.stop=\"\" @click=\"toogleB\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;left:calc(50% - 5px);top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?-90:90}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='top'\"    @mousedown.stop=\"\" @click=\"toogleT\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;left:calc(50% - 5px);top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?90:-90}deg)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandT\" @mousedown.stop=\"\" @click=\"expandB=!expandB;toogleB()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?-90:90}deg)`,left:`calc(50% - ${expand?45:5}px)`}\"/>\r\n    <img v-if=\"minable&&hideSide=='both' && expandB\" @mousedown.stop=\"\" @click=\"expandT=!expandT;toogleT()\" src=\"@/assets/icon/split-hide.png\" style=\"cursor:pointer;top:-34px;position:absolute;\" :style=\"{transform:`rotate(${expand?90:-90}deg)`,left:`calc(50% - ${expand?-35:5}px)`}\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { domLeft, domTop }  from '@/components/util/Dom.js';\r\n  import Storage              from '@/common/cache/Storage.js';\r\n\r\n  export default {\r\n    name: \"Split\",\r\n    props: {\r\n      leftRef: String,                                //左右模式下：左边ref\r\n      rightRef: String,                               //左右模式下：右边ref\r\n      leftWidth: { type: String, default: '20%'},     //左右模式下：左边宽度百分比\r\n      minWidth:  { type: Number, default: 20},        //左右模式下：调整的最小宽度\r\n\r\n      topRef: String,                                 //上下模式下：上边ref\r\n      bottomRef: String,                              //上下模式下：下边ref\r\n      topHeight: { type: String, default: '65%'},     //上下模式下：上边高度百分比\r\n      bottomHeight: { type: String, default: null},   //上下模式下：下边高度百分比\r\n\r\n      minSide:   { type: String, default: 'left'},    //最小化方向，左右模式：left/right/both，上下模式：top/bottom/both\r\n      min:       { type: Boolean, default: false},    //开始就最小化\r\n      minable:   { type: Boolean, default: true},     //允许最小化\r\n\r\n      id: String,                                     //组件唯一ID，swapable和stateful需要用到\r\n      resizable: { type: Boolean, default: true},     //是否可调整大小\r\n      swapable:  { type: Boolean, default: false},    //左右两边是否可交换\r\n      minstate:  { type: Boolean, default: false},    //是否还原上次的最小化状态\r\n      inwindow:  { type: Boolean, default: false},\r\n    },\r\n    data() {\r\n      return {\r\n        model: '',       //h左右　v上下\r\n        expand: true,\r\n        expandL: true,\r\n        expandR: true,\r\n        expandT: true,\r\n        expandB: true,\r\n        dragging: false,\r\n        hideSide: null,\r\n        hover: false,\r\n      };\r\n    },\r\n    watch: {\r\n      dragging: function(v) {\r\n        document[v?'addEventListener':'removeEventListener']('mousemove', this.model == 'h' ? this.onDragingH : this.onDragingV);\r\n        document[v?'addEventListener':'removeEventListener']('mouseup',   this.model == 'h' ? this.onDragEndH : this.onDragEndV);\r\n      },\r\n      expand: function(v) {\r\n        this.minstate && this.id && Storage.set(this.id+'_min',!v);\r\n        this.$emit(\"expand\",v);\r\n      },\r\n    },\r\n    beforeDestroy() {\r\n      this._onResize && window.removeResizeListener(this._resize_el, this._onResize);\r\n    },\r\n\r\n    mounted() {\r\n      this.hideSide = this.minSide;\r\n      this.model = this.leftRef ? 'h' : 'v';\r\n      this.offset = this.leftRef ? this.minWidth : 20;\r\n\r\n      this.$nextTick(() => {\r\n        let parent = this.inwindow ? this.$parent.$parent : this.$parent;\r\n        if (this.model == 'h') {//水平\r\n          this._leftEl = parent.$refs[this.leftRef];\r\n          this._leftEl = this._leftEl.$el || this._leftEl;\r\n          this._rightEl = parent.$refs[this.rightRef];\r\n          this._rightEl = this._rightEl.$el || this._rightEl;\r\n\r\n          this._leftEl.style.width = this.leftWidth;\r\n          this._rightEl.style.width = `calc(100% - ${this.leftWidth} - 8px)`;\r\n          this.$el.style.left = `calc(${this._leftEl.style.width} - 1px)`;\r\n          \r\n          this.swapable && this.id && this.hideSide != Storage.get(this.id+'_swap',this.hideSide) && this.swap();\r\n        \r\n          if (this.minWidth > 20) {\r\n            this._resize_el = this[`_${this.hideSide}El`];\r\n            this._onResize = () => {\r\n              if (this._resize_el.clientWidth < this.minWidth) {\r\n                let lw, rw, ml;\r\n                if (this.hideSide == 'left') {\r\n                  lw = this.minWidth + 'px';\r\n                  rw = `calc(100% - ${this.minWidth + 8}px)`;\r\n                  ml = `${this.minWidth-1}px`;\r\n                } else {\r\n                  rw = this.minWidth + 'px';\r\n                  lw = `calc(100% - ${this.minWidth + 8}px)`;\r\n                  ml = `calc(100% - ${this.minWidth + 9}px)`;\r\n                }\r\n                this._leftEl.style.width = lw;\r\n                this._rightEl.style.width = rw;\r\n                this.$el.style.left = ml;\r\n              }\r\n            };\r\n            this._onResize();\r\n            window.addResizeListener(this._resize_el, this._onResize);\r\n          }\r\n        } else {//垂直\r\n          this._topEl = parent.$refs[this.topRef];\r\n          this._topEl = this._topEl.$el || this._topEl;\r\n          this._bottomEl = parent.$refs[this.bottomRef];\r\n          this._bottomEl = this._bottomEl.$el || this._bottomEl;\r\n\r\n          if (this.bottomHeight) {\r\n            this._bottomEl.style.height = this.bottomHeight;\r\n            this._topEl.style.height = `calc(100% - ${this.bottomHeight} - 8px)`;\r\n            this._topEl.style['margin-bottom'] = '8px';\r\n            this.$el.style.top = `calc(${this._topEl.style.height} - 1px)`;\r\n          } else {\r\n            this._topEl.style.height = this.topHeight;\r\n            this._topEl.style['margin-bottom'] = '8px';\r\n            this._bottomEl.style.height = `calc(100% - ${this.topHeight} - 8px)`;\r\n            this.$el.style.top = `calc(${this._topEl.style.height} - 1px)`;\r\n          }\r\n        }\r\n        if (this.minstate && this.id) {\r\n          Storage.get(this.id+'_min',this.min) && this.hide();\r\n        } else {\r\n          this.min && this.hide();\r\n        }\r\n      });\r\n    },\r\n    methods: {\r\n      hide() {\r\n        if (this.hideSide == 'both' || !this.expand) return;\r\n        switch (this.hideSide) {\r\n          case 'left': return this.toogleL();\r\n          case 'right': return this.toogleR();\r\n          case 'top': return this.toogleT();\r\n          case 'bottom': return this.toogleB();\r\n        }\r\n      },\r\n      toogleL() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._leftEl.style.display = this._leftDisplay;\r\n          this._rightEl.style.width = this._rightWidth;\r\n          this.$el.style.left = `calc(${this._leftEl.style.width} - 1px`;\r\n        } else {\r\n          this._leftDisplay = this._leftEl.style.display;\r\n          this._rightWidth = this._rightEl.style.width;\r\n          this._leftEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._rightEl.style.width = '100%';\r\n          this.$el.style.left = '0px';\r\n        }\r\n        this.$emit('change',{toogle:true, left:this.expandL, right:this.expandR});\r\n      },\r\n      toogleR() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._rightEl.style.display = this._rightDisplay;\r\n          this._leftEl.style.width = this._leftWidth;\r\n          this.$el.style.left = `calc(${this._leftEl.style.width} - 1px`;\r\n        } else {\r\n          this._rightDisplay = this._rightEl.style.display;\r\n          this._leftWidth = this._leftEl.style.width;\r\n          this._rightEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._leftEl.style.width = '100%';\r\n          this.$el.style.left = 'calc(100% - 10px)';\r\n        }\r\n        this.$emit('change',{toogle:true, left:this.expandL, right:this.expandR});\r\n      },\r\n      toogleT() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._topEl.style.display = this._topDisplay;\r\n          this._bottomEl.style.height = this._bottomHeight;\r\n          this.$el.style.top = `calc(${this._topEl.style.height} - 1px`;\r\n        } else {\r\n          this._topDisplay = this._topEl.style.display;\r\n          this._bottomHeight = this._bottomEl.style.height;\r\n          this._topEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._bottomEl.style.height = '100%';\r\n          this.$el.style.top = '0px';\r\n        }\r\n        this.$emit('change',{toogle:true, top:this.expandT, bottom:this.expandB});\r\n      },\r\n      toogleB() {\r\n        this.expand = !this.expand;\r\n        if (this.expand) {\r\n          this._bottomEl.style.display = this._bottomDisplay;\r\n          this._topEl.style.height = this._topHeight;\r\n          this.$el.style.top = `calc(${this._topEl.style.height} - 1px`;\r\n        } else {\r\n          this._bottomDisplay = this._bottomEl.style.display;\r\n          this._topHeight = this._topEl.style.height;\r\n          this._bottomEl.style.setProperty(\"display\", \"none\", \"important\");\r\n          this._topEl.style.height = '100%';\r\n          this.$el.style.top = 'calc(100% - 10px)';\r\n        }\r\n        this.$emit('change',{toogle:true, top:this.expandT, bottom:this.expandB});\r\n      },\r\n      onDragStartH(e) {\r\n        this.dragging = true;\r\n        this._divX = e.clientX - domLeft(this.$el) + domLeft(this.$el.parentNode);\r\n        this._maxX = this.$el.parentNode.clientWidth - this.offset;\r\n        e.preventDefault();\r\n      },\r\n      onDragingH(e) {\r\n        this.$el.style.left = Math.min(this._maxX, Math.max(e.clientX - this._divX, this.offset)) + 'px';\r\n      },\r\n      onDragEndH(e) {\r\n        this.dragging = false;\r\n        let left = Math.min(this._maxX, Math.max(e.clientX - this._divX, this.offset));\r\n        let _leftWidth = left * 100 / (this._maxX + this.offset);\r\n        this._leftEl.style.width = _leftWidth + '%';\r\n        this._rightEl.style.width = `calc(${100-_leftWidth}% - 8px`;\r\n        this.$el.style.left = `calc(${this._leftEl.style.width} - 1px`;\r\n        this.$emit('change',{drag:true});\r\n      },\r\n      onDragStartV(e) {\r\n        this.dragging = true;\r\n        this._divY = e.clientY - domTop(this.$el) + domTop(this.$el.parentNode);\r\n        this._maxY = this.$el.parentNode.clientHeight - this.offset;\r\n        e.preventDefault();\r\n      },\r\n      onDragingV(e) {\r\n        this.$el.style.top = Math.min(this._maxY, Math.max(e.clientY - this._divY, this.offset)) + 'px';\r\n      },\r\n      onDragEndV(e) {\r\n        this.dragging = false;\r\n        let top = Math.min(this._maxY, Math.max(e.clientY - this._divY, this.offset));\r\n        let _topHeight = top * 100 / (this._maxY + this.offset);\r\n        this._topEl.style.height = _topHeight + '%';\r\n        this._bottomEl.style.height = `calc(${100-_topHeight}% - 8px`;\r\n        this.$el.style.top = `calc(${this._topEl.style.height} - 1px`;\r\n        this.$emit('change',{drag:true});\r\n      },\r\n      swap() {\r\n        this._leftEl.style.float = 'right';\r\n        this._rightEl.style.float = 'left';\r\n        \r\n        let l = this._leftEl;\r\n        this._leftEl = this._rightEl;\r\n        this._rightEl = l;\r\n\r\n        this.$el.style.left = `calc(${this._leftEl.style.width} - 1px)`;\r\n        this.hideSide = this.hideSide == 'left' ? 'right' : 'left';\r\n        this.id && Storage.set(this.id+'_swap', this.hideSide);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style module>\r\n  .horizontal {\r\n    position: absolute;\r\n    background: transparent;\r\n    overflow: hidden;\r\n    width: 10px;\r\n    height: 100%;\r\n    z-index: 2;\r\n  }\r\n  .draggingH {\r\n    border-left: 1px solid #AEBAC5;\r\n    border-right: 1px solid #AEBAC5;\r\n    background: #E8EAED;\r\n  }\r\n  .draggingH > * {\r\n    margin-left: -1px;\r\n  }\r\n\r\n  .vertical {\r\n    position: absolute;\r\n    background: transparent;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 10px;\r\n    z-index: 2;\r\n  }\r\n  .draggingV {\r\n    border-top: 1px solid #AEBAC5;\r\n    border-bottom: 1px solid #AEBAC5;\r\n    background: #E8EAED;\r\n  }\r\n  .draggingV > * {\r\n    margin-top: -1px;\r\n  }\r\n</style>\r\n"]}]}