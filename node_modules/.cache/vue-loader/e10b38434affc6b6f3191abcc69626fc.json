{"remainingRequest":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\cdRule\\src\\components\\InputImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\cdRule\\src\\components\\InputImage.vue","mtime":1673402177180},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\cdRule\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n/*\r\n * 使用例子\r\n * <InputImage ref=\"img\" label=\"你想输入啥\" :src=\"图片的路径\" :required=\"true\" clearable/>\r\n * 获取取图片\r\n * let bimage = this.$refs.img.getFile()\r\n */\r\nimport ImgPreview from \"./UploadImg/ImgPreview.vue\"\r\n\r\nexport default {\r\n  name: \"InputImage\",\r\n  props: {\r\n    label: String,                                                        // 标题文本\r\n    src: String,                                                          // image url\r\n    maxSize: { type: String, default: '20M' },                            // xxM xxKB\r\n    placeholder: { type: String, default: $_L.get('点击上传图片') },\r\n    required: Boolean,                                                    // 是否必填\r\n    clearable: Boolean,                                                   // 是否显示可清除图标\r\n    disabled: Boolean,                                                    // 是否可操作\r\n    border: { type: Boolean, default: true },                             // 是否显示边框\r\n    borderColor: { type: String, default: $_theme.border_color_light },\r\n    radius: { type: String,  default: $_theme.input_radius},              // 边框圆角\r\n    minHeight: { type: Number, default: $_theme.inputHeight },            // 最小高度数值，单位是px\r\n    padding: { type: Number, default: 5 },\r\n    imgStyle: { default: null },\r\n    iswebpath: { type: Boolean, default: false }\r\n  },\r\n  data() {\r\n    return {\r\n      files:null,\r\n      empty: true,\r\n      hovering: false,\r\n      focused: false,\r\n    };\r\n  },\r\n  _selectedImage: null,\r\n\r\n  watch: {\r\n    src: function (v) {\r\n      this._refresh();\r\n    }\r\n  },\r\n  mounted() {\r\n    this._refresh();\r\n  },\r\n  methods: {\r\n    _refresh() {\r\n      this.empty = !(this._selectedImage || this.src);\r\n      this.$nextTick(() => {\r\n        this.$nextTick(() => {//走两次nextTick，才能取到真正的content.clientWidth值，因为label会被对齐设置。\r\n          let maxWidth = this.$refs.content.clientWidth;\r\n          this.$refs.img.style['max-width'] = (maxWidth - this.padding * 2) + 'px';\r\n          if (this._selectedImage) return this.$refs.img.src = this._selectedImage;\r\n          if (!this.src) return this.$refs.img.src = '';\r\n          if (this.src.indexOf('http') == 0) return this.$refs.img.src = this.src;\r\n          this.$refs.img.src = (this.iswebpath ? $_domain.WEB_ROOT : $_domain.WEB_PATH) + this.src;\r\n        })\r\n      });\r\n    },\r\n    //点击上传图片并显示图片\r\n    _onImageSelected(event) {\r\n      this.files=null;\r\n      if (event.target.files.length == 0) return;\r\n      let _this = this, file = event.target.files[0], reader = new FileReader();\r\n      if (this.maxSize) {\r\n        let size = this.maxSize.toUpperCase();\r\n        size = size.indexOf('M') > 0 ? parseInt(size.substr(0, size.length - 1)) * 1024 * 1024 : parseInt(size.substr(0, size.length - 2)) * 1024;\r\n        if (file.size > size) return $_alert.warn($_L.get('图片不能大于{0}', this.maxSize.toUpperCase()));\r\n      }\r\n      let ImgType = file.type.slice(file.type.indexOf('/') + 1);\r\n      if (!(ImgType == 'jpg' || ImgType == 'gif' || ImgType == 'jpeg' || ImgType == 'png')) return $_alert.warn($_L.get('请选择图片,图片的格式为{0}', 'png,jpg,jpeg,gif'));\r\n      reader.readAsDataURL(file);\r\n      reader.onload = function () {\r\n        _this.$refs.img.src = _this._selectedImage = file.src = this.result;\r\n        _this.empty = false;\r\n        _this.$emit('change', file);\r\n      };\r\n      this.files=event.target.files;\r\n      this.empty = !this.$refs.img.src;\r\n    },\r\n\r\n    getFile() {\r\n      let files = this.files;\r\n      return files && files.length > 0 ? files[0] : null;\r\n    },\r\n    getFileName() {\r\n      let file = this.getFile();\r\n      return file ? file.name : null;\r\n    },\r\n    getUploadImage() {//获取上传的图片\r\n      return this.getFile();\r\n    },\r\n    hasImage() {//是否有图片显示在\r\n      return !this.empty;\r\n    },\r\n    getFormat() {// 1. base64格式如(data:image/png;base64,...); 2. http格式如(http://xxxx/aa.png?v=xxx)\r\n      if (this.empty) return null;\r\n      let url = this._selectedImage || this.src;\r\n      if (!url) return null;\r\n      if (url.indexOf('data:image') == 0) return url.split(/[/;]/)[1];\r\n      url = url.split('?')[0];\r\n      let array = url.split('.');\r\n      return array[array.length - 1];\r\n    },\r\n    _clear() {\r\n      this._selectedImage = null;\r\n      this.empty = true;\r\n      this.$refs.img.src = '';\r\n      this.$refs.input.value = '';\r\n      this.$emit('change', null);\r\n      this.$emit('clear');\r\n    },\r\n    _view() {\r\n      $_popup.open(ImgPreview, { ImgSrc: this.$refs.img });\r\n    }\r\n  },\r\n  computed: {\r\n    containerStyle() {\r\n      return {\r\n        borderRadius: this.radius,\r\n        minHeight: this.minHeight + 'px',\r\n        borderColor: this.focused ? this.theme.color : this.borderColor,\r\n        zIndex: this.focused ? this.theme.zindex() : ''\r\n      };\r\n    },\r\n    showClear() {\r\n      return this.clearable && !this.empty && !this.disabled && this.hovering;\r\n    },\r\n    labelStyle() {\r\n      return {\r\n        borderRightColor: this.theme.border_color_light,\r\n        backgroundColor: this.theme.input_label_bg_color\r\n      };\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["InputImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InputImage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div :class=\"[$style.container, border && $style.border]\" :style=\"containerStyle\" tabindex=\"0\" @focus=\"focused=true\" @blur=\"focused=false\" @mouseenter=\"hovering=true\" @mouseleave=\"hovering=false\">\r\n\r\n    <!--label显示-->\r\n    <span :class=\"$style.label\" style=\"width:1px;\" :style=\"labelStyle\" v-if=\"label\" is-label>{{label}}</span>\r\n\r\n    <div ref=\"content\" style=\"position:relative;cursor:pointer;\" :style=\"{padding:padding+'px'}\" :title=\"placeholder\" @click=\"$refs.input.click()\">\r\n      <span :class=\"$style.label\" v-if=\"empty && placeholder\" style=\"color:#B0B0B0;padding:0 3px\"> {{placeholder}} </span>\r\n      <img ref=\"img\" v-show=\"!empty\" alt=\"\" style=\"margin-bottom:-4px;max-height:50px\" :style=\"[imgStyle]\" />\r\n      <input ref=\"input\" v-bind=\"$attrs\" @change=\"_onImageSelected($event)\" type=\"file\" style=\"display:none\" accept=\"image/png,image/jpg,image/jpeg,image/gif\" />\r\n\r\n      <!--clear按钮显示-->\r\n      <i @click.stop=\"_clear\" class=\"el-icon-error\" :title=\"$_L.get('清空图片')\" style=\"border-radius:10px; padding:0px; position:absolute; top:calc(50% - 10px); right:2px; background-color:#fff; font-size:19px; color:#FF6D6D; cursor:pointer;\" v-if=\"showClear\"></i>\r\n      <i @click.stop=\"_view\" class=\"el-icon-zoom-in\" :title=\"$_L.get('查看图片')\" style=\"border-radius:10px; padding:0px; position:absolute; top:calc(50% - 10px); right:30px; background-color:#fff; font-size:19px; color:#FF6D6D; cursor:pointer;\" v-if=\"showClear\"></i>\r\n\r\n    </div>\r\n\r\n    <!--必填显示-->\r\n    <div :class=\"[$style.required]\" :style=\"{backgroundColor:theme.input_label_bg_color}\" style=\"width:1px;\" v-if=\"required\">\r\n      <i></i> <i class=\"el-icon-star-on\"></i>\r\n    </div>\r\n\r\n    <div v-if=\"disabled\" :class=\"$style.disabled\" :style=\"{borderRadius: radius}\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/*\r\n * 使用例子\r\n * <InputImage ref=\"img\" label=\"你想输入啥\" :src=\"图片的路径\" :required=\"true\" clearable/>\r\n * 获取取图片\r\n * let bimage = this.$refs.img.getFile()\r\n */\r\nimport ImgPreview from \"./UploadImg/ImgPreview.vue\"\r\n\r\nexport default {\r\n  name: \"InputImage\",\r\n  props: {\r\n    label: String,                                                        // 标题文本\r\n    src: String,                                                          // image url\r\n    maxSize: { type: String, default: '20M' },                            // xxM xxKB\r\n    placeholder: { type: String, default: $_L.get('点击上传图片') },\r\n    required: Boolean,                                                    // 是否必填\r\n    clearable: Boolean,                                                   // 是否显示可清除图标\r\n    disabled: Boolean,                                                    // 是否可操作\r\n    border: { type: Boolean, default: true },                             // 是否显示边框\r\n    borderColor: { type: String, default: $_theme.border_color_light },\r\n    radius: { type: String,  default: $_theme.input_radius},              // 边框圆角\r\n    minHeight: { type: Number, default: $_theme.inputHeight },            // 最小高度数值，单位是px\r\n    padding: { type: Number, default: 5 },\r\n    imgStyle: { default: null },\r\n    iswebpath: { type: Boolean, default: false }\r\n  },\r\n  data() {\r\n    return {\r\n      files:null,\r\n      empty: true,\r\n      hovering: false,\r\n      focused: false,\r\n    };\r\n  },\r\n  _selectedImage: null,\r\n\r\n  watch: {\r\n    src: function (v) {\r\n      this._refresh();\r\n    }\r\n  },\r\n  mounted() {\r\n    this._refresh();\r\n  },\r\n  methods: {\r\n    _refresh() {\r\n      this.empty = !(this._selectedImage || this.src);\r\n      this.$nextTick(() => {\r\n        this.$nextTick(() => {//走两次nextTick，才能取到真正的content.clientWidth值，因为label会被对齐设置。\r\n          let maxWidth = this.$refs.content.clientWidth;\r\n          this.$refs.img.style['max-width'] = (maxWidth - this.padding * 2) + 'px';\r\n          if (this._selectedImage) return this.$refs.img.src = this._selectedImage;\r\n          if (!this.src) return this.$refs.img.src = '';\r\n          if (this.src.indexOf('http') == 0) return this.$refs.img.src = this.src;\r\n          this.$refs.img.src = (this.iswebpath ? $_domain.WEB_ROOT : $_domain.WEB_PATH) + this.src;\r\n        })\r\n      });\r\n    },\r\n    //点击上传图片并显示图片\r\n    _onImageSelected(event) {\r\n      this.files=null;\r\n      if (event.target.files.length == 0) return;\r\n      let _this = this, file = event.target.files[0], reader = new FileReader();\r\n      if (this.maxSize) {\r\n        let size = this.maxSize.toUpperCase();\r\n        size = size.indexOf('M') > 0 ? parseInt(size.substr(0, size.length - 1)) * 1024 * 1024 : parseInt(size.substr(0, size.length - 2)) * 1024;\r\n        if (file.size > size) return $_alert.warn($_L.get('图片不能大于{0}', this.maxSize.toUpperCase()));\r\n      }\r\n      let ImgType = file.type.slice(file.type.indexOf('/') + 1);\r\n      if (!(ImgType == 'jpg' || ImgType == 'gif' || ImgType == 'jpeg' || ImgType == 'png')) return $_alert.warn($_L.get('请选择图片,图片的格式为{0}', 'png,jpg,jpeg,gif'));\r\n      reader.readAsDataURL(file);\r\n      reader.onload = function () {\r\n        _this.$refs.img.src = _this._selectedImage = file.src = this.result;\r\n        _this.empty = false;\r\n        _this.$emit('change', file);\r\n      };\r\n      this.files=event.target.files;\r\n      this.empty = !this.$refs.img.src;\r\n    },\r\n\r\n    getFile() {\r\n      let files = this.files;\r\n      return files && files.length > 0 ? files[0] : null;\r\n    },\r\n    getFileName() {\r\n      let file = this.getFile();\r\n      return file ? file.name : null;\r\n    },\r\n    getUploadImage() {//获取上传的图片\r\n      return this.getFile();\r\n    },\r\n    hasImage() {//是否有图片显示在\r\n      return !this.empty;\r\n    },\r\n    getFormat() {// 1. base64格式如(data:image/png;base64,...); 2. http格式如(http://xxxx/aa.png?v=xxx)\r\n      if (this.empty) return null;\r\n      let url = this._selectedImage || this.src;\r\n      if (!url) return null;\r\n      if (url.indexOf('data:image') == 0) return url.split(/[/;]/)[1];\r\n      url = url.split('?')[0];\r\n      let array = url.split('.');\r\n      return array[array.length - 1];\r\n    },\r\n    _clear() {\r\n      this._selectedImage = null;\r\n      this.empty = true;\r\n      this.$refs.img.src = '';\r\n      this.$refs.input.value = '';\r\n      this.$emit('change', null);\r\n      this.$emit('clear');\r\n    },\r\n    _view() {\r\n      $_popup.open(ImgPreview, { ImgSrc: this.$refs.img });\r\n    }\r\n  },\r\n  computed: {\r\n    containerStyle() {\r\n      return {\r\n        borderRadius: this.radius,\r\n        minHeight: this.minHeight + 'px',\r\n        borderColor: this.focused ? this.theme.color : this.borderColor,\r\n        zIndex: this.focused ? this.theme.zindex() : ''\r\n      };\r\n    },\r\n    showClear() {\r\n      return this.clearable && !this.empty && !this.disabled && this.hovering;\r\n    },\r\n    labelStyle() {\r\n      return {\r\n        borderRightColor: this.theme.border_color_light,\r\n        backgroundColor: this.theme.input_label_bg_color\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style module>\r\n.container {\r\n    overflow: hidden;\r\n    vertical-align: top;\r\n  position: relative;\r\n  background-color: #fff;\r\n  outline: none;\r\n  white-space: nowrap;\r\n  display: table;\r\n  table-layout: auto;\r\n}\r\n.container > * {\r\n  height: 100%;\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n.border {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n}\r\n/* 标题文本 */\r\n.label {\r\n  padding: 0 6px;\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -ms-user-select: none;\r\n  -moz-user-select: none;\r\n}\r\n/* 必填 */\r\n.required {\r\n  padding: 0 2px;\r\n  color: #f00;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -ms-user-select: none;\r\n  -moz-user-select: none;\r\n}\r\n/* 禁止操作 */\r\n.disabled {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  opacity: 0.6;\r\n  filter: alpha(opacity=60);\r\n  cursor: not-allowed;\r\n}\r\n</style>\r\n"]}]}